{
  "swagger" : "2.0",
  "info" : {
    "description" : "**Specifies the REST URLs and methods supported in the Cisco Firepower Management Center API. Refer to the version specific [REST API Quick Start Guide](https://www.cisco.com/c/en/us/support/security/defense-center/products-programming-reference-guides-list.html) for additional information.**",
    "version" : "1.0.0",
    "title" : "Cisco Firepower Management Center Open API Specification",
    "contact" : {
      "name" : "Cisco Technical Assistance Center (TAC)",
      "url" : "https://www.cisco.com/c/en/us/support/index.html",
      "email" : "tac@cisco.com"
    },
    "license" : {
      "name" : "Cisco Firepower Management Center Licensing",
      "url" : "https://www.cisco.com/c/en/us/td/docs/security/firepower/licensing/faq/firepower-licence-FAQ.html"
    }
  },
  "schemes" : [ "https" ],
  "consumes" : [ "application/json" ],
  "produces" : [ "application/json" ],
  "paths" : {
    "/api/fmc_config/v1/domain/{domainUUID}/assignment/policyassignments" : {
      "get" : {
        "tags" : [ "Policy Assignments" ],
        "description" : "**Retrieves, creates, or modifies the policy assignments to target devices associated with the specified ID. If no ID is specified, retrieves list of all policy assignments to target devices.**",
        "operationId" : "getAllPolicyAssignment",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PolicyAssignmentListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/DomainUUID/assignment/policyassignments ( Success: Test GET ALL success )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/assignment/policyassignments/?offset=0&limit=2"
                  },
                  "items" : [ {
                    "type" : "PolicyAssignment",
                    "id" : "NatPolUuid",
                    "name" : "NATPOL"
                  }, {
                    "type" : "PolicyAssignment",
                    "id" : "accessPolicyUuid",
                    "name" : "AccessPolicy1"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/DomainUUID/assignment/policyassignments?expanded=true ( Success: Test GET ALL success with expanded=true )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/assignment/policyassignments/?offset=0&limit=2&expanded=true"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/assignment/policyassignments/NatPolUuid"
                    },
                    "type" : "PolicyAssignment",
                    "policy" : {
                      "type" : "FTDNatPolicy",
                      "id" : "NatPolUuid",
                      "name" : "NATPOL"
                    },
                    "targets" : [ {
                      "id" : "device1Uuid",
                      "type" : "Device",
                      "name" : "FTD_Device1",
                      "keepLocalEvents" : false,
                      "prohibitPacketTransfer" : false
                    }, {
                      "id" : "device2Uuid",
                      "type" : "Device",
                      "name" : "FTD_Device2",
                      "keepLocalEvents" : false,
                      "prohibitPacketTransfer" : false
                    } ],
                    "id" : "NatPolUuid",
                    "name" : "NATPOL"
                  }, {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/assignment/policyassignments/accessPolicyUuid"
                    },
                    "type" : "PolicyAssignment",
                    "policy" : {
                      "type" : "AccessPolicy",
                      "id" : "accessPolicyUuid",
                      "name" : "AccessPolicy1"
                    },
                    "targets" : [ {
                      "id" : "FP_DeviceUuid",
                      "type" : "Device",
                      "name" : "FP_device",
                      "keepLocalEvents" : false,
                      "prohibitPacketTransfer" : false
                    }, {
                      "id" : "device1Uuid",
                      "type" : "Device",
                      "name" : "FTD_Device1",
                      "keepLocalEvents" : false,
                      "prohibitPacketTransfer" : false
                    }, {
                      "id" : "device2Uuid",
                      "type" : "Device",
                      "name" : "FTD_Device2",
                      "keepLocalEvents" : false,
                      "prohibitPacketTransfer" : false
                    } ],
                    "id" : "accessPolicyUuid",
                    "name" : "AccessPolicy1"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Policy Assignments" ],
        "description" : "**Retrieves, creates, or modifies the policy assignments to target devices associated with the specified ID. If no ID is specified, retrieves list of all policy assignments to target devices. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createPolicyAssignment",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The input policy assignment model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PolicyAssignment"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/PolicyAssignment"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /fmc_config/v1/domain/DomainUUID/assignment/policyassignments ( POST request to assign device to an AC policy )" : {
                  "type" : "PolicyAssignment",
                  "policy" : {
                    "type" : "AccessPolicy",
                    "name" : "AccessPolicy2",
                    "id" : "accesspolicyUUID"
                  },
                  "targets" : [ {
                    "id" : "deviceUUID1",
                    "type" : "Device",
                    "name" : "FTD_Device1"
                  }, {
                    "id" : "deviceUUID2",
                    "type" : "Device",
                    "name" : "FTD_Device2"
                  } ]
                },
                "Request example 2 : POST /fmc_config/v1/domain/DomainUUID/assignment/policyassignments ( POST request to assign device(s) to a NAT policy )" : {
                  "type" : "PolicyAssignment",
                  "policy" : {
                    "type" : "FTDNatPolicy",
                    "name" : "NatPol1",
                    "id" : "NatPol1_uuid"
                  },
                  "targets" : [ {
                    "id" : "FTD_Device1_uuid",
                    "type" : "Device",
                    "name" : "FTD_Device1"
                  }, {
                    "id" : "FTD_Device2_uuid",
                    "type" : "Device",
                    "name" : "FTD_Device2"
                  } ]
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/PolicyAssignment"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/assignment/policyassignments/{objectId}" : {
      "get" : {
        "tags" : [ "Policy Assignments" ],
        "description" : "**Retrieves, creates, or modifies the policy assignments to target devices associated with the specified ID. If no ID is specified, retrieves list of all policy assignments to target devices.**",
        "operationId" : "getPolicyAssignment",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a policy assignment.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PolicyAssignment"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/assignment/policyassignments/policyassignmentUUID ( GET by id on AC policy )" : {
                  "id" : "policyassignmentUUID",
                  "type" : "PolicyAssignment",
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/assignment/policyassignments/policyassignmentUUID"
                  },
                  "policy" : {
                    "type" : "AccessPolicy",
                    "description" : "policy to test FMC implementation",
                    "name" : "AccessPolicy1",
                    "id" : "accesspolicyUUID"
                  },
                  "targets" : [ {
                    "id" : "deviceUUID",
                    "type" : "Device",
                    "name" : "FTD_Device1"
                  } ]
                },
                "Response Example 2 :GET /fmc_config/v1/domain/DomainUUID/assignment/policyassignments/policyassignmentUUID ( GET by id on NAT policy )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/assignment/policyassignments/policyassignmentUUID"
                  },
                  "type" : "PolicyAssignment",
                  "policy" : {
                    "type" : "FTDNatPolicy",
                    "id" : "NatPolUuid",
                    "name" : "NATPOL"
                  },
                  "targets" : [ {
                    "id" : "device1Uuid",
                    "type" : "Device",
                    "name" : "FTD_Device1",
                    "keepLocalEvents" : false,
                    "prohibitPacketTransfer" : false
                  }, {
                    "id" : "device2Uuid",
                    "type" : "Device",
                    "name" : "FTD_Device2",
                    "keepLocalEvents" : false,
                    "prohibitPacketTransfer" : false
                  } ],
                  "id" : "NatPolUuid",
                  "name" : "NATPOL"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Policy Assignments" ],
        "description" : "**Retrieves, creates, or modifies the policy assignments to target devices associated with the specified ID. If no ID is specified, retrieves list of all policy assignments to target devices. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updatePolicyAssignment",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a policy assignment.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The input policy assignment model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PolicyAssignment"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PolicyAssignment"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/DomainUUID/assignment/policyassignments/policyassignmentUUID ( PUT request to modify policy assignment of AC policy )" : {
                  "type" : "PolicyAssignment",
                  "id" : "policyassignmentUUID",
                  "policy" : {
                    "type" : "AccessPolicy",
                    "name" : "AccessPolicy1",
                    "id" : "accesspolicyUUID"
                  },
                  "targets" : [ {
                    "id" : "deviceUUID",
                    "type" : "Device",
                    "name" : "FTD_Device1"
                  } ]
                },
                "Request example 2 : PUT /fmc_config/v1/domain/DomainUUID/assignment/policyassignments/policyassignmentUUID ( PUT request to modify policy assignment of NAT policy )" : {
                  "type" : "PolicyAssignment",
                  "id" : "policyassignmentUUID",
                  "policy" : {
                    "type" : "FTDNatPolicy",
                    "name" : "NatPol1",
                    "id" : "natpolicyUUID"
                  },
                  "targets" : [ {
                    "id" : "deviceUUID",
                    "type" : "Device",
                    "name" : "FTD_Device1"
                  }, {
                    "id" : "deviceUUID2",
                    "type" : "Device",
                    "name" : "FTD_Device2"
                  } ]
                },
                "Request example 3 : PUT /fmc_config/v1/domain/DomainUUID/assignment/policyassignments/policyassignmentUUID ( PUT request to delete policy assignments of NAT policy )" : {
                  "type" : "PolicyAssignment",
                  "id" : "policyassignmentUUID",
                  "policy" : {
                    "type" : "FTDNatPolicy",
                    "name" : "NatPol1",
                    "id" : "natpolicyUUID"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/PolicyAssignment"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/deployment/deployabledevices" : {
      "get" : {
        "tags" : [ "Deployment" ],
        "description" : "**Retrieves list of all devices with configuration changes, ready to be deployed.**",
        "operationId" : "getDeployableDevice",
        "parameters" : [ {
          "name" : "groupDependency",
          "in" : "query",
          "description" : "Group Dependency of the dirty policies. Allowed values are <code>true</code> or <code>false</code>. Group dependency value helps to add dependent policies in Selective Policy Deployment. Results will be shown only when expanded is set to true. It may affect the performance of the API.",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/DeployableDeviceListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/deployment/deployabledevices ( Get all paginated DeployableDevice instances with group dependency is false. )" : {
                  "links" : {
                    "self" : "https://10.76.157.35:13006/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/deployment/deployabledevices?offset=0&limit=1&groupDependency=true&expanded=true"
                  },
                  "items" : [ {
                    "version" : "1597825642070",
                    "name" : "10.10.6.71",
                    "isDeploying" : true,
                    "device" : {
                      "id" : "ec6fcb5e-d891-11ea-9600-f0f82ba3e0ab",
                      "type" : "SENSOR",
                      "name" : "10.10.6.71",
                      "keepLocalEvents" : false
                    },
                    "deviceMembers" : [ {
                      "id" : "ec6fcb5e-d891-11ea-9600-f0f82ba3e0ab",
                      "type" : "SENSOR",
                      "name" : "10.10.6.71",
                      "keepLocalEvents" : false
                    } ],
                    "domain" : {
                      "uuid" : "e276abec-e0f2-11e3-8169-6d9ed49b625f",
                      "name" : "Global",
                      "id" : "e276abec-e0f2-11e3-8169-6d9ed49b625f",
                      "type" : "Domain"
                    },
                    "message" : "Cannot perform deployment to the device, as another deployment is in progress for the device.",
                    "policyStatusList" : [ {
                      "upToDate" : true,
                      "policy" : {
                        "id" : "0050568A-CF43-0ed3-0000-025769804572",
                        "type" : "PG.RA.PkiPolicy"
                      },
                      "versionTimeStamp" : 1597810841104,
                      "trafficInterrupting" : false
                    }, {
                      "upToDate" : true,
                      "policy" : {
                        "id" : "0050568A-CF43-0ed3-0000-017179869404",
                        "type" : "PG.PLATFORM.PixInterface"
                      },
                      "versionTimeStamp" : 1597810841104,
                      "trafficInterrupting" : false
                    }, {
                      "upToDate" : true,
                      "policy" : {
                        "id" : "0050568A-CF43-0ed3-0000-017179869864",
                        "type" : "PG.PLATFORM.AutomaticApplicationBypassPage"
                      },
                      "versionTimeStamp" : 1597810841104,
                      "trafficInterrupting" : false
                    }, {
                      "upToDate" : true,
                      "policy" : {
                        "id" : "0050568A-CF43-0ed3-0000-017179869872",
                        "type" : "PG.PLATFORM.NgfwVirtualRouterPage"
                      },
                      "versionTimeStamp" : 1597810841104,
                      "trafficInterrupting" : false
                    }, {
                      "upToDate" : false,
                      "policy" : {
                        "id" : "0050568A-CF43-0ed3-0000-017179869900",
                        "type" : "PG.PLATFORM.NgfwInlineSetPage"
                      },
                      "versionTimeStamp" : 1597825642070,
                      "trafficInterrupting" : false
                    }, {
                      "upToDate" : false,
                      "policy" : {
                        "name" : "Jai Shree Ram",
                        "id" : "0050568A-CF43-0ed3-0000-004294967320",
                        "type" : "PG.FIREWALL.NGFWAccessControlPolicy"
                      },
                      "referredPolicyList" : [ {
                        "upToDate" : true,
                        "policy" : {
                          "name" : "QoS",
                          "id" : "0050568A-CF43-0ed3-0000-025769804338",
                          "type" : "PG.FIREWALL.NGFWQoSPolicy"
                        },
                        "versionTimeStamp" : 1597640332903,
                        "trafficInterrupting" : false
                      }, {
                        "upToDate" : true,
                        "policy" : {
                          "name" : "PP1",
                          "id" : "0050568A-CF43-0ed3-0000-025769804246",
                          "type" : "PG.FIREWALL.PrefilterPolicy"
                        },
                        "versionTimeStamp" : 1597640332926,
                        "trafficInterrupting" : false
                      }, {
                        "upToDate" : true,
                        "policy" : {
                          "name" : "File 2",
                          "id" : "05ec602e-dd88-11ea-9e1f-d08843030a80",
                          "type" : "FilePolicy"
                        },
                        "versionTimeStamp" : 1597640332,
                        "trafficInterrupting" : false
                      }, {
                        "upToDate" : true,
                        "policy" : {
                          "name" : "IPS",
                          "id" : "23ccacf2-d950-11ea-86ff-e9faf973fe30",
                          "type" : "IntrusionPolicy"
                        },
                        "versionTimeStamp" : 1597640332,
                        "trafficInterrupting" : false
                      }, {
                        "upToDate" : true,
                        "policy" : {
                          "id" : "64c07d0e-d88f-11ea-a923-966839a3df85",
                          "type" : "NetworkDiscovery"
                        },
                        "versionTimeStamp" : 1597810833,
                        "trafficInterrupting" : false
                      }, {
                        "upToDate" : true,
                        "policy" : {
                          "name" : "Balanced Security and Connectivity",
                          "id" : "abba00a0-cf29-425c-9d75-49699aadc898",
                          "type" : "IntrusionPolicy"
                        },
                        "versionTimeStamp" : 1597640332,
                        "trafficInterrupting" : false
                      }, {
                        "upToDate" : true,
                        "policy" : {
                          "name" : "No Rules Active",
                          "id" : "abba416e-3127-11da-9f4c-d463d19aa744",
                          "type" : "IntrusionPolicy"
                        },
                        "versionTimeStamp" : 1597640332,
                        "trafficInterrupting" : false
                      }, {
                        "upToDate" : false,
                        "policy" : {
                          "name" : "DNS",
                          "id" : "cb60c116-d94f-11ea-989f-cd903a00edee",
                          "type" : "DNSPolicy"
                        },
                        "versionTimeStamp" : 1597825446,
                        "trafficInterrupting" : false
                      }, {
                        "upToDate" : true,
                        "policy" : {
                          "name" : "File",
                          "id" : "d6aea7e0-d94f-11ea-86ff-e9faf973fe30",
                          "type" : "FilePolicy"
                        },
                        "versionTimeStamp" : 1597640332,
                        "trafficInterrupting" : false
                      }, {
                        "upToDate" : false,
                        "policy" : {
                          "name" : "SSL",
                          "id" : "dd627c6a-d94f-11ea-86ff-e9faf973fe30",
                          "type" : "SSLPolicy"
                        },
                        "versionTimeStamp" : 1597825446,
                        "trafficInterrupting" : false
                      } ],
                      "modifiedUserInfoList" : [ {
                        "lastModifiedTime" : 1607434456419,
                        "userName" : "restadmin"
                      }, {
                        "lastModifiedTime" : 1607574136927,
                        "userName" : "csm_processes"
                      }, {
                        "lastModifiedTime" : 1607417554820,
                        "userName" : "admin"
                      } ],
                      "versionTimeStamp" : 1597825448031,
                      "trafficInterrupting" : false
                    }, {
                      "upToDate" : false,
                      "policy" : {
                        "name" : "NAT",
                        "id" : "0050568A-CF43-0ed3-0000-025769804290",
                        "type" : "PG.PLATFORM.ManualNat64Rule"
                      },
                      "versionTimeStamp" : 1597825468136,
                      "trafficInterrupting" : false
                    }, {
                      "upToDate" : false,
                      "policy" : {
                        "name" : "Platform",
                        "id" : "0050568A-CF43-0ed3-0000-025769804386",
                        "type" : "PG.PLATFORM.NgfwPFSettings"
                      },
                      "versionTimeStamp" : 1597825490063,
                      "trafficInterrupting" : false
                    }, {
                      "upToDate" : false,
                      "policy" : {
                        "name" : "Flex",
                        "id" : "0050568A-CF43-0ed3-0000-025769804446",
                        "type" : "PG.TEMPLATE.TemplatePolicy"
                      },
                      "versionTimeStamp" : 1597825503471,
                      "trafficInterrupting" : false
                    }, {
                      "upToDate" : true,
                      "policy" : {
                        "id" : "0050568A-CF43-0ed3-0000-309237645506",
                        "type" : "PG.PLATFORM.AsaBGPPage"
                      },
                      "versionTimeStamp" : 1597810841104,
                      "trafficInterrupting" : false
                    }, {
                      "upToDate" : false,
                      "policy" : {
                        "id" : "0050568A-CF43-0ed3-0000-309237645510",
                        "type" : "PG.PLATFORM.PixDDnsPage"
                      },
                      "versionTimeStamp" : 1597825642070,
                      "trafficInterrupting" : false
                    }, {
                      "upToDate" : true,
                      "policy" : {
                        "id" : "0050568A-CF43-0ed3-0000-309237645514",
                        "type" : "PG.PLATFORM.PixStaticRouteTablePage"
                      },
                      "versionTimeStamp" : 1597810841104,
                      "trafficInterrupting" : false
                    }, {
                      "upToDate" : true,
                      "policy" : {
                        "id" : "0050568A-CF43-0ed3-0000-309237645518",
                        "type" : "PG.PLATFORM.PixMBoundaryPage"
                      },
                      "versionTimeStamp" : 1597810841104,
                      "trafficInterrupting" : false
                    }, {
                      "upToDate" : true,
                      "policy" : {
                        "id" : "0050568A-CF43-0ed3-0000-309237645522",
                        "type" : "PG.PLATFORM.AsaOSPFv3Page"
                      },
                      "versionTimeStamp" : 1597810841104,
                      "trafficInterrupting" : false
                    }, {
                      "upToDate" : true,
                      "policy" : {
                        "id" : "0050568A-CF43-0ed3-0000-309237645526",
                        "type" : "PG.PLATFORM.PixIGMPPage"
                      },
                      "versionTimeStamp" : 1597810841104,
                      "trafficInterrupting" : false
                    }, {
                      "upToDate" : false,
                      "policy" : {
                        "id" : "0050568A-CF43-0ed3-0000-309237645530",
                        "type" : "PG.PLATFORM.PixOSPFPage"
                      },
                      "versionTimeStamp" : 1597825600655,
                      "trafficInterrupting" : false
                    }, {
                      "upToDate" : false,
                      "policy" : {
                        "id" : "0050568A-CF43-0ed3-0000-309237645534",
                        "type" : "PG.PLATFORM.PixDhcpdPage"
                      },
                      "versionTimeStamp" : 1597825642070,
                      "trafficInterrupting" : false
                    }, {
                      "upToDate" : true,
                      "policy" : {
                        "id" : "0050568A-CF43-0ed3-0000-309237645538",
                        "type" : "PG.PLATFORM.PixPIMPage"
                      },
                      "versionTimeStamp" : 1597810841104,
                      "trafficInterrupting" : false
                    }, {
                      "upToDate" : true,
                      "policy" : {
                        "id" : "0050568A-CF43-0ed3-0000-309237645542",
                        "type" : "PG.PLATFORM.F1IPv6StaticRouteTablePage"
                      },
                      "versionTimeStamp" : 1597810841104,
                      "trafficInterrupting" : false
                    }, {
                      "upToDate" : false,
                      "policy" : {
                        "id" : "0050568A-CF43-0ed3-0000-309237645546",
                        "type" : "PG.PLATFORM.PixDhcpRelayPage"
                      },
                      "versionTimeStamp" : 1597825642070,
                      "trafficInterrupting" : false
                    }, {
                      "upToDate" : true,
                      "policy" : {
                        "id" : "0050568A-CF43-0ed3-0000-309237645550",
                        "type" : "PG.PLATFORM.PixMroutePage"
                      },
                      "versionTimeStamp" : 1597810841104,
                      "trafficInterrupting" : false
                    }, {
                      "upToDate" : false,
                      "policy" : {
                        "id" : "0050568A-CF43-0ed3-0000-309237645554",
                        "type" : "PG.PLATFORM.PixRipPix72Page"
                      },
                      "versionTimeStamp" : 1597825616301,
                      "trafficInterrupting" : false
                    }, {
                      "upToDate" : true,
                      "policy" : {
                        "name" : "10.10.6.71",
                        "id" : "9f97b5ac-d892-11ea-9e54-cf1b2ca3e0ab",
                        "type" : "NGFWPolicy"
                      },
                      "versionTimeStamp" : 1597825640,
                      "trafficInterrupting" : false
                    }, {
                      "upToDate" : false,
                      "policy" : {
                        "id" : "deviceConfigurationId",
                        "type" : "DeviceConfiguration"
                      },
                      "referredPolicyList" : [ {
                        "upToDate" : true,
                        "policy" : {
                          "id" : "0050568A-CF43-0ed3-0000-017179869404",
                          "type" : "PG.PLATFORM.PixInterface"
                        },
                        "versionTimeStamp" : 1597810841104,
                        "trafficInterrupting" : false
                      }, {
                        "upToDate" : true,
                        "policy" : {
                          "id" : "0050568A-CF43-0ed3-0000-017179869864",
                          "type" : "PG.PLATFORM.AutomaticApplicationBypassPage"
                        },
                        "versionTimeStamp" : 1597810841104,
                        "trafficInterrupting" : false
                      }, {
                        "upToDate" : false,
                        "policy" : {
                          "id" : "0050568A-CF43-0ed3-0000-017179869900",
                          "type" : "PG.PLATFORM.NgfwInlineSetPage"
                        },
                        "versionTimeStamp" : 1597825642070,
                        "trafficInterrupting" : false
                      }, {
                        "upToDate" : false,
                        "policy" : {
                          "id" : "0050568A-CF43-0ed3-0000-309237645510",
                          "type" : "PG.PLATFORM.PixDDnsPage"
                        },
                        "versionTimeStamp" : 1597825642070,
                        "trafficInterrupting" : false
                      }, {
                        "upToDate" : false,
                        "policy" : {
                          "id" : "0050568A-CF43-0ed3-0000-309237645534",
                          "type" : "PG.PLATFORM.PixDhcpdPage"
                        },
                        "versionTimeStamp" : 1597825642070,
                        "trafficInterrupting" : false
                      }, {
                        "upToDate" : false,
                        "policy" : {
                          "id" : "0050568A-CF43-0ed3-0000-309237645546",
                          "type" : "PG.PLATFORM.PixDhcpRelayPage"
                        },
                        "versionTimeStamp" : 1597825642070,
                        "trafficInterrupting" : false
                      }, {
                        "upToDate" : true,
                        "policy" : {
                          "name" : "10.10.6.71",
                          "id" : "9f97b5ac-d892-11ea-9e54-cf1b2ca3e0ab",
                          "type" : "NGFWPolicy"
                        },
                        "versionTimeStamp" : 1597825640,
                        "trafficInterrupting" : false
                      } ],
                      "versionTimeStamp" : 0,
                      "trafficInterrupting" : false
                    } ],
                    "canBeDeployed" : true,
                    "upToDate" : false,
                    "trafficInterruption" : "NO",
                    "type" : "DeployableDevice"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                },
                "Response Example 2 :GET /fmc_config/v1/domain/DomainUUID/deployment/deployabledevices ( Get all paginated DeployableDevice instances with group dependency is true. )" : {
                  "links" : {
                    "self" : "https://10.76.157.35:13006/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/deployment/deployabledevices?offset=0&limit=1&groupDependency=true&expanded=true"
                  },
                  "items" : [ {
                    "version" : "1597825642070",
                    "name" : "10.10.6.71",
                    "isDeploying" : false,
                    "device" : {
                      "id" : "ec6fcb5e-d891-11ea-9600-f0f82ba3e0ab",
                      "type" : "SENSOR",
                      "name" : "10.10.6.71",
                      "keepLocalEvents" : false
                    },
                    "deviceMembers" : [ {
                      "id" : "ec6fcb5e-d891-11ea-9600-f0f82ba3e0ab",
                      "type" : "SENSOR",
                      "name" : "10.10.6.71",
                      "keepLocalEvents" : false
                    } ],
                    "domain" : {
                      "uuid" : "e276abec-e0f2-11e3-8169-6d9ed49b625f",
                      "name" : "Global",
                      "id" : "e276abec-e0f2-11e3-8169-6d9ed49b625f",
                      "type" : "Domain"
                    },
                    "policyStatusList" : [ {
                      "upToDate" : true,
                      "policy" : {
                        "id" : "0050568A-CF43-0ed3-0000-025769804572",
                        "type" : "PG.RA.PkiPolicy"
                      },
                      "versionTimeStamp" : 1597810841104,
                      "trafficInterrupting" : false
                    }, {
                      "upToDate" : true,
                      "policy" : {
                        "id" : "0050568A-CF43-0ed3-0000-017179869404",
                        "type" : "PG.PLATFORM.PixInterface"
                      },
                      "versionTimeStamp" : 1597810841104,
                      "trafficInterrupting" : false
                    }, {
                      "upToDate" : true,
                      "policy" : {
                        "id" : "0050568A-CF43-0ed3-0000-017179869864",
                        "type" : "PG.PLATFORM.AutomaticApplicationBypassPage"
                      },
                      "versionTimeStamp" : 1597810841104,
                      "trafficInterrupting" : false
                    }, {
                      "upToDate" : true,
                      "policy" : {
                        "id" : "0050568A-CF43-0ed3-0000-017179869872",
                        "type" : "PG.PLATFORM.NgfwVirtualRouterPage"
                      },
                      "versionTimeStamp" : 1597810841104,
                      "trafficInterrupting" : false
                    }, {
                      "upToDate" : false,
                      "policy" : {
                        "id" : "0050568A-CF43-0ed3-0000-017179869900",
                        "type" : "PG.PLATFORM.NgfwInlineSetPage"
                      },
                      "versionTimeStamp" : 1597825642070,
                      "trafficInterrupting" : false
                    }, {
                      "upToDate" : false,
                      "policy" : {
                        "name" : "Jai Shree Ram",
                        "id" : "0050568A-CF43-0ed3-0000-004294967320",
                        "type" : "PG.FIREWALL.NGFWAccessControlPolicy"
                      },
                      "referredPolicyList" : [ {
                        "upToDate" : true,
                        "policy" : {
                          "name" : "QoS",
                          "id" : "0050568A-CF43-0ed3-0000-025769804338",
                          "type" : "PG.FIREWALL.NGFWQoSPolicy"
                        },
                        "versionTimeStamp" : 1597640332903,
                        "trafficInterrupting" : false
                      }, {
                        "upToDate" : true,
                        "policy" : {
                          "name" : "PP1",
                          "id" : "0050568A-CF43-0ed3-0000-025769804246",
                          "type" : "PG.FIREWALL.PrefilterPolicy"
                        },
                        "versionTimeStamp" : 1597640332926,
                        "trafficInterrupting" : false
                      }, {
                        "upToDate" : true,
                        "policy" : {
                          "name" : "File 2",
                          "id" : "05ec602e-dd88-11ea-9e1f-d08843030a80",
                          "type" : "FilePolicy"
                        },
                        "versionTimeStamp" : 1597640332,
                        "trafficInterrupting" : false
                      }, {
                        "upToDate" : true,
                        "policy" : {
                          "name" : "IPS",
                          "id" : "23ccacf2-d950-11ea-86ff-e9faf973fe30",
                          "type" : "IntrusionPolicy"
                        },
                        "versionTimeStamp" : 1597640332,
                        "trafficInterrupting" : false
                      }, {
                        "upToDate" : true,
                        "policy" : {
                          "id" : "64c07d0e-d88f-11ea-a923-966839a3df85",
                          "type" : "NetworkDiscovery"
                        },
                        "versionTimeStamp" : 1597810833,
                        "trafficInterrupting" : false
                      }, {
                        "upToDate" : true,
                        "policy" : {
                          "name" : "Balanced Security and Connectivity",
                          "id" : "abba00a0-cf29-425c-9d75-49699aadc898",
                          "type" : "IntrusionPolicy"
                        },
                        "versionTimeStamp" : 1597640332,
                        "trafficInterrupting" : false
                      }, {
                        "upToDate" : true,
                        "policy" : {
                          "name" : "No Rules Active",
                          "id" : "abba416e-3127-11da-9f4c-d463d19aa744",
                          "type" : "IntrusionPolicy"
                        },
                        "versionTimeStamp" : 1597640332,
                        "trafficInterrupting" : false
                      }, {
                        "upToDate" : false,
                        "policy" : {
                          "name" : "DNS",
                          "id" : "cb60c116-d94f-11ea-989f-cd903a00edee",
                          "type" : "DNSPolicy"
                        },
                        "versionTimeStamp" : 1597825446,
                        "trafficInterrupting" : false
                      }, {
                        "upToDate" : true,
                        "policy" : {
                          "name" : "File",
                          "id" : "d6aea7e0-d94f-11ea-86ff-e9faf973fe30",
                          "type" : "FilePolicy"
                        },
                        "versionTimeStamp" : 1597640332,
                        "trafficInterrupting" : false
                      }, {
                        "upToDate" : false,
                        "policy" : {
                          "name" : "SSL",
                          "id" : "dd627c6a-d94f-11ea-86ff-e9faf973fe30",
                          "type" : "SSLPolicy"
                        },
                        "versionTimeStamp" : 1597825446,
                        "trafficInterrupting" : false
                      } ],
                      "versionTimeStamp" : 1597825448031,
                      "trafficInterrupting" : false
                    }, {
                      "upToDate" : false,
                      "policy" : {
                        "name" : "NAT",
                        "id" : "0050568A-CF43-0ed3-0000-025769804290",
                        "type" : "PG.PLATFORM.ManualNat64Rule"
                      },
                      "versionTimeStamp" : 1597825468136,
                      "trafficInterrupting" : false
                    }, {
                      "upToDate" : false,
                      "policy" : {
                        "name" : "Platform",
                        "id" : "0050568A-CF43-0ed3-0000-025769804386",
                        "type" : "PG.PLATFORM.NgfwPFSettings"
                      },
                      "versionTimeStamp" : 1597825490063,
                      "trafficInterrupting" : false
                    }, {
                      "upToDate" : false,
                      "policy" : {
                        "name" : "Flex",
                        "id" : "0050568A-CF43-0ed3-0000-025769804446",
                        "type" : "PG.TEMPLATE.TemplatePolicy"
                      },
                      "versionTimeStamp" : 1597825503471,
                      "trafficInterrupting" : false
                    }, {
                      "upToDate" : true,
                      "policy" : {
                        "id" : "0050568A-CF43-0ed3-0000-309237645506",
                        "type" : "PG.PLATFORM.AsaBGPPage"
                      },
                      "versionTimeStamp" : 1597810841104,
                      "trafficInterrupting" : false
                    }, {
                      "upToDate" : false,
                      "policy" : {
                        "id" : "0050568A-CF43-0ed3-0000-309237645510",
                        "type" : "PG.PLATFORM.PixDDnsPage"
                      },
                      "versionTimeStamp" : 1597825642070,
                      "trafficInterrupting" : false
                    }, {
                      "upToDate" : true,
                      "policy" : {
                        "id" : "0050568A-CF43-0ed3-0000-309237645514",
                        "type" : "PG.PLATFORM.PixStaticRouteTablePage"
                      },
                      "versionTimeStamp" : 1597810841104,
                      "trafficInterrupting" : false
                    }, {
                      "upToDate" : true,
                      "policy" : {
                        "id" : "0050568A-CF43-0ed3-0000-309237645518",
                        "type" : "PG.PLATFORM.PixMBoundaryPage"
                      },
                      "versionTimeStamp" : 1597810841104,
                      "trafficInterrupting" : false
                    }, {
                      "upToDate" : true,
                      "policy" : {
                        "id" : "0050568A-CF43-0ed3-0000-309237645522",
                        "type" : "PG.PLATFORM.AsaOSPFv3Page"
                      },
                      "versionTimeStamp" : 1597810841104,
                      "trafficInterrupting" : false
                    }, {
                      "upToDate" : true,
                      "policy" : {
                        "id" : "0050568A-CF43-0ed3-0000-309237645526",
                        "type" : "PG.PLATFORM.PixIGMPPage"
                      },
                      "versionTimeStamp" : 1597810841104,
                      "trafficInterrupting" : false
                    }, {
                      "upToDate" : false,
                      "policy" : {
                        "id" : "0050568A-CF43-0ed3-0000-309237645530",
                        "type" : "PG.PLATFORM.PixOSPFPage"
                      },
                      "versionTimeStamp" : 1597825600655,
                      "trafficInterrupting" : false
                    }, {
                      "upToDate" : false,
                      "policy" : {
                        "id" : "0050568A-CF43-0ed3-0000-309237645534",
                        "type" : "PG.PLATFORM.PixDhcpdPage"
                      },
                      "versionTimeStamp" : 1597825642070,
                      "trafficInterrupting" : false
                    }, {
                      "upToDate" : true,
                      "policy" : {
                        "id" : "0050568A-CF43-0ed3-0000-309237645538",
                        "type" : "PG.PLATFORM.PixPIMPage"
                      },
                      "versionTimeStamp" : 1597810841104,
                      "trafficInterrupting" : false
                    }, {
                      "upToDate" : true,
                      "policy" : {
                        "id" : "0050568A-CF43-0ed3-0000-309237645542",
                        "type" : "PG.PLATFORM.F1IPv6StaticRouteTablePage"
                      },
                      "versionTimeStamp" : 1597810841104,
                      "trafficInterrupting" : false
                    }, {
                      "upToDate" : false,
                      "policy" : {
                        "id" : "0050568A-CF43-0ed3-0000-309237645546",
                        "type" : "PG.PLATFORM.PixDhcpRelayPage"
                      },
                      "versionTimeStamp" : 1597825642070,
                      "trafficInterrupting" : false
                    }, {
                      "upToDate" : true,
                      "policy" : {
                        "id" : "0050568A-CF43-0ed3-0000-309237645550",
                        "type" : "PG.PLATFORM.PixMroutePage"
                      },
                      "versionTimeStamp" : 1597810841104,
                      "trafficInterrupting" : false
                    }, {
                      "upToDate" : false,
                      "policy" : {
                        "id" : "0050568A-CF43-0ed3-0000-309237645554",
                        "type" : "PG.PLATFORM.PixRipPix72Page"
                      },
                      "versionTimeStamp" : 1597825616301,
                      "trafficInterrupting" : false
                    }, {
                      "upToDate" : true,
                      "policy" : {
                        "name" : "10.10.6.71",
                        "id" : "9f97b5ac-d892-11ea-9e54-cf1b2ca3e0ab",
                        "type" : "NGFWPolicy"
                      },
                      "versionTimeStamp" : 1597825640,
                      "trafficInterrupting" : false
                    }, {
                      "upToDate" : false,
                      "policy" : {
                        "id" : "deviceConfigurationId",
                        "type" : "DeviceConfiguration"
                      },
                      "referredPolicyList" : [ {
                        "upToDate" : true,
                        "policy" : {
                          "id" : "0050568A-CF43-0ed3-0000-017179869404",
                          "type" : "PG.PLATFORM.PixInterface"
                        },
                        "versionTimeStamp" : 1597810841104,
                        "trafficInterrupting" : false
                      }, {
                        "upToDate" : true,
                        "policy" : {
                          "id" : "0050568A-CF43-0ed3-0000-017179869864",
                          "type" : "PG.PLATFORM.AutomaticApplicationBypassPage"
                        },
                        "versionTimeStamp" : 1597810841104,
                        "trafficInterrupting" : false
                      }, {
                        "upToDate" : false,
                        "policy" : {
                          "id" : "0050568A-CF43-0ed3-0000-017179869900",
                          "type" : "PG.PLATFORM.NgfwInlineSetPage"
                        },
                        "versionTimeStamp" : 1597825642070,
                        "trafficInterrupting" : false
                      }, {
                        "upToDate" : false,
                        "policy" : {
                          "id" : "0050568A-CF43-0ed3-0000-309237645510",
                          "type" : "PG.PLATFORM.PixDDnsPage"
                        },
                        "versionTimeStamp" : 1597825642070,
                        "trafficInterrupting" : false
                      }, {
                        "upToDate" : false,
                        "policy" : {
                          "id" : "0050568A-CF43-0ed3-0000-309237645534",
                          "type" : "PG.PLATFORM.PixDhcpdPage"
                        },
                        "versionTimeStamp" : 1597825642070,
                        "trafficInterrupting" : false
                      }, {
                        "upToDate" : false,
                        "policy" : {
                          "id" : "0050568A-CF43-0ed3-0000-309237645546",
                          "type" : "PG.PLATFORM.PixDhcpRelayPage"
                        },
                        "versionTimeStamp" : 1597825642070,
                        "trafficInterrupting" : false
                      }, {
                        "upToDate" : true,
                        "policy" : {
                          "name" : "10.10.6.71",
                          "id" : "9f97b5ac-d892-11ea-9e54-cf1b2ca3e0ab",
                          "type" : "NGFWPolicy"
                        },
                        "versionTimeStamp" : 1597825640,
                        "trafficInterrupting" : false
                      } ],
                      "versionTimeStamp" : 0,
                      "trafficInterrupting" : false
                    } ],
                    "canBeDeployed" : true,
                    "upToDate" : false,
                    "trafficInterruption" : "NO",
                    "type" : "DeployableDevice",
                    "groupDependencyDetails" : {
                      "dependentPolicyList" : [ {
                        "dependencyReason" : "You must always deploy policies with global object changes.",
                        "dependentTypeList" : [ "PG.FIREWALL.NGFWAccessControlPolicy", "SSLPolicy", "DNSPolicy" ]
                      }, {
                        "dependencyReason" : "Deploy these out-of-date policies together. Interdependent changes found in policies.",
                        "dependentTypeList" : [ "DNSPolicy", "SSLPolicy", "PG.FIREWALL.NGFWAccessControlPolicy" ]
                      }, {
                        "dependencyReason" : "Routing Group policies should be deployed together",
                        "dependentTypeList" : [ "PG.PLATFORM.PixRipPix72Page", "PG.PLATFORM.PixOSPFPage" ]
                      } ],
                      "selectivelyDeployablePolicies" : [ "PG.PLATFORM.PixRipPix72Page", "PG.PLATFORM.PixOSPFPage", "PG.PLATFORM.ManualNat64Rule" ],
                      "mandatoryDeployablePolicies" : [ "PG.FIREWALL.NGFWAccessControlPolicy", "SSLPolicy", "DNSPolicy", "PG.PLATFORM.NgfwInlineSetPage", "PG.PLATFORM.PixDDnsPage", "PG.PLATFORM.PixDhcpdPage", "PG.PLATFORM.PixDhcpRelayPage", "PG.TEMPLATE.TemplatePolicy", "PG.PLATFORM.NgfwPFSettings" ]
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/deployment/deployabledevices/{containerUUID}/deployments" : {
      "get" : {
        "tags" : [ "Deployment" ],
        "description" : "**Retrieves Deployment details for device**",
        "operationId" : "getDeploymentDetail",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "Value is of format <code>startTime:start_time_in_secs;endTime:end_time_in_secs;</code>. <br/><br/><code>startTime</code> -- start time in unix format (in seconds). startTime and endTime should be specified together.<br/><code>endTime</code> -- end time in unix format (in seconds). startTime and endTime should be specified together.<br/>",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/DeploymentDetailListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/deployment/{containerUUID}/deploymentdetails ( Get all paginated Deployment Detail instances. )" : {
                  "links" : {
                    "self" : "https://10.76.157.67:16286/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/deployment/deployabledevices/d8c5ada2-a949-11ea-986f-83a5cef58c55/deployments?offset=0&limit=1&filter=startTime:1591683568537;endTime:1591683569038&expanded=false"
                  },
                  "items" : [ {
                    "uuid" : "0050568B-B74A-0ed3-0000-330712481831",
                    "name" : "cbv_job_2020-06-23 08:01:22.862",
                    "status" : "SUCCEEDED",
                    "startTime" : 1592899282,
                    "endTime" : 1592899423,
                    "policyList" : [ {
                      "type" : "PG.FIREWALL.NGFWAccessControlPolicy"
                    }, {
                      "type" : "IntrusionPolicy"
                    } ],
                    "type" : "DeploymentDetail"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/deployment/deployabledevices/{containerUUID}/pendingchanges" : {
      "get" : {
        "tags" : [ "Deployment" ],
        "description" : "**Retrieves all the policy and object changes for the selected device.**",
        "operationId" : "getPendingChanges",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "The filter criteria for which the details have to be fetched - Only works when \"expanded\" is set to \"true\". Examples: ParentEntityTypes:AccessPolicy, EntityUUID:0050568C-35A0-0ed3-0000-004294969351.To fetch the historical data pass the left and right job UUID. Example LeftJobUUID:4b9fe31c-34cc-11ea-8b36-8eb5492fc3a5;RightJobUUID:4b9fe31c-34cc-11ea-8b36-8eb5492fc3a3.For filter based on User add a filter using key word UserList.Example: UserList : user1,user2. ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PendingChangesListContainer"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/deployment/deploymentrequests" : {
      "post" : {
        "tags" : [ "Deployment" ],
        "description" : "**Creates a request for deploying configuration changes to devices. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createDeploymentRequest",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "JSON data for deploying to devices.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DeploymentRequest"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/DeploymentRequest"
            },
            "examples" : { }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/DeploymentRequest"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /fmc_config/v1/domain/DomainUUID/deployment/deploymentrequests ( POST a deployment request. )" : {
                  "type" : "DeploymentRequest",
                  "version" : "1457566762351",
                  "forceDeploy" : false,
                  "ignoreWarning" : true,
                  "deviceList" : [ "d94f7ada-d141-11e5-acf3-c41f7e67fb1b" ],
                  "deploymentNote" : "yournotescomehere"
                },
                "Request example 2 : POST /fmc_config/v1/domain/DomainUUID/deployment/deploymentrequests ( POST a deployment request for Selective Policy Deployment )" : {
                  "type" : "DeploymentRequest",
                  "version" : "1457566762351",
                  "forceDeploy" : false,
                  "ignoreWarning" : true,
                  "deviceList" : [ "d94f7ada-d141-11e5-acf3-c41f7e67fb1b" ],
                  "deploymentNote" : "yournotescomehere",
                  "selectedPoliciesforDevices" : [ {
                    "deviceUUID" : "d94f7ada-d141-11e5-acf3-c41f7e67fb1b",
                    "selectedPolicies" : [ "PG.FIREWALL.NGFWAccessControlPolicy", "DNSPolicy", "SSLPolicy" ]
                  } ]
                },
                "Request example 3 : POST /fmc_config/v1/domain/DomainUUID/deployment/deploymentrequests ( POST a deployment request for Full Deployment and Selective Policy Deployment  )" : {
                  "type" : "DeploymentRequest",
                  "version" : "1589689510428",
                  "forceDeploy" : false,
                  "ignoreWarning" : true,
                  "deviceList" : [ "d94f7ada-d141-11e5-acf3-c41f7e67fb1b", "88a4b666-9372-11ea-babd-9ebaf536312a" ],
                  "deploymentNote" : "yournotescomehere",
                  "selectedPoliciesforDevices" : [ {
                    "deviceUUID" : "d94f7ada-d141-11e5-acf3-c41f7e67fb1b",
                    "selectedPolicies" : [ "PG.FIREWALL.NGFWAccessControlPolicy", "DNSPolicy", "SSLPolicy" ]
                  } ]
                }
              }
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/deployment/jobhistories" : {
      "get" : {
        "tags" : [ "Deployment" ],
        "description" : "**Retrieves all the deployment jobs.**",
        "operationId" : "getJobHistory",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "Various filter criteria can be specified using the format <code>deviceUUID:{uuid};startTime:start_time_in_secs;endTime:end_time_in_secs;rollbackApplicable:true_or_false</code>.  <br/><br/><code>startTime</code> -- start time in unix format (in seconds). startTime and endTime should be specified together.<br/><br/><code>endTime</code> -- end time in unix format (in seconds). startTime and endTime should be specified together.<br/><br/><code>rollbackApplicable</code> -- true/false. Not a mandatory field.",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/JobHistoryListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/deployment/jobhistories ( Get all paginated Job Histories instances. )" : {
                  "links" : {
                    "self" : "https://10.76.157.67:16256/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/deployment/jobhistories?offset=0&limit=41&expanded=true"
                  },
                  "items" : [ {
                    "id" : "0050568B-9937-0ed3-0000-463856468766",
                    "jobName" : "Deploy_Job_6",
                    "jobStatus" : "Deployed",
                    "jobType" : "DEPLOYMENT",
                    "startTime" : "2020-05-16T10:29:01Z",
                    "endTime" : "2020-05-16T10:30:26Z",
                    "user" : "admin",
                    "deploymentNote" : "yournotescomehere",
                    "deviceList" : [ {
                      "deviceName" : "10.10.6.104",
                      "deviceUUID" : "d0c422c8-9756-11ea-acb6-961f407b1a9c",
                      "deploymentStatus" : "SUCCEEDED",
                      "deployedVersion" : 2
                    }, {
                      "deviceName" : "10.10.6.100",
                      "deviceUUID" : "a6b42c18-50c8-11eb-8556-880cc814430c",
                      "deploymentStatus" : "SUCCEEDED",
                      "deployedVersion" : 2,
                      "containerUUID" : "8c363564-518d-11eb-899b-e37ea1f51142",
                      "containerName" : "vFTD-HA"
                    }, {
                      "deviceName" : "10.10.6.102",
                      "deviceUUID" : "73dee6c4-9756-11ea-b7d5-c46fa36556b5",
                      "deploymentStatus" : "SUCCEEDED",
                      "deployedVersion" : 2
                    } ],
                    "type" : "JobHistory"
                  }, {
                    "id" : "0050568B-AFA9-0ed3-0000-017179869494",
                    "jobName" : "Deploy_Job_5",
                    "jobStatus" : "DEPLOYED",
                    "jobType" : "UNKNOWN",
                    "startTime" : "2020-05-16T10:15:19Z",
                    "endTime" : "2020-05-16T10:16:56Z",
                    "user" : "System",
                    "deploymentNote" : "yournotescomehere",
                    "type" : "JobHistory"
                  }, {
                    "id" : "0050568B-9937-0ed3-0000-463856468569",
                    "jobName" : "Deploy_Job_4",
                    "jobStatus" : "Deployed",
                    "jobType" : "ROLLBACK",
                    "startTime" : "2020-05-16T10:09:10Z",
                    "endTime" : "2020-05-16T10:10:45Z",
                    "user" : "System",
                    "deploymentNote" : "yournotescomehere",
                    "deviceList" : [ {
                      "deviceName" : "10.10.6.104",
                      "deviceUUID" : "d0c422c8-9756-11ea-acb6-961f407b1a9c",
                      "deploymentStatus" : "SUCCEEDED",
                      "deployedVersion" : -1
                    } ],
                    "type" : "JobHistory"
                  }, {
                    "id" : "0050568B-9937-0ed3-0000-463856468258",
                    "jobName" : "Deploy_Job_3",
                    "jobStatus" : "Deployed",
                    "jobType" : "DEPLOYMENT",
                    "startTime" : "2020-05-16T10:04:22Z",
                    "endTime" : "2020-05-16T10:06:28Z",
                    "user" : "System",
                    "deploymentNote" : "yournotescomehere",
                    "deviceList" : [ {
                      "deviceName" : "10.10.6.102",
                      "deviceUUID" : "73dee6c4-9756-11ea-b7d5-c46fa36556b5",
                      "deploymentStatus" : "SUCCEEDED",
                      "deployedVersion" : 1
                    } ],
                    "type" : "JobHistory"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 3,
                    "count" : 3,
                    "pages" : 1
                  }
                },
                "Response Example 2 :GET /fmc_config/v1/domain/DomainUUID/deployment/jobhistories ( Get all paginated Job Histories instances with canRollback response where filter param rollbackApplicable is set as true. )" : {
                  "links" : {
                    "self" : "https://u32c01p10-vrouter.cisco.com:19092/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/deployment/jobhistories?filter=rollbackApplicable%3Atrue&offset=0&limit=1000&expanded=true"
                  },
                  "items" : [ {
                    "id" : "0050568A-6DDA-0ed3-0000-012884903748",
                    "jobName" : "Deploy_Job_4",
                    "jobType" : "DEPLOYMENT",
                    "deviceList" : [ {
                      "deviceName" : "10.10.18.28",
                      "deviceUUID" : "9b1a4496-f191-11ea-a46b-dbe601ec8233",
                      "canRollback" : false
                    }, {
                      "deviceName" : "10.10.18.11",
                      "deviceUUID" : "6bc51b26-401f-11eb-8a50-866b03f66226",
                      "canRollback" : true
                    }, {
                      "deviceName" : "10.10.18.12",
                      "deviceUUID" : "4f1e003c-401f-11eb-9c14-d0c01de8132e",
                      "canRollback" : true
                    } ],
                    "type" : "JobHistory"
                  }, {
                    "id" : "0050568A-6DDA-0ed3-0000-012884903564",
                    "jobName" : "Deploy_Job_3",
                    "jobType" : "DEPLOYMENT",
                    "deviceList" : [ {
                      "deviceName" : "10.10.18.28",
                      "deviceUUID" : "9b1a4496-f191-11ea-a46b-dbe601ec8233",
                      "canRollback" : false
                    } ],
                    "type" : "JobHistory"
                  }, {
                    "id" : "0050568A-6DDA-0ed3-0000-012884903413",
                    "jobName" : "Deploy_Job_2",
                    "jobType" : "DEPLOYMENT",
                    "deviceList" : [ {
                      "deviceName" : "10.10.18.12",
                      "deviceUUID" : "4f1e003c-401f-11eb-9c14-d0c01de8132e",
                      "canRollback" : true
                    } ],
                    "type" : "JobHistory"
                  }, {
                    "id" : "0050568A-6DDA-0ed3-0000-012884902592",
                    "jobName" : "Deploy_Job_1",
                    "jobType" : "DEPLOYMENT",
                    "deviceList" : [ {
                      "deviceName" : "10.10.18.11",
                      "deviceUUID" : "6bc51b26-401f-11eb-8a50-866b03f66226",
                      "canRollback" : true
                    } ],
                    "type" : "JobHistory"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 4,
                    "count" : 4,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/deployment/rollbackrequests" : {
      "post" : {
        "tags" : [ "Deployment" ],
        "description" : "**Creates a request for rollback configuration to devices. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createRollbackRequest",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "JSON data for rollback to devices.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RollbackRequest"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/RollbackRequest"
            },
            "examples" : { }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/RollbackRequest"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /fmc_config/v1/domain/DomainUUID/deployment/rollbackrequests ( POST a rollback request. )" : {
                  "type" : "RollbackRequest",
                  "rollbackDeviceList" : [ {
                    "deploymentJobId" : "0050568B-9937-0ed3-0000-296352743514",
                    "deviceList" : [ "d0c422c8-9756-11ea-acb6-961f407b1a9c", "73dee6c4-9756-11ea-b7d5-c46fa36556b5" ]
                  }, {
                    "deploymentJobId" : "0050568B-9937-0ed3-0000-300647710810",
                    "deviceList" : [ "88a4b666-9372-11ea-babd-9ebaf536312a" ]
                  } ]
                }
              }
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/deviceclusters/ftddevicecluster" : {
      "get" : {
        "tags" : [ "Device Clusters" ],
        "description" : "**Retrieves or modifies the FTD Cluster record associated with the specified ID. If no ID is specified for a GET, retrieves list of all FTD Clusters.**",
        "operationId" : "getAllFTDClusterDeviceContainer",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDClusterDeviceContainerListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/DomainUUID/deviceclusters/ftddevicecluster ( Get all paginated FTD Cluster container objects without offset and limit )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/deviceclusters/ftddevicecluster?offset=0&limit=1&expanded=true"
                  },
                  "items" : [ {
                    "id" : "<container_uuid>",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/deviceclusters/ftddevicecluster/<container_uuid>"
                    },
                    "name" : "<cluster_name>"
                  }, {
                    "id" : "<container_uuid>",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/deviceclusters/ftddevicecluster/<container_uuid>"
                    },
                    "name" : "<cluster_name>"
                  }, {
                    "id" : "<container_uuid>",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/deviceclusters/ftddevicecluster/<container_uuid>"
                    },
                    "name" : "<cluster_name>"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 3,
                    "count" : 3,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/deviceclusters/ftddevicecluster/{objectId}" : {
      "get" : {
        "tags" : [ "Device Clusters" ],
        "description" : "**Retrieves or modifies the FTD Cluster record associated with the specified ID. If no ID is specified for a GET, retrieves list of all FTD Clusters.**",
        "operationId" : "getFTDClusterDeviceContainer",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier of a FTD Cluster.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDClusterDeviceContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/deviceclusters/ftddevicecluster ( Success: Test GET method for a specific FTD Cluster Container Device. )" : {
                  "id" : "35874370-9957-11e8-af35-2038dcb5d0fa",
                  "type" : "DeviceCluster",
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/deviceclusters/ftddevicecluster?offset=0&limit=1&expanded=true"
                  },
                  "name" : "<cluster_name>",
                  "masterDevice" : {
                    "id" : "<master_device_UUID>",
                    "type" : "Device",
                    "keepLocalEvents" : false
                  },
                  "slaveDevices" : [ {
                    "id" : "<slave1_device_UUID>",
                    "type" : "Device",
                    "keepLocalEvents" : false
                  }, {
                    "id" : "<slave2_device_UUID>",
                    "type" : "Device",
                    "keepLocalEvents" : false
                  }, {
                    "id" : "<slave3_device_UUID>",
                    "type" : "Device",
                    "keepLocalEvents" : false
                  } ],
                  "metadata" : {
                    "clusterDeviceGroup" : {
                      "id" : "<device_group_id>",
                      "type" : "DeviceGroup",
                      "name" : "<device_group_name>"
                    },
                    "lastUser" : {
                      "name" : "admin",
                      "type" : "User"
                    },
                    "domain" : {
                      "id" : "<domain_uuid>",
                      "type" : "Domain"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devicegroups/devicegrouprecords" : {
      "get" : {
        "tags" : [ "Device Groups" ],
        "description" : "**Retrieves, deletes, creates, or modifies the device group associated with the specified ID. If no ID is specified for a GET, retrieves list of all device groups.**",
        "operationId" : "getAllDeviceGroup",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/DeviceGroupListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/domainUUID/object/devicegroups/devicegrouprecords ( Get all paginated network objects without offset and limit )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/object/devicegroups/devicegrouprecords?offset=0&limit=3"
                  },
                  "items" : [ {
                    "name" : "test1",
                    "id" : "devicegroupUUID",
                    "type" : "DeviceGroup",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/object/devicegroups/devicegrouprecords/devicegroupUUID"
                    }
                  }, {
                    "name" : "test2",
                    "id" : "devicegroupUUID",
                    "type" : "DeviceGroup",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/object/devicegroups/devicegrouprecords/devicegroupUUID"
                    }
                  }, {
                    "name" : "test3",
                    "id" : "devicegroupUUID",
                    "type" : "DeviceGroup",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/object/devicegroups/devicegrouprecords/devicegroupUUID"
                    }
                  } ],
                  "paging" : {
                    "offset" : "number",
                    "limit" : "number",
                    "count" : "number",
                    "pages" : "number"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Device Groups" ],
        "description" : "**Retrieves, deletes, creates, or modifies the device group associated with the specified ID. If no ID is specified for a GET, retrieves list of all device groups. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createDeviceGroup",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of device group.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DeviceGroup"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/DeviceGroup"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /fmc_config/v1/domain/domainUUID/devicegroups/devicegrouprecords ( Test adding of device group to create a new record )" : {
                  "name" : "zoom",
                  "type" : "DeviceGroup",
                  "members" : [ {
                    "id" : "deviceUUID",
                    "type" : "Device",
                    "name" : "deviceName"
                  } ]
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/DeviceGroup"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devicegroups/devicegrouprecords/{objectId}" : {
      "get" : {
        "tags" : [ "Device Groups" ],
        "description" : "**Retrieves, deletes, creates, or modifies the device group associated with the specified ID. If no ID is specified for a GET, retrieves list of all device groups.**",
        "operationId" : "getDeviceGroup",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for a device group.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/DeviceGroup"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/domainUUID/devicegroups/devicegrouprecords/deviceGroupUUID ( Test GET of device group )" : {
                  "id" : "deviceGroupUUID",
                  "type" : "DeviceGroup",
                  "name" : "zoom2",
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/devicegroups/devicegrouprecords/deviceGroupUUID"
                  },
                  "members" : [ {
                    "id" : "deviceUUID",
                    "type" : "Device",
                    "name" : "deviceName",
                    "links" : {
                      "self" : "/api/fmc_config/v1/domain/default/devices/devicerecords/deviceUUID"
                    }
                  } ],
                  "metadata" : {
                    "domain" : {
                      "id" : "domainUUID",
                      "type" : "Domain",
                      "name" : "Global"
                    },
                    "lastUser" : {
                      "name" : "admin",
                      "id" : "userUUID",
                      "type" : "User"
                    },
                    "readOnly" : {
                      "state" : true
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Device Groups" ],
        "description" : "**Retrieves, deletes, creates, or modifies the device group associated with the specified ID. If no ID is specified for a GET, retrieves list of all device groups. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateDeviceGroup",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for a device group.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of device group.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DeviceGroup"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/DeviceGroup"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/domainUUID/devicegroups/devicegrouprecords/deviceGroupUUID ( Test PUT of network object to update record )" : {
                  "name" : "zoom3_upd",
                  "type" : "DeviceGroup",
                  "id" : "deviceGroupUUID",
                  "members" : [ {
                    "id" : "deviceUUID",
                    "type" : "Device",
                    "name" : "deviceName"
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/DeviceGroup"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Device Groups" ],
        "description" : "**Retrieves, deletes, creates, or modifies the device group associated with the specified ID. If no ID is specified for a GET, retrieves list of all device groups. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteDeviceGroup",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for a device group.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/DeviceGroup"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /fmc_config/v1/domain/domainUUID/devicegroups/devicegrouprecords/devicegroupUUID ( Test DELETE of Device Group )" : {
                  "name" : "test1",
                  "type" : "DeviceGroup",
                  "id" : "devicegroupUUID",
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/devicegroups/devicegrouprecords/devicegroupUUID"
                  },
                  "members" : [ {
                    "id" : "deviceUUID",
                    "type" : "Device",
                    "name" : "deviceName",
                    "links" : {
                      "self" : "/api/fmc_config/v1/domain/default/devices/devicerecords/deviceUUID"
                    }
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devicehapairs/ftddevicehapairs" : {
      "get" : {
        "tags" : [ "Device HA Pairs" ],
        "description" : "**Retrieves or modifies the FTD HA record associated with the specified ID. Creates or breaks or deletes a FTD HA pair. If no ID is specified for a GET, retrieves list of all FTD HA pairs.**",
        "operationId" : "getAllFTDHADeviceContainer",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDHADeviceContainerListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/DomainUUID/devicehapairs/ftddevicehapairs ( Get all paginated HA container objects without offset and limit )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/devicehapairs/ftddevicehapairs?offset=0&limit=3"
                  },
                  "items" : [ {
                    "id" : "<container_uuid>",
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/<domainUuid>/devicehapairs/ftddevicehapairs/<container_uuid>"
                    },
                    "name" : "<HA_NAME>"
                  }, {
                    "id" : "<container_uuid>",
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/<domainUuid>/devicehapairs/ftddevicehapairs/<container_uuid>"
                    },
                    "name" : "<HA_NAME>"
                  }, {
                    "id" : "<container_uuid>",
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/<domainUuid>/devicehapairs/ftddevicehapairs/<container_uuid>"
                    },
                    "name" : "<HA_NAME>"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 3,
                    "count" : 3,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Device HA Pairs" ],
        "description" : "**Retrieves or modifies the FTD HA record associated with the specified ID. Creates or breaks or deletes a FTD HA pair. If no ID is specified for a GET, retrieves list of all FTD HA pairs. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createFTDHADeviceContainer",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of FTD HA pair.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FTDHADeviceContainer"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/FTDHADeviceContainer"
            },
            "examples" : { }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/FTDHADeviceContainer"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /fmc_config/v1/domain/DomainUUID/devicehapairs/ftddevicehapairs ( Creation of FTD HA )" : {
                  "primary" : {
                    "id" : "primary_uuid"
                  },
                  "secondary" : {
                    "id" : "secondary_uuid"
                  },
                  "name" : "<ha-name>",
                  "type" : "DeviceHAPair",
                  "ftdHABootstrap" : {
                    "isEncryptionEnabled" : "false",
                    "encKeyGenerationScheme" : "CUSTOM",
                    "sharedKey" : "cisco123",
                    "useSameLinkForFailovers" : "true",
                    "lanFailover" : {
                      "useIPv6Address" : "false",
                      "subnetMask" : "255.255.255.0",
                      "interfaceObject" : {
                        "id" : "<uuid>",
                        "type" : "PhysicalInterface",
                        "name" : "GigabitEthernet0/0"
                      },
                      "standbyIP" : "1.1.1.2",
                      "logicalName" : "LAN-INTERFACE",
                      "activeIP" : "1.1.1.1"
                    },
                    "statefulFailover" : {
                      "useIPv6Address" : "true",
                      "subnetMask" : "255.255.255.0",
                      "interfaceObject" : {
                        "id" : "<uuid>",
                        "type" : "PhysicalInterface",
                        "name" : "GigabitEthernet0/0"
                      },
                      "standbyIP" : "1.1.1.2",
                      "logicalName" : "STATEFUL-INTERFACE",
                      "activeIP" : "1.1.1.1"
                    }
                  }
                },
                "Response Example 1 :POST /fmc_config/v1/domain/DomainUUID/devicehapairs/ftddevicehapairs ( Creation of FTD HA )" : {
                  "version" : "6.0.1",
                  "ftdHABootstrap" : {
                    "isEncryptionEnabled" : false,
                    "useSameLinkForFailovers" : true,
                    "lanFailover" : {
                      "subnetMask" : "255.255.255.0",
                      "activeIP" : "1.1.1.1",
                      "standbyIP" : "1.1.1.2",
                      "interfaceObject" : {
                        "managementOnly" : false,
                        "MTU" : 0,
                        "enabled" : false,
                        "mode" : "NONE"
                      }
                    },
                    "statefulFailover" : {
                      "subnetMask" : "255.255.255.0",
                      "activeIP" : "1.1.1.1",
                      "standbyIP" : "1.1.1.2",
                      "interfaceObject" : {
                        "managementOnly" : false,
                        "MTU" : 0,
                        "enabled" : false,
                        "mode" : "NONE"
                      }
                    }
                  },
                  "metadata" : {
                    "task" : {
                      "name" : "FTD HA Device Registration",
                      "id" : "<Task Id>",
                      "type" : "Task"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devicehapairs/ftddevicehapairs/{containerUUID}/failoverinterfacemacaddressconfigs" : {
      "get" : {
        "tags" : [ "Device HA Pairs" ],
        "description" : "**Retrieves or modifies the FTD HA failover policy interface MAC addresses record associated with the specified FTD HA pair. If no ID is specified for a GET, retrieves list of all FTD HA failover policy interface MAC addresses records.**",
        "operationId" : "getAllFTDHAInterfaceMACAddresses",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDHAInterfaceMACAddressesListContainer"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Device HA Pairs" ],
        "description" : "**Retrieves or modifies the FTD HA failover policy interface MAC addresses record associated with the specified FTD HA pair. If no ID is specified for a GET, retrieves list of all FTD HA failover policy interface MAC addresses records. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createFTDHAInterfaceMACAddresses",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of FTD HA failover policy interface MAC addresses.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FTDHAInterfaceMACAddresses"
          }
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/FTDHAInterfaceMACAddresses"
            },
            "examples" : { }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/FTDHAInterfaceMACAddresses"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devicehapairs/ftddevicehapairs/{containerUUID}/failoverinterfacemacaddressconfigs/{objectId}" : {
      "get" : {
        "tags" : [ "Device HA Pairs" ],
        "description" : "**Retrieves or modifies the FTD HA failover policy interface MAC addresses record associated with the specified FTD HA pair. If no ID is specified for a GET, retrieves list of all FTD HA failover policy interface MAC addresses records.**",
        "operationId" : "getFTDHAInterfaceMACAddresses",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier of a FTD HA failover policy interface MAC addresses.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDHAInterfaceMACAddresses"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/devicehapairs/ftddevicehapairs/ha_container_uuid/failoverinterfacemacaddressconfigs/<failover-interface-mac-address-uuid> ( Test Get of FTD HA device container failover interface MAC addresses object. Failover interface MAC addresses object UUID should be passed as Object id. )" : {
                  "id" : "<failover_interface_mac-address_uuid>",
                  "type" : "FailoverInterfaceMACAddressConfig",
                  "physicalInterface" : {
                    "id" : "<uuid>",
                    "type" : "PhysicalInterface",
                    "enabled" : false,
                    "MTU" : 1500,
                    "managementOnly" : false,
                    "name" : "GigabitEthernet0/0"
                  },
                  "failoverActiveMac" : "0050.56a9.603c",
                  "failoverStandbyMac" : "0050.56a9.603d"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Device HA Pairs" ],
        "description" : "**Retrieves or modifies the FTD HA failover policy interface MAC addresses record associated with the specified FTD HA pair. If no ID is specified for a GET, retrieves list of all FTD HA failover policy interface MAC addresses records. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateFTDHAInterfaceMACAddresses",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier of a FTD HA failover policy interface MAC addresses.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of FTD HA failover policy interface MAC addresses.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FTDHAInterfaceMACAddresses"
          }
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDHAInterfaceMACAddresses"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/DomainUUID/devicehapairs/ftddevicehapairs/ha_container_uuid/failoverinterfacemacaddressconfigs/<failover-interface-mac-address-uuid> ( Test PUT of FTD HA device container failover interface MAC addresses object. Failover interface MAC addresses object UUID should be passed as Object id. )" : {
                  "id" : "<failover_interface_mac-address_uuid>",
                  "type" : "FailoverInterfaceMACAddressConfig",
                  "failoverActiveMac" : "0050.56a9.603c",
                  "failoverStandbyMac" : "0050.56a9.603d"
                },
                "Response Example 1 :PUT /fmc_config/v1/domain/DomainUUID/devicehapairs/ftddevicehapairs/ha_container_uuid/failoverinterfacemacaddressconfigs/<failover-interface-mac-address-uuid> ( Test PUT of FTD HA device container failover interface MAC addresses object. Failover interface MAC addresses object UUID should be passed as Object id. )" : {
                  "id" : "<failover_interface_mac-address_uuid>",
                  "type" : "FailoverInterfaceMACAddressConfig",
                  "physicalInterface" : {
                    "id" : "<uuid>",
                    "type" : "PhysicalInterface",
                    "enabled" : false,
                    "MTU" : 1500,
                    "managementOnly" : false,
                    "name" : "GigabitEthernet0/0"
                  },
                  "failoverActiveMac" : "0050.56a9.603c",
                  "failoverStandbyMac" : "0050.56a9.603d"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/FTDHAInterfaceMACAddresses"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Device HA Pairs" ],
        "description" : "**Retrieves or modifies the FTD HA failover policy interface MAC addresses record associated with the specified FTD HA pair. If no ID is specified for a GET, retrieves list of all FTD HA failover policy interface MAC addresses records. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteFTDHAInterfaceMACAddresses",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier of a FTD HA failover policy interface MAC addresses.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDHAInterfaceMACAddresses"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : DELETE /fmc_config/v1/domain/DomainUUID/devicehapairs/ftddevicehapairs/ha_container_uuid/failoverinterfacemacaddressconfigs/<failover-interface-mac-address-uuid> ( Deletes the FTD HA device container failover interface MAC addresses object. )" : "",
                "Response Example 1 :DELETE /fmc_config/v1/domain/DomainUUID/devicehapairs/ftddevicehapairs/ha_container_uuid/failoverinterfacemacaddressconfigs/<failover-interface-mac-address-uuid> ( Deletes the FTD HA device container failover interface MAC addresses object. )" : {
                  "id" : "<failover_interface_mac-address_uuid>",
                  "type" : "FailoverInterfaceMACAddressConfig",
                  "physicalInterface" : {
                    "id" : "<uuid>",
                    "type" : "PhysicalInterface",
                    "enabled" : false,
                    "MTU" : 1500,
                    "managementOnly" : false,
                    "name" : "GigabitEthernet0/0"
                  },
                  "failoverActiveMac" : "0050.56a9.603c",
                  "failoverStandbyMac" : "0050.56a9.603d"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devicehapairs/ftddevicehapairs/{containerUUID}/monitoredinterfaces" : {
      "get" : {
        "tags" : [ "Device HA Pairs" ],
        "description" : "**Retrieves or modifies the FTD HA Monitored interface policy record associated with the specified FTD HA pair. If no ID is specified for a GET, retrieves list of all FTD HA monitored interface policy records.**",
        "operationId" : "getAllFTDHAMonitoredInterfaces",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDHAMonitoredInterfacesListContainer"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devicehapairs/ftddevicehapairs/{containerUUID}/monitoredinterfaces/{objectId}" : {
      "get" : {
        "tags" : [ "Device HA Pairs" ],
        "description" : "**Retrieves or modifies the FTD HA Monitored interface policy record associated with the specified FTD HA pair. If no ID is specified for a GET, retrieves list of all FTD HA monitored interface policy records.**",
        "operationId" : "getFTDHAMonitoredInterfaces",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier of a FTD HA Monitored interface policy.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDHAMonitoredInterfaces"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/devicehapairs/ftddevicehapairs/ha_container_uuid/monitoredinterfaces/<monitored_interface_policy_uuid> ( Test Get of HA device container monitored interfaces object. Monitored interface policy UUID should be passed as Object id. )" : {
                  "id" : "<monitored_interface_policy_uuid>",
                  "interfaceLogicalName" : "<interface-nameif>",
                  "ipv4Configuration" : {
                    "activeIPv4Address" : "192.0.2.1",
                    "activeIPv4Mask" : "25",
                    "standbyIPv4Address" : "192.0.2.2"
                  },
                  "ipv6Configuration" : {
                    "activeIPv6LinkLocalAddress" : "FE80::C800:EFF:FE74:8",
                    "standbyIPv6LinkLocalAddress" : "FE80::C800:EFF:FE74:9",
                    "ipv6ActiveStandbyPair" : [ {
                      "activeIPv6" : "2006::/32",
                      "standbyIPv6" : "2006::/31"
                    }, {
                      "activeIPv6" : "2005::/32",
                      "standbyIPv6" : "2005::/31"
                    } ]
                  },
                  "monitorForFailures" : "true"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Device HA Pairs" ],
        "description" : "**Retrieves or modifies the FTD HA Monitored interface policy record associated with the specified FTD HA pair. If no ID is specified for a GET, retrieves list of all FTD HA monitored interface policy records. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateFTDHAMonitoredInterfaces",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier of a FTD HA Monitored interface policy.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of FTD HA Monitored interface policy.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FTDHAMonitoredInterfaces"
          }
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDHAMonitoredInterfaces"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/DomainUUID/devicehapairs/ftddevicehapairs/ha_container_uuid/monitoredinterfaces/<monitored_interface_policy_uuid> ( Test PUT of HA device container monitored interfaces object. Monitored interface policy UUID should be passed as Object id. )" : {
                  "id" : "<monitored_interface_policy_uuid>",
                  "name" : "<interface-nameif>",
                  "ipv4Configuration" : {
                    "standbyIPv4Address" : "192.0.2.2"
                  },
                  "ipv6Configuration" : {
                    "standbyIPv6LinkLocalAddress" : "FE80::C800:EFF:FE74:9",
                    "ipv6ActiveStandbyPair" : [ {
                      "activeIPv6" : "2006::/32",
                      "standbyIPv6" : "2006::31"
                    }, {
                      "activeIPv6" : "2005::/32",
                      "standbyIPv6" : "2005::31"
                    } ]
                  },
                  "monitorForFailures" : "true"
                },
                "Response Example 1 :PUT /fmc_config/v1/domain/DomainUUID/devicehapairs/ftddevicehapairs/ha_container_uuid/monitoredinterfaces/<monitored_interface_policy_uuid> ( Test PUT of HA device container monitored interfaces object. Monitored interface policy UUID should be passed as Object id. )" : {
                  "id" : "<monitored_interface_policy_uuid>",
                  "name" : "<interface-nameif>",
                  "ipv4Configuration" : {
                    "activeIPv4Address" : "192.0.2.1",
                    "activeIPv4Mask" : "25",
                    "standbyIPv4Address" : "192.0.2.2"
                  },
                  "ipv6Configuration" : {
                    "activeIPv6LinkLocalAddress" : "FE80::C800:EFF:FE74:8",
                    "standbyIPv6LinkLocalAddress" : "FE80::C800:EFF:FE74:9",
                    "ipv6ActiveStandbyPair" : [ {
                      "activeIPv6" : "2006::/32",
                      "standbyIPv6" : "2006::1"
                    }, {
                      "activeIPv6" : "2005::/32",
                      "standbyIPv6" : "2005::1"
                    } ]
                  },
                  "monitorForFailures" : "true"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/FTDHAMonitoredInterfaces"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devicehapairs/ftddevicehapairs/{objectId}" : {
      "get" : {
        "tags" : [ "Device HA Pairs" ],
        "description" : "**Retrieves or modifies the FTD HA record associated with the specified ID. Creates or breaks or deletes a FTD HA pair. If no ID is specified for a GET, retrieves list of all FTD HA pairs.**",
        "operationId" : "getFTDHADeviceContainer",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier of a FTD HA pair.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDHADeviceContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/devicehapairs/ftddevicehapairs/ha_container_uuid ( Test GET of HA container details for a ha_container_uuid )" : {
                  "primary" : {
                    "id" : "primary_uuid"
                  },
                  "secondary" : {
                    "id" : "secondary_uuid"
                  },
                  "name" : "<ha-name>",
                  "type" : "DeviceHAPair",
                  "ftdHAFailoverTriggerCriteria" : {
                    "peerPollTime" : 3,
                    "noOfFailedInterfaceLimit" : 1,
                    "peerPollTimeUnit" : "SEC",
                    "peerHoldTimeUnit" : "SEC",
                    "peerHoldTime" : 34,
                    "interfacePollTime" : 5,
                    "interfacePollTimeUnit" : "SEC",
                    "interfaceHoldTime" : 25
                  },
                  "ftdHABootstrap" : {
                    "isEncryptionEnabled" : "false",
                    "encKeyGenerationScheme" : "CUSTOM",
                    "sharedKey" : "cisco123",
                    "useSameLinkForFailovers" : "true",
                    "lanFailover" : {
                      "useIPv6Address" : "false",
                      "subnetMask" : "255.255.255.0",
                      "interfaceObject" : {
                        "id" : "<uuid>",
                        "type" : "PhysicalInterface",
                        "name" : "GigabitEthernet0/0"
                      },
                      "standbyIP" : "1.1.1.2",
                      "logicalName" : "LAN-INTERFACE",
                      "activeIP" : "1.1.1.1"
                    },
                    "statefulFailover" : {
                      "useIPv6Address" : "true",
                      "subnetMask" : "255.255.255.0",
                      "interfaceObject" : {
                        "id" : "<uuid>",
                        "type" : "PhysicalInterface",
                        "name" : "GigabitEthernet0/0"
                      },
                      "standbyIP" : "1.1.1.2",
                      "logicalName" : "STATEFUL-INTERFACE",
                      "activeIP" : "1.1.1.1"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Device HA Pairs" ],
        "description" : "**Retrieves or modifies the FTD HA record associated with the specified ID. Creates or breaks or deletes a FTD HA pair. If no ID is specified for a GET, retrieves list of all FTD HA pairs. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateFTDHADeviceContainer",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier of a FTD HA pair.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of FTD HA pair.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FTDHADeviceContainer"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDHADeviceContainer"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/DomainUUID/devicehapairs/ftddevicehapairs/ha_container_uuid ( Test PUT(HA Switch) of HA device container object. HA container UUID should be passed as Object id. The action can be either HABREAK/SWITCH )" : {
                  "id" : "ha_container_uuid",
                  "action" : "SWITCH"
                },
                "Request example 2 : PUT /fmc_config/v1/domain/DomainUUID/devicehapairs/ftddevicehapairs/ha_container_uuid ( Test PUT(HA Break) of HA device container object. HA container UUID should be passed as Object id. The action can be either HABREAK/SWITCH )" : {
                  "id" : "ha_container_uuid",
                  "action" : "HABREAK",
                  "forceBreak" : "true"
                },
                "Request example 3 : PUT /fmc_config/v1/domain/DomainUUID/devicehapairs/ftddevicehapairs/ha_container_uuid ( Set the Fail over Trigger Criteria of HA device container object. HA container UUID should be passed as Object id. All the attributes are mandatory. Either of noOfFailedInterfaceLimit or percentFailedInterfaceExceed is optional )" : {
                  "id" : "ha_container_uuid",
                  "ftdHAFailoverTriggerCriteria" : {
                    "noOfFailedInterfaceLimit" : 11,
                    "percentFailedInterfaceExceed" : 96,
                    "peerPollTime" : 12,
                    "peerPollTimeUnit" : "SEC or MSEC",
                    "peerHoldTime" : 37,
                    "peerHoldTimeUnit" : "SEC or MSEC",
                    "interfacePollTime" : 13,
                    "interfacePollTimeUnit" : "SEC or MSEC",
                    "interfaceHoldTime" : 65
                  }
                },
                "Response Example 1 :PUT /fmc_config/v1/domain/DomainUUID/devicehapairs/ftddevicehapairs/ha_container_uuid ( Test PUT(HA Switch) of HA device container object. HA container UUID should be passed as Object id. The action can be either HABREAK/SWITCH )" : {
                  "id" : "<Container uuid>",
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/<domainUuid>/devicehapairs/ftddevicehapairs/<container_uuid>"
                  },
                  "ftdHABootstrap" : {
                    "isEncryptionEnabled" : false,
                    "useSameLinkForFailovers" : false
                  },
                  "action" : "SWITCH",
                  "metadata" : {
                    "task" : {
                      "name" : "FTD HA Master Switch",
                      "id" : "<Task Id>",
                      "type" : "Task"
                    }
                  }
                },
                "Response Example 2 :PUT /fmc_config/v1/domain/DomainUUID/devicehapairs/ftddevicehapairs/ha_container_uuid ( Test PUT(HA Break) of HA device container object. HA container UUID should be passed as Object id. The action can be either HABREAK/SWITCH )" : {
                  "id" : "<Container uuid>",
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/<domainUuid>/devicehapairs/ftddevicehapairs/<container_uuid>"
                  },
                  "ftdHABootstrap" : {
                    "isEncryptionEnabled" : false,
                    "useSameLinkForFailovers" : false
                  },
                  "action" : "HABREAK",
                  "metadata" : {
                    "task" : {
                      "name" : "FTD HA Master Switch",
                      "id" : "<Task Id>",
                      "type" : "Task"
                    }
                  }
                },
                "Response Example 3 :PUT /fmc_config/v1/domain/DomainUUID/devicehapairs/ftddevicehapairs/ha_container_uuid ( Set the Fail over Trigger Criteria of HA device container object. HA container UUID should be passed as Object id. All the attributes are mandatory. Either of noOfFailedInterfaceLimit or percentFailedInterfaceExceed is optional )" : {
                  "id" : "<Container uuid>",
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/<domainUuid>/devicehapairs/ftddevicehapairs/<container_uuid>"
                  },
                  "ftdHAFailoverTriggerCriteria" : {
                    "noOfFailedInterfaceLimit" : 11,
                    "percentFailedInterfaceExceed" : 96,
                    "peerPollTimeUnit" : "SEC",
                    "peerPollTime" : 12,
                    "peerHoldTimeUnit" : "SEC",
                    "peerHoldTime" : 37,
                    "interfacePollTimeUnit" : "SEC",
                    "interfacePollTime" : 13,
                    "interfaceHoldTime" : 65
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/FTDHADeviceContainer"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Device HA Pairs" ],
        "description" : "**Retrieves or modifies the FTD HA record associated with the specified ID. Creates or breaks or deletes a FTD HA pair. If no ID is specified for a GET, retrieves list of all FTD HA pairs. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteFTDHADeviceContainer",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier of a FTD HA pair.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDHADeviceContainer"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : DELETE /fmc_config/v1/domain/DomainUUID/devicehapairs/ftddevicehapairs/ha_container_uuid ( Delete the HA Container by the container id. This operation will remove the devices as well. )" : "",
                "Response Example 1 :DELETE /fmc_config/v1/domain/DomainUUID/devicehapairs/ftddevicehapairs/ha_container_uuid ( Delete the HA Container by the container id. This operation will remove the devices as well. )" : {
                  "version" : "6.0.1",
                  "ftdHABootstrap" : {
                    "isEncryptionEnabled" : false,
                    "useSameLinkForFailovers" : true,
                    "lanFailover" : {
                      "subnetMask" : "255.255.255.0",
                      "activeIP" : "1.1.1.1",
                      "standbyIP" : "1.1.1.2",
                      "interfaceObject" : {
                        "managementOnly" : false,
                        "MTU" : 0,
                        "enabled" : false,
                        "mode" : "NONE"
                      }
                    },
                    "statefulFailover" : {
                      "subnetMask" : "255.255.255.0",
                      "activeIP" : "1.1.1.1",
                      "standbyIP" : "1.1.1.2",
                      "interfaceObject" : {
                        "managementOnly" : false,
                        "MTU" : 0,
                        "enabled" : false,
                        "mode" : "NONE"
                      }
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/copyconfigrequests" : {
      "post" : {
        "tags" : [ "Devices" ],
        "description" : "**Copy configuration operation on device. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createDeviceCopyConfigRequest",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Input for Copy configuration request.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DeviceCopyConfigRequest"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/DeviceCopyConfigRequest"
            },
            "examples" : { }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/DeviceCopyConfigRequest"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /fmc_config/v1/domain/DomainUUID/devices/copyconfigrequests ( Device copy config request )" : {
                  "sourceDevice" : {
                    "id" : "device_uuid",
                    "type" : "Device"
                  },
                  "targetDeviceList" : [ {
                    "id" : "device_uuid",
                    "type" : "Device"
                  } ],
                  "copySharedPolicies" : false
                },
                "Request example 2 : POST /fmc_config/v1/domain/DomainUUID/devices/copyconfigrequests ( Device copy config request for FTD HA to stanalone devices )" : {
                  "sourceDevice" : {
                    "id" : "container_uuid",
                    "type" : "DeviceHAPair"
                  },
                  "targetDeviceList" : [ {
                    "id" : "device_uuid",
                    "type" : "Device"
                  } ],
                  "copySharedPolicies" : false
                },
                "Response Example 1 :POST /fmc_config/v1/domain/DomainUUID/devices/copyconfigrequests ( Device copy config request )" : {
                  "sourceDevice" : {
                    "id" : "device_uuid",
                    "type" : "Device"
                  },
                  "targetDeviceList" : [ {
                    "id" : "device_uuid",
                    "type" : "Device"
                  } ],
                  "copySharedPolicies" : false,
                  "type" : "CopyConfigRequest",
                  "metadata" : {
                    "task" : {
                      "id" : "task_id",
                      "type" : "TaskStatus",
                      "links" : {
                        "self" : "https://fmc_host/api/fmc_config/v1/domain/domainUuid/job/taskstatuses/task_id"
                      }
                    }
                  }
                },
                "Response Example 2 :POST /fmc_config/v1/domain/DomainUUID/devices/copyconfigrequests ( Device copy config request for FTD HA to stanalone devices )" : {
                  "sourceDevice" : {
                    "id" : "container_uuid",
                    "type" : "DeviceHAPair"
                  },
                  "targetDeviceList" : [ {
                    "id" : "device_uuid",
                    "type" : "Device"
                  } ],
                  "copySharedPolicies" : false,
                  "type" : "CopyConfigRequest",
                  "metadata" : {
                    "task" : {
                      "id" : "task_id",
                      "type" : "TaskStatus",
                      "links" : {
                        "self" : "https://fmc_host/api/fmc_config/v1/domain/domainUuid/job/taskstatuses/task_id"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves or modifies the device record associated with the specified ID. Registers or unregisters a device. If no ID is specified for a GET, retrieves list of all device records.**",
        "operationId" : "getAllDevice",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/DeviceListContainer"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves or modifies the device record associated with the specified ID. Registers or unregisters a device. If no ID is specified for a GET, retrieves list of all device records. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createDevice",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of device.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Device"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/Device"
            },
            "examples" : { }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/Device"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /fmc_config/v1/domain/DomainUUID/devices/devicerecords ( Registration of a firepower device )" : {
                  "name" : "<name>",
                  "hostName" : "<host name>",
                  "natID" : "cisco123",
                  "regKey" : "regkey",
                  "type" : "Device",
                  "license_caps" : [ "MALWARE", "URLFilter", "PROTECT", "CONTROL", "VPN" ],
                  "accessPolicy" : {
                    "id" : "accessPolicyUUID",
                    "type" : "AccessPolicy"
                  }
                },
                "Request example 2 : POST /fmc_config/v1/domain/DomainUUID/devices/devicerecords ( Registration of a FTD device )" : {
                  "name" : "<name>",
                  "hostName" : "<host name>",
                  "natID" : "cisco123",
                  "regKey" : "regkey",
                  "type" : "Device",
                  "license_caps" : [ "BASE", "MALWARE", "URLFilter", "THREAT" ],
                  "performanceTier" : "FTDv5 | FTDv10 | FTDv20| FTDv30 | FTDv50 | Legacy",
                  "accessPolicy" : {
                    "id" : "accessPolicyUUID",
                    "type" : "AccessPolicy"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/bridgegroupinterfaces" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves the bridge group interface associated with the specified NGFW device ID and interface ID. If no interface ID is specified, retrieves list of all bridge group interfaces associated with the specified NGFW device ID. <div class=\"alert alert-warning\">More details on netmod events(out of sync interfaces):<b> GET /interfaceevents</b></div>**",
        "operationId" : "getAllFTDBridgeGroupInterface",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDBridgeGroupInterfaceListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/bridgegroupinterfaces ( Success: Test GET ALL success )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/bridgegroupinterfaces?offset=0&limit=3"
                  },
                  "items" : [ {
                    "name" : "s1p3.1",
                    "id" : "1",
                    "type" : "BridgeGroupInterface",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/bridgegroupinterfaces/bridgegroupinterfaceUUID1"
                    }
                  }, {
                    "name" : "s1p4.2",
                    "id" : "bridgegroupinterfaceUUID2",
                    "type" : "BridgeGroupInterface",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/bridgegroupinterfaces/bridgegroupinterfaceUUID2"
                    }
                  }, {
                    "name" : "hybrid_1",
                    "id" : "bridgegroupinterfaceUUID3",
                    "type" : "BridgeGroupInterface",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/bridgegroupinterfaces/bridgegroupinterfaceUUID3"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 3,
                    "count" : 3,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/bridgegroupinterfaces/bridgegroupinterfaceUUID?expanded=true ( Success: Test GET ALL success with expanded=true )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/bridgegroupinterfaces/bridgegroupinterfaceUUID?offset=0&limit=2"
                  },
                  "items" : [ {
                    "metadata" : {
                      "timestamp" : 1462814174120,
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUUID"
                      }
                    },
                    "links" : {
                      "self" : "/fmc_config/v1/domain/default/devices/devicerecords/containerUUID/bridgegroupinterfaces/bridgegroupinterfaceUUID1"
                    },
                    "type" : "BridgeGroupInterface",
                    "selectedInterfaces" : [ {
                      "type" : "PhysicalInterface",
                      "name" : "GigabitEthernet0/1",
                      "id" : "interface UUID"
                    } ],
                    "enabled" : true,
                    "MTU" : 1500,
                    "name" : "BVI1",
                    "ifname" : "BVI1",
                    "mode" : "NONE",
                    "managementOnly" : false,
                    "ipAddress" : "1.2.3.4",
                    "bridgeGroupId" : 1,
                    "ipv4" : {
                      "static" : {
                        "address" : "1.2.3.4",
                        "netmask" : "25"
                      }
                    },
                    "id" : "bridgegroupinterfaceUUID1"
                  }, {
                    "metadata" : {
                      "timestamp" : 1462814174120,
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUUID"
                      }
                    },
                    "links" : {
                      "self" : "/fmc_config/v1/domain/default/devices/devicerecords/containerUUID/bridgegroupinterfaces/bridgegroupinterfaceUUID2"
                    },
                    "type" : "BridgeGroupInterface",
                    "selectedInterfaces" : [ {
                      "type" : "PhysicalInterface",
                      "name" : "GigabitEthernet0/2",
                      "id" : "interface UUID"
                    } ],
                    "enabled" : true,
                    "MTU" : 1500,
                    "name" : "BVI2",
                    "ifname" : "BVI2",
                    "mode" : "NONE",
                    "managementOnly" : false,
                    "ipAddress" : "1.2.3.4",
                    "bridgeGroupId" : 2,
                    "ipv4" : {
                      "static" : {
                        "address" : "1.2.3.4",
                        "netmask" : "25"
                      }
                    },
                    "id" : "bridgegroupinterfaceUUID2"
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves the bridge group interface associated with the specified NGFW device ID and interface ID. If no interface ID is specified, retrieves list of all bridge group interfaces associated with the specified NGFW device ID. <div class=\"alert alert-warning\">More details on netmod events(out of sync interfaces):<b> GET /interfaceevents</b></div> _Check the response section for applicable examples (if any)._**",
        "operationId" : "createFTDBridgeGroupInterface",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The input bridge group interface model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FTDBridgeGroupInterface"
          }
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/FTDBridgeGroupInterface"
            },
            "examples" : { }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/FTDBridgeGroupInterface"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/bridgegroupinterfaces/{objectId}" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves the bridge group interface associated with the specified NGFW device ID and interface ID. If no interface ID is specified, retrieves list of all bridge group interfaces associated with the specified NGFW device ID. <div class=\"alert alert-warning\">More details on netmod events(out of sync interfaces):<b> GET /interfaceevents</b></div>**",
        "operationId" : "getFTDBridgeGroupInterface",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a bridge group interface.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDBridgeGroupInterface"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/bridgegroupinterfaces/bridgegroupinterfaceUUID ( Success: Test GET method for brdge group interface )" : {
                  "type" : "BridgeGroupInterface",
                  "selectedInterfaces" : [ {
                    "type" : "PhysicalInterface",
                    "name" : "GigabitEthernet0/1",
                    "id" : "interface UUID"
                  } ],
                  "enabled" : true,
                  "MTU" : 1500,
                  "ifname" : "bridgeGroupIntf1",
                  "managementOnly" : false,
                  "ipAddress" : "1.2.3.4",
                  "bridgeGroupId" : 39,
                  "ipv4" : {
                    "static" : {
                      "address" : "1.2.3.4",
                      "netmask" : "25"
                    }
                  },
                  "id" : "bridgegroupinterfaceUUID",
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/bridgegroupinterfaces/bridgegroupinterfaceUUID"
                  },
                  "metadata" : {
                    "readOnly" : {
                      "state" : false
                    },
                    "timestamp" : 1458597038,
                    "lastUser" : {
                      "name" : "admin",
                      "id" : "UserUUID",
                      "type" : "user"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "DomainUUID",
                      "type" : "domain"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves the bridge group interface associated with the specified NGFW device ID and interface ID. If no interface ID is specified, retrieves list of all bridge group interfaces associated with the specified NGFW device ID. <div class=\"alert alert-warning\">More details on netmod events(out of sync interfaces):<b> GET /interfaceevents</b></div> _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateFTDBridgeGroupInterface",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a bridge group interface.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The input bridge group interface model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FTDBridgeGroupInterface"
          }
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDBridgeGroupInterface"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/bridgegroupinterfaces/bridgeGroupIntfUUID ( Success: Test PUT method for bridge group interface )" : {
                  "id" : "bridgeGroupIntfUUID",
                  "type" : "BridgeGroupInterface",
                  "selectedInterfaces" : [ {
                    "type" : "PhysicalInterface",
                    "name" : "GigabitEthernet0/0",
                    "id" : "interface UUID"
                  } ],
                  "enabled" : true,
                  "MTU" : 1500,
                  "ifname" : "bridgeGroupIntf1",
                  "managementOnly" : false,
                  "ipAddress" : "1.2.3.5",
                  "bridgeGroupId" : 39,
                  "ipv4" : {
                    "static" : {
                      "address" : "1.2.3.5",
                      "netmask" : "25"
                    }
                  },
                  "ipv6" : {
                    "addresses" : [ {
                      "address" : "9090::",
                      "prefix" : "12"
                    } ],
                    "dadAttempts" : 1,
                    "nsInterval" : 10000,
                    "reachableTime" : 0
                  }
                },
                "Response Example 1 :PUT /fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/bridgegroupinterfaces/bridgeGroupIntfUUID ( Success: Test PUT method for bridge group interface )" : {
                  "type" : "BridgeGroupInterface",
                  "selectedInterfaces" : [ {
                    "type" : "PhysicalInterface",
                    "name" : "GigabitEthernet0/0",
                    "id" : "interface UUID"
                  } ],
                  "enabled" : true,
                  "MTU" : 1500,
                  "ifname" : "bridgeGroupIntf1",
                  "managementOnly" : false,
                  "ipAddress" : "1.2.3.5",
                  "bridgeGroupId" : 39,
                  "ipv4" : {
                    "static" : {
                      "address" : "1.2.3.5",
                      "netmask" : "25"
                    }
                  },
                  "ipv6" : {
                    "addresses" : [ {
                      "address" : "9090::",
                      "prefix" : "12"
                    } ],
                    "dadAttempts" : 1,
                    "nsInterval" : 10000,
                    "reachableTime" : 0
                  },
                  "id" : "bridgeGroupIntfUUID",
                  "links" : {
                    "self" : "<fmc_host>:<port>/fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/bridgegroupinterfaces/bridgeGroupIntfUUID"
                  },
                  "metadata" : {
                    "timestamp" : 0
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/FTDBridgeGroupInterface"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves the bridge group interface associated with the specified NGFW device ID and interface ID. If no interface ID is specified, retrieves list of all bridge group interfaces associated with the specified NGFW device ID. <div class=\"alert alert-warning\">More details on netmod events(out of sync interfaces):<b> GET /interfaceevents</b></div> _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteFTDBridgeGroupInterface",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a bridge group interface.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDBridgeGroupInterface"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/bridgegroupinterfaces/bridgeGroupIntfUUID ( Success: Test DELETE method for bridge group interface )" : {
                  "type" : "BridgeGroupInterface",
                  "selectedInterfaces" : [ {
                    "type" : "PhysicalInterface",
                    "name" : "GigabitEthernet0/0",
                    "id" : "interface UUID"
                  } ],
                  "enabled" : true,
                  "MTU" : 1500,
                  "ifname" : "bridgeGroupIntf1",
                  "managementOnly" : false,
                  "ipAddress" : "1.2.3.5",
                  "bridgeGroupId" : 39,
                  "ipv4" : {
                    "static" : {
                      "address" : "1.2.3.5",
                      "netmask" : "25"
                    }
                  },
                  "ipv6" : {
                    "addresses" : [ {
                      "address" : "9090::",
                      "prefix" : "12"
                    } ],
                    "dadAttempts" : 1,
                    "nsInterval" : 10000,
                    "reachableTime" : 0
                  },
                  "id" : "bridgeGroupIntfUUID",
                  "links" : {
                    "self" : "<fmc_host>:<port>/fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/bridgegroupinterfaces/bridgeGroupIntfUUID"
                  },
                  "metadata" : {
                    "timestamp" : 0
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/etherchannelinterfaces" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves the ethernet channel interface associated with the specified NGFW device ID and interface ID. If no ID is specified, retrieves list of all ethernet channel interfaces associated with the specified NGFW device ID. <div class=\"alert alert-warning\">More details on netmod events(out of sync interfaces):<b> GET /interfaceevents</b></div>**",
        "operationId" : "getAllFTDEtherChannelInterface",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDEtherChannelInterfaceListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/etherchannelinterfaces ( Success: Test GET ALL success )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/default/devices/devicerecords/containerUUID/etherchannelinterfaces?offset=0&limit=2"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/default/devices/devicerecords/containerUUID/etherchannelinterfaces/etherChannelIntfUUID2"
                    },
                    "name" : "Port-channel2",
                    "id" : "etherChannelIntfUUID2"
                  }, {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/default/devices/devicerecords/containerUUID/etherchannelinterfaces/etherChannelIntfUUID1"
                    },
                    "name" : "Port-channel1",
                    "id" : "etherChannelIntfUUID1"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/etherchannelinterfaces?expanded=true ( Success: Test GET ALL success with expanded=true )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/default/devices/devicerecords/containerUUID/etherchannelinterfaces?offset=0&limit=2"
                  },
                  "items" : [ {
                    "metadata" : {
                      "timestamp" : 1462814174120,
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUUID"
                      }
                    },
                    "links" : {
                      "self" : "/fmc_config/v1/domain/default/devices/devicerecords/containerUUID/etherchannelinterfaces/etherChannelIntfUUID2"
                    },
                    "type" : "EtherChannelInterface",
                    "lacpMode" : "ACTIVE",
                    "lacpRate" : "DEFAULT",
                    "mode" : "NONE",
                    "maxActivePhysicalInterface" : 8,
                    "minActivePhysicalInterface" : 1,
                    "selectedInterfaces" : [ {
                      "type" : "PhysicalInterface",
                      "name" : "GigabitEthernet1/4",
                      "id" : "interface UUID"
                    }, {
                      "type" : "PhysicalInterface",
                      "name" : "GigabitEthernet1/5",
                      "id" : "interface UUID"
                    } ],
                    "hardware" : {
                      "duplex" : "AUTO",
                      "speed" : "AUTO"
                    },
                    "loadBalancing" : "SRC_DST_IP",
                    "etherChannelId" : 2,
                    "enabled" : true,
                    "MTU" : 1500,
                    "managementOnly" : false,
                    "securityZone" : {
                      "id" : "securityZoneUUID",
                      "type" : "SecurityZone"
                    },
                    "ifname" : "TestEtherChannel",
                    "enableAntiSpoofing" : false,
                    "enableSGTPropagate" : true,
                    "overrideDefaultFragmentSetting" : { },
                    "ipv4" : {
                      "static" : { }
                    },
                    "ipv6" : {
                      "enableAutoConfig" : false,
                      "enforceEUI64" : false,
                      "enableIPV6" : false,
                      "enableDHCPAddrConfig" : false,
                      "enableDHCPNonAddrConfig" : false,
                      "dadAttempts" : 1,
                      "nsInterval" : 1000,
                      "reachableTime" : 0,
                      "enableRA" : true,
                      "raLifeTime" : 1800,
                      "raInterval" : 200
                    },
                    "name" : "Port-channel2",
                    "id" : "etherChannelIntfUUID2"
                  }, {
                    "metadata" : {
                      "timestamp" : 1462814173120,
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUUID"
                      }
                    },
                    "links" : {
                      "self" : "/fmc_config/v1/domain/default/devices/devicerecords/containerUUID/etherchannelinterfaces/etherChannelIntfUUID1"
                    },
                    "type" : "EtherChannelInterface",
                    "lacpMode" : "ACTIVE",
                    "lacpRate" : "DEFAULT",
                    "mode" : "NONE",
                    "maxActivePhysicalInterface" : 8,
                    "minActivePhysicalInterface" : 1,
                    "selectedInterfaces" : [ {
                      "type" : "PhysicalInterface",
                      "name" : "GigabitEthernet1/4",
                      "id" : "interface UUID"
                    }, {
                      "type" : "PhysicalInterface",
                      "name" : "GigabitEthernet1/5",
                      "id" : "interface UUID"
                    } ],
                    "hardware" : {
                      "duplex" : "AUTO",
                      "speed" : "AUTO"
                    },
                    "loadBalancing" : "SRC_IP_PORT",
                    "etherChannelId" : 1,
                    "enabled" : true,
                    "MTU" : 1500,
                    "managementOnly" : false,
                    "securityZone" : {
                      "id" : "securityZoneUUID",
                      "type" : "SecurityZone"
                    },
                    "ifname" : "NewEthChannel",
                    "enableAntiSpoofing" : false,
                    "enableSGTPropagate" : true,
                    "overrideDefaultFragmentSetting" : { },
                    "ipv4" : {
                      "static" : {
                        "address" : "10.20.25.10",
                        "netmask" : "24"
                      }
                    },
                    "ipv6" : {
                      "prefixes" : [ {
                        "default" : {
                          "offlink" : false,
                          "autoConfig" : true,
                          "preferLifeTime" : {
                            "duration" : {
                              "preferLifeTime" : 604800,
                              "validLifeTime" : 2592000
                            },
                            "preferLifeTime" : { }
                          }
                        }
                      } ],
                      "enableAutoConfig" : true,
                      "enforceEUI64" : true,
                      "enableIPV6" : true,
                      "enableDHCPAddrConfig" : true,
                      "enableDHCPNonAddrConfig" : true,
                      "dadAttempts" : 1,
                      "nsInterval" : 1000,
                      "reachableTime" : 13,
                      "enableRA" : true,
                      "raLifeTime" : 1800,
                      "raInterval" : 26,
                      "addresses" : [ {
                        "address" : "2002::/128",
                        "enforceEUI64" : true
                      } ]
                    },
                    "name" : "Port-channel1",
                    "id" : "etherChannelIntfUUID1"
                  }, {
                    "metadata" : {
                      "timestamp" : 1462814173120,
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUUID"
                      }
                    },
                    "links" : {
                      "self" : "/fmc_config/v1/domain/default/devices/devicerecords/containerUUID/etherchannelinterfaces/etherChannelIntfUUID1"
                    },
                    "type" : "EtherChannelInterface",
                    "lacpMode" : "ACTIVE",
                    "lacpRate" : "DEFAULT",
                    "mode" : "PASSIVE",
                    "selectedInterfaces" : [ {
                      "type" : "PhysicalInterface",
                      "name" : "GigabitEthernet1/4",
                      "id" : "interface UUID"
                    }, {
                      "type" : "PhysicalInterface",
                      "name" : "GigabitEthernet1/5",
                      "id" : "interface UUID"
                    } ],
                    "hardware" : {
                      "duplex" : "AUTO",
                      "speed" : "AUTO"
                    },
                    "etherChannelId" : 1,
                    "enabled" : true,
                    "MTU" : 1500,
                    "managementOnly" : false,
                    "securityZone" : {
                      "id" : "securityZoneUUID",
                      "type" : "SecurityZone"
                    },
                    "ifname" : "NewEthChannel",
                    "enableAntiSpoofing" : false,
                    "enableSGTPropagate" : true,
                    "overrideDefaultFragmentSetting" : { },
                    "ipv4" : { },
                    "ipv6" : { },
                    "name" : "Port-channel1",
                    "id" : "etherChannelIntfUUID1"
                  }, {
                    "metadata" : {
                      "timestamp" : 1462814173120,
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUUID"
                      }
                    },
                    "links" : {
                      "self" : "/fmc_config/v1/domain/default/devices/devicerecords/containerUUID/etherchannelinterfaces/etherChannelIntfUUID1"
                    },
                    "type" : "EtherChannelInterface",
                    "lacpMode" : "ACTIVE",
                    "lacpRate" : "DEFAULT",
                    "mode" : "ERSPAN",
                    "erspanSourceIP" : "10.20.30.50",
                    "erspanFlowId" : 1,
                    "selectedInterfaces" : [ {
                      "type" : "PhysicalInterface",
                      "name" : "GigabitEthernet1/4",
                      "id" : "interface UUID"
                    }, {
                      "type" : "PhysicalInterface",
                      "name" : "GigabitEthernet1/5",
                      "id" : "interface UUID"
                    } ],
                    "hardware" : {
                      "duplex" : "AUTO",
                      "speed" : "AUTO"
                    },
                    "etherChannelId" : 1,
                    "enabled" : true,
                    "MTU" : 1500,
                    "managementOnly" : false,
                    "securityZone" : {
                      "id" : "securityZoneUUID",
                      "type" : "SecurityZone"
                    },
                    "ifname" : "NewEthChannel",
                    "enableAntiSpoofing" : false,
                    "enableSGTPropagate" : true,
                    "overrideDefaultFragmentSetting" : { },
                    "ipv4" : {
                      "static" : {
                        "address" : "10.20.30.40",
                        "netmask" : "24"
                      }
                    },
                    "ipv6" : { },
                    "name" : "Port-channel1",
                    "id" : "etherChannelIntfUUID1"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves the ethernet channel interface associated with the specified NGFW device ID and interface ID. If no ID is specified, retrieves list of all ethernet channel interfaces associated with the specified NGFW device ID. <div class=\"alert alert-warning\">More details on netmod events(out of sync interfaces):<b> GET /interfaceevents</b></div> _Check the response section for applicable examples (if any)._**",
        "operationId" : "createFTDEtherChannelInterface",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The input ethernet channel interface model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FTDEtherChannelInterface"
          }
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/FTDEtherChannelInterface"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/etherchannelinterfaces ( Success: Test POST method for ether channel interface )" : {
                  "type" : "EtherChannelInterface",
                  "mode" : "NONE",
                  "lacpMode" : "ACTIVE",
                  "lacpRate" : "DEFAULT",
                  "maxActivePhysicalInterface" : 8,
                  "minActivePhysicalInterface" : 1,
                  "selectedInterfaces" : [ {
                    "type" : "PhysicalInterface",
                    "name" : "GigabitEthernet0/0",
                    "id" : "interface UUID"
                  } ],
                  "hardware" : {
                    "duplex" : "AUTO",
                    "speed" : "AUTO"
                  },
                  "loadBalancing" : "SRC_IP_PORT",
                  "etherChannelId" : 1,
                  "enabled" : true,
                  "MTU" : 1500,
                  "managementOnly" : false,
                  "securityZone" : {
                    "id" : "securityZoneUUID",
                    "type" : "SecurityZone"
                  },
                  "ifname" : "NewEthChannel",
                  "enableAntiSpoofing" : false,
                  "enableSGTPropagate" : true,
                  "overrideDefaultFragmentSetting" : { },
                  "ipv4" : {
                    "static" : {
                      "address" : "1.2.3.5",
                      "netmask" : "25"
                    }
                  },
                  "ipv6" : {
                    "addresses" : [ {
                      "address" : "9090::",
                      "prefix" : "12"
                    } ],
                    "dadAttempts" : 1,
                    "nsInterval" : 10000,
                    "reachableTime" : 0
                  }
                },
                "Response Example 1 :POST /fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/etherchannelinterfaces ( Success: Test POST method for ether channel interface )" : {
                  "type" : "EtherChannelInterface",
                  "mode" : "PASSIVE",
                  "lacpMode" : "ACTIVE",
                  "lacpRate" : "DEFAULT",
                  "maxActivePhysicalInterface" : 8,
                  "minActivePhysicalInterface" : 1,
                  "selectedInterfaces" : [ {
                    "type" : "PhysicalInterface",
                    "name" : "GigabitEthernet0/0",
                    "id" : "interface UUID"
                  } ],
                  "hardware" : {
                    "duplex" : "AUTO",
                    "speed" : "AUTO"
                  },
                  "loadBalancing" : "SRC_IP_PORT",
                  "etherChannelId" : 1,
                  "enabled" : true,
                  "MTU" : 1500,
                  "managementOnly" : false,
                  "securityZone" : {
                    "id" : "securityZoneUUID",
                    "type" : "SecurityZone"
                  },
                  "ifname" : "NewEthChannel",
                  "enableAntiSpoofing" : false,
                  "enableSGTPropagate" : true,
                  "overrideDefaultFragmentSetting" : { },
                  "ipv4" : {
                    "static" : {
                      "address" : "1.2.3.5",
                      "netmask" : "25"
                    }
                  },
                  "ipv6" : {
                    "addresses" : [ {
                      "address" : "9090::",
                      "prefix" : "12"
                    } ],
                    "dadAttempts" : 1,
                    "nsInterval" : 10000,
                    "reachableTime" : 0
                  },
                  "enableAutoConfig" : true,
                  "enforceEUI64" : true,
                  "name" : "Port-channel1",
                  "links" : {
                    "self" : "<fmc_host>:<port>/fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/etherchannelinterfaces/etherchannelIntfUUID"
                  },
                  "metadata" : {
                    "timestamp" : 0
                  }
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/FTDEtherChannelInterface"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/etherchannelinterfaces/{objectId}" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves the ethernet channel interface associated with the specified NGFW device ID and interface ID. If no ID is specified, retrieves list of all ethernet channel interfaces associated with the specified NGFW device ID. <div class=\"alert alert-warning\">More details on netmod events(out of sync interfaces):<b> GET /interfaceevents</b></div>**",
        "operationId" : "getFTDEtherChannelInterface",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a ethernet channel interface.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDEtherChannelInterface"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/etherchannelinterfaces/etherChannelIntfUUID1 ( Success: Test GET method for fp physical interface )" : {
                  "metadata" : {
                    "timestamp" : 1462814173120,
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUUID"
                    }
                  },
                  "links" : {
                    "self" : "/fmc_config/v1/domain/default/devices/devicerecords/containerUUID/etherchannelinterfaces/etherChannelIntfUUID1"
                  },
                  "type" : "EtherChannelInterface",
                  "mode" : "NONE",
                  "lacpMode" : "ACTIVE",
                  "lacpRate" : "DEFAULT",
                  "maxActivePhysicalInterface" : 8,
                  "minActivePhysicalInterface" : 1,
                  "selectedInterfaces" : [ {
                    "type" : "PhysicalInterface",
                    "name" : "GigabitEthernet1/4",
                    "id" : "interface UUID"
                  }, {
                    "type" : "PhysicalInterface",
                    "name" : "GigabitEthernet1/5",
                    "id" : "interface UUID"
                  } ],
                  "hardware" : {
                    "duplex" : "AUTO",
                    "speed" : "AUTO"
                  },
                  "loadBalancing" : "SRC_IP_PORT",
                  "etherChannelId" : 1,
                  "enabled" : true,
                  "MTU" : 1500,
                  "managementOnly" : false,
                  "securityZone" : {
                    "id" : "securityZoneUUID",
                    "type" : "SecurityZone"
                  },
                  "ifname" : "NewEthChannel",
                  "enableAntiSpoofing" : false,
                  "enableSGTPropagate" : true,
                  "overrideDefaultFragmentSetting" : { },
                  "ipv4" : {
                    "static" : {
                      "address" : "10.20.25.10",
                      "netmask" : "24"
                    }
                  },
                  "ipv6" : {
                    "prefixes" : [ {
                      "advertisement" : {
                        "offlink" : false,
                        "autoConfig" : true,
                        "preferLifeTime" : {
                          "duration" : {
                            "preferLifeTime" : 604800,
                            "validLifeTime" : 2592000
                          }
                        }
                      }
                    } ],
                    "enableAutoConfig" : true,
                    "enforceEUI64" : true,
                    "enableIPV6" : true,
                    "enableDHCPAddrConfig" : true,
                    "enableDHCPNonAddrConfig" : true,
                    "dadAttempts" : 1,
                    "nsInterval" : 1000,
                    "reachableTime" : 13,
                    "enableRA" : true,
                    "raLifeTime" : 1800,
                    "raInterval" : 26,
                    "addresses" : [ {
                      "address" : "2002::/128",
                      "enforceEUI64" : true
                    } ]
                  },
                  "name" : "Port-channel1",
                  "id" : "etherChannelIntfUUID1"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves the ethernet channel interface associated with the specified NGFW device ID and interface ID. If no ID is specified, retrieves list of all ethernet channel interfaces associated with the specified NGFW device ID. <div class=\"alert alert-warning\">More details on netmod events(out of sync interfaces):<b> GET /interfaceevents</b></div> _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateFTDEtherChannelInterface",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a ethernet channel interface.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The input ethernet channel interface model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FTDEtherChannelInterface"
          }
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDEtherChannelInterface"
            },
            "examples" : { }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/FTDEtherChannelInterface"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves the ethernet channel interface associated with the specified NGFW device ID and interface ID. If no ID is specified, retrieves list of all ethernet channel interfaces associated with the specified NGFW device ID. <div class=\"alert alert-warning\">More details on netmod events(out of sync interfaces):<b> GET /interfaceevents</b></div> _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteFTDEtherChannelInterface",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a ethernet channel interface.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDEtherChannelInterface"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/etherchannelinterfaces/etherchannelIntfUUID ( Success: Test DELETE method for ether channel interface )" : {
                  "type" : "EtherChannelInterface",
                  "mode" : "NONE",
                  "lacpMode" : "ACTIVE",
                  "lacpRate" : "DEFAULT",
                  "maxActivePhysicalInterface" : 8,
                  "minActivePhysicalInterface" : 1,
                  "selectedInterfaces" : [ {
                    "type" : "PhysicalInterface",
                    "name" : "GigabitEthernet0/0",
                    "id" : "interface UUID"
                  } ],
                  "hardware" : {
                    "duplex" : "AUTO",
                    "speed" : "AUTO"
                  },
                  "loadBalancing" : "SRC_IP_PORT",
                  "etherChannelId" : 1,
                  "enabled" : true,
                  "MTU" : 1500,
                  "managementOnly" : false,
                  "securityZone" : {
                    "id" : "securityZoneUUID",
                    "type" : "SecurityZone"
                  },
                  "ifname" : "NewEthChannel",
                  "enableAntiSpoofing" : false,
                  "enableSGTPropagate" : true,
                  "overrideDefaultFragmentSetting" : { },
                  "ipv4" : {
                    "static" : {
                      "address" : "1.2.3.5",
                      "netmask" : "25"
                    }
                  },
                  "ipv6" : {
                    "addresses" : [ {
                      "address" : "9090::",
                      "prefix" : "12"
                    } ],
                    "dadAttempts" : 1,
                    "nsInterval" : 10000,
                    "reachableTime" : 0
                  },
                  "name" : "Port-channel1",
                  "id" : "etherChannelIntfUUID1"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/fpinterfacestatistics" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves list of statistics for all interfaces associated with the specified NGIPS device ID.**",
        "operationId" : "getFPInterfaceStatistics",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FPInterfaceStatisticsListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/fpinterfacestatistics ( Success: Test GET ALL success )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/fpinterfacestatistics?offset=0&limit=4"
                  },
                  "items" : [ {
                    "name" : "s1p1",
                    "type" : "FPInterfaceStatistics"
                  }, {
                    "name" : "s1p2",
                    "type" : "FPInterfaceStatistics"
                  }, {
                    "name" : "s1p3",
                    "type" : "FPInterfaceStatistics"
                  }, {
                    "name" : "s1p4",
                    "type" : "FPInterfaceStatistics"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 4,
                    "count" : 4,
                    "pages" : 1
                  }
                },
                "Response Example 2 :GET /fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/fpinterfacestatistics?expanded=true ( Success: Test GET ALL success with expanded=true )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/fpinterfacestatistics?offset=0&limit=4"
                  },
                  "items" : [ {
                    "name" : "s1p2",
                    "type" : "FPInterfaceStatistics",
                    "droppedPackets" : 0,
                    "interfaceUuid" : "interfaceUUID",
                    "rxBytes" : 90194635,
                    "txBytes" : 0
                  }, {
                    "name" : "s1p3",
                    "type" : "FPInterfaceStatistics",
                    "droppedPackets" : 0,
                    "interfaceUuid" : "interfaceUUID",
                    "rxBytes" : 0,
                    "txBytes" : 0
                  }, {
                    "name" : "s1p1",
                    "type" : "FPInterfaceStatistics",
                    "droppedPackets" : 0,
                    "interfaceUuid" : "interfaceUUID",
                    "rxBytes" : 0,
                    "txBytes" : 0
                  }, {
                    "name" : "s1p4",
                    "type" : "FPInterfaceStatistics",
                    "droppedPackets" : 0,
                    "interfaceUuid" : "interfaceUUID",
                    "rxBytes" : 462336,
                    "txBytes" : 196
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 4,
                    "count" : 4,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/fplogicalinterfaces" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves, deletes, creates, or modifies the logical interface associated with the specified NGIPS device ID and interface ID. If no ID is specified, retrieves list of all logical interfaces associated with the specified NGIPS device ID.**",
        "operationId" : "getAllFPLogicalInterface",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FPLogicalInterfaceListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/fplogicalinterfaces ( Success: Test GET ALL success )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/fplogicalinterfaces?offset=0&limit=3"
                  },
                  "items" : [ {
                    "name" : "s1p3.1",
                    "id" : "1",
                    "type" : "FPLogicalInterface",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/fplogicalinterfaces/fplogicalinterfaceUUID1"
                    }
                  }, {
                    "name" : "s1p4.2",
                    "id" : "fplogicalinterfaceUUID2",
                    "type" : "FPLogicalInterface",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/fplogicalinterfaces/fplogicalinterfaceUUID2"
                    }
                  }, {
                    "name" : "hybrid_1",
                    "id" : "fplogicalinterfaceUUID3",
                    "type" : "FPLogicalInterface",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/fplogicalinterfaces/fplogicalinterfaceUUID3"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 3,
                    "count" : 3,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/fplogicalinterfaces?expanded=true ( Success: Test GET ALL success with expanded=true )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/fplogicalinterfaces?offset=0&limit=4"
                  },
                  "items" : [ {
                    "name" : "s1p3.1",
                    "type" : "FPLogicalInterface",
                    "id" : "fplogicalinterfaceUUID3",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/fplogicalinterfaces/fplogicalinterfaceUUID3"
                    },
                    "enabled" : 1,
                    "mdi" : "auto",
                    "mode" : "autoneg",
                    "mtu" : 1518,
                    "interfaceType" : "SWITCHED",
                    "physicalInterface" : {
                      "name" : "s1p3"
                    },
                    "vlanTag" : 1,
                    "metadata" : {
                      "readOnly" : {
                        "state" : false
                      },
                      "timestamp" : 1458597038,
                      "lastUser" : {
                        "name" : "admin",
                        "id" : "UserUUID",
                        "type" : "user"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "DomainUUID",
                        "type" : "domain"
                      },
                      "activity" : 0,
                      "link" : 0,
                      "speed" : -1
                    }
                  }, {
                    "name" : "s1p4.2",
                    "type" : "FPLogicalInterface",
                    "id" : "fplogicalinterfaceUUID2",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/fplogicalinterfaces/fplogicalinterfaceUUID2"
                    },
                    "enabled" : 1,
                    "mdi" : "auto",
                    "mode" : "autoneg",
                    "ipAddresses" : [ "10.2.2.2/13" ],
                    "staticArpEntries" : [ {
                      "ip" : "10.1.20.30",
                      "mac" : "12:83:53:49:a2:c2"
                    } ],
                    "mtu" : 1518,
                    "interfaceType" : "ROUTED",
                    "physicalInterface" : {
                      "name" : "s1p4"
                    },
                    "vlanTag" : 2,
                    "metadata" : {
                      "readOnly" : {
                        "state" : false
                      },
                      "timestamp" : 1458597048,
                      "lastUser" : {
                        "name" : "admin",
                        "id" : "UserUUID",
                        "type" : "user"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "DomainUUID",
                        "type" : "domain"
                      },
                      "activity" : 0,
                      "link" : 1,
                      "speed" : 1000
                    }
                  }, {
                    "name" : "hybrid_1",
                    "type" : "FPLogicalInterface",
                    "id" : "fplogicalinterfaceUUID3",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/fplogicalinterfaces/fplogicalinterfaceUUID3"
                    },
                    "enabled" : 1,
                    "ipAddresses" : [ "10.1.1.2/18" ],
                    "interfaceType" : "VLAN",
                    "metadata" : {
                      "readOnly" : {
                        "state" : false
                      },
                      "timestamp" : 1458595542,
                      "lastUser" : {
                        "name" : "admin",
                        "id" : "UserUUID",
                        "type" : "user"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "DomainUUID",
                        "type" : "domain"
                      },
                      "activity" : 0,
                      "link" : 0,
                      "speed" : 0
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 3,
                    "count" : 3,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves, deletes, creates, or modifies the logical interface associated with the specified NGIPS device ID and interface ID. If no ID is specified, retrieves list of all logical interfaces associated with the specified NGIPS device ID. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createFPLogicalInterface",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The input logical interface model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FPLogicalInterface"
          }
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/FPLogicalInterface"
            },
            "examples" : { }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/FPLogicalInterface"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/fplogicalinterfaces/{objectId}" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves, deletes, creates, or modifies the logical interface associated with the specified NGIPS device ID and interface ID. If no ID is specified, retrieves list of all logical interfaces associated with the specified NGIPS device ID.**",
        "operationId" : "getFPLogicalInterface",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a logical interface.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FPLogicalInterface"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/fplogicalinterfaces/fplogicalinterfaceUUID ( Success: Test GET method for fp logical interface )" : {
                  "name" : "s1p3.1",
                  "id" : "fplogicalinterfaceUUID",
                  "type" : "FPLogicalInterface",
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/fplogicalinterfaces/fplogicalinterfaceUUID"
                  },
                  "enabled" : 1,
                  "mdi" : "auto",
                  "mode" : "autoneg",
                  "interfaceType" : "SWITCHED",
                  "physicalInterface" : {
                    "name" : "s1p3"
                  },
                  "vlanTag" : 1,
                  "metadata" : {
                    "readOnly" : {
                      "state" : false
                    },
                    "timestamp" : 1458597038,
                    "lastUser" : {
                      "name" : "admin",
                      "id" : "UserUUID",
                      "type" : "user"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "DomainUUID",
                      "type" : "domain"
                    },
                    "activity" : 0,
                    "link" : 0,
                    "speed" : -1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves, deletes, creates, or modifies the logical interface associated with the specified NGIPS device ID and interface ID. If no ID is specified, retrieves list of all logical interfaces associated with the specified NGIPS device ID. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateFPLogicalInterface",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a logical interface.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The input logical interface model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FPLogicalInterface"
          }
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FPLogicalInterface"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/fplogicalinterfaces/fplogicalinterfaceUUID3 ( Test PUT of FP Logical Interface to update record )" : {
                  "name" : "hybrid_1",
                  "type" : "FPLogicalInterface",
                  "id" : "fplogicalinterfaceUUID3",
                  "enabled" : 0,
                  "ipAddresses" : [ "10.1.1.2/18", "10.11.12.13/19" ],
                  "interfaceType" : "VLAN"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/FPLogicalInterface"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves, deletes, creates, or modifies the logical interface associated with the specified NGIPS device ID and interface ID. If no ID is specified, retrieves list of all logical interfaces associated with the specified NGIPS device ID. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteFPLogicalInterface",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a logical interface.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FPLogicalInterface"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/fplogicalinterfaces/fplogicalinterfaceUUID ( Test DELETE of FP Logical Interface to delete a record )" : {
                  "name" : "s1p3.1",
                  "id" : "fplogicalinterfaceUUID",
                  "type" : "FPLogicalInterface",
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/fplogicalinterfaces/fplogicalinterfaceUUID"
                  },
                  "enabled" : 1,
                  "mdi" : "auto",
                  "mode" : "autoneg",
                  "interfaceType" : "SWITCHED",
                  "physicalInterface" : {
                    "name" : "s1p3"
                  },
                  "vlanTag" : 1,
                  "metadata" : {
                    "readOnly" : {
                      "state" : false
                    },
                    "timestamp" : 1458597038,
                    "lastUser" : {
                      "name" : "admin",
                      "id" : "UserUUID",
                      "type" : "user"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "DomainUUID",
                      "type" : "domain"
                    },
                    "activity" : 0,
                    "link" : 0,
                    "speed" : -1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/fpphysicalinterfaces" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves, deletes, creates, or modifies the physical interface associated with the specified NGIPS device ID and interface ID. If no ID is specified, retrieves list of all physical interfaces associated with the specified NGIPS device ID.**",
        "operationId" : "getAllFPPhysicalInterface",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FPPhysicalInterfaceListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/fpphysicalinterfaces ( Success: Test GET ALL success )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/fpphysicalinterfaces?offset=0&limit=4"
                  },
                  "items" : [ {
                    "name" : "s1p1",
                    "id" : "fpphysicalinterfaceUUID1",
                    "type" : "FPPhysicalInterface",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/fpphysicalinterfaces/fpphysicalinterfaceUUID1"
                    }
                  }, {
                    "name" : "s1p2",
                    "id" : "fpphysicalinterfaceUUID2",
                    "type" : "FPPhysicalInterface",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/fpphysicalinterfaces/fpphysicalinterfaceUUID2"
                    }
                  }, {
                    "name" : "s1p3",
                    "id" : "fpphysicalinterfaceUUID3",
                    "type" : "FPPhysicalInterface",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/fpphysicalinterfaces/fpphysicalinterfaceUUID3"
                    }
                  }, {
                    "name" : "s1p4",
                    "id" : "fpphysicalinterfaceUUID4",
                    "type" : "FPPhysicalInterface",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/fpphysicalinterfaces/fpphysicalinterfaceUUID4"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 4,
                    "count" : 4,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/fpphysicalinterfaces?expanded=true ( Success: Test GET ALL success with expanded=true )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/fpphysicalinterfaces?offset=0&limit=4"
                  },
                  "items" : [ {
                    "name" : "s1p1",
                    "type" : "FPPhysicalInterface",
                    "id" : "FPPhysicalInterfaceUUID1",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/fpphysicalinterfaces/FPPhysicalInterfaceUUID1"
                    },
                    "enabled" : 1,
                    "mdi" : "auto",
                    "mode" : "autoneg",
                    "interfaceType" : "INLINE",
                    "metadata" : {
                      "readOnly" : {
                        "state" : false
                      },
                      "timestamp" : 1458595541,
                      "lastUser" : {
                        "name" : "admin",
                        "id" : "UserUUID",
                        "type" : "user"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "DomainUUID",
                        "type" : "domain"
                      },
                      "activity" : 0,
                      "link" : 0,
                      "speed" : -1
                    }
                  }, {
                    "name" : "s1p4",
                    "type" : "FPPhysicalInterface",
                    "id" : "fpphysicalinterfaceUUID2",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/fpphysicalinterfaces/fpphysicalinterfaceUUID2"
                    },
                    "enabled" : 0,
                    "interfaceType" : "NONE",
                    "metadata" : {
                      "readOnly" : {
                        "state" : false
                      },
                      "timestamp" : 1458595541,
                      "lastUser" : {
                        "name" : "admin",
                        "id" : "UserUUID",
                        "type" : "user"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "DomainUUID",
                        "type" : "domain"
                      },
                      "activity" : 0,
                      "link" : 1,
                      "speed" : 1000
                    }
                  }, {
                    "name" : "s1p3",
                    "type" : "FPPhysicalInterface",
                    "id" : "fpphysicalinterfaceUUID3",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/fpphysicalinterfaces/fpphysicalinterfaceUUID3"
                    },
                    "enabled" : 0,
                    "interfaceType" : "NONE",
                    "metadata" : {
                      "readOnly" : {
                        "state" : false
                      },
                      "timestamp" : 1458595541,
                      "lastUser" : {
                        "name" : "admin",
                        "id" : "UserUUID",
                        "type" : "user"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "DomainUUID",
                        "type" : "domain"
                      },
                      "activity" : 0,
                      "link" : 0,
                      "speed" : -1
                    }
                  }, {
                    "name" : "s1p2",
                    "type" : "FPPhysicalInterface",
                    "id" : "fpphysicalinterfaceUUID4",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/fpphysicalinterfaces/fpphysicalinterfaceUUID4"
                    },
                    "enabled" : 1,
                    "mdi" : "auto",
                    "mode" : "autoneg",
                    "interfaceType" : "INLINE",
                    "metadata" : {
                      "readOnly" : {
                        "state" : false
                      },
                      "timestamp" : 1458595541,
                      "lastUser" : {
                        "name" : "admin",
                        "id" : "UserUUID",
                        "type" : "user"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "DomainUUID",
                        "type" : "domain"
                      },
                      "activity" : 0,
                      "link" : 1,
                      "speed" : 1000
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 4,
                    "count" : 4,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/fpphysicalinterfaces/{objectId}" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves, deletes, creates, or modifies the physical interface associated with the specified NGIPS device ID and interface ID. If no ID is specified, retrieves list of all physical interfaces associated with the specified NGIPS device ID.**",
        "operationId" : "getFPPhysicalInterface",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a physical interface.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FPPhysicalInterface"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/fpphysicalinterfaces/fpphysicalinterfaceUUID ( Success: Test GET method for fp physical interface )" : {
                  "name" : "s1p1",
                  "id" : "fpphysicalinterfaceUUID1",
                  "type" : "FPPhysicalInterface",
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/fpphysicalinterfaces/fpphysicalinterfaceUUID"
                  },
                  "enabled" : 1,
                  "mdi" : "auto",
                  "mode" : "autoneg",
                  "interfaceType" : "INLINE",
                  "metadata" : {
                    "readOnly" : {
                      "state" : true
                    },
                    "timestamp" : 1458595541,
                    "lastUser" : {
                      "name" : "admin",
                      "id" : "UserUUID",
                      "type" : "user"
                    },
                    "domain" : {
                      "name" : "TestDomain",
                      "id" : "DomainUUID",
                      "type" : "domain"
                    },
                    "activity" : 0,
                    "link" : 0,
                    "speed" : -1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves, deletes, creates, or modifies the physical interface associated with the specified NGIPS device ID and interface ID. If no ID is specified, retrieves list of all physical interfaces associated with the specified NGIPS device ID. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateFPPhysicalInterface",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a physical interface.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The input physical interface model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FPPhysicalInterface"
          }
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FPPhysicalInterface"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/fpphysicalinterfaces/fpphysicalinterfaceUUID2 ( Test PUT of FP Physical Interface to update record )" : {
                  "name" : "s1p4",
                  "type" : "FPPhysicalInterface",
                  "id" : "fpphysicalinterfaceUUID2",
                  "enabled" : 1,
                  "interfaceType" : "INLINE"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/FPPhysicalInterface"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/inlinesets" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves, deletes, creates, or modifies the inline set associated with the specified NGIPS device ID and inline set ID. If no inline set ID is specified, retrieves list of all inline sets associated with the specified NGIPS device ID.**",
        "operationId" : "getAllInlineSet",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/InlineSetListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/inlinesets ( Success: Test GET ALL success )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/inlinesets?offset=0&limit=1"
                  },
                  "items" : [ {
                    "name" : "Default Inline Set",
                    "id" : "inlinesetUUID",
                    "type" : "InlineSet",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/inlinesets/inlinesetUUID"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/inlinesets?expanded=true ( Success: Test GET ALL success with expanded=true )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/inlinesets?offset=0&limit=1"
                  },
                  "items" : [ {
                    "name" : "Default Inline Set",
                    "id" : "inlinesetUUID",
                    "type" : "InlineSet",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/inlinesets/inlinesetUUID"
                    },
                    "failSafe" : false,
                    "failopen" : true,
                    "macFiltering" : false,
                    "inlinepairs" : [ {
                      "first" : {
                        "name" : "s1p1",
                        "type" : "FPPhysicalInterface",
                        "id" : "FPPhysicalInterfaceUUID1"
                      },
                      "second" : {
                        "name" : "s1p2",
                        "type" : "FPPhysicalInterface",
                        "id" : "FPPhysicalInterfaceUUID2"
                      }
                    } ],
                    "loadBalancingMode" : "inner",
                    "loadBalancingModeVlan" : "inner",
                    "mtu" : 1518,
                    "propogateLinkState" : false,
                    "strictTCPEnforcement" : false,
                    "metadata" : {
                      "readOnly" : {
                        "state" : false
                      },
                      "timestamp" : 1458595542,
                      "lastUser" : {
                        "name" : "admin",
                        "id" : "UserUUID",
                        "type" : "user"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "DomainUUID",
                        "type" : "domain"
                      }
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves, deletes, creates, or modifies the inline set associated with the specified NGIPS device ID and inline set ID. If no inline set ID is specified, retrieves list of all inline sets associated with the specified NGIPS device ID. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createInlineSet",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The input inline set model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/InlineSet"
          }
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/InlineSet"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/inlinesets ( Test POST of Inlineset to add a record )" : {
                  "name" : "Inline_Set_1",
                  "type" : "InlineSet",
                  "bypass" : true,
                  "standBy" : true,
                  "failSafe" : true,
                  "failopen" : true,
                  "macFiltering" : false,
                  "inlinepairs" : [ {
                    "first" : {
                      "name" : "s1p3",
                      "type" : "FPPhysicalInterface",
                      "id" : "FPPhysicalInterfaceUUID3"
                    },
                    "second" : {
                      "name" : "s1p4",
                      "type" : "FPPhysicalInterface",
                      "id" : "FPPhysicalInterfaceUUID4"
                    }
                  } ],
                  "loadBalancingMode" : "inner",
                  "loadBalancingModeVlan" : "inner",
                  "mtu" : 1518,
                  "propogateLinkState" : true,
                  "strictTCPEnforcement" : true
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/InlineSet"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/inlinesets/{objectId}" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves, deletes, creates, or modifies the inline set associated with the specified NGIPS device ID and inline set ID. If no inline set ID is specified, retrieves list of all inline sets associated with the specified NGIPS device ID.**",
        "operationId" : "getInlineSet",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of an inline set.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/InlineSet"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/inlinesets/inlinesetUUID ( Success: Test GET method for inlinesets )" : {
                  "name" : "Default Inline Set",
                  "id" : "inlinesetUUID",
                  "type" : "InlineSet",
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/inlinesets/inlinesetUUID"
                  },
                  "failSafe" : false,
                  "failopen" : true,
                  "macFiltering" : false,
                  "inlinepairs" : [ {
                    "first" : {
                      "name" : "s1p1",
                      "type" : "FPPhysicalInterface",
                      "id" : "FPPhysicalInterfaceUUID1"
                    },
                    "second" : {
                      "name" : "s1p2",
                      "type" : "FPPhysicalInterface",
                      "id" : "FPPhysicalInterfaceUUID2"
                    }
                  } ],
                  "loadBalancingMode" : "inner",
                  "loadBalancingModeVlan" : "inner",
                  "mtu" : 1518,
                  "propogateLinkState" : false,
                  "strictTCPEnforcement" : false,
                  "metadata" : {
                    "readOnly" : {
                      "state" : false
                    },
                    "timestamp" : 1458595542,
                    "lastUser" : {
                      "name" : "admin",
                      "id" : "UserUUID",
                      "type" : "user"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "DomainUUID",
                      "type" : "domain"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves, deletes, creates, or modifies the inline set associated with the specified NGIPS device ID and inline set ID. If no inline set ID is specified, retrieves list of all inline sets associated with the specified NGIPS device ID. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateInlineSet",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of an inline set.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The input inline set model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/InlineSet"
          }
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/InlineSet"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/inlinesets/inlinesetUUID ( Test PUT of Inline set to update record )" : {
                  "name" : "Default Inline Set",
                  "id" : "inlinesetUUID",
                  "type" : "InlineSet",
                  "bypass" : true,
                  "standBy" : true,
                  "failSafe" : true,
                  "failopen" : true,
                  "macFiltering" : false,
                  "inlinepairs" : [ {
                    "first" : {
                      "name" : "s1p1",
                      "type" : "FPPhysicalInterface",
                      "id" : "FPPhysicalInterfaceUUID1"
                    },
                    "second" : {
                      "name" : "s1p2",
                      "type" : "FPPhysicalInterface",
                      "id" : "FPPhysicalInterfaceUUID2"
                    }
                  } ],
                  "loadBalancingMode" : "inner",
                  "loadBalancingModeVlan" : "inner",
                  "mtu" : 1518,
                  "propogateLinkState" : true,
                  "strictTCPEnforcement" : true
                },
                "Request example 2 : PUT /fmc_config/v1/domain/DomainUUID/devices/devicerecords/FTDcontainerUUID/inlinesets/FTDinlinesetUUID ( Test PUT of FTD Inline set to update record )" : {
                  "name" : "FTDInline1",
                  "id" : "FTDinlinesetUUID",
                  "type" : "InlineSet",
                  "failOpenSnortDown" : true,
                  "failOpenSnortBusy" : false,
                  "bypass" : true,
                  "standBy" : false,
                  "inlinepairs" : [ {
                    "first" : {
                      "name" : "phy1",
                      "type" : "PhysicalInterface",
                      "id" : "PhysicalInterfaceUUID1"
                    },
                    "second" : {
                      "name" : "phy2",
                      "type" : "PhysicalInterface",
                      "id" : "PhysicalInterfaceUUID2"
                    }
                  } ],
                  "mtu" : 1518,
                  "propogateLinkState" : true,
                  "strictTCPEnforcement" : true
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/InlineSet"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves, deletes, creates, or modifies the inline set associated with the specified NGIPS device ID and inline set ID. If no inline set ID is specified, retrieves list of all inline sets associated with the specified NGIPS device ID. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteInlineSet",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of an inline set.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/InlineSet"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/inlinesets/inlinesetUUID ( Test DELETE of InlineSets )" : {
                  "name" : "Default Inline Set",
                  "id" : "inlinesetUUID",
                  "type" : "InlineSet",
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/inlinesets/inlinesetUUID"
                  },
                  "failSafe" : false,
                  "failopen" : true,
                  "macFiltering" : false,
                  "inlinepairs" : [ {
                    "first" : {
                      "name" : "s1p1",
                      "type" : "FPPhysicalInterface",
                      "id" : "FPPhysicalInterfaceUUID1"
                    },
                    "second" : {
                      "name" : "s1p2",
                      "type" : "FPPhysicalInterface",
                      "id" : "FPPhysicalInterfaceUUID2"
                    }
                  } ],
                  "loadBalancingMode" : "inner",
                  "loadBalancingModeVlan" : "inner",
                  "mtu" : 1518,
                  "propogateLinkState" : false,
                  "strictTCPEnforcement" : false,
                  "metadata" : {
                    "readOnly" : {
                      "state" : false
                    },
                    "timestamp" : 1458595542,
                    "lastUser" : {
                      "name" : "admin",
                      "id" : "UserUUID",
                      "type" : "user"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "DomainUUID",
                      "type" : "domain"
                    }
                  }
                },
                "Response Example 2 :DELETE /fmc_config/v1/domain/DomainUUID/devices/devicerecords/FTDcontainerUUID/inlinesets/FTDinlinesetUUID ( Test DELETE of FTD InlineSets )" : {
                  "name" : "Inline1",
                  "id" : "inlinesetUUID",
                  "type" : "InlineSet",
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/devices/devicerecords/FTDcontainerUUID/inlinesets/FTDinlinesetUUID"
                  },
                  "failSafe" : false,
                  "inlinepairs" : [ {
                    "first" : {
                      "name" : "s1p1",
                      "type" : "PhysicalInterface",
                      "id" : "FPPhysicalInterfaceUUID1"
                    },
                    "second" : {
                      "name" : "s1p2",
                      "type" : "PhysicalInterface",
                      "id" : "FPPhysicalInterfaceUUID2"
                    }
                  } ],
                  "mtu" : 1518,
                  "propogateLinkState" : false,
                  "strictTCPEnforcement" : false,
                  "tapMode" : false,
                  "metadata" : {
                    "readOnly" : {
                      "state" : false
                    },
                    "timestamp" : 1458595542,
                    "lastUser" : {
                      "name" : "admin",
                      "id" : "UserUUID",
                      "type" : "user"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "DomainUUID",
                      "type" : "domain"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/interfaceevents" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves list of all netmod events on the device.**",
        "operationId" : "getInterfaceEvent",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/InterfaceEventListContainer"
            },
            "examples" : { }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves list of all netmod events on the device. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createInterfaceEvent",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The input representing action to be performed on netmod events.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/InterfaceEvent"
          }
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/InterfaceEvent"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/interfaceevents ( Accept netmod events )" : {
                  "action" : "SYNC_WITH_DEVICE"
                },
                "Request example 2 : POST /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/interfaceevents ( Accept netmod events )" : {
                  "action" : "ACCEPT_CHANGES"
                },
                "Response Example 1 :POST /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/interfaceevents ( Accept netmod events )" : {
                  "action" : "SYNC_WITH_DEVICE",
                  "hasPendingChanges" : false
                },
                "Response Example 2 :POST /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/interfaceevents ( Accept netmod events )" : {
                  "action" : "ACCEPT_CHANGES"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/InterfaceEvent"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/operational/commands" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves the show command output from the device. Make sure the minimum device version required for using commands api is >= 6.6.0.<br/> This api supports multi threading. Only 1 request can be handled per device concurrently and across devices upto 10 devices are supported by commands api concurrently.**",
        "operationId" : "getCommands",
        "parameters" : [ {
          "name" : "command",
          "in" : "query",
          "description" : "The command filter query parameter should have value of show commands. The maximum word size of this field is 2. For eg: show interface, show running-config etc.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "parameters",
          "in" : "query",
          "description" : "The parameters filter query parameter should have values containing command values exceeding word size of 2 should be given as part of parameters field. For eg: ip brief, vpn etc.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/CommandsListContainer"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/operational/metrics" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves HealthMonitor metrics for the device.**",
        "operationId" : "getHealthMonitorModel",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "The metric filter query parameter should have healthmonitor name.Currently supports only <code>metric:memory & metric:cpu</code>",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/HealthMonitorModelListContainer"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/physicalinterfaces" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves the physical interface associated with the specified NGFW device ID and interface ID. If no interface ID is specified, retrieves list of all physical interfaces associated with the specified NGFW device ID. <div class=\"alert alert-warning\">More details on netmod events(out of sync interfaces):<b> GET /interfaceevents</b></div>**",
        "operationId" : "getAllFTDPhysicalInterface",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDPhysicalInterfaceListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/default/devices/devicerecords/containerUUID/physicalinterfaces ( GET ALL for FTD physicalinterface without any query parameters )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/default/devices/devicerecords/deviceUUID/physicalinterfaces?offset=0&limit=4"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/default/devices/devicerecords/deviceUUID/physicalinterfaces/PhyIntfId1"
                    },
                    "name" : "GigabitEthernet1/1",
                    "id" : "PhyIntfId1"
                  }, {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/default/devices/devicerecords/deviceUUID/physicalinterfaces/PhyIntfId2"
                    },
                    "name" : "GigabitEthernet1/2",
                    "id" : "PhyIntfId2"
                  }, {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/default/devices/devicerecords/deviceUUID/physicalinterfaces/PhyIntfId3"
                    },
                    "name" : "GigabitEthernet1/3",
                    "id" : "PhyIntfId3"
                  }, {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/default/devices/devicerecords/deviceUUID/physicalinterfaces/PhyIntfId4"
                    },
                    "name" : "GigabitEthernet1/4",
                    "id" : "PhyIntfId4"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 4,
                    "count" : 4,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/default/devices/devicerecords/containerUUID/physicalinterfaces?expanded=true ( GET ALL for FTD physicalinterface with expanded=true )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/default/devices/devicerecords/deviceUUID/physicalinterfaces?offset=0&limit=4"
                  },
                  "items" : [ {
                    "metadata" : {
                      "timestamp" : 1467048332483,
                      "domain" : {
                        "name" : "Global",
                        "id" : "Global_UUID"
                      },
                      "_comment" : "Supported speed will be available only for 2100 series devices",
                      "supportedSpeed" : "HUNDRED,TEN,THOUSAND,AUTO"
                    },
                    "links" : {
                      "self" : "/fmc_config/v1/domain/default/devices/devicerecords/deviceUUID/physicalinterfaces/PhyIntfId1"
                    },
                    "type" : "PhysicalInterface",
                    "mode" : "INLINE",
                    "hardware" : {
                      "duplex" : "AUTO",
                      "speed" : "AUTO"
                    },
                    "powerOverEthernet" : {
                      "consumptionWattage" : 0,
                      "state" : true
                    },
                    "enabled" : false,
                    "description" : "Interface description",
                    "MTU" : 1500,
                    "managementOnly" : false,
                    "securityZone" : {
                      "id" : "SecZoneUUID1",
                      "type" : "SecurityZone"
                    },
                    "ifname" : "Intf1",
                    "enableAntiSpoofing" : false,
                    "enableSGTPropagate" : true,
                    "managementAccess" : false,
                    "overrideDefaultFragmentSetting" : { },
                    "ipv4" : { },
                    "ipv6" : { },
                    "name" : "GigabitEthernet1/1",
                    "id" : "PhyIntfId1"
                  }, {
                    "metadata" : {
                      "timestamp" : 1467048332483,
                      "domain" : {
                        "name" : "Global",
                        "id" : "Global_UUID"
                      },
                      "_comment" : "Supported speed will be available only for 2100 series devices",
                      "supportedSpeed" : "HUNDRED,TEN,THOUSAND,AUTO"
                    },
                    "links" : {
                      "self" : "/fmc_config/v1/domain/default/devices/devicerecords/deviceUUID/physicalinterfaces/PhyIntfId2"
                    },
                    "type" : "PhysicalInterface",
                    "mode" : "INLINE",
                    "hardware" : {
                      "duplex" : "FULL",
                      "speed" : "THOUSAND"
                    },
                    "powerOverEthernet" : {
                      "consumptionWattage" : 0,
                      "state" : true
                    },
                    "enabled" : false,
                    "description" : "Interface description",
                    "MTU" : 1500,
                    "managementOnly" : false,
                    "securityZone" : {
                      "id" : "SecZoneUUID2",
                      "type" : "SecurityZone"
                    },
                    "ifname" : "Intf2",
                    "enableAntiSpoofing" : false,
                    "enableSGTPropagate" : true,
                    "managementAccess" : false,
                    "overrideDefaultFragmentSetting" : { },
                    "ipv4" : { },
                    "ipv6" : { },
                    "name" : "GigabitEthernet1/2",
                    "id" : "PhyIntfId2"
                  }, {
                    "metadata" : {
                      "timestamp" : 1467048332483,
                      "domain" : {
                        "name" : "Global",
                        "id" : "Global_UUID"
                      },
                      "_comment" : "Supported speed will be available only for 2100 series devices",
                      "supportedSpeed" : "HUNDRED,TEN,THOUSAND,AUTO"
                    },
                    "links" : {
                      "self" : "/fmc_config/v1/domain/default/devices/devicerecords/deviceUUID/physicalinterfaces/PhyIntfId3"
                    },
                    "type" : "PhysicalInterface",
                    "mode" : "PASSIVE",
                    "hardware" : {
                      "duplex" : "AUTO",
                      "speed" : "AUTO"
                    },
                    "powerOverEthernet" : {
                      "consumptionWattage" : 0,
                      "state" : true
                    },
                    "enabled" : true,
                    "description" : "Interface description",
                    "MTU" : 1500,
                    "managementOnly" : false,
                    "securityZone" : {
                      "id" : "SecZoneUUID3",
                      "type" : "SecurityZone"
                    },
                    "ifname" : "PassiveIntf",
                    "enableAntiSpoofing" : false,
                    "enableSGTPropagate" : true,
                    "managementAccess" : false,
                    "overrideDefaultFragmentSetting" : { },
                    "ipv4" : { },
                    "ipv6" : { },
                    "name" : "GigabitEthernet1/3",
                    "id" : "PhyIntfId3"
                  }, {
                    "metadata" : {
                      "timestamp" : 1467048408466,
                      "domain" : {
                        "name" : "Global",
                        "id" : "Global_UUID"
                      },
                      "_comment" : "Supported speed will be available only for 2100 series devices",
                      "supportedSpeed" : "HUNDRED,TEN,THOUSAND,AUTO"
                    },
                    "links" : {
                      "self" : "/fmc_config/v1/domain/default/devices/devicerecords/deviceUUID/physicalinterfaces/PhyIntfId4"
                    },
                    "type" : "PhysicalInterface",
                    "mode" : "ERSPAN",
                    "isRedundantMember" : false,
                    "erspanSourceIP" : "10.20.30.50",
                    "erspanFlowId" : 1,
                    "hardware" : {
                      "duplex" : "AUTO",
                      "speed" : "AUTO"
                    },
                    "powerOverEthernet" : {
                      "consumptionWattage" : 0,
                      "state" : true
                    },
                    "enabled" : false,
                    "description" : "Interface description",
                    "MTU" : 1500,
                    "managementOnly" : false,
                    "securityZone" : {
                      "id" : "SecZoneUUID4",
                      "type" : "SecurityZone"
                    },
                    "ifname" : "ErspanTest",
                    "enableAntiSpoofing" : false,
                    "enableSGTPropagate" : true,
                    "managementAccess" : false,
                    "overrideDefaultFragmentSetting" : { },
                    "ipv4" : {
                      "static" : {
                        "address" : "10.20.30.40",
                        "netmask" : "24"
                      }
                    },
                    "ipv6" : { },
                    "name" : "GigabitEthernet1/4",
                    "id" : "PhyIntfId4"
                  }, {
                    "metadata" : {
                      "timestamp" : "1467048332483",
                      "domain" : {
                        "name" : "Global",
                        "id" : "Global_UUID"
                      },
                      "isSupervisorProvisioned" : "false"
                    },
                    "links" : {
                      "self" : "/fmc_config/v1/domain/default/devices/devicerecords/deviceUUID/physicalinterfaces/PhyIntfId5"
                    },
                    "type" : "PhysicalInterface",
                    "mode" : "SWITCHPORT",
                    "id" : "InterfaceUUID",
                    "enabled" : false,
                    "description" : "Interface description",
                    "name" : "GigabitEthernet0/5",
                    "switchPortConfig" : {
                      "portMode" : "ACCESS",
                      "accessModeVlanId" : 2,
                      "protectedEnabled" : true
                    },
                    "powerOverEthernet" : {
                      "consumptionWattage" : 0,
                      "state" : true
                    }
                  }, {
                    "metadata" : {
                      "timestamp" : "1467048332483",
                      "domain" : {
                        "name" : "Global",
                        "id" : "Global_UUID"
                      },
                      "isSupervisorProvisioned" : "false"
                    },
                    "links" : {
                      "self" : "/fmc_config/v1/domain/default/devices/devicerecords/deviceUUID/physicalinterfaces/PhyIntfId6"
                    },
                    "type" : "PhysicalInterface",
                    "mode" : "SWITCHPORT",
                    "id" : "InterfaceUUID",
                    "enabled" : false,
                    "description" : "Interface description",
                    "name" : "GigabitEthernet0/1",
                    "switchPortConfig" : {
                      "portMode" : "TRUNK",
                      "trunkModeAllowedVlanIds" : "2-10",
                      "trunkModeNativeVlanId" : 1,
                      "protectedEnabled" : true
                    },
                    "powerOverEthernet" : {
                      "consumptionWattage" : 0,
                      "state" : true
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 4,
                    "count" : 4,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/physicalinterfaces/{objectId}" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves the physical interface associated with the specified NGFW device ID and interface ID. If no interface ID is specified, retrieves list of all physical interfaces associated with the specified NGFW device ID. <div class=\"alert alert-warning\">More details on netmod events(out of sync interfaces):<b> GET /interfaceevents</b></div>**",
        "operationId" : "getFTDPhysicalInterface",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a NGFW physical interface.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDPhysicalInterface"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/default/devices/devicerecords/containerUUID/physicalinterfaces/PhyIntfId1 ( GET method for FTD physical interface for a given UUID )" : {
                  "metadata" : {
                    "timestamp" : 1467048332483,
                    "domain" : {
                      "name" : "Global",
                      "id" : "Global_UUID"
                    },
                    "_comment" : "Supported speed will be available only for 2100 series devices",
                    "supportedSpeed" : "HUNDRED,TEN,THOUSAND,AUTO"
                  },
                  "links" : {
                    "self" : "/fmc_config/v1/domain/default/devices/devicerecords/deviceUUID/physicalinterfaces/PhyIntfId1"
                  },
                  "type" : "PhysicalInterface",
                  "mode" : "INLINE",
                  "hardware" : {
                    "duplex" : "AUTO",
                    "speed" : "AUTO"
                  },
                  "powerOverEthernet" : {
                    "consumptionWattage" : 0,
                    "state" : true
                  },
                  "enabled" : false,
                  "description" : "Interface description",
                  "MTU" : 1500,
                  "managementOnly" : false,
                  "securityZone" : {
                    "id" : "SecZoneUUID1",
                    "type" : "SecurityZone"
                  },
                  "ifname" : "Intf1",
                  "enableAntiSpoofing" : false,
                  "enableSGTPropagate" : true,
                  "managementAccess" : false,
                  "overrideDefaultFragmentSetting" : { },
                  "ipv4" : { },
                  "ipv6" : { },
                  "name" : "GigabitEthernet1/1",
                  "id" : "PhyIntfId1"
                },
                "Response Example 2 :GET /fmc_config/v1/domain/default/devices/devicerecords/containerUUID/physicalinterfaces/PhyIntfId1 ( GET method for FTD physical interface for a given UUID on a FMC Access enabled device (6.7.0 or later) )" : {
                  "metadata" : {
                    "timestamp" : 1467048332483,
                    "domain" : {
                      "name" : "Global",
                      "id" : "Global_UUID"
                    },
                    "_comment" : "Supported speed will be available only for 2100 series devices",
                    "supportedSpeed" : "HUNDRED,TEN,THOUSAND,AUTO"
                  },
                  "links" : {
                    "self" : "/fmc_config/v1/domain/default/devices/devicerecords/deviceUUID/physicalinterfaces/PhyIntfId1"
                  },
                  "type" : "PhysicalInterface",
                  "mode" : "INLINE",
                  "hardware" : {
                    "duplex" : "AUTO",
                    "speed" : "AUTO"
                  },
                  "powerOverEthernet" : {
                    "consumptionWattage" : 0,
                    "state" : true
                  },
                  "fmcAccessConfig" : {
                    "enableAccess" : true,
                    "allowedNetworks" : [ {
                      "type" : "Network",
                      "name" : "any-ipv4",
                      "id" : "cb7116e8-66a6-480b-8f9b-295191a0940a"
                    } ]
                  },
                  "enabled" : false,
                  "description" : "Interface description",
                  "MTU" : 1500,
                  "managementOnly" : false,
                  "securityZone" : {
                    "id" : "SecZoneUUID1",
                    "type" : "SecurityZone"
                  },
                  "ifname" : "outside",
                  "enableAntiSpoofing" : false,
                  "enableSGTPropagate" : true,
                  "managementAccess" : false,
                  "overrideDefaultFragmentSetting" : { },
                  "ipv4" : {
                    "dhcp" : {
                      "enableDefaultRouteDHCP" : "true",
                      "dhcpRouteMetric" : 1
                    }
                  },
                  "ipv6" : { },
                  "name" : "GigabitEthernet1/1",
                  "id" : "PhyIntfId1"
                },
                "Response Example 3 :GET /fmc_config/v1/domain/default/devices/devicerecords/containerUUID/physicalinterfaces/PhyIntfId1 ( GET method for FTD physical interface for a given UUID: SSP provisioned Instance device's interface )" : {
                  "metadata" : {
                    "timestamp" : "1467048332483",
                    "domain" : {
                      "name" : "Global",
                      "id" : "Global_UUID"
                    },
                    "isSupervisorProvisioned" : "true"
                  },
                  "links" : {
                    "self" : "/fmc_config/v1/domain/default/devices/devicerecords/deviceUUID/physicalinterfaces/PhyIntfId1"
                  },
                  "type" : "PhysicalInterface",
                  "mode" : "NONE",
                  "enabled" : "true",
                  "description" : "Interface description",
                  "MTU" : "1500",
                  "fragmentReassembly" : "false",
                  "ifname" : "diagnostic",
                  "enableAntiSpoofing" : "false",
                  "enableSGTPropagate" : true,
                  "managementAccess" : false,
                  "ipv6" : {
                    "enableRA" : "true",
                    "raLifeTime" : "1800",
                    "raInterval" : "200"
                  },
                  "managementOnly" : "true",
                  "name" : "Ethernet1/1",
                  "id" : "005056A9-6FB0-0ed3-0000-064424510716"
                },
                "Response Example 4 :GET /fmc_config/v1/domain/default/devices/devicerecords/containerUUID/physicalinterfaces/PhyIntfIds ( GET method for FTD physical interface for a given UUID: TRUNK mode Interface in L2 Switching Enabled Device )" : {
                  "metadata" : {
                    "timestamp" : "1467048332483",
                    "domain" : {
                      "name" : "Global",
                      "id" : "Global_UUID"
                    },
                    "isSupervisorProvisioned" : "false"
                  },
                  "links" : {
                    "self" : "/fmc_config/v1/domain/default/devices/devicerecords/deviceUUID/physicalinterfaces/PhyIntfId2"
                  },
                  "type" : "PhysicalInterface",
                  "mode" : "SWITCHPORT",
                  "id" : "InterfaceUUID",
                  "enabled" : false,
                  "description" : "Interface description",
                  "name" : "GigabitEthernet0/1",
                  "switchPortConfig" : {
                    "portMode" : "TRUNK",
                    "trunkModeAllowedVlanIds" : "2-10",
                    "trunkModeNativeVlanId" : 1,
                    "protectedEnabled" : true
                  },
                  "powerOverEthernet" : {
                    "consumptionWattage" : 0,
                    "state" : true
                  }
                },
                "Response Example 5 :GET /fmc_config/v1/domain/default/devices/devicerecords/containerUUID/physicalinterfaces/PhyIntfId3 ( GET method for FTD physical interface for a given UUID: ACCESS mode Interface in L2 Switching Enabled Device )" : {
                  "metadata" : {
                    "timestamp" : "1467048332483",
                    "domain" : {
                      "name" : "Global",
                      "id" : "Global_UUID"
                    },
                    "isSupervisorProvisioned" : "false"
                  },
                  "links" : {
                    "self" : "/fmc_config/v1/domain/default/devices/devicerecords/deviceUUID/physicalinterfaces/PhyIntfId3"
                  },
                  "type" : "PhysicalInterface",
                  "mode" : "SWITCHPORT",
                  "id" : "InterfaceUUID",
                  "enabled" : false,
                  "description" : "Interface description",
                  "name" : "GigabitEthernet0/1",
                  "switchPortConfig" : {
                    "portMode" : "ACCESS",
                    "accessModeVlanId" : 2,
                    "protectedEnabled" : true
                  },
                  "powerOverEthernet" : {
                    "consumptionWattage" : 0,
                    "state" : true
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves the physical interface associated with the specified NGFW device ID and interface ID. If no interface ID is specified, retrieves list of all physical interfaces associated with the specified NGFW device ID. <div class=\"alert alert-warning\">More details on netmod events(out of sync interfaces):<b> GET /interfaceevents</b></div> _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateFTDPhysicalInterface",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a NGFW physical interface.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The input NGFW physical interface model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FTDPhysicalInterface"
          }
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDPhysicalInterface"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/default/devices/devicerecords/containerUUID/physicalinterfaces/PhyIntfId1 ( PUT method for FTD physical interface for a given UUID )" : {
                  "type" : "PhysicalInterface",
                  "mode" : "INLINE",
                  "hardware" : {
                    "duplex" : "AUTO",
                    "speed" : "AUTO"
                  },
                  "powerOverEthernet" : {
                    "consumptionWattage" : 0,
                    "state" : true
                  },
                  "enabled" : false,
                  "description" : "Interface description",
                  "MTU" : 1500,
                  "managementOnly" : false,
                  "securityZone" : {
                    "id" : "SecZoneUUID1",
                    "type" : "SecurityZone"
                  },
                  "ifname" : "Intf1",
                  "enableAntiSpoofing" : false,
                  "enableSGTPropagate" : true,
                  "managementAccess" : false,
                  "overrideDefaultFragmentSetting" : {
                    "size" : 200,
                    "chain" : 24,
                    "timeout" : 5
                  },
                  "arpConfig" : [ {
                    "ipAddress" : "101.101.101.101/25",
                    "macAddress" : "03DC.1234.2323",
                    "enableAlias" : false
                  } ],
                  "ipv4" : {
                    "static" : {
                      "address" : "1.2.3.4",
                      "netmask" : "25"
                    },
                    "dhcp" : {
                      "enableDefaultRouteDHCP" : "true",
                      "dhcpRouteMetric" : 1
                    },
                    "pppoe" : {
                      "vpdnGroupName" : "VPDN_group_name",
                      "pppoeUser" : "User_name",
                      "pppoePassword" : "User_password",
                      "pppAuth" : "< PAP | CHAP | MSCHAP>",
                      "pppoeRouteMetric" : 1,
                      "enableRouteSettings" : true,
                      "ipAddress" : "1.2.3.4/25",
                      "storeCredsInFlash" : false
                    }
                  },
                  "ipv6" : {
                    "enableIPV6" : true,
                    "enforceEUI64" : false,
                    "linkLocalAddress" : "FE80::",
                    "enableAutoConfig" : true,
                    "enableDHCPAddrConfig" : true,
                    "enableDHCPNonAddrConfig" : false,
                    "dadAttempts" : 1,
                    "nsInterval" : 10000,
                    "reachableTime" : 0,
                    "enableRA" : false,
                    "raLifeTime" : 1800,
                    "raInterval" : 200,
                    "addresses" : [ {
                      "address" : "2001",
                      "prefix" : "124",
                      "enforceEUI64" : false
                    }, {
                      "address" : "8080",
                      "prefix" : "12",
                      "enforceEUI64" : true
                    } ],
                    "prefixes" : [ {
                      "address" : "2001::/124",
                      "default" : false,
                      "advertisement" : {
                        "offlink" : false,
                        "autoConfig" : false,
                        "preferLifeTime" : {
                          "duration" : {
                            "preferLifetime" : 604800,
                            "validLifeTime" : 2592300
                          },
                          "expirationLifeTime" : {
                            "preferDateTime" : "2016-11-05T08:15:30.000Z",
                            "validDateTime" : "2016-12-05T08:15:30.000Z"
                          }
                        }
                      }
                    } ]
                  },
                  "name" : "GigabitEthernet1/1",
                  "id" : "PhyIntfId1"
                },
                "Request example 2 : PUT /fmc_config/v1/domain/default/devices/devicerecords/containerUUID/physicalinterfaces/fmcAccessPhyIntfId1 ( PUT method for FTD physical interface for a given UUID on a FMC Access supported device )" : {
                  "type" : "PhysicalInterface",
                  "mode" : "INLINE",
                  "hardware" : {
                    "duplex" : "AUTO",
                    "speed" : "AUTO"
                  },
                  "powerOverEthernet" : {
                    "consumptionWattage" : 0,
                    "state" : true
                  },
                  "enabled" : false,
                  "description" : "Interface description",
                  "MTU" : 1500,
                  "managementOnly" : false,
                  "securityZone" : {
                    "id" : "SecZoneUUID1",
                    "type" : "SecurityZone"
                  },
                  "ifname" : "Intf1",
                  "enableAntiSpoofing" : false,
                  "enableSGTPropagate" : true,
                  "managementAccess" : false,
                  "overrideDefaultFragmentSetting" : {
                    "size" : 200,
                    "chain" : 24,
                    "timeout" : 5
                  },
                  "arpConfig" : [ {
                    "ipAddress" : "101.101.101.101/25",
                    "macAddress" : "03DC.1234.2323",
                    "enableAlias" : false
                  } ],
                  "fmcAccessConfig" : {
                    "enableAccess" : true,
                    "allowedNetworks" : [ {
                      "type" : "Network",
                      "name" : "any-ipv4",
                      "id" : "cb7116e8-66a6-480b-8f9b-295191a0940a"
                    } ]
                  },
                  "ipv4" : {
                    "static" : {
                      "address" : "1.2.3.4",
                      "netmask" : "25"
                    },
                    "dhcp" : {
                      "enableDefaultRouteDHCP" : "true",
                      "dhcpRouteMetric" : 1
                    },
                    "pppoe" : {
                      "vpdnGroupName" : "VPDN_group_name",
                      "pppoeUser" : "User_name",
                      "pppoePassword" : "User_password",
                      "pppAuth" : "< PAP | CHAP | MSCHAP>",
                      "pppoeRouteMetric" : 1,
                      "enableRouteSettings" : true,
                      "ipAddress" : "1.2.3.4/25",
                      "storeCredsInFlash" : false
                    }
                  },
                  "ipv6" : {
                    "enableIPV6" : true,
                    "enforceEUI64" : false,
                    "linkLocalAddress" : "FE80::",
                    "enableAutoConfig" : true,
                    "enableDHCPAddrConfig" : true,
                    "enableDHCPNonAddrConfig" : false,
                    "dadAttempts" : 1,
                    "nsInterval" : 10000,
                    "reachableTime" : 0,
                    "enableRA" : false,
                    "raLifeTime" : 1800,
                    "raInterval" : 200,
                    "addresses" : [ {
                      "address" : "2001",
                      "prefix" : "124",
                      "enforceEUI64" : false
                    }, {
                      "address" : "8080",
                      "prefix" : "12",
                      "enforceEUI64" : true
                    } ],
                    "prefixes" : [ {
                      "address" : "2001::/124",
                      "default" : false,
                      "advertisement" : {
                        "offlink" : false,
                        "autoConfig" : false,
                        "preferLifeTime" : {
                          "duration" : {
                            "preferLifetime" : 604800,
                            "validLifeTime" : 2592300
                          },
                          "expirationLifeTime" : {
                            "preferDateTime" : "2016-11-05T08:15:30.000Z",
                            "validDateTime" : "2016-12-05T08:15:30.000Z"
                          }
                        }
                      }
                    } ]
                  },
                  "name" : "GigabitEthernet1/1",
                  "id" : "fmcAccessPhyIntfId1"
                },
                "Request example 4 : PUT /fmc_config/v1/domain/default/devices/devicerecords/containerUUID/physicalinterfaces/PhyIntfId1 ( PUT method for FTD physical interface for a given UUID: ACCESS mode Interface in L2 Switching Enabled Device )" : {
                  "type" : "PhysicalInterface",
                  "mode" : "SWITCHPORT",
                  "id" : "InterfaceUUID",
                  "enabled" : false,
                  "description" : "Interface description",
                  "name" : "GigabitEthernet0/1",
                  "switchPortConfig" : {
                    "portMode" : "ACCESS",
                    "accessModeVlanId" : 2,
                    "protectedEnabled" : true
                  },
                  "powerOverEthernet" : {
                    "consumptionWattage" : 0,
                    "state" : true
                  }
                },
                "Response Example 1 :PUT /fmc_config/v1/domain/default/devices/devicerecords/containerUUID/physicalinterfaces/PhyIntfId1 ( PUT method for FTD physical interface for a given UUID )" : {
                  "metadata" : {
                    "timestamp" : 1467048332483,
                    "domain" : {
                      "name" : "Global",
                      "id" : "Global_UUID"
                    },
                    "_comment" : "Supported speed will be available only for 2100 series devices",
                    "supportedSpeed" : "HUNDRED,TEN,THOUSAND,AUTO"
                  },
                  "links" : {
                    "self" : "/fmc_config/v1/domain/default/devices/devicerecords/deviceUUID/physicalinterfaces/PhyIntfId1"
                  },
                  "type" : "PhysicalInterface",
                  "mode" : "INLINE",
                  "hardware" : {
                    "duplex" : "AUTO",
                    "speed" : "AUTO"
                  },
                  "powerOverEthernet" : {
                    "consumptionWattage" : 0,
                    "state" : true
                  },
                  "enabled" : false,
                  "description" : "Interface description",
                  "MTU" : 1500,
                  "managementOnly" : false,
                  "securityZone" : {
                    "id" : "SecZoneUUID1",
                    "type" : "SecurityZone"
                  },
                  "ifname" : "Intf1",
                  "enableAntiSpoofing" : false,
                  "enableSGTPropagate" : true,
                  "managementAccess" : false,
                  "overrideDefaultFragmentSetting" : {
                    "size" : 200,
                    "chain" : 24,
                    "timeout" : 5
                  },
                  "arpConfig" : [ {
                    "ipAddress" : "101.101.101.101/25",
                    "macAddress" : "03DC.1234.2323",
                    "enableAlias" : false
                  } ],
                  "ipv4" : {
                    "static" : {
                      "address" : "1.2.3.4",
                      "netmask" : "25"
                    },
                    "dhcp" : {
                      "enableDefaultRouteDHCP" : "true",
                      "dhcpRouteMetric" : 1
                    },
                    "pppoe" : {
                      "vpdnGroupName" : "VPDN_group_name",
                      "pppoeUser" : "User_name",
                      "pppoePassword" : "User_password",
                      "pppAuth" : "< PAP | CHAP | MSCHAP>",
                      "pppoeRouteMetric" : 1,
                      "enableRouteSettings" : true,
                      "ipAddress" : "1.2.3.4/25",
                      "storeCredsInFlash" : false
                    }
                  },
                  "ipv6" : {
                    "enableIPV6" : true,
                    "enforceEUI64" : false,
                    "linkLocalAddress" : "FE80::",
                    "enableAutoConfig" : true,
                    "enableDHCPAddrConfig" : true,
                    "enableDHCPNonAddrConfig" : false,
                    "dadAttempts" : 1,
                    "nsInterval" : 10000,
                    "reachableTime" : 0,
                    "enableRA" : false,
                    "raLifeTime" : 1800,
                    "raInterval" : 200,
                    "addresses" : [ {
                      "address" : "2001",
                      "prefix" : "124",
                      "enforceEUI64" : false
                    }, {
                      "address" : "8080",
                      "prefix" : "12",
                      "enforceEUI64" : true
                    } ],
                    "prefixes" : [ {
                      "address" : "2001::/124",
                      "default" : false,
                      "advertisement" : {
                        "offlink" : false,
                        "autoConfig" : false,
                        "preferLifeTime" : {
                          "duration" : {
                            "preferLifetime" : 604800,
                            "validLifeTime" : 2592300
                          },
                          "expirationLifeTime" : {
                            "preferDateTime" : "2016-11-05T08:15:30.000Z",
                            "validDateTime" : "2016-12-05T08:15:30.000Z"
                          }
                        }
                      }
                    } ]
                  },
                  "name" : "GigabitEthernet1/1",
                  "id" : "PhyIntfId1"
                },
                "Response Example 2 :PUT /fmc_config/v1/domain/default/devices/devicerecords/containerUUID/physicalinterfaces/fmcAccessPhyIntfId1 ( PUT method for FTD physical interface for a given UUID on a FMC Access supported device )" : {
                  "metadata" : {
                    "timestamp" : 1467048332483,
                    "domain" : {
                      "name" : "Global",
                      "id" : "Global_UUID"
                    },
                    "_comment" : "Supported speed will be available only for 2100 series devices",
                    "supportedSpeed" : "HUNDRED,TEN,THOUSAND,AUTO"
                  },
                  "links" : {
                    "self" : "/fmc_config/v1/domain/default/devices/devicerecords/deviceUUID/physicalinterfaces/PhyIntfId1"
                  },
                  "type" : "PhysicalInterface",
                  "mode" : "INLINE",
                  "hardware" : {
                    "duplex" : "AUTO",
                    "speed" : "AUTO"
                  },
                  "powerOverEthernet" : {
                    "consumptionWattage" : 0,
                    "state" : true
                  },
                  "enabled" : false,
                  "description" : "Interface description",
                  "MTU" : 1500,
                  "managementOnly" : false,
                  "securityZone" : {
                    "id" : "SecZoneUUID1",
                    "type" : "SecurityZone"
                  },
                  "ifname" : "Intf1",
                  "enableAntiSpoofing" : false,
                  "enableSGTPropagate" : true,
                  "managementAccess" : false,
                  "overrideDefaultFragmentSetting" : {
                    "size" : 200,
                    "chain" : 24,
                    "timeout" : 5
                  },
                  "arpConfig" : [ {
                    "ipAddress" : "101.101.101.101/25",
                    "macAddress" : "03DC.1234.2323",
                    "enableAlias" : false
                  } ],
                  "fmcAccessConfig" : {
                    "enableAccess" : true,
                    "allowedNetworks" : [ {
                      "type" : "Network",
                      "name" : "any-ipv4",
                      "id" : "cb7116e8-66a6-480b-8f9b-295191a0940a"
                    } ]
                  },
                  "ipv4" : {
                    "static" : {
                      "address" : "1.2.3.4",
                      "netmask" : "25"
                    },
                    "dhcp" : {
                      "enableDefaultRouteDHCP" : "true",
                      "dhcpRouteMetric" : 1
                    },
                    "pppoe" : {
                      "vpdnGroupName" : "VPDN_group_name",
                      "pppoeUser" : "User_name",
                      "pppoePassword" : "User_password",
                      "pppAuth" : "< PAP | CHAP | MSCHAP>",
                      "pppoeRouteMetric" : 1,
                      "enableRouteSettings" : true,
                      "ipAddress" : "1.2.3.4/25",
                      "storeCredsInFlash" : false
                    }
                  },
                  "ipv6" : {
                    "enableIPV6" : true,
                    "enforceEUI64" : false,
                    "linkLocalAddress" : "FE80::",
                    "enableAutoConfig" : true,
                    "enableDHCPAddrConfig" : true,
                    "enableDHCPNonAddrConfig" : false,
                    "dadAttempts" : 1,
                    "nsInterval" : 10000,
                    "reachableTime" : 0,
                    "enableRA" : false,
                    "raLifeTime" : 1800,
                    "raInterval" : 200,
                    "addresses" : [ {
                      "address" : "2001",
                      "prefix" : "124",
                      "enforceEUI64" : false
                    }, {
                      "address" : "8080",
                      "prefix" : "12",
                      "enforceEUI64" : true
                    } ],
                    "prefixes" : [ {
                      "address" : "2001::/124",
                      "default" : false,
                      "advertisement" : {
                        "offlink" : false,
                        "autoConfig" : false,
                        "preferLifeTime" : {
                          "duration" : {
                            "preferLifetime" : 604800,
                            "validLifeTime" : 2592300
                          },
                          "expirationLifeTime" : {
                            "preferDateTime" : "2016-11-05T08:15:30.000Z",
                            "validDateTime" : "2016-12-05T08:15:30.000Z"
                          }
                        }
                      }
                    } ]
                  },
                  "name" : "GigabitEthernet1/1",
                  "id" : "fmcAccessPhyIntfId1"
                },
                "Response Example 4 :PUT /fmc_config/v1/domain/default/devices/devicerecords/containerUUID/physicalinterfaces/PhyIntfId1 ( PUT method for FTD physical interface for a given UUID: ACCESS mode Interface in L2 Switching Enabled Device )" : {
                  "metadata" : {
                    "timestamp" : "1467048332483",
                    "domain" : {
                      "name" : "Global",
                      "id" : "Global_UUID"
                    },
                    "isSupervisorProvisioned" : "false"
                  },
                  "links" : {
                    "self" : "/fmc_config/v1/domain/default/devices/devicerecords/deviceUUID/physicalinterfaces/PhyIntfId1"
                  },
                  "type" : "PhysicalInterface",
                  "mode" : "SWITCHPORT",
                  "id" : "InterfaceUUID",
                  "enabled" : false,
                  "description" : "Interface description",
                  "name" : "GigabitEthernet0/1",
                  "switchPortConfig" : {
                    "portMode" : "ACCESS",
                    "accessModeVlanId" : 2,
                    "protectedEnabled" : true
                  },
                  "powerOverEthernet" : {
                    "consumptionWattage" : 0,
                    "state" : true
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/FTDPhysicalInterface"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/redundantinterfaces" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves the redundant interface associated with the specified NGFW device ID and interface ID. If no interface ID is specified, retrieves list of all redundant interfaces associated with the specified NGFW device ID. <div class=\"alert alert-warning\">More details on netmod events(out of sync interfaces):<b> GET /interfaceevents</b></div>**",
        "operationId" : "getAllFTDRedundantInterface",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDRedundantInterfaceListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/redundantinterfaces ( Success: Test GET ALL success )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/redundantinterfaces?offset=0&limit=3"
                  },
                  "items" : [ {
                    "name" : "s1p3.1",
                    "id" : "1",
                    "type" : "RedundantInterface",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/redundantinterfaces/redundantinterfaceUUID1"
                    }
                  }, {
                    "name" : "s1p4.2",
                    "id" : "redundantinterfaceUUID2",
                    "type" : "RedundantInterface",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/redundantinterfaces/redundantinterfaceUUID2"
                    }
                  }, {
                    "name" : "hybrid_1",
                    "id" : "redundantinterfaceUUID3",
                    "type" : "RedundantInterface",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/redundantinterfaces/redundantinterfaceUUID3"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 3,
                    "count" : 3,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/redundantinterfaces/redundantinterfaceUUID?expanded=true ( Success: Test GET ALL success with expanded=true )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/redundantinterfaces/redundantinterfaceUUID?offset=0&limit=2"
                  },
                  "items" : [ {
                    "metadata" : {
                      "timestamp" : 1462814174120,
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUUID"
                      }
                    },
                    "links" : {
                      "self" : "/fmc_config/v1/domain/default/devices/devicerecords/containerUUID/redundantinterfaces/redundantinterfaceUUID1"
                    },
                    "name" : "Redundant1",
                    "type" : "RedundantInterface",
                    "primaryInterface" : {
                      "name" : "GigabitEthernet0/0",
                      "type" : "PhysicalInterface",
                      "id" : "interface UUID"
                    },
                    "redundantId" : 1,
                    "secondaryInterface" : {
                      "name" : "GigabitEthernet0/1",
                      "type" : "PhysicalInterface",
                      "id" : "interface UUID"
                    },
                    "enabled" : true,
                    "MTU" : 1500,
                    "ifname" : "redInter1",
                    "managementOnly" : false,
                    "ipv4" : {
                      "static" : { }
                    },
                    "ipv6" : {
                      "enforceEUI64" : false,
                      "enableAutoConfig" : false,
                      "enableDHCPAddrConfig" : true,
                      "enableDHCPNonAddrConfig" : false,
                      "dadAttempts" : 1,
                      "nsInterval" : 1000,
                      "reachableTime" : 0,
                      "enableRA" : true,
                      "raLifeTime" : 1800,
                      "raInterval" : 200,
                      "enableIPV6" : false
                    },
                    "enableAntiSpoofing" : false,
                    "enableSGTPropagate" : true,
                    "overrideDefaultFragmentSetting" : { },
                    "id" : "redundant interface UUID"
                  }, {
                    "metadata" : {
                      "timestamp" : 1462814174120,
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUUID"
                      }
                    },
                    "links" : {
                      "self" : "/fmc_config/v1/domain/default/devices/devicerecords/containerUUID/redundantinterfaces/redundantinterfaceUUID2"
                    },
                    "name" : "Redundant2",
                    "type" : "RedundantInterface",
                    "primaryInterface" : {
                      "name" : "GigabitEthernet0/2",
                      "type" : "PhysicalInterface",
                      "id" : "interface UUID"
                    },
                    "redundantId" : 2,
                    "secondaryInterface" : {
                      "name" : "GigabitEthernet0/3",
                      "type" : "PhysicalInterface",
                      "id" : "interface UUID"
                    },
                    "enabled" : true,
                    "MTU" : 1500,
                    "ifname" : "redInter2",
                    "managementOnly" : false,
                    "ipv4" : {
                      "static" : { }
                    },
                    "ipv6" : {
                      "enforceEUI64" : false,
                      "enableAutoConfig" : false,
                      "enableDHCPAddrConfig" : true,
                      "enableDHCPNonAddrConfig" : false,
                      "dadAttempts" : 1,
                      "nsInterval" : 1000,
                      "reachableTime" : 0,
                      "enableRA" : true,
                      "raLifeTime" : 1800,
                      "raInterval" : 200,
                      "enableIPV6" : false
                    },
                    "enableAntiSpoofing" : false,
                    "enableSGTPropagate" : true,
                    "overrideDefaultFragmentSetting" : { },
                    "id" : "redundant interface UUID"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves the redundant interface associated with the specified NGFW device ID and interface ID. If no interface ID is specified, retrieves list of all redundant interfaces associated with the specified NGFW device ID. <div class=\"alert alert-warning\">More details on netmod events(out of sync interfaces):<b> GET /interfaceevents</b></div> _Check the response section for applicable examples (if any)._**",
        "operationId" : "createFTDRedundantInterface",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The input redundant interface model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FTDRedundantInterface"
          }
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/FTDRedundantInterface"
            },
            "examples" : { }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/FTDRedundantInterface"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/redundantinterfaces/{objectId}" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves the redundant interface associated with the specified NGFW device ID and interface ID. If no interface ID is specified, retrieves list of all redundant interfaces associated with the specified NGFW device ID. <div class=\"alert alert-warning\">More details on netmod events(out of sync interfaces):<b> GET /interfaceevents</b></div>**",
        "operationId" : "getFTDRedundantInterface",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a redundant interface.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDRedundantInterface"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/redundantinterfaces/redundantinterfaceUUID ( Success: Test GET method for fp logical interface )" : {
                  "name" : "Redundant4",
                  "type" : "RedundantInterface",
                  "primaryInterface" : {
                    "name" : "GigabitEthernet0/0",
                    "type" : "PhysicalInterface",
                    "id" : "interface UUID"
                  },
                  "redundantId" : 4,
                  "secondaryInterface" : {
                    "name" : "GigabitEthernet0/1",
                    "type" : "PhysicalInterface",
                    "id" : "interface UUID"
                  },
                  "enabled" : true,
                  "MTU" : 1500,
                  "ifname" : "redInter",
                  "managementOnly" : false,
                  "ipv4" : {
                    "static" : { }
                  },
                  "ipv6" : {
                    "enforceEUI64" : false,
                    "enableAutoConfig" : false,
                    "enableDHCPAddrConfig" : true,
                    "enableDHCPNonAddrConfig" : false,
                    "dadAttempts" : 1,
                    "nsInterval" : 1000,
                    "reachableTime" : 0,
                    "enableRA" : true,
                    "raLifeTime" : 1800,
                    "raInterval" : 200,
                    "enableIPV6" : false
                  },
                  "enableAntiSpoofing" : false,
                  "enableSGTPropagate" : true,
                  "overrideDefaultFragmentSetting" : { },
                  "id" : "00000000-0000-0ed3-0000-206158430258",
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/redundantinterfaces/redundantinterfaceUUID"
                  },
                  "metadata" : {
                    "readOnly" : {
                      "state" : false
                    },
                    "timestamp" : 1458597038,
                    "lastUser" : {
                      "name" : "admin",
                      "id" : "UserUUID",
                      "type" : "user"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "DomainUUID",
                      "type" : "domain"
                    },
                    "activity" : 0,
                    "link" : 0,
                    "speed" : -1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves the redundant interface associated with the specified NGFW device ID and interface ID. If no interface ID is specified, retrieves list of all redundant interfaces associated with the specified NGFW device ID. <div class=\"alert alert-warning\">More details on netmod events(out of sync interfaces):<b> GET /interfaceevents</b></div> _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateFTDRedundantInterface",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a redundant interface.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The input redundant interface model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FTDRedundantInterface"
          }
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDRedundantInterface"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/default/devices/devicerecords/containerUUID/redundantinterfaces/redundantinterfaceUUID ( Success: Test PUT method for FTD redundant interface )" : {
                  "type" : "RedundantInterface",
                  "redundantId" : 1,
                  "enabled" : true,
                  "MTU" : 1500,
                  "managementOnly" : true,
                  "enableAntiSpoofing" : true,
                  "enableSGTPropagate" : true,
                  "ifname" : "Intf_name",
                  "primaryInterface" : {
                    "type" : "PhysicalInterface",
                    "name" : "GigabitEthernet0/0",
                    "id" : "primary_intf_id"
                  },
                  "secondaryInterface" : {
                    "type" : "SecondaryInterface",
                    "name" : "GigabitEthernet0/1",
                    "id" : "secondary_intf_id"
                  },
                  "name" : "Redundant1",
                  "id" : "redundantInterfaceUUID",
                  "overrideDefaultFragmentSetting" : {
                    "size" : 200,
                    "chain" : 24,
                    "timeout" : 5
                  },
                  "arpConfig" : [ {
                    "ipAddress" : "101.101.101.101/25",
                    "macAddress" : "03DC.1234.2323",
                    "enableAlias" : false
                  } ],
                  "securityZone" : {
                    "id" : "sec_zone_id",
                    "type" : "SecurityZone"
                  },
                  "ipv4" : {
                    "static" : {
                      "address" : "1.2.3.4",
                      "netmask" : "25"
                    },
                    "dhcp" : {
                      "enableDefaultRouteDHCP" : "true",
                      "dhcpRouteMetric" : 1
                    },
                    "pppoe" : {
                      "vpdnGroupName" : "VPDN_group_name",
                      "pppoeUser" : "User_name",
                      "pppoePassword" : "User_password",
                      "pppAuth" : "< PAP | CHAP | MSCHAP>",
                      "pppoeRouteMetric" : 1,
                      "enableRouteSettings" : true,
                      "ipAddress" : "1.2.3.4/25",
                      "storeCredsInFlash" : false
                    }
                  },
                  "ipv6" : {
                    "enableIPV6" : true,
                    "enforceEUI64" : false,
                    "linkLocalAddress" : "FE80::",
                    "enableAutoConfig" : true,
                    "enableDHCPAddrConfig" : true,
                    "enableDHCPNonAddrConfig" : false,
                    "dadAttempts" : 1,
                    "nsInterval" : 10000,
                    "reachableTime" : 0,
                    "enableRA" : false,
                    "raLifeTime" : 1800,
                    "raInterval" : 200,
                    "addresses" : [ {
                      "address" : "2001::",
                      "prefix" : "124",
                      "enforceEUI64" : false
                    }, {
                      "address" : "8080::",
                      "prefix" : "12",
                      "enforceEUI64" : true
                    } ],
                    "prefixes" : [ {
                      "address" : "2001::/124",
                      "default" : false,
                      "advertisement" : {
                        "offlink" : false,
                        "autoConfig" : false,
                        "preferLifeTime" : {
                          "duration" : {
                            "preferLifeTime" : 604800,
                            "validLifeTime" : 2592300
                          },
                          "expirationLifeTime" : {
                            "preferDateTime" : "2016-11-05T08:15:30.000Z",
                            "validDateTime" : "2016-12-05T08:15:30.000Z"
                          }
                        }
                      }
                    } ]
                  }
                },
                "Response Example 1 :PUT /fmc_config/v1/domain/default/devices/devicerecords/containerUUID/redundantinterfaces/redundantinterfaceUUID ( Success: Test PUT method for FTD redundant interface )" : {
                  "type" : "RedundantInterface",
                  "redundantId" : 1,
                  "enabled" : true,
                  "MTU" : 1500,
                  "managementOnly" : true,
                  "enableAntiSpoofing" : true,
                  "enableSGTPropagate" : true,
                  "ifname" : "Intf_name",
                  "primaryInterface" : {
                    "type" : "PhysicalInterface",
                    "name" : "GigabitEthernet0/0",
                    "id" : "primary_intf_id"
                  },
                  "secondaryInterface" : {
                    "type" : "SecondaryInterface",
                    "name" : "GigabitEthernet0/1",
                    "id" : "secondary_intf_id"
                  },
                  "name" : "Redundant1",
                  "id" : "redundantInterfaceUUID",
                  "overrideDefaultFragmentSetting" : {
                    "size" : 200,
                    "chain" : 24,
                    "timeout" : 5
                  },
                  "arpConfig" : [ {
                    "ipAddress" : "101.101.101.101/25",
                    "macAddress" : "03DC.1234.2323",
                    "enableAlias" : false
                  } ],
                  "securityZone" : {
                    "id" : "sec_zone_id",
                    "type" : "SecurityZone"
                  },
                  "ipv4" : {
                    "static" : {
                      "address" : "1.2.3.4",
                      "netmask" : "25"
                    },
                    "dhcp" : {
                      "enableDefaultRouteDHCP" : "true",
                      "dhcpRouteMetric" : 1
                    },
                    "pppoe" : {
                      "vpdnGroupName" : "VPDN_group_name",
                      "pppoeUser" : "User_name",
                      "pppoePassword" : "User_password",
                      "pppAuth" : "< PAP | CHAP | MSCHAP>",
                      "pppoeRouteMetric" : 1,
                      "enableRouteSettings" : true,
                      "ipAddress" : "1.2.3.4/25",
                      "storeCredsInFlash" : false
                    }
                  },
                  "ipv6" : {
                    "enableIPV6" : true,
                    "enforceEUI64" : false,
                    "linkLocalAddress" : "FE80::",
                    "enableAutoConfig" : true,
                    "enableDHCPAddrConfig" : true,
                    "enableDHCPNonAddrConfig" : false,
                    "dadAttempts" : 1,
                    "nsInterval" : 10000,
                    "reachableTime" : 0,
                    "enableRA" : false,
                    "raLifeTime" : 1800,
                    "raInterval" : 200,
                    "addresses" : [ {
                      "address" : "2001::",
                      "prefix" : "124",
                      "enforceEUI64" : false
                    }, {
                      "address" : "8080::",
                      "prefix" : "12",
                      "enforceEUI64" : true
                    } ],
                    "prefixes" : [ {
                      "address" : "2001::/124",
                      "default" : false,
                      "advertisement" : {
                        "offlink" : false,
                        "autoConfig" : false,
                        "preferLifeTime" : {
                          "duration" : {
                            "preferLifeTime" : 604800,
                            "validLifeTime" : 2592300
                          },
                          "expirationLifeTime" : {
                            "preferDateTime" : "2016-11-05T08:15:30.000Z",
                            "validDateTime" : "2016-12-05T08:15:30.000Z"
                          }
                        }
                      }
                    } ]
                  },
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/redundantinterfaces/redundantinterfaceUUID"
                  },
                  "metadata" : {
                    "readOnly" : {
                      "state" : false
                    },
                    "timestamp" : 1458597038,
                    "lastUser" : {
                      "name" : "admin",
                      "id" : "UserUUID",
                      "type" : "user"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "DomainUUID",
                      "type" : "domain"
                    },
                    "activity" : 0,
                    "link" : 0,
                    "speed" : -1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/FTDRedundantInterface"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves the redundant interface associated with the specified NGFW device ID and interface ID. If no interface ID is specified, retrieves list of all redundant interfaces associated with the specified NGFW device ID. <div class=\"alert alert-warning\">More details on netmod events(out of sync interfaces):<b> GET /interfaceevents</b></div> _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteFTDRedundantInterface",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a redundant interface.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDRedundantInterface"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/redundantinterfaces/redundantinterfaceUUID ( Success: Test DELETE method for FTD redundant interface )" : {
                  "type" : "RedundantInterface",
                  "redundantId" : 1,
                  "enabled" : true,
                  "MTU" : 1500,
                  "managementOnly" : true,
                  "enableAntiSpoofing" : true,
                  "enableSGTPropagate" : true,
                  "ifname" : "Intf_name",
                  "primaryInterface" : {
                    "type" : "PhysicalInterface",
                    "name" : "GigabitEthernet0/0",
                    "id" : "primary_intf_id"
                  },
                  "secondaryInterface" : {
                    "type" : "SecondaryInterface",
                    "name" : "GigabitEthernet0/1",
                    "id" : "secondary_intf_id"
                  },
                  "name" : "Redundant1",
                  "id" : "redundantInterfaceUUID",
                  "overrideDefaultFragmentSetting" : {
                    "size" : 200,
                    "chain" : 24,
                    "timeout" : 5
                  },
                  "arpConfig" : [ {
                    "ipAddress" : "101.101.101.101/25",
                    "macAddress" : "03DC.1234.2323",
                    "enableAlias" : false
                  } ],
                  "securityZone" : {
                    "id" : "sec_zone_id",
                    "type" : "SecurityZone"
                  },
                  "ipv4" : {
                    "static" : {
                      "address" : "1.2.3.4",
                      "netmask" : "25"
                    },
                    "dhcp" : {
                      "enableDefaultRouteDHCP" : "true",
                      "dhcpRouteMetric" : 1
                    },
                    "pppoe" : {
                      "vpdnGroupName" : "VPDN_group_name",
                      "pppoeUser" : "User_name",
                      "pppoePassword" : "User_password",
                      "pppAuth" : "< PAP | CHAP | MSCHAP>",
                      "pppoeRouteMetric" : 1,
                      "enableRouteSettings" : true,
                      "ipAddress" : "1.2.3.4/25",
                      "storeCredsInFlash" : false
                    }
                  },
                  "ipv6" : {
                    "enableIPV6" : true,
                    "enforceEUI64" : false,
                    "linkLocalAddress" : "FE80::",
                    "enableAutoConfig" : true,
                    "enableDHCPAddrConfig" : true,
                    "enableDHCPNonAddrConfig" : false,
                    "dadAttempts" : 1,
                    "nsInterval" : 10000,
                    "reachableTime" : 0,
                    "enableRA" : false,
                    "raLifeTime" : 1800,
                    "raInterval" : 200,
                    "addresses" : [ {
                      "address" : "2001::",
                      "prefix" : "124",
                      "enforceEUI64" : false
                    }, {
                      "address" : "8080::",
                      "prefix" : "12",
                      "enforceEUI64" : true
                    } ],
                    "prefixes" : [ {
                      "address" : "2001::/124",
                      "default" : false,
                      "advertisement" : {
                        "offlink" : false,
                        "autoConfig" : false,
                        "preferLifeTime" : {
                          "duration" : {
                            "preferLifeTime" : 604800,
                            "validLifeTime" : 2592300
                          },
                          "expirationLifeTime" : {
                            "preferDateTime" : "2016-11-05T08:15:30.000Z",
                            "validDateTime" : "2016-12-05T08:15:30.000Z"
                          }
                        }
                      }
                    } ]
                  },
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/redundantinterfaces/redundantinterfaceUUID"
                  },
                  "metadata" : {
                    "readOnly" : {
                      "state" : false
                    },
                    "timestamp" : 1458597038,
                    "lastUser" : {
                      "name" : "admin",
                      "id" : "UserUUID",
                      "type" : "user"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "DomainUUID",
                      "type" : "domain"
                    },
                    "activity" : 0,
                    "link" : 0,
                    "speed" : -1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/bgp" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves list of all BGP (ipv4 and ipv6) associated with the specified device. When device is in multi virtual router mode, this API is applicable to Global Virtual Router.**",
        "operationId" : "getAllBGPIPvAddressFamilyModel",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/BGPIPvAddressFamilyModelListContainer"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/bgp/{objectId}" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves list of all BGP (ipv4 and ipv6) associated with the specified device. When device is in multi virtual router mode, this API is applicable to Global Virtual Router.**",
        "operationId" : "getBGPIPvAddressFamilyModel",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a BGP (ipv4 or ipv6) model.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/BGPIPvAddressFamilyModel"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/bgp?expanded=true ( Example payload for GET on bgp with expanded=true. )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/bgp?offset=0&limit=2&expanded=true"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/bgp/bgpUUID"
                    },
                    "id" : "bgpUUID",
                    "name" : "String",
                    "asNumber" : "String",
                    "routerId" : "String",
                    "addressFamilyIPv4" : {
                      "distance" : {
                        "externalDistance" : "Integer",
                        "internalDistance" : "Integer",
                        "localDistance" : "Integer",
                        "type" : "afbgpdistance"
                      },
                      "defaultInformationOrginate" : "boolean",
                      "bgpSupressInactive" : "boolean",
                      "synchronization" : "boolean",
                      "bgpRedistributeInternal" : "boolean",
                      "scanTime" : "Integer",
                      "aggregateTimer" : "Integer",
                      "maximumPaths" : [ {
                        "value" : "Integer",
                        "ibgp" : "boolean",
                        "type" : "afmaximumpaths"
                      } ],
                      "neighbors" : [ {
                        "remoteAs" : "String",
                        "neighborGeneral" : {
                          "description" : "String ",
                          "shutdown" : "boolean",
                          "fallOverBFD" : "[single_hop | multi-hop ]",
                          "type" : "neighborgeneral"
                        },
                        "neighborAdvanced" : {
                          "neighborSecret" : "Secret",
                          "neighborHops" : {
                            "maxHopCount" : "Integer",
                            "disableConnectedCheck" : "boolean",
                            "neighborTtlSecurityHops" : "Integer",
                            "type" : "neighborebgpmultihop or neighborttlsecurityhops"
                          },
                          "neighborVersion" : "Integer",
                          "nextHopSelf" : "boolean",
                          "neighborWeight" : "Integer",
                          "sendCommunity" : "boolean",
                          "neighborTransportConnectionMode" : {
                            "establishTCPSession" : "boolean",
                            "type" : "neighbortransportconnectionmode"
                          },
                          "neighborTransportPathMTUDiscovery" : {
                            "disable" : "boolean",
                            "type" : "neighbortransportpathmtudiscovery"
                          },
                          "type" : "neighboradvanced"
                        },
                        "neighborTimers" : {
                          "keepAliveInterval" : "Integer",
                          "holdTime" : "Integer",
                          "minimumHoldTime" : "Integer",
                          "type" : "neighbortimers"
                        },
                        "neighborRoutes" : {
                          "advertisementInterval" : "Integer",
                          "neighborAdvertiseMaps" : [ {
                            "routeMap" : "RouteMap",
                            "existMap" : "boolean",
                            "existRouteMap" : "RouteMap",
                            "type" : "neighboradvertisemap"
                          } ],
                          "removePrivateAs" : "boolean"
                        },
                        "neighborFiltering" : {
                          "neighborDistributeLists" : [ {
                            "accessList" : "accessList",
                            "filterUpdateAction" : "[IN/OUT]",
                            "type" : "neighbordistributelist"
                          } ],
                          "neighborRouteMap" : [ {
                            "routeMap" : "RouteMap",
                            "filterUpdateAction" : "[IN/OUT]",
                            "type" : "neighborroutemap"
                          } ],
                          "ipv4PrefixListFilter" : [ {
                            "ipv4PrefixList" : "IPV4PrefixList",
                            "filterUpdateAction" : "[IN/OUT]",
                            "type" : "neighborprefixlist"
                          } ],
                          "neighborFilterList" : [ {
                            "asPathList" : "asPath",
                            "filterUpdateAction" : "[IN/OUT]",
                            "type" : "neighborfilterlist"
                          } ],
                          "neighborMaximumPrefix" : {
                            "maxPrefixLimit" : "long",
                            "thresholdValue" : "Integer",
                            "restartInterval" : "Integer",
                            "warningOnly" : "boolean",
                            "type" : "neighbormaximumprefix"
                          },
                          "neighborDefaultOriginate" : {
                            "routeMap" : "RouteMap",
                            "type" : "neighbordefaultoriginate"
                          }
                        },
                        "neighborLocalAs" : {
                          "asNumber" : "String",
                          "noPrepend" : "boolean",
                          "replaceAs" : "boolean",
                          "dualAs" : "boolean",
                          "type" : "neighborlocalas"
                        },
                        "neighborHaMode" : {
                          "disable" : "boolean",
                          "type" : "neighborhamode"
                        },
                        "ipv4Address" : "String",
                        "type" : "neighboripv4"
                      } ],
                      "redistributeProtocols" : [ {
                        "routeMap" : "routemap",
                        "routeMetric" : {
                          "metricValue" : "long"
                        },
                        "type" : "redistributestatic"
                      }, {
                        "routeMap" : "routemap",
                        "routeMetric" : {
                          "metricValue" : "long"
                        },
                        "type" : "redistributeconnected"
                      }, {
                        "routeMap" : "routemap",
                        "routeMetric" : {
                          "metricValue" : "long"
                        },
                        "type" : "redistributerip"
                      }, {
                        "routeMap" : "routemap",
                        "routeMetric" : {
                          "metricValue" : "long"
                        },
                        "type" : "redistributebgp"
                      }, {
                        "processId" : "string",
                        "routeMap" : "routemap",
                        "routeMetric" : {
                          "metricValue" : "long"
                        },
                        "matchExternal1" : "boolean",
                        "matchExternal2" : "boolean",
                        "matchInternal" : "boolean",
                        "matchNssaExternal1" : "boolean",
                        "matchNssaExternal2" : "boolean",
                        "type" : "redistributeospf"
                      } ],
                      "distributeLists" : [ {
                        "accessList" : "StandardAccessList",
                        "type" : "incomingroutefilter"
                      }, {
                        "accessList" : "StandardAccessList",
                        "protocol" : "FilterProtocol Object",
                        "type" : "outgoingroutefilter"
                      } ],
                      "aftableMap" : "RouteMap",
                      "bgpNextHopTriggerDelay" : "Integer",
                      "bgpNextHopTriggerEnable" : "boolean",
                      "id" : "uuid of ipv4 general settings",
                      "type" : "afipv4"
                    },
                    "addressFamilyIPv6" : {
                      "distance" : {
                        "externalDistance" : "Integer",
                        "internalDistance" : "Integer",
                        "localDistance" : "Integer",
                        "type" : "afbgpdistance"
                      },
                      "defaultInformationOrginate" : "boolean",
                      "bgpSupressInactive" : "boolean",
                      "synchronization" : "boolean",
                      "bgpRedistributeInternal" : "boolean",
                      "scanTime" : "Integer",
                      "aggregateTimer" : "Integer",
                      "maximumPaths" : [ {
                        "value" : "Integer",
                        "ibgp" : "boolean",
                        "type" : "afmaximumpaths"
                      } ],
                      "neighbors" : [ {
                        "remoteAs" : "String",
                        "neighborGeneral" : {
                          "description" : "String ",
                          "shutdown" : "boolean",
                          "fallOverBFD" : "[single_hop | multi-hop ]",
                          "type" : "neighborgeneral"
                        },
                        "neighborAdvanced" : {
                          "neighborSecret" : "Secret",
                          "neighborHops" : {
                            "maxHopCount" : "Integer",
                            "disableConnectedCheck" : "boolean",
                            "neighborTtlSecurityHops" : "Integer",
                            "type" : "neighborebgpmultihop or neighborttlsecurityhops"
                          },
                          "neighborVersion" : "Integer",
                          "nextHopSelf" : "boolean",
                          "neighborWeight" : "Integer",
                          "sendCommunity" : "boolean",
                          "neighborTransportConnectionMode" : {
                            "establishTCPSession" : "boolean",
                            "type" : "neighbortransportconnectionmode"
                          },
                          "neighborTransportPathMTUDiscovery" : {
                            "disable" : "boolean",
                            "type" : "neighbortransportpathmtudiscovery"
                          },
                          "type" : "neighboradvanced"
                        },
                        "neighborTimers" : {
                          "keepAliveInterval" : "Integer",
                          "holdTime" : "Integer",
                          "minimumHoldTime" : "Integer",
                          "type" : "neighbortimers"
                        },
                        "neighborRoutes" : {
                          "advertisementInterval" : "Integer",
                          "neighborAdvertiseMaps" : [ {
                            "routeMap" : "RouteMap",
                            "existMap" : "boolean",
                            "existRouteMap" : "RouteMap",
                            "type" : "neighboradvertisemap"
                          } ],
                          "removePrivateAs" : "boolean"
                        },
                        "neighborFiltering" : {
                          "neighborDistributeLists" : [ {
                            "accessList" : "AccessList",
                            "filterUpdateAction" : "[IN/OUT]",
                            "type" : "neighbordistributelist",
                            "id" : "uuid of accessList"
                          } ],
                          "neighborRouteMap" : [ {
                            "routeMap" : "RouteMap",
                            "filterUpdateAction" : "[IN/OUT]",
                            "type" : "neighborroutemap"
                          } ],
                          "ipv4PrefixListFilter" : [ {
                            "ipv4PrefixList" : "IPV4PrefixList",
                            "filterUpdateAction" : "[IN/OUT]",
                            "type" : "neighborprefixlist"
                          } ],
                          "neighborFilterList" : [ {
                            "asPathList" : "asPath",
                            "filterUpdateAction" : "[IN/OUT]",
                            "type" : "neighborfilterlist"
                          } ],
                          "neighborMaximumPrefix" : {
                            "maxPrefixLimit" : "long",
                            "thresholdValue" : "Integer",
                            "restartInterval" : "Integer",
                            "warningOnly" : "boolean",
                            "type" : "neighbormaximumprefix"
                          },
                          "neighborDefaultOriginate" : {
                            "routeMap" : "RouteMap",
                            "type" : "neighbordefaultoriginate"
                          }
                        },
                        "neighborLocalAs" : {
                          "asNumber" : "String",
                          "noPrepend" : "boolean",
                          "replaceAs" : "boolean",
                          "dualAs" : "boolean",
                          "type" : "neighborlocalas"
                        },
                        "neighborHaMode" : {
                          "disable" : "boolean",
                          "type" : "neighborhamode"
                        },
                        "ipv6Address" : "String",
                        "ipv6Prefix" : "String",
                        "linkLocalInterface" : "interface",
                        "type" : "neighboripv6"
                      } ],
                      "redistributeProtocols" : [ {
                        "routeMap" : "routemap",
                        "routeMetric" : {
                          "metricValue" : "long"
                        },
                        "type" : "redistributestatic"
                      }, {
                        "routeMap" : "routemap",
                        "routeMetric" : {
                          "metricValue" : "long"
                        },
                        "type" : "redistributeconnected"
                      }, {
                        "routeMap" : "routemap",
                        "routeMetric" : {
                          "metricValue" : "long"
                        },
                        "type" : "redistributerip"
                      }, {
                        "routeMap" : "routemap",
                        "routeMetric" : {
                          "metricValue" : "long"
                        },
                        "type" : "redistributebgp"
                      }, {
                        "processId" : "string",
                        "routeMap" : "routemap",
                        "routeMetric" : {
                          "metricValue" : "long"
                        },
                        "matchExternal1" : "boolean",
                        "matchExternal2" : "boolean",
                        "matchInternal" : "boolean",
                        "matchNssaExternal1" : "boolean",
                        "matchNssaExternal2" : "boolean",
                        "type" : "redistributeospf"
                      } ],
                      "aftableMap" : "RouteMap",
                      "bgpNextHopTriggerDelay" : "Integer",
                      "bgpNextHopTriggerEnable" : "boolean",
                      "id" : "uuid of ipv6 general settings",
                      "type" : "afipv6"
                    },
                    "type" : "bgp"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/bgpgeneralsettings" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves BGP general settings associated with the specified device.**",
        "operationId" : "getAllBGPGeneralSettingModel",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/BGPGeneralSettingModelListContainer"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/bgpgeneralsettings/{objectId}" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves BGP general settings associated with the specified device.**",
        "operationId" : "getBGPGeneralSettingModel",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a BGP general settings.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/BGPGeneralSettingModel"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/bgpgeneralsettings ( Example payload for GET on bgp general settings. )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/bgpgeneralsettings?offset=0&limit=1"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/bgpgeneralsettings/bgpGeneralSettingsUUID"
                    },
                    "id" : "bgpGeneralSettingsUUID"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                },
                "Response Example 2 :GET /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/bgpgeneralsettings?expanded=true ( Example payload for GET on bgp general settings with ?expanded=true. )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/bgpgeneralsettings?offset=0&limit=2&expanded=true"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/bgpgeneralsettings/bgpGeneralSettingsUUID"
                    },
                    "id" : "bgpGeneralSettingsUUID",
                    "name" : "String",
                    "asNumber" : "String",
                    "logNeighborChanges" : "boolean",
                    "maxasLimit" : "Integer",
                    "transportPathMtuDiscovery" : "boolean",
                    "fastExternalFallOver" : "boolean",
                    "enforceFirstAs" : "boolean",
                    "asnotationDot" : "boolean",
                    "bgptimers" : {
                      "keepAlive" : "Integer",
                      "holdTime" : "Integer",
                      "minHoldTime" : "Integer",
                      "type" : "bgptimers"
                    },
                    "bgpGracefulRestart" : {
                      "gracefulRestart" : "boolean",
                      "gracefulRestartRestartTime" : "Integer",
                      "gracefulRestartStalePathTime" : "Integer",
                      "type" : "bgpgracefulrestart"
                    },
                    "bestPath" : {
                      "defaultLocalPreferenceValue" : "Long",
                      "alwaysCompareMed" : "boolean",
                      "bestPathCompareRouterId" : "boolean",
                      "deterministicMed" : "boolean",
                      "bestPathMedMissingAsWorst" : "boolean",
                      "type" : "bgpbestpath"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/ipv4staticroutes" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves, deletes, creates, or modifies the IPv4 Static Route associated with the specified ID. Also, retrieves list of all IPv4 Static routes. When device is in multi virtual router mode, this API is applicable to Global Virtual Router.**",
        "operationId" : "getAllIPv4StaticRouteModel",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/IPv4StaticRouteModelListContainer"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves, deletes, creates, or modifies the IPv4 Static Route associated with the specified ID. Also, retrieves list of all IPv4 Static routes. When device is in multi virtual router mode, this API is applicable to Global Virtual Router. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createMultipleIPv4StaticRouteModel",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The input IPv4 Static Route model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/IPv4StaticRouteModel"
          }
        }, {
          "name" : "bulk",
          "in" : "query",
          "description" : "Enables bulk create for IPv4 static routes.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/IPv4StaticRouteModel"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/ipv4staticroutes ( Example payload for POST on IPv4 Static Routes. )" : {
                  "interfaceName" : "InterfaceLogicalName",
                  "selectedNetworks" : [ {
                    "type" : "Host",
                    "id" : "networkHostUuid",
                    "name" : "Host1"
                  } ],
                  "gateway" : {
                    "object" : {
                      "type" : "Host",
                      "id" : "networkHostUuid",
                      "name" : "Host2"
                    }
                  },
                  "routeTracking" : {
                    "type" : "SLAMonitor",
                    "name" : "sla1",
                    "id" : "sla_monitor_id"
                  },
                  "metricValue" : 22,
                  "type" : "IPv4StaticRoute",
                  "isTunneled" : false
                },
                "Request example 2 : POST /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/ipv4staticroutes ( Example payload for POST on IPv4 Static Routes with NULL0 interface. )" : {
                  "interfaceName" : "Null0",
                  "selectedNetworks" : [ {
                    "type" : "Host",
                    "id" : "networkHostUuid",
                    "name" : "Host1"
                  } ],
                  "metricValue" : 1,
                  "type" : "IPv4StaticRoute",
                  "isTunneled" : false
                },
                "Response Example 1 :POST /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/ipv4staticroutes ( Example payload for POST on IPv4 Static Routes. )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/ipv4staticroutes/ipv4StaticRouteUuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/staticroutes"
                  },
                  "interfaceName" : "InterfaceLogicalName",
                  "selectedNetworks" : [ {
                    "type" : "Host",
                    "id" : "networkHostUuid",
                    "name" : "Host1"
                  } ],
                  "gateway" : {
                    "object" : {
                      "type" : "Host",
                      "id" : "networkHostUuid",
                      "name" : "Host2"
                    }
                  },
                  "routeTracking" : {
                    "type" : "SLAMonitor",
                    "name" : "sla1",
                    "id" : "sla_monitor_id"
                  },
                  "metricValue" : 22,
                  "type" : "IPv4StaticRoute",
                  "isTunneled" : false,
                  "id" : "ipv4StaticRouteUuid"
                },
                "Response Example 2 :POST /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/ipv4staticroutes ( Example payload for POST on IPv4 Static Routes with NULL0 interface. )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/ipv4staticroutes/ipv4StaticRouteUuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/staticroutes"
                  },
                  "interfaceName" : "Null0",
                  "selectedNetworks" : [ {
                    "type" : "Host",
                    "id" : "networkHostUuid",
                    "name" : "Host1"
                  } ],
                  "metricValue" : 1,
                  "type" : "IPv4StaticRoute",
                  "isTunneled" : false,
                  "id" : "ipv4StaticRouteUuid"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/IPv4StaticRouteModel"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/ipv4staticroutes/{objectId}" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves, deletes, creates, or modifies the IPv4 Static Route associated with the specified ID. Also, retrieves list of all IPv4 Static routes. When device is in multi virtual router mode, this API is applicable to Global Virtual Router.**",
        "operationId" : "getIPv4StaticRouteModel",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a IPv4 Static Route.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/IPv4StaticRouteModel"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/ipv4staticroutes/ipv4StaticRouteUuid ( Example payload for GET on IPv4 Static Routes. )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/ipv4staticroutes/ipv4StaticRouteUuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/staticroutes"
                  },
                  "interfaceName" : "InterfaceLogicalName",
                  "selectedNetworks" : [ {
                    "type" : "Network",
                    "id" : "networkObjUuid",
                    "name" : "any"
                  } ],
                  "gateway" : {
                    "literal" : {
                      "type" : "Host",
                      "value" : "5.5.5.5"
                    }
                  },
                  "routeTracking" : {
                    "type" : "SLAMonitor",
                    "name" : "sla1",
                    "id" : "sla_monitor_id"
                  },
                  "metricValue" : 1,
                  "isTunneled" : false,
                  "type" : "IPv4StaticRoute",
                  "id" : "ipv4StaticRouteUuid"
                },
                "Response Example 2 :GET /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/ipv4staticroutes ( Example payload for GET on IPv4 Static Routes. )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/ipv4staticroutes?offset=0&limit=2"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/ipv4staticroutes/ipv4StaticRouteUuid",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/staticroutes"
                    },
                    "type" : "IPv4StaticRoute",
                    "id" : "ipv4StaticRouteUuid"
                  }, {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/ipv4staticroutes/ipv4StaticRouteUuid",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/staticroutes"
                    },
                    "type" : "IPv4StaticRoute",
                    "id" : "ipv4StaticRouteUuid"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                },
                "Response Example 3 :GET /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/ipv4staticroutes?expanded=true ( Example payload for GET on IPv4 Static Routes with ?expanded=true )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/ipv4staticroutes?offset=0&limit=2&expanded=true"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/ipv4staticroutes/ipv4StaticRouteUuid",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/staticroutes"
                    },
                    "interfaceName" : "InterfaceLogicalName",
                    "selectedNetworks" : [ {
                      "type" : "Network",
                      "id" : "networkObjUuid",
                      "name" : "any"
                    } ],
                    "gateway" : {
                      "literal" : {
                        "type" : "Host",
                        "value" : "5.5.5.5"
                      }
                    },
                    "routeTracking" : {
                      "type" : "SLAMonitor",
                      "name" : "sla1",
                      "id" : "sla_monitor_id"
                    },
                    "metricValue" : 1,
                    "isTunneled" : false,
                    "type" : "IPv4StaticRoute",
                    "id" : "ipv4StaticRouteUuid"
                  }, {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/ipv4staticroutes/ipv4StaticRouteUuid",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/staticroutes"
                    },
                    "interfaceName" : "InterfaceLogicalName",
                    "selectedNetworks" : [ {
                      "type" : "Network",
                      "id" : "networkObjUuid",
                      "name" : "any"
                    } ],
                    "gateway" : {
                      "object" : {
                        "type" : "Host",
                        "id" : "networkHostUuid",
                        "name" : "networkHostName"
                      }
                    },
                    "metricValue" : 1,
                    "isTunneled" : false,
                    "type" : "IPv4StaticRoute",
                    "id" : "ipv4StaticRouteUuid"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves, deletes, creates, or modifies the IPv4 Static Route associated with the specified ID. Also, retrieves list of all IPv4 Static routes. When device is in multi virtual router mode, this API is applicable to Global Virtual Router. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateIPv4StaticRouteModel",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a IPv4 Static Route.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The input IPv4 Static Route model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/IPv4StaticRouteModel"
          }
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/IPv4StaticRouteModel"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/ipv4staticroutes/ipv4StaticRouteUuid ( Example payload for PUT on IPv4 Static Routes. )" : {
                  "interfaceName" : "InterfaceLogicalName",
                  "selectedNetworks" : [ {
                    "type" : "Host",
                    "id" : "networkHostUuid",
                    "name" : "Host1"
                  } ],
                  "gateway" : {
                    "object" : {
                      "type" : "Host",
                      "id" : "networkHostUuid",
                      "name" : "Host2"
                    }
                  },
                  "routeTracking" : {
                    "type" : "SLAMonitor",
                    "name" : "sla1",
                    "id" : "sla_monitor_id"
                  },
                  "metricValue" : 50,
                  "type" : "IPv4StaticRoute",
                  "isTunneled" : false,
                  "id" : "ipv4StaticRouteUuid"
                },
                "Response Example 1 :PUT /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/ipv4staticroutes/ipv4StaticRouteUuid ( Example payload for PUT on IPv4 Static Routes. )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/ipv4staticroutes/ipv4StaticRouteUuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/staticroutes"
                  },
                  "interfaceName" : "InterfaceLogicalName",
                  "selectedNetworks" : [ {
                    "type" : "Host",
                    "id" : "networkHostUuid",
                    "name" : "Host1"
                  } ],
                  "gateway" : {
                    "object" : {
                      "type" : "Host",
                      "id" : "networkHostUuid",
                      "name" : "Host2"
                    }
                  },
                  "routeTracking" : {
                    "type" : "SLAMonitor",
                    "name" : "sla1",
                    "id" : "sla_monitor_id"
                  },
                  "metricValue" : 50,
                  "type" : "IPv4StaticRoute",
                  "isTunneled" : false,
                  "id" : "ipv4StaticRouteUuid"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/IPv4StaticRouteModel"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves, deletes, creates, or modifies the IPv4 Static Route associated with the specified ID. Also, retrieves list of all IPv4 Static routes. When device is in multi virtual router mode, this API is applicable to Global Virtual Router. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteIPv4StaticRouteModel",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a IPv4 Static Route.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/IPv4StaticRouteModel"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/ipv4staticroutes/ipv4StaticRouteUuid ( Example payload for DELETE on IPv4 Static Routes.  )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/ipv4staticroutes/ipv4StaticRouteUuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/staticroutes"
                  },
                  "interfaceName" : "InterfaceLogicalName",
                  "selectedNetworks" : [ {
                    "type" : "Host",
                    "id" : "networkHostUuid",
                    "name" : "Host1"
                  } ],
                  "gateway" : {
                    "object" : {
                      "type" : "Host",
                      "id" : "networkHostUuid",
                      "name" : "Host2"
                    }
                  },
                  "routeTracking" : {
                    "type" : "SLAMonitor",
                    "name" : "sla1",
                    "id" : "sla_monitor_id"
                  },
                  "metricValue" : 22,
                  "type" : "IPv4StaticRoute",
                  "isTunneled" : false,
                  "id" : "ipv4StaticRouteUuid"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/ipv6staticroutes" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves, deletes, creates, or modifies the IPv6 Static Route associated with the specified ID. Also, retrieves list of all IPv6 Static routes. When device is in multi virtual router mode, this API is applicable to Global Virtual Router.**",
        "operationId" : "getAllIPv6StaticRouteModel",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/IPv6StaticRouteModelListContainer"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves, deletes, creates, or modifies the IPv6 Static Route associated with the specified ID. Also, retrieves list of all IPv6 Static routes. When device is in multi virtual router mode, this API is applicable to Global Virtual Router. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createMultipleIPv6StaticRouteModel",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The input IPv6 Static Route model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/IPv6StaticRouteModel"
          }
        }, {
          "name" : "bulk",
          "in" : "query",
          "description" : "Enables bulk create for IPv6 static routes.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/IPv6StaticRouteModel"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/ipv6staticroutes ( Example payload for POST on IPv6 Static Routes. )" : {
                  "interfaceName" : "InterfaceLogicalName",
                  "selectedNetworks" : [ {
                    "type" : "Host",
                    "id" : "networkHostUuid",
                    "name" : "Host1"
                  } ],
                  "gateway" : {
                    "object" : {
                      "type" : "Host",
                      "id" : "networkHostUuid",
                      "name" : "Host2"
                    }
                  },
                  "metricValue" : 22,
                  "type" : "IPv6StaticRoute",
                  "isTunneled" : false
                },
                "Request example 2 : POST /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/ipv6staticroutes ( Example payload for POST on IPv6 Static Routes with NULL0 Interface. )" : {
                  "interfaceName" : "Null0",
                  "selectedNetworks" : [ {
                    "type" : "Host",
                    "id" : "networkHostUuid",
                    "name" : "Host1"
                  } ],
                  "type" : "IPv6StaticRoute"
                },
                "Response Example 1 :POST /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/ipv6staticroutes ( Example payload for POST on IPv6 Static Routes. )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/ipv6staticroutes/ipv6StaticRouteUuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/staticroutes"
                  },
                  "interfaceName" : "InterfaceLogicalName",
                  "selectedNetworks" : [ {
                    "type" : "Host",
                    "id" : "networkHostUuid",
                    "name" : "Host1"
                  } ],
                  "gateway" : {
                    "object" : {
                      "type" : "Host",
                      "id" : "networkHostUuid",
                      "name" : "Host2"
                    }
                  },
                  "metricValue" : 22,
                  "type" : "IPv6StaticRoute",
                  "isTunneled" : false,
                  "id" : "ipv6StaticRouteUuid"
                },
                "Response Example 2 :POST /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/ipv6staticroutes ( Example payload for POST on IPv6 Static Routes with NULL0 Interface. )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/ipv6staticroutes/ipv6StaticRouteUuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/staticroutes"
                  },
                  "interfaceName" : "Null0",
                  "selectedNetworks" : [ {
                    "type" : "Host",
                    "id" : "networkHostUuid",
                    "name" : "Host1"
                  } ],
                  "type" : "IPv6StaticRoute",
                  "id" : "ipv6StaticRouteUuid"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/IPv6StaticRouteModel"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/ipv6staticroutes/{objectId}" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves, deletes, creates, or modifies the IPv6 Static Route associated with the specified ID. Also, retrieves list of all IPv6 Static routes. When device is in multi virtual router mode, this API is applicable to Global Virtual Router.**",
        "operationId" : "getIPv6StaticRouteModel",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a IPv6 Static Route.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/IPv6StaticRouteModel"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/ipv6staticroutes/ipv6StaticRouteUuid ( Example payload for GET on IPv6 Static Routes. )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/ipv6staticroutes/ipv6StaticRouteUuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/staticroutes"
                  },
                  "interfaceName" : "InterfaceLogicalName",
                  "selectedNetworks" : [ {
                    "type" : "Network",
                    "id" : "networkObjUuid",
                    "name" : "any"
                  } ],
                  "gateway" : {
                    "literal" : {
                      "type" : "Host",
                      "value" : "fe::"
                    }
                  },
                  "metricValue" : 1,
                  "isTunneled" : false,
                  "type" : "IPv6StaticRoute",
                  "id" : "ipv6StaticRouteUuid"
                },
                "Response Example 2 :GET /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/ipv6staticroutes ( Example payload for GET on IPv6 Static Routes. )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/ipv6staticroutes?offset=0&limit=2"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/ipv6staticroutes/ipv6StaticRouteUuid",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/staticroutes"
                    },
                    "type" : "IPv6StaticRoute",
                    "id" : "ipv6StaticRouteUuid"
                  }, {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/ipv6staticroutes/ipv6StaticRouteUuid",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/staticroutes"
                    },
                    "type" : "IPv6StaticRoute",
                    "id" : "ipv6StaticRouteUuid"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                },
                "Response Example 3 :GET /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/ipv6staticroutes?expanded=true ( Example payload for GET on IPv6 Static Routes with ?expanded=true )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/ipv6staticroutes?offset=0&limit=2&expanded=true"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/ipv6staticroutes/ipv6StaticRouteUuid",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/staticroutes"
                    },
                    "interfaceName" : "InterfaceLogicalName",
                    "selectedNetworks" : [ {
                      "type" : "Network",
                      "id" : "networkObjUuid",
                      "name" : "any"
                    } ],
                    "gateway" : {
                      "literal" : {
                        "type" : "Host",
                        "value" : "5.5.5.5"
                      }
                    },
                    "metricValue" : 1,
                    "isTunneled" : false,
                    "type" : "IPv6StaticRoute",
                    "id" : "ipv6StaticRouteUuid"
                  }, {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/ipv6staticroutes/ipv6StaticRouteUuid",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/staticroutes"
                    },
                    "interfaceName" : "InterfaceLogicalName",
                    "selectedNetworks" : [ {
                      "type" : "Network",
                      "id" : "networkObjUuid",
                      "name" : "any"
                    } ],
                    "gateway" : {
                      "object" : {
                        "type" : "Host",
                        "id" : "networkHostUuid",
                        "name" : "networkHostName"
                      }
                    },
                    "metricValue" : 1,
                    "isTunneled" : false,
                    "type" : "IPv6StaticRoute",
                    "id" : "ipv6StaticRouteUuid"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves, deletes, creates, or modifies the IPv6 Static Route associated with the specified ID. Also, retrieves list of all IPv6 Static routes. When device is in multi virtual router mode, this API is applicable to Global Virtual Router. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateIPv6StaticRouteModel",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a IPv6 Static Route.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The input IPv6 Static Route model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/IPv6StaticRouteModel"
          }
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/IPv6StaticRouteModel"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/ipv6staticroutes/ipv6StaticRouteUuid ( Example payload for PUT on IPv6 Static Routes. )" : {
                  "interfaceName" : "InterfaceLogicalName",
                  "selectedNetworks" : [ {
                    "type" : "Host",
                    "id" : "networkHostUuid",
                    "name" : "Host1"
                  } ],
                  "gateway" : {
                    "object" : {
                      "type" : "Host",
                      "id" : "networkHostUuid",
                      "name" : "Host2"
                    }
                  },
                  "metricValue" : 50,
                  "type" : "IPv6StaticRoute",
                  "isTunneled" : false,
                  "id" : "ipv6StaticRouteUuid"
                },
                "Response Example 1 :PUT /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/ipv6staticroutes/ipv6StaticRouteUuid ( Example payload for PUT on IPv6 Static Routes. )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/ipv6staticroutes/ipv6StaticRouteUuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/staticroutes"
                  },
                  "interfaceName" : "InterfaceLogicalName",
                  "selectedNetworks" : [ {
                    "type" : "Host",
                    "id" : "networkHostUuid",
                    "name" : "Host1"
                  } ],
                  "gateway" : {
                    "object" : {
                      "type" : "Host",
                      "id" : "networkHostUuid",
                      "name" : "Host2"
                    }
                  },
                  "metricValue" : 50,
                  "type" : "IPv6StaticRoute",
                  "isTunneled" : false,
                  "id" : "ipv6StaticRouteUuid"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/IPv6StaticRouteModel"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves, deletes, creates, or modifies the IPv6 Static Route associated with the specified ID. Also, retrieves list of all IPv6 Static routes. When device is in multi virtual router mode, this API is applicable to Global Virtual Router. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteIPv6StaticRouteModel",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a IPv6 Static Route.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/IPv6StaticRouteModel"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/ipv6staticroutes/ipv6StaticRouteUuid ( Example payload for DELETE on IPv6 Static Routes. )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/ipv6staticroutes/ipv6StaticRouteUuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/staticroutes"
                  },
                  "interfaceName" : "InterfaceLogicalName",
                  "selectedNetworks" : [ {
                    "type" : "Host",
                    "id" : "networkHostUuid",
                    "name" : "Host1"
                  } ],
                  "gateway" : {
                    "object" : {
                      "type" : "Host",
                      "id" : "networkHostUuid",
                      "name" : "Host2"
                    }
                  },
                  "metricValue" : 22,
                  "type" : "IPv6StaticRoute",
                  "isTunneled" : false,
                  "id" : "ipv6StaticRouteUuid"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/ospfinterface" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves, deletes, creates, or modifies the OSPF Interface associated with the specified ID. Also, retrieves list of all OSPF v2 process. When device is in multi virtual router mode, this API is applicable to Global Virtual Router.**",
        "operationId" : "getAllOspfInterfacePolicyModel",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/OspfInterfacePolicyModelListContainer"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/ospfinterface/{objectId}" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves, deletes, creates, or modifies the OSPF Interface associated with the specified ID. Also, retrieves list of all OSPF v2 process. When device is in multi virtual router mode, this API is applicable to Global Virtual Router.**",
        "operationId" : "getOspfInterfacePolicyModel",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a OSPF Interface Policy.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/OspfInterfacePolicyModel"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/ospfv2routes" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves, deletes, creates, or modifies the OSPF V2 associated with the specified ID. Also, retrieves list of all OSPF v2 process. When device is in multi virtual router mode, this API is applicable to Global Virtual Router.**",
        "operationId" : "getAllOspfPolicyModel",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/OspfPolicyModelListContainer"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/ospfv2routes/{objectId}" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves, deletes, creates, or modifies the OSPF V2 associated with the specified ID. Also, retrieves list of all OSPF v2 process. When device is in multi virtual router mode, this API is applicable to Global Virtual Router.**",
        "operationId" : "getOspfPolicyModel",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a OSPF Policy.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/OspfPolicyModel"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/ospfv3interfaces" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves list of OSPF v3 process. Also, deletes, creates, or modifies the OSPFv3 Interface associated with the specified ID.**",
        "operationId" : "getAllOspfv3InterfacePolicyModel",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Ospfv3InterfacePolicyModelListContainer"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/ospfv3interfaces/{objectId}" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves list of OSPF v3 process. Also, deletes, creates, or modifies the OSPFv3 Interface associated with the specified ID.**",
        "operationId" : "getOspfv3InterfacePolicyModel",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a OSPFv3 Interface Policy.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Ospfv3InterfacePolicyModel"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/ospfv3interfaces?expanded=true ( Example payload for GET on ospfv3 interfaces with expanded flag as true. )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/ospfv3interfaces?offset=0&limit=2&expanded=true"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/ospfv3interfaces/ospfv3interfacesuuid"
                    },
                    "id" : "ospfv3interfacesuuid",
                    "type" : "ospfv3interface",
                    "deviceInterface" : {
                      "id" : "uuid",
                      "name" : "Interface name",
                      "type" : "Interface"
                    },
                    "properties" : {
                      "filterOutgoingLSA" : "boolean",
                      "ignoreMtuMismatch" : "boolean",
                      "floodReduction" : "boolean",
                      "ptpNonBroadcast" : "boolean",
                      "cost" : "integer",
                      "priority" : "integer",
                      "helloInterval" : "integer",
                      "deadInterval" : "integer",
                      "retransmitInterval" : "integer",
                      "transmitDelay" : "integer"
                    },
                    "authentication" : {
                      "type" : "INTERFACE",
                      "securityIndex" : "String",
                      "authentication" : "MD_5 | SHA_1",
                      "authKey" : "String",
                      "encryptAuthKey" : "boolean",
                      "encryption" : {
                        "algorithm" : "TRIPLE_DES | AES_CBC | DES",
                        "keyType" : "AES_128 | AES_192 | AES_256",
                        "encryptionKey" : "String",
                        "keyEncrypted" : "boolean"
                      }
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                },
                "Response Example 2 :GET /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/ospfv3interfaces/ospfv3interfacesuuid ( Example payload for GET on ospfv3 interfaces with specified id )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/ospfv3interfaces/ospfv3interfacesuuid"
                  },
                  "id" : "ospfv3interfacesuuid",
                  "type" : "ospfv3interface",
                  "deviceInterface" : {
                    "id" : "uuid",
                    "name" : "Interface name",
                    "type" : "Interface"
                  },
                  "properties" : {
                    "filterOutgoingLSA" : "boolean",
                    "ignoreMtuMismatch" : "boolean",
                    "floodReduction" : "boolean",
                    "ptpNonBroadcast" : "boolean",
                    "cost" : "integer",
                    "priority" : "integer",
                    "helloInterval" : "integer",
                    "deadInterval" : "integer",
                    "retransmitInterval" : "integer",
                    "transmitDelay" : "integer"
                  },
                  "authentication" : {
                    "type" : "INTERFACE",
                    "securityIndex" : "String",
                    "authentication" : "MD_5 | SHA_1",
                    "authKey" : "String",
                    "encryptAuthKey" : "boolean",
                    "encryption" : {
                      "algorithm" : "TRIPLE_DES | AES_CBC | DES",
                      "keyType" : "AES_128 | AES_192 | AES_256",
                      "encryptionKey" : "String",
                      "keyEncrypted" : "boolean"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/ospfv3routes" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves list of OSPF v3 process. Also, deletes, creates, or modifies the OSPF V3 associated with the specified ID.**",
        "operationId" : "getAllOspfv3PolicyModel",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Ospfv3PolicyModelListContainer"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/ospfv3routes/{objectId}" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves list of OSPF v3 process. Also, deletes, creates, or modifies the OSPF V3 associated with the specified ID.**",
        "operationId" : "getOspfv3PolicyModel",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a OSPFv3 Policy.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Ospfv3PolicyModel"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/ospfv3routes?expanded=true ( Example payload for GET on ospfv3 routes with expanded flag as true. )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/ospfv3routes?offset=0&limit=2&expanded=true"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/ospfv3routes/ospfv3routesuuid"
                    },
                    "id" : "ospfv3routesuuid",
                    "type" : "ospfv3route",
                    "description" : "string",
                    "processId" : "Integer",
                    "processConfiguration" : {
                      "routerId" : "string",
                      "ignoreLsaMospf" : "boolean",
                      "logAdjacencyChanges" : {
                        "logType" : "DEFAULT|DETAILED"
                      },
                      "administrativeDistance" : {
                        "interArea" : "short",
                        "intraArea" : "short",
                        "external" : "short"
                      },
                      "timers" : {
                        "lsaArrival" : "integer",
                        "floodPacing" : "integer",
                        "lsaGroup" : "integer",
                        "retransmission" : "integer",
                        "lsaThrottleTimer" : {
                          "initialDelay" : "integer",
                          "minimumDelay" : "integer",
                          "maximumDelay" : "integer"
                        },
                        "spfThrottleTimer" : {
                          "initialDelay" : "integer",
                          "minimumHoldTime" : "integer",
                          "maximumWaitTime" : "integer"
                        }
                      },
                      "defaultInformationOriginate" : {
                        "always" : "boolean",
                        "routeMetric" : {
                          "metricValue" : "long",
                          "metricType" : "TYPE_1|TYPE_2"
                        },
                        "routeMap" : {
                          "id" : "uuid",
                          "name" : "Object name",
                          "type" : "RouteMap"
                        }
                      },
                      "nsfGracefulRestart" : {
                        "gracefulRestartHelper" : {
                          "enableLSA" : "boolean"
                        },
                        "gracefulRestart" : {
                          "gracefulRestartInterval" : "Integer"
                        }
                      }
                    },
                    "interfaces" : [ {
                      "id" : "uuid",
                      "name" : "Interface name",
                      "type" : "Interface"
                    } ],
                    "areas" : [ {
                      "areaId" : "string",
                      "cost" : "long",
                      "areaType" : {
                        "noRedistribution" : "boolean",
                        "noSummary" : "boolean",
                        "routeMetric" : {
                          "metricValue" : "long",
                          "metricType" : "TYPE_1|TYPE_2"
                        },
                        "type" : "nssa"
                      },
                      "virtualLinks" : [ {
                        "routerId" : "string",
                        "ttlSecurity" : "short",
                        "deadInterval" : "short",
                        "helloInterval" : "short",
                        "retransmitInterval" : "short",
                        "transmitDelay" : "short"
                      } ],
                      "routeSummary" : [ {
                        "ipv6Prefix" : {
                          "id" : "uuid",
                          "name" : "ipv6 prefix object name",
                          "type" : "ipv6prefixlist"
                        },
                        "advertise" : "boolean",
                        "cost" : "long"
                      } ],
                      "neighbors" : {
                        "deviceInterface" : {
                          "id" : "uuid",
                          "name" : "Interface name",
                          "type" : "Interface"
                        },
                        "configurations" : [ {
                          "linkLocalAddress" : "String",
                          "properties" : {
                            "neighborPriority" : {
                              "priority" : "integer",
                              "pollInterval" : "integer"
                            }
                          }
                        }, {
                          "linkLocalAddress" : "String",
                          "properties" : {
                            "neighborCost" : {
                              "cost" : "integer",
                              "filterOutgoingLSA" : "Boolean"
                            }
                          }
                        } ]
                      }
                    } ],
                    "redistributeProtocols" : [ {
                      "type" : "redistributestatic",
                      "tagNumber" : "long",
                      "routeMap" : {
                        "id" : "uuid",
                        "name" : "Routemap name",
                        "type" : "RouteMap"
                      },
                      "routeMetric" : {
                        "metricValue" : "long",
                        "metricType" : "NONE|TYPE_1|TYPE_2"
                      }
                    }, {
                      "type" : "redistributeconnected",
                      "tagNumber" : "long",
                      "routeMap" : {
                        "id" : "uuid",
                        "name" : "Routemap name",
                        "type" : "RouteMap"
                      },
                      "routeMetric" : {
                        "metricValue" : "long",
                        "metricType" : "NONE|TYPE_1|TYPE_2"
                      }
                    }, {
                      "type" : "redistributebgp",
                      "asNumber" : "string",
                      "tagNumber" : "long",
                      "routeMap" : {
                        "id" : "uuid",
                        "name" : "Object name",
                        "type" : "RouteMap"
                      },
                      "routeMetric" : {
                        "metricValue" : "long",
                        "metricType" : "NONE|TYPE_1|TYPE_2"
                      }
                    }, {
                      "type" : "redistributeospf",
                      "processId" : "integer",
                      "tagNumber" : "long",
                      "routeMap" : {
                        "id" : "uuid",
                        "name" : "Routemap name",
                        "type" : "RouteMap"
                      },
                      "routeMetric" : {
                        "metricValue" : "long",
                        "metricType" : "NONE|TYPE_1|TYPE_2"
                      },
                      "includeConnected" : "boolean",
                      "matchExternal1" : "boolean",
                      "matchExternal2" : "boolean",
                      "matchInternal" : "boolean",
                      "matchNssaExternal1" : "boolean",
                      "matchNssaExternal2" : "boolean"
                    } ],
                    "summaryPrefix" : [ {
                      "ipv6Prefix" : {
                        "id" : "uuid",
                        "name" : "IPV6 prfix object name",
                        "type" : "ipv6prefixlist"
                      },
                      "tag" : "String",
                      "advertise" : "boolean"
                    } ]
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                },
                "Response Example 2 :GET /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/ospfv3routes/ospfv3routesuuid ( Example payload for GET on ospfv3 routes with specified id )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/ospfv3routes/ospfv3routesuuid"
                  },
                  "id" : "ospfv3routesuuid",
                  "type" : "ospfv3route",
                  "description" : "string",
                  "processId" : "Integer",
                  "processConfiguration" : {
                    "routerId" : "string",
                    "ignoreLsaMospf" : "boolean",
                    "logAdjacencyChanges" : {
                      "logType" : "DEFAULT|DETAILED"
                    },
                    "administrativeDistance" : {
                      "interArea" : "short",
                      "intraArea" : "short",
                      "external" : "short"
                    },
                    "timers" : {
                      "lsaArrival" : "integer",
                      "floodPacing" : "integer",
                      "lsaGroup" : "integer",
                      "retransmission" : "integer",
                      "lsaThrottleTimer" : {
                        "initialDelay" : "integer",
                        "minimumDelay" : "integer",
                        "maximumDelay" : "integer"
                      },
                      "spfThrottleTimer" : {
                        "initialDelay" : "integer",
                        "minimumHoldTime" : "integer",
                        "maximumWaitTime" : "integer"
                      }
                    },
                    "defaultInformationOriginate" : {
                      "always" : "boolean",
                      "routeMetric" : {
                        "metricValue" : "long",
                        "metricType" : "TYPE_1|TYPE_2"
                      },
                      "routeMap" : {
                        "id" : "uuid",
                        "name" : "Object name",
                        "type" : "RouteMap"
                      }
                    },
                    "nsfGracefulRestart" : {
                      "gracefulRestartHelper" : {
                        "enableLSA" : "boolean"
                      },
                      "gracefulRestart" : {
                        "gracefulRestartInterval" : "Integer"
                      }
                    }
                  },
                  "interfaces" : [ {
                    "id" : "uuid",
                    "name" : "Interface name",
                    "type" : "Interface"
                  } ],
                  "areas" : [ {
                    "areaId" : "string",
                    "cost" : "long",
                    "areaType" : {
                      "noRedistribution" : "boolean",
                      "noSummary" : "boolean",
                      "routeMetric" : {
                        "metricValue" : "long",
                        "metricType" : "TYPE_1|TYPE_2"
                      },
                      "type" : "nssa"
                    },
                    "virtualLinks" : [ {
                      "routerId" : "string",
                      "ttlSecurity" : "short",
                      "deadInterval" : "short",
                      "helloInterval" : "short",
                      "retransmitInterval" : "short",
                      "transmitDelay" : "short"
                    } ],
                    "routeSummary" : [ {
                      "ipv6Prefix" : {
                        "id" : "uuid",
                        "name" : "ipv6 prefix object name",
                        "type" : "ipv6prefixlist"
                      },
                      "advertise" : "boolean",
                      "cost" : "long"
                    } ],
                    "neighbors" : {
                      "deviceInterface" : {
                        "id" : "uuid",
                        "name" : "Interface name",
                        "type" : "Interface"
                      },
                      "configurations" : [ {
                        "linkLocalAddress" : "String",
                        "properties" : {
                          "neighborPriority" : {
                            "priority" : "integer",
                            "pollInterval" : "integer"
                          }
                        }
                      }, {
                        "linkLocalAddress" : "String",
                        "properties" : {
                          "neighborCost" : {
                            "cost" : "integer",
                            "filterOutgoingLSA" : "Boolean"
                          }
                        }
                      } ]
                    }
                  } ],
                  "redistributeProtocols" : [ {
                    "type" : "redistributestatic",
                    "tagNumber" : "long",
                    "routeMap" : {
                      "id" : "uuid",
                      "name" : "Routemap name",
                      "type" : "RouteMap"
                    },
                    "routeMetric" : {
                      "metricValue" : "long",
                      "metricType" : "NONE|TYPE_1|TYPE_2"
                    }
                  }, {
                    "type" : "redistributeconnected",
                    "tagNumber" : "long",
                    "routeMap" : {
                      "id" : "uuid",
                      "name" : "Routemap name",
                      "type" : "RouteMap"
                    },
                    "routeMetric" : {
                      "metricValue" : "long",
                      "metricType" : "NONE|TYPE_1|TYPE_2"
                    }
                  }, {
                    "type" : "redistributebgp",
                    "asNumber" : "string",
                    "tagNumber" : "long",
                    "routeMap" : {
                      "id" : "uuid",
                      "name" : "Object name",
                      "type" : "RouteMap"
                    },
                    "routeMetric" : {
                      "metricValue" : "long",
                      "metricType" : "NONE|TYPE_1|TYPE_2"
                    }
                  }, {
                    "type" : "redistributeospf",
                    "processId" : "integer",
                    "tagNumber" : "long",
                    "routeMap" : {
                      "id" : "uuid",
                      "name" : "Routemap name",
                      "type" : "RouteMap"
                    },
                    "routeMetric" : {
                      "metricValue" : "long",
                      "metricType" : "NONE|TYPE_1|TYPE_2"
                    },
                    "includeConnected" : "boolean",
                    "matchExternal1" : "boolean",
                    "matchExternal2" : "boolean",
                    "matchInternal" : "boolean",
                    "matchNssaExternal1" : "boolean",
                    "matchNssaExternal2" : "boolean"
                  } ],
                  "summaryPrefix" : [ {
                    "ipv6Prefix" : {
                      "id" : "uuid",
                      "name" : "IPV6 prfix object name",
                      "type" : "ipv6prefixlist"
                    },
                    "tag" : "String",
                    "advertise" : "boolean"
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/staticroutes" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves list of all Static routes (ipv4 and ipv6) associated with the specified device. When device is in multi virtual router mode, this API is applicable to Global Virtual Router.**",
        "operationId" : "getAllStaticRouteModel",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/StaticRouteModelListContainer"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/staticroutes/{objectId}" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves list of all Static routes (ipv4 and ipv6) associated with the specified device. When device is in multi virtual router mode, this API is applicable to Global Virtual Router.**",
        "operationId" : "getStaticRouteModel",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a Static Route",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/StaticRouteModel"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/staticroutes ( Example payload for GET on static routes )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/staticroutes?offset=0&limit=2"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/ipv4staticroutes/ipv4StaticRouteUuid",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/staticroutes"
                    },
                    "type" : "IPv4StaticRoute",
                    "id" : "ipv4StaticRouteUuid"
                  }, {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/ipv6staticroutes/ipv6StaticRouteUuid",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/staticroutes"
                    },
                    "type" : "IPv6StaticRoute",
                    "id" : "ipv6StaticRouteUuid"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                },
                "Response Example 2 :GET /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/staticroutes?expanded=true ( Example payload for GET on static routes with ?expanded=true )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/staticroutes?offset=0&limit=2&expanded=true"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/ipv4staticroutes/ipv4StaticRouteUuid",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/staticroutes"
                    },
                    "interfaceName" : "InterfaceLogicalName",
                    "selectedNetworks" : [ {
                      "type" : "Network",
                      "id" : "networkObjUuid",
                      "name" : "any"
                    } ],
                    "gateway" : {
                      "literal" : {
                        "type" : "Host",
                        "value" : "5.5.5.5"
                      }
                    },
                    "metricValue" : 1,
                    "isTunneled" : false,
                    "type" : "IPv4StaticRoute",
                    "id" : "ipv4StaticRouteUuid"
                  }, {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/ipv6staticroutes/ipv6StaticRouteUuid",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/staticroutes"
                    },
                    "interfaceName" : "InterfaceLogicalName",
                    "selectedNetworks" : [ {
                      "type" : "Network",
                      "id" : "networkObjUuid",
                      "name" : "any"
                    } ],
                    "gateway" : {
                      "object" : {
                        "type" : "Host",
                        "id" : "networkHostUuid",
                        "name" : "networkHostName"
                      }
                    },
                    "metricValue" : 1,
                    "isTunneled" : false,
                    "type" : "IPv6StaticRoute",
                    "id" : "ipv6StaticRouteUuid"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/virtualrouters" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves list of all virtual routers created in the specified device.**",
        "operationId" : "getAllVirtualRouterModel",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/VirtualRouterModelListContainer"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves list of all virtual routers created in the specified device. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createVirtualRouterModel",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The input Virtual Router Model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VirtualRouterModel"
          }
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/VirtualRouterModel"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/virtualrouters ( Example payload for POST on Virtual Router. )" : {
                  "type" : "VirtualRouter",
                  "name" : "Beta",
                  "description" : "Human Resource Department Virtual Router",
                  "interfaces" : [ {
                    "id" : "interface_uuid1",
                    "type" : "PhysicalInterface",
                    "name" : "OUTSIDE"
                  }, {
                    "id" : "interface_uuid2",
                    "type" : "SubInterface",
                    "name" : "OUTSIDE-SUB"
                  } ]
                },
                "Response Example 1 :POST /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/virtualrouters ( Example payload for POST on Virtual Router. )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/virtualrouters/virtualrouterUuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/virtualrouters"
                  },
                  "metadata" : {
                    "timestamp" : 1529431113943,
                    "domain" : {
                      "name" : "Global",
                      "id" : "GlobalDomainUUID",
                      "type" : "Domain"
                    }
                  },
                  "type" : "VirtualRouter",
                  "name" : "Beta",
                  "description" : "Human Resource Department Virtual Router",
                  "interfaces" : [ {
                    "id" : "interface_uuid1",
                    "type" : "PhysicalInterface",
                    "name" : "OUTSIDE"
                  }, {
                    "id" : "interface_uuid2",
                    "type" : "SubInterface",
                    "name" : "OUTSIDE-SUB"
                  } ],
                  "id" : "virtualrouterUuid"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/VirtualRouterModel"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/virtualrouters/{objectId}" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves list of all virtual routers created in the specified device.**",
        "operationId" : "getVirtualRouterModel",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a Virtual Router",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/VirtualRouterModel"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/virtualrouters?offset=0&limit=2 ( Example payload for GET on virtual routers )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/virtualrouters?offset=0&limit=2"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/virtualrouters/virtualrouterUuid",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/virtualrouters"
                    },
                    "type" : "VirtualRouter",
                    "id" : "virtualrouterUuid"
                  }, {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/virtualrouters/virtualrouterUuid",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/virtualrouters"
                    },
                    "type" : "VirtualRouter",
                    "id" : "virtualrouterUuid"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                },
                "Response Example 2 :GET /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/virtualrouters?expanded=true ( Example payload for GET on static routes with ?expanded=true )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/virtualrouters?offset=0&limit=2&expanded=true"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/virtualrouters/virtualrouterUuid",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/virtualrouters"
                    },
                    "metadata" : {
                      "timestamp" : 1529431113943,
                      "domain" : {
                        "name" : "Global",
                        "id" : "GlobalDomainUUID",
                        "type" : "Domain"
                      }
                    },
                    "id" : "virtualrouterUuid",
                    "type" : "VirtualRouter",
                    "name" : "Alpha",
                    "description" : "Finance Department Virtual Router",
                    "interfaces" : [ {
                      "id" : "interface_uuid1",
                      "type" : "PhysicalInterface",
                      "name" : "INSIDE"
                    }, {
                      "id" : "interface_uuid2",
                      "type" : "SubInterface",
                      "name" : "INSIDE-SUB"
                    } ]
                  }, {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/virtualrouters/virtualrouterUuid",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/virtualrouters"
                    },
                    "metadata" : {
                      "timestamp" : 1529431113943,
                      "domain" : {
                        "name" : "Global",
                        "id" : "GlobalDomainUUID",
                        "type" : "Domain"
                      }
                    },
                    "id" : "virtualrouterUuid",
                    "type" : "VirtualRouter",
                    "name" : "Beta",
                    "description" : "Human Resource Department Virtual Router",
                    "interfaces" : [ {
                      "id" : "interface_uuid1",
                      "type" : "PhysicalInterface",
                      "name" : "OUTSIDE"
                    }, {
                      "id" : "interface_uuid2",
                      "type" : "SubInterface",
                      "name" : "OUTSIDE-SUB"
                    } ]
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves list of all virtual routers created in the specified device. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateVirtualRouterModel",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a Virtual Router",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The input Virtual Router Model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VirtualRouterModel"
          }
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/VirtualRouterModel"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/virtualrouters/routing/virtualrouters/virtualrouterUuid ( Example payload for PUT on Virtual Router.  )" : {
                  "type" : "VirtualRouter",
                  "name" : "Beta",
                  "description" : "Human Resource Department Virtual Router",
                  "id" : "virtualrouterUuid",
                  "interfaces" : [ {
                    "id" : "interface_uuid1",
                    "type" : "PhysicalInterface",
                    "name" : "OUTSIDE"
                  }, {
                    "id" : "interface_uuid2",
                    "type" : "SubInterface",
                    "name" : "OUTSIDE-SUB"
                  } ]
                },
                "Response Example 1 :PUT /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/virtualrouters/routing/virtualrouters/virtualrouterUuid ( Example payload for PUT on Virtual Router.  )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/virtualrouters/virtualrouterUuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/virtualrouters"
                  },
                  "metadata" : {
                    "timestamp" : 1529431113943,
                    "domain" : {
                      "name" : "Global",
                      "id" : "GlobalDomainUUID",
                      "type" : "Domain"
                    }
                  },
                  "type" : "VirtualRouter",
                  "name" : "Beta",
                  "description" : "Human Resource Department Virtual Router",
                  "interfaces" : [ {
                    "id" : "interface_uuid1",
                    "type" : "PhysicalInterface",
                    "name" : "OUTSIDE"
                  }, {
                    "id" : "interface_uuid2",
                    "type" : "SubInterface",
                    "name" : "OUTSIDE-SUB"
                  } ],
                  "id" : "virtualrouterUuid"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/VirtualRouterModel"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves list of all virtual routers created in the specified device. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteVirtualRouterModel",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a Virtual Router",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/VirtualRouterModel"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/virtualrouters/routing/virtualrouters/virtualrouterUuid ( Example payload for DELETE on Virtual Router.  )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/virtualrouters/virtualrouterUuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/virtualrouters"
                  },
                  "metadata" : {
                    "timestamp" : 1529431113943,
                    "domain" : {
                      "name" : "Global",
                      "id" : "GlobalDomainUUID",
                      "type" : "Domain"
                    }
                  },
                  "type" : "VirtualRouter",
                  "name" : "Beta",
                  "description" : "Human Resource Department Virtual Router",
                  "interfaces" : [ {
                    "id" : "interface_uuid1",
                    "type" : "PhysicalInterface",
                    "name" : "OUTSIDE"
                  }, {
                    "id" : "interface_uuid2",
                    "type" : "SubInterface",
                    "name" : "OUTSIDE-SUB"
                  } ],
                  "id" : "virtualrouterUuid"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/virtualrouters/{virtualrouterUUID}/bgp" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves list of all BGP (ipv4 and ipv6) associated with the specified device for specified vrf.**",
        "operationId" : "getAllVrfBGPIPvAddressFamilyModel",
        "parameters" : [ {
          "name" : "virtualrouterUUID",
          "in" : "path",
          "description" : "Unique identifier of Virtual Router",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/VrfBGPIPvAddressFamilyModelListContainer"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/virtualrouters/{virtualrouterUUID}/bgp/{objectId}" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves list of all BGP (ipv4 and ipv6) associated with the specified device for specified vrf.**",
        "operationId" : "getVrfBGPIPvAddressFamilyModel",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a BGP general settings.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "virtualrouterUUID",
          "in" : "path",
          "description" : "Unique identifier of Virtual Router",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/VrfBGPIPvAddressFamilyModel"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/virtualrouters/virtualrouterUUID/bgp?expanded=true ( Example payload for GET on vrf bgp with expanded=true. )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/virtualrouters/virtualrouterUUID/bgp?offset=0&limit=2&expanded=true"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/virtualrouters/virtualrouterUUID/bgp/bgpUUID"
                    },
                    "id" : "bgpUUID",
                    "name" : "String",
                    "asNumber" : "String",
                    "routerId" : "String",
                    "addressFamilyIPv4" : {
                      "distance" : {
                        "externalDistance" : "Integer",
                        "internalDistance" : "Integer",
                        "localDistance" : "Integer",
                        "type" : "afbgpdistance"
                      },
                      "defaultInformationOrginate" : "boolean",
                      "bgpSupressInactive" : "boolean",
                      "synchronization" : "boolean",
                      "bgpRedistributeInternal" : "boolean",
                      "scanTime" : "Integer",
                      "aggregateTimer" : "Integer",
                      "maximumPaths" : [ {
                        "value" : "Integer",
                        "ibgp" : "boolean",
                        "type" : "afmaximumpaths"
                      } ],
                      "neighbors" : [ {
                        "remoteAs" : "String",
                        "neighborGeneral" : {
                          "description" : "String ",
                          "shutdown" : "boolean",
                          "fallOverBFD" : "[single_hop | multi-hop ]",
                          "type" : "neighborgeneral"
                        },
                        "neighborAdvanced" : {
                          "neighborSecret" : "Secret",
                          "neighborHops" : {
                            "maxHopCount" : "Integer",
                            "disableConnectedCheck" : "boolean",
                            "neighborTtlSecurityHops" : "Integer",
                            "type" : "neighborebgpmultihop or neighborttlsecurityhops"
                          },
                          "neighborVersion" : "Integer",
                          "nextHopSelf" : "boolean",
                          "neighborWeight" : "Integer",
                          "sendCommunity" : "boolean",
                          "neighborTransportConnectionMode" : {
                            "establishTCPSession" : "boolean",
                            "type" : "neighbortransportconnectionmode"
                          },
                          "neighborTransportPathMTUDiscovery" : {
                            "disable" : "boolean",
                            "type" : "neighbortransportpathmtudiscovery"
                          },
                          "type" : "neighboradvanced"
                        },
                        "neighborTimers" : {
                          "keepAliveInterval" : "Integer",
                          "holdTime" : "Integer",
                          "minimumHoldTime" : "Integer",
                          "type" : "neighbortimers"
                        },
                        "neighborRoutes" : {
                          "advertisementInterval" : "Integer",
                          "neighborAdvertiseMaps" : [ {
                            "routeMap" : "RouteMap",
                            "existMap" : "boolean",
                            "existRouteMap" : "RouteMap",
                            "type" : "neighboradvertisemap"
                          } ],
                          "removePrivateAs" : "boolean"
                        },
                        "neighborFiltering" : {
                          "neighborDistributeLists" : [ {
                            "accessList" : "accessList",
                            "filterUpdateAction" : "[IN/OUT]",
                            "type" : "neighbordistributelist"
                          } ],
                          "neighborRouteMap" : [ {
                            "routeMap" : "RouteMap",
                            "filterUpdateAction" : "[IN/OUT]",
                            "type" : "neighborroutemap"
                          } ],
                          "ipv4PrefixListFilter" : [ {
                            "ipv4PrefixList" : "IPV4PrefixList",
                            "filterUpdateAction" : "[IN/OUT]",
                            "type" : "neighborprefixlist"
                          } ],
                          "neighborFilterList" : [ {
                            "asPathList" : "asPath",
                            "filterUpdateAction" : "[IN/OUT]",
                            "type" : "neighborfilterlist"
                          } ],
                          "neighborMaximumPrefix" : {
                            "maxPrefixLimit" : "long",
                            "thresholdValue" : "Integer",
                            "restartInterval" : "Integer",
                            "warningOnly" : "boolean",
                            "type" : "neighbormaximumprefix"
                          },
                          "neighborDefaultOriginate" : {
                            "routeMap" : "RouteMap",
                            "type" : "neighbordefaultoriginate"
                          }
                        },
                        "neighborLocalAs" : {
                          "asNumber" : "String",
                          "noPrepend" : "boolean",
                          "replaceAs" : "boolean",
                          "dualAs" : "boolean",
                          "type" : "neighborlocalas"
                        },
                        "neighborHaMode" : {
                          "disable" : "boolean",
                          "type" : "neighborhamode"
                        },
                        "ipv4Address" : "String",
                        "type" : "neighboripv4"
                      } ],
                      "redistributeProtocols" : [ {
                        "routeMap" : "routemap",
                        "routeMetric" : {
                          "metricValue" : "long"
                        },
                        "type" : "redistributestatic"
                      }, {
                        "routeMap" : "routemap",
                        "routeMetric" : {
                          "metricValue" : "long"
                        },
                        "type" : "redistributeconnected"
                      }, {
                        "routeMap" : "routemap",
                        "routeMetric" : {
                          "metricValue" : "long"
                        },
                        "type" : "redistributerip"
                      }, {
                        "routeMap" : "routemap",
                        "routeMetric" : {
                          "metricValue" : "long"
                        },
                        "type" : "redistributebgp"
                      }, {
                        "processId" : "string",
                        "routeMap" : "routemap",
                        "routeMetric" : {
                          "metricValue" : "long"
                        },
                        "matchExternal1" : "boolean",
                        "matchExternal2" : "boolean",
                        "matchInternal" : "boolean",
                        "matchNssaExternal1" : "boolean",
                        "matchNssaExternal2" : "boolean",
                        "type" : "redistributeospf"
                      } ],
                      "distributeLists" : [ {
                        "accessList" : "StandardAccessList",
                        "type" : "incomingroutefilter"
                      }, {
                        "accessList" : "StandardAccessList",
                        "protocol" : "FilterProtocol Object",
                        "type" : "outgoingroutefilter"
                      } ],
                      "aftableMap" : "RouteMap",
                      "bgpNextHopTriggerDelay" : "Integer",
                      "bgpNextHopTriggerEnable" : "boolean",
                      "id" : "uuid of ipv4 general settings",
                      "type" : "afipv4"
                    },
                    "type" : "bgp"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/virtualrouters/{virtualrouterUUID}/ipv4staticroutes" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves, deletes, creates, or modifies the IPv4 Static Route associated with the specified virtual router. Also, retrieves list of all IPv4 Static routes.**",
        "operationId" : "getAllVrfIPv4StaticRouteModel",
        "parameters" : [ {
          "name" : "virtualrouterUUID",
          "in" : "path",
          "description" : "Unique identifier of Virtual Router",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/VrfIPv4StaticRouteModelListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/virtualrouters/VrfUUID/ipv4staticroutes ( Example payload for GET ALL on IPv4 Static Routes. )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUUID/devices/devicerecords/deviceUUID/routing/virtualrouters/VrfUUID/ipv4staticroutes?offset=0&limit=1"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUUID/devices/devicerecords/deviceUUID/routing/virtualrouters/VrfUUID/ipv4staticroutes/ipv4StaticRouteUuid",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUUID/devices/devicerecords/deviceUUID/routing/virtualrouters/VrfUUID/staticroutes"
                    },
                    "type" : "IPv4StaticRoute",
                    "id" : "ipv4StaticRouteUuid"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves, deletes, creates, or modifies the IPv4 Static Route associated with the specified virtual router. Also, retrieves list of all IPv4 Static routes. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createVrfIPv4StaticRouteModel",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The input IPv4 Static Route model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VrfIPv4StaticRouteModel"
          }
        }, {
          "name" : "virtualrouterUUID",
          "in" : "path",
          "description" : "Unique identifier of Virtual Router",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/VrfIPv4StaticRouteModel"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/virtualrouters/VrfUUID/ipv4staticroutes ( Example payload for POST on IPv4 Static Routes. )" : {
                  "interfaceName" : "InterfaceLogicalName",
                  "selectedNetworks" : [ {
                    "type" : "Host",
                    "id" : "networkHostUuid",
                    "name" : "Host1"
                  } ],
                  "gateway" : {
                    "object" : {
                      "type" : "Host",
                      "id" : "networkHostUuid",
                      "name" : "Host2"
                    }
                  },
                  "routeTracking" : {
                    "type" : "SLAMonitor",
                    "name" : "sla1",
                    "id" : "sla_monitor_id"
                  },
                  "metricValue" : 22,
                  "type" : "IPv4StaticRoute",
                  "isTunneled" : false
                },
                "Request example 2 : POST /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/virtualrouters/VrfUUID/ipv4staticroutes ( Example payload for POST on IPv4 Static Routes with NULL0 interface. )" : {
                  "interfaceName" : "Null0",
                  "selectedNetworks" : [ {
                    "type" : "Host",
                    "id" : "networkHostUuid",
                    "name" : "Host1"
                  } ],
                  "metricValue" : 1,
                  "type" : "IPv4StaticRoute",
                  "isTunneled" : false
                },
                "Response Example 1 :POST /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/virtualrouters/VrfUUID/ipv4staticroutes ( Example payload for POST on IPv4 Static Routes. )" : {
                  "metadata" : {
                    "timestamp" : 1531761518045,
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUUID",
                      "type" : "Domain"
                    }
                  },
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUUID/devices/devicerecords/deviceUUID/routing/virtualrouters/VrfUUID/ipv4staticroutes/ipv4StaticRouteUuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUUID/devices/devicerecords/deviceUUID/routing/virtualrouters/VrfUUID/staticroutes"
                  },
                  "interfaceName" : "InterfaceLogicalName",
                  "selectedNetworks" : [ {
                    "type" : "Host",
                    "id" : "networkHostUuid",
                    "name" : "Host1"
                  } ],
                  "gateway" : {
                    "object" : {
                      "type" : "Host",
                      "id" : "networkHostUuid",
                      "name" : "Host2"
                    }
                  },
                  "routeTracking" : {
                    "type" : "SLAMonitor",
                    "name" : "sla1",
                    "id" : "sla_monitor_id"
                  },
                  "metricValue" : 22,
                  "type" : "IPv4StaticRoute",
                  "isTunneled" : false,
                  "id" : "ipv4StaticRouteUuid"
                },
                "Response Example 2 :POST /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/virtualrouters/VrfUUID/ipv4staticroutes ( Example payload for POST on IPv4 Static Routes with NULL0 interface. )" : {
                  "metadata" : {
                    "timestamp" : 1531761518045,
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUUID",
                      "type" : "Domain"
                    }
                  },
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUUID/devices/devicerecords/deviceUUID/routing/virtualrouters/VrfUUID/ipv4staticroutes/ipv4StaticRouteUuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUUID/devices/devicerecords/deviceUUID/routing/virtualrouters/VrfUUID/staticroutes"
                  },
                  "interfaceName" : "Null0",
                  "selectedNetworks" : [ {
                    "type" : "Host",
                    "id" : "networkHostUuid",
                    "name" : "Host1"
                  } ],
                  "metricValue" : 1,
                  "type" : "IPv4StaticRoute",
                  "isTunneled" : false,
                  "id" : "ipv4StaticRouteUuid"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/VrfIPv4StaticRouteModel"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/virtualrouters/{virtualrouterUUID}/ipv4staticroutes/{objectId}" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves, deletes, creates, or modifies the IPv4 Static Route associated with the specified virtual router. Also, retrieves list of all IPv4 Static routes.**",
        "operationId" : "getVrfIPv4StaticRouteModel",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a IPv4 Static Route.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "virtualrouterUUID",
          "in" : "path",
          "description" : "Unique identifier of Virtual Router",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/VrfIPv4StaticRouteModel"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/virtualrouters/VrfUUID/ipv4staticroutes/ipv4StaticRouteUuid ( Example payload for GET on IPv4 Static Routes. )" : {
                  "metadata" : {
                    "timestamp" : 1531749882006,
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUUID",
                      "type" : "Domain"
                    }
                  },
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUUID/devices/devicerecords/deviceUUID/routing/virtualrouters/VrfUUID/ipv4staticroutes/ipv4StaticRouteUuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUUID/devices/devicerecords/deviceUUID/routing/virtualrouters/VrfUUID/staticroutes"
                  },
                  "interfaceName" : "OUTSIDE_INTF3",
                  "selectedNetworks" : [ {
                    "type" : "Network",
                    "overridable" : false,
                    "id" : "86caab8a-9bdd-420d-858b-5690fde8ce58",
                    "name" : "IPv4-Benchmark-Tests"
                  } ],
                  "gateway" : {
                    "literal" : {
                      "type" : "Host",
                      "value" : "1.2.3.5"
                    }
                  },
                  "metricValue" : 12,
                  "type" : "IPv4StaticRoute",
                  "isTunneled" : false,
                  "id" : "ipv4StaticRouteUuid"
                },
                "Response Example 2 :GET /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/virtualrouters/VrfUUID/ipv4staticroutes?expanded=true ( Example payload for GET on IPv4 Static Routes with ?expanded=true )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUUID/devices/devicerecords/deviceUUID/routing/virtualrouters/VrfUUID/ipv4staticroutes?offset=0&limit=1&expanded=true"
                  },
                  "items" : [ {
                    "metadata" : {
                      "timestamp" : 1531749882006,
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUUID",
                        "type" : "Domain"
                      }
                    },
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUUID/devices/devicerecords/deviceUUID/routing/virtualrouters/VrfUUID/ipv4staticroutes/ipv4StaticRouteUuid",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUUID/devices/devicerecords/deviceUUID/routing/virtualrouters/VrfUUID/staticroutes"
                    },
                    "interfaceName" : "OUTSIDE_INTF3",
                    "selectedNetworks" : [ {
                      "type" : "Network",
                      "overridable" : false,
                      "id" : "86caab8a-9bdd-420d-858b-5690fde8ce58",
                      "name" : "IPv4-Benchmark-Tests"
                    } ],
                    "gateway" : {
                      "literal" : {
                        "type" : "Host",
                        "value" : "1.2.3.5"
                      }
                    },
                    "metricValue" : 12,
                    "type" : "IPv4StaticRoute",
                    "isTunneled" : false,
                    "id" : "ipv4StaticRouteUuid"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves, deletes, creates, or modifies the IPv4 Static Route associated with the specified virtual router. Also, retrieves list of all IPv4 Static routes. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateVrfIPv4StaticRouteModel",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a IPv4 Static Route.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "virtualrouterUUID",
          "in" : "path",
          "description" : "Unique identifier of Virtual Router",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The input IPv4 Static Route model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VrfIPv4StaticRouteModel"
          }
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/VrfIPv4StaticRouteModel"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/virtualrouters/VrfUUID/ipv4staticroutes/ipv4StaticRouteUuid ( Example payload for PUT on IPv4 Static Routes. )" : {
                  "interfaceName" : "InterfaceLogicalName",
                  "selectedNetworks" : [ {
                    "type" : "Host",
                    "id" : "networkHostUuid",
                    "name" : "Host1"
                  } ],
                  "gateway" : {
                    "object" : {
                      "type" : "Host",
                      "id" : "networkHostUuid",
                      "name" : "Host2"
                    }
                  },
                  "routeTracking" : {
                    "type" : "SLAMonitor",
                    "name" : "sla1",
                    "id" : "sla_monitor_id"
                  },
                  "metricValue" : 50,
                  "type" : "IPv4StaticRoute",
                  "isTunneled" : false,
                  "id" : "ipv4StaticRouteUuid"
                },
                "Response Example 1 :PUT /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/virtualrouters/VrfUUID/ipv4staticroutes/ipv4StaticRouteUuid ( Example payload for PUT on IPv4 Static Routes. )" : {
                  "metadata" : {
                    "timestamp" : 1531749882006,
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUUID",
                      "type" : "Domain"
                    }
                  },
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUUID/devices/devicerecords/deviceUUID/routing/virtualrouters/VrfUUID/ipv4staticroutes/ipv4StaticRouteUuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUUID/devices/devicerecords/deviceUUID/routing/virtualrouters/VrfUUID/staticroutes"
                  },
                  "interfaceName" : "InterfaceLogicalName",
                  "selectedNetworks" : [ {
                    "type" : "Host",
                    "id" : "networkHostUuid",
                    "name" : "Host1"
                  } ],
                  "gateway" : {
                    "object" : {
                      "type" : "Host",
                      "id" : "networkHostUuid",
                      "name" : "Host2"
                    }
                  },
                  "routeTracking" : {
                    "type" : "SLAMonitor",
                    "name" : "sla1",
                    "id" : "sla_monitor_id"
                  },
                  "metricValue" : 50,
                  "type" : "IPv4StaticRoute",
                  "isTunneled" : false,
                  "id" : "ipv4StaticRouteUuid"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/VrfIPv4StaticRouteModel"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves, deletes, creates, or modifies the IPv4 Static Route associated with the specified virtual router. Also, retrieves list of all IPv4 Static routes. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteVrfIPv4StaticRouteModel",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a IPv4 Static Route.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "virtualrouterUUID",
          "in" : "path",
          "description" : "Unique identifier of Virtual Router",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/VrfIPv4StaticRouteModel"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/virtualrouters/VrfUUID/ipv4staticroutes/ipv4StaticRouteUuid ( Example payload for DELETE on IPv4 Static Routes.  )" : {
                  "metadata" : {
                    "timestamp" : 1531749882006,
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUUID",
                      "type" : "Domain"
                    }
                  },
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUUID/devices/devicerecords/deviceUUID/routing/virtualrouters/VrfUUID/ipv4staticroutes/ipv4StaticRouteUuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUUID/devices/devicerecords/deviceUUID/routing/virtualrouters/VrfUUID/staticroutes"
                  },
                  "interfaceName" : "OUTSIDE_INTF3",
                  "selectedNetworks" : [ {
                    "type" : "Network",
                    "overridable" : false,
                    "id" : "86caab8a-9bdd-420d-858b-5690fde8ce58",
                    "name" : "IPv4-Benchmark-Tests"
                  } ],
                  "gateway" : {
                    "literal" : {
                      "type" : "Host",
                      "value" : "1.2.3.5"
                    }
                  },
                  "metricValue" : 12,
                  "type" : "IPv4StaticRoute",
                  "isTunneled" : false,
                  "id" : "ipv4StaticRouteUuid"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/virtualrouters/{virtualrouterUUID}/ipv6staticroutes" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves, deletes, creates, or modifies the IPv6 Static Route associated with the specified virtual router. Also, retrieves list of all IPv6 Static routes.**",
        "operationId" : "getAllVrfIPv6StaticRouteModel",
        "parameters" : [ {
          "name" : "virtualrouterUUID",
          "in" : "path",
          "description" : "Unique identifier of Virtual Router",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/VrfIPv6StaticRouteModelListContainer"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves, deletes, creates, or modifies the IPv6 Static Route associated with the specified virtual router. Also, retrieves list of all IPv6 Static routes. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createVrfIPv6StaticRouteModel",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The input IPv6 Static Route model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VrfIPv6StaticRouteModel"
          }
        }, {
          "name" : "virtualrouterUUID",
          "in" : "path",
          "description" : "Unique identifier of Virtual Router",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/VrfIPv6StaticRouteModel"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/virtualrouters/VrfUUID/ipv6staticroutes ( Example payload for POST on IPv6 Static Routes. )" : {
                  "interfaceName" : "InterfaceLogicalName",
                  "selectedNetworks" : [ {
                    "type" : "Host",
                    "id" : "networkHostUuid",
                    "name" : "Host1"
                  } ],
                  "gateway" : {
                    "object" : {
                      "type" : "Host",
                      "id" : "networkHostUuid",
                      "name" : "Host2"
                    }
                  },
                  "metricValue" : 22,
                  "type" : "IPv6StaticRoute",
                  "isTunneled" : false
                },
                "Request example 2 : POST /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/virtualrouters/VrfUUID/ipv6staticroutes ( Example payload for POST on IPv6 Static Routes with NULL0 Interface. )" : {
                  "interfaceName" : "Null0",
                  "selectedNetworks" : [ {
                    "type" : "Host",
                    "id" : "networkHostUuid",
                    "name" : "Host1"
                  } ],
                  "type" : "IPv6StaticRoute"
                },
                "Response Example 1 :POST /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/virtualrouters/VrfUUID/ipv6staticroutes ( Example payload for POST on IPv6 Static Routes. )" : {
                  "metadata" : {
                    "timestamp" : 1531749882006,
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUUID",
                      "type" : "Domain"
                    }
                  },
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUUID/devices/devicerecords/deviceUUID/routing/virtualrouters/VrfUUID/ipv6staticroutes/ipv6StaticRouteUuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUUID/devices/devicerecords/deviceUUID/routing/virtualrouters/VrfUUID/staticroutes"
                  },
                  "interfaceName" : "InterfaceLogicalName",
                  "selectedNetworks" : [ {
                    "type" : "Host",
                    "id" : "networkHostUuid",
                    "name" : "Host1"
                  } ],
                  "gateway" : {
                    "object" : {
                      "type" : "Host",
                      "id" : "networkHostUuid",
                      "name" : "Host2"
                    }
                  },
                  "metricValue" : 22,
                  "type" : "IPv6StaticRoute",
                  "isTunneled" : false,
                  "id" : "ipv6StaticRouteUuid"
                },
                "Response Example 2 :POST /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/virtualrouters/VrfUUID/ipv6staticroutes ( Example payload for POST on IPv6 Static Routes with NULL0 Interface. )" : {
                  "metadata" : {
                    "timestamp" : 1531749882006,
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUUID",
                      "type" : "Domain"
                    }
                  },
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUUID/devices/devicerecords/deviceUUID/routing/virtualrouters/VrfUUID/ipv6staticroutes/ipv6StaticRouteUuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUUID/devices/devicerecords/deviceUUID/routing/virtualrouters/VrfUUID/staticroutes"
                  },
                  "interfaceName" : "Null0",
                  "selectedNetworks" : [ {
                    "type" : "Host",
                    "id" : "networkHostUuid",
                    "name" : "Host1"
                  } ],
                  "type" : "IPv6StaticRoute",
                  "id" : "ipv6StaticRouteUuid"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/VrfIPv6StaticRouteModel"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/virtualrouters/{virtualrouterUUID}/ipv6staticroutes/{objectId}" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves, deletes, creates, or modifies the IPv6 Static Route associated with the specified virtual router. Also, retrieves list of all IPv6 Static routes.**",
        "operationId" : "getVrfIPv6StaticRouteModel",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a IPv6 Static Route.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "virtualrouterUUID",
          "in" : "path",
          "description" : "Unique identifier of Virtual Router",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/VrfIPv6StaticRouteModel"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/virtualrouters/VrfUUID/ipv6staticroutes/ipv6StaticRouteUuid ( Example payload for GET on IPv6 Static Routes. )" : {
                  "metadata" : {
                    "timestamp" : 1531749882006,
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUUID",
                      "type" : "Domain"
                    }
                  },
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUUID/devices/devicerecords/deviceUUID/routing/virtualrouters/VrfUUID/ipv6staticroutes/ipv6StaticRouteUuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUUID/devices/devicerecords/deviceUUID/routing/virtualrouters/VrfUUID/staticroutes"
                  },
                  "interfaceName" : "InterfaceLogicalName",
                  "selectedNetworks" : [ {
                    "type" : "Network",
                    "id" : "networkObjUuid",
                    "name" : "any"
                  } ],
                  "gateway" : {
                    "literal" : {
                      "type" : "Host",
                      "value" : "fe::"
                    }
                  },
                  "metricValue" : 1,
                  "isTunneled" : false,
                  "type" : "IPv6StaticRoute",
                  "id" : "ipv6StaticRouteUuid"
                },
                "Response Example 2 :GET /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/virtualrouters/VrfUUID/ipv6staticroutes ( Example payload for GET on IPv6 Static Routes. )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/virtualrouters/VrfUUID/ipv6staticroutes?offset=0&limit=2"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/virtualrouters/VrfUUID/ipv6staticroutes/ipv6StaticRouteUuid",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/staticroutes"
                    },
                    "type" : "IPv6StaticRoute",
                    "id" : "ipv6StaticRouteUuid"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                },
                "Response Example 3 :GET /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/virtualrouters/VrfUUID/ipv6staticroutes?expanded=true ( Example payload for GET on IPv6 Static Routes with ?expanded=true )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/virtualrouters/VrfUUID/ipv6staticroutes?offset=0&limit=2&expanded=true"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/virtualrouters/VrfUUID/ipv6staticroutes/ipv6StaticRouteUuid",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/staticroutes"
                    },
                    "interfaceName" : "InterfaceLogicalName",
                    "selectedNetworks" : [ {
                      "type" : "Network",
                      "id" : "networkObjUuid",
                      "name" : "any"
                    } ],
                    "gateway" : {
                      "literal" : {
                        "type" : "Host",
                        "value" : "5.5.5.5"
                      }
                    },
                    "metricValue" : 1,
                    "isTunneled" : false,
                    "type" : "IPv6StaticRoute",
                    "id" : "ipv6StaticRouteUuid"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves, deletes, creates, or modifies the IPv6 Static Route associated with the specified virtual router. Also, retrieves list of all IPv6 Static routes. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateVrfIPv6StaticRouteModel",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a IPv6 Static Route.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The input IPv6 Static Route model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VrfIPv6StaticRouteModel"
          }
        }, {
          "name" : "virtualrouterUUID",
          "in" : "path",
          "description" : "Unique identifier of Virtual Router",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/VrfIPv6StaticRouteModel"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/virtualrouters/VrfUUID/ipv6staticroutes/ipv6StaticRouteUuid ( Example payload for PUT on IPv6 Static Routes. )" : {
                  "interfaceName" : "InterfaceLogicalName",
                  "selectedNetworks" : [ {
                    "type" : "Host",
                    "id" : "networkHostUuid",
                    "name" : "Host1"
                  } ],
                  "gateway" : {
                    "object" : {
                      "type" : "Host",
                      "id" : "networkHostUuid",
                      "name" : "Host2"
                    }
                  },
                  "metricValue" : 50,
                  "type" : "IPv6StaticRoute",
                  "isTunneled" : false,
                  "id" : "ipv6StaticRouteUuid"
                },
                "Response Example 1 :PUT /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/virtualrouters/VrfUUID/ipv6staticroutes/ipv6StaticRouteUuid ( Example payload for PUT on IPv6 Static Routes. )" : {
                  "metadata" : {
                    "timestamp" : 1531749882006,
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUUID",
                      "type" : "Domain"
                    }
                  },
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUUID/devices/devicerecords/deviceUUID/routing/virtualrouters/VrfUUID/ipv6staticroutes/ipv6StaticRouteUuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUUID/devices/devicerecords/deviceUUID/routing/virtualrouters/VrfUUID/staticroutes"
                  },
                  "interfaceName" : "InterfaceLogicalName",
                  "selectedNetworks" : [ {
                    "type" : "Host",
                    "id" : "networkHostUuid",
                    "name" : "Host1"
                  } ],
                  "gateway" : {
                    "object" : {
                      "type" : "Host",
                      "id" : "networkHostUuid",
                      "name" : "Host2"
                    }
                  },
                  "metricValue" : 50,
                  "type" : "IPv6StaticRoute",
                  "isTunneled" : false,
                  "id" : "ipv6StaticRouteUuid"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/VrfIPv6StaticRouteModel"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves, deletes, creates, or modifies the IPv6 Static Route associated with the specified virtual router. Also, retrieves list of all IPv6 Static routes. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteVrfIPv6StaticRouteModel",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a IPv6 Static Route.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "virtualrouterUUID",
          "in" : "path",
          "description" : "Unique identifier of Virtual Router",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/VrfIPv6StaticRouteModel"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/virtualrouters/VrfUUID/ipv6staticroutes/ipv6StaticRouteUuid ( Example payload for DELETE on IPv6 Static Routes. )" : {
                  "metadata" : {
                    "timestamp" : 1531749882006,
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUUID",
                      "type" : "Domain"
                    }
                  },
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUUID/devices/devicerecords/deviceUUID/routing/virtualrouters/VrfUUID/ipv6staticroutes/ipv6StaticRouteUuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUUID/devices/devicerecords/deviceUUID/routing/virtualrouters/VrfUUID/staticroutes"
                  },
                  "interfaceName" : "InterfaceLogicalName",
                  "selectedNetworks" : [ {
                    "type" : "Host",
                    "id" : "networkHostUuid",
                    "name" : "Host1"
                  } ],
                  "gateway" : {
                    "object" : {
                      "type" : "Host",
                      "id" : "networkHostUuid",
                      "name" : "Host2"
                    }
                  },
                  "metricValue" : 22,
                  "type" : "IPv6StaticRoute",
                  "isTunneled" : false,
                  "id" : "ipv6StaticRouteUuid"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/virtualrouters/{virtualrouterUUID}/ospfinterface" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves, deletes, creates, or modifies the OSPF Interface associated with the specified ID. Also, retrieves list of all OSPF v2 process.**",
        "operationId" : "getAllVrfOspfInterfacePolicyModel",
        "parameters" : [ {
          "name" : "virtualrouterUUID",
          "in" : "path",
          "description" : "Unique identifier of Virtual Router.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/VrfOspfInterfacePolicyModelListContainer"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/virtualrouters/{virtualrouterUUID}/ospfinterface/{objectId}" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves, deletes, creates, or modifies the OSPF Interface associated with the specified ID. Also, retrieves list of all OSPF v2 process.**",
        "operationId" : "getVrfOspfInterfacePolicyModel",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a OSPF Interface Policy.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "virtualrouterUUID",
          "in" : "path",
          "description" : "Unique identifier of Virtual Router.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/VrfOspfInterfacePolicyModel"
            },
            "examples" : { }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/virtualrouters/{virtualrouterUUID}/ospfv2routes" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves, deletes, creates, or modifies the OSPFV2 associated with the specified ID. Also, retrieves list of all OSPF v2 process.**",
        "operationId" : "getAllVrfOspfPolicyModel",
        "parameters" : [ {
          "name" : "virtualrouterUUID",
          "in" : "path",
          "description" : "Unique identifier of Virtual Router.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/VrfOspfPolicyModelListContainer"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/virtualrouters/{virtualrouterUUID}/ospfv2routes/{objectId}" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves, deletes, creates, or modifies the OSPFV2 associated with the specified ID. Also, retrieves list of all OSPF v2 process.**",
        "operationId" : "getVrfOspfPolicyModel",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a OSPF Policy.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "virtualrouterUUID",
          "in" : "path",
          "description" : "Unique identifier of Virtual Router.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/VrfOspfPolicyModel"
            },
            "examples" : { }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/virtualrouters/{virtualrouterUUID}/staticroutes" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves list of all Static routes (ipv4 and ipv6) associated with the specified virtual router.**",
        "operationId" : "getAllVrfStaticRouteModel",
        "parameters" : [ {
          "name" : "virtualrouterUUID",
          "in" : "path",
          "description" : "Unique identifier of Virtual Router",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/VrfStaticRouteModelListContainer"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/routing/virtualrouters/{virtualrouterUUID}/staticroutes/{objectId}" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves list of all Static routes (ipv4 and ipv6) associated with the specified virtual router.**",
        "operationId" : "getVrfStaticRouteModel",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a Static Route",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "virtualrouterUUID",
          "in" : "path",
          "description" : "Unique identifier of Virtual Router",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/VrfStaticRouteModel"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/virtualrouters/VrfUUID/staticroutes ( Example payload for GET on static routes )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUUID/devices/devicerecords/deviceUUID/routing/virtualrouters/virtualRouterUUID/staticroutes?offset=0&limit=1"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUUID/devices/devicerecords/deviceUUID/routing/virtualrouters/virtualRouterUUID/ipv4staticroutes/static_route_uuid",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUUID/devices/devicerecords/deviceUUID/routing/virtualrouters/virtualRouterUUID/staticroutes"
                    },
                    "type" : "IPv4StaticRoute",
                    "id" : "static_route_uuid"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                },
                "Response Example 2 :GET /api/fmc_config/v1/domain/DomainUUID/devices/devicerecords/DeviceUUID/routing/virtualrouters/VrfUUID/staticroutes?expanded=true ( Example payload for GET on static routes with ?expanded=true )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUUID/devices/devicerecords/deviceUUID/routing/virtualrouters/virtualRouterUUID/staticroutes?offset=0&limit=1&expanded=true"
                  },
                  "items" : [ {
                    "metadata" : {
                      "timestamp" : 1531749882006,
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUUID",
                        "type" : "Domain"
                      }
                    },
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUUID/devices/devicerecords/deviceUUID/routing/virtualrouters/virtualRouterUUID/ipv4staticroutes/static_route_uuid",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUUID/devices/devicerecords/deviceUUID/routing/virtualrouters/virtualRouterUUID/staticroutes"
                    },
                    "interfaceName" : "OUTSIDE_INTF3",
                    "selectedNetworks" : [ {
                      "type" : "Network",
                      "overridable" : false,
                      "id" : "86caab8a-9bdd-420d-858b-5690fde8ce58",
                      "name" : "IPv4-Benchmark-Tests"
                    } ],
                    "gateway" : {
                      "literal" : {
                        "type" : "Host",
                        "value" : "1.2.3.5"
                      }
                    },
                    "metricValue" : 12,
                    "type" : "IPv4StaticRoute",
                    "isTunneled" : false,
                    "id" : "static_route_uuid"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/subinterfaces" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves the sub-interface associated with the specified NGFW device ID and interface ID. If no interface ID is specified, retrieves list of all sub-interfaces associated with the specified NGFW device ID. <div class=\"alert alert-warning\">More details on netmod events(out of sync interfaces):<b> GET /interfaceevents</b></div>**",
        "operationId" : "getAllFTDSubInterface",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDSubInterfaceListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/subinterfaces ( GET ALL without any query strings )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/devices/devicerecords/deviceUUID/subinterfaces?offset=0&limit=2"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/devices/devicerecords/deviceUUID/subinterfaces/SubIntf1"
                    },
                    "name" : "GigabitEthernet1/4",
                    "id" : "SubIntf1"
                  }, {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/devices/devicerecords/deviceUUID/subinterfaces/SubIntf2"
                    },
                    "name" : "GigabitEthernet1/5",
                    "id" : "SubIntf2"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/subinterfaces?expanded=true ( GET ALL with expanded=true )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/default/devices/devicerecords/domainUUID/subinterfaces?offset=0&limit=2"
                  },
                  "items" : [ {
                    "metadata" : {
                      "timestamp" : 1467055685450,
                      "domain" : {
                        "name" : "Global",
                        "id" : "GlobalDomainUUID"
                      }
                    },
                    "links" : {
                      "self" : "/fmc_config/v1/domain/default/devices/devicerecords/domainUUID/subinterfaces/SubIntfId1"
                    },
                    "type" : "SubInterface",
                    "vlanId" : 1,
                    "subIntfId" : 25769804816,
                    "enabled" : true,
                    "MTU" : 1500,
                    "ifname" : "SubIntf1",
                    "ipv4" : {
                      "static" : {
                        "address" : "10.20.40.40",
                        "netmask" : "24"
                      }
                    },
                    "ipv6" : {
                      "enableIPV6" : false,
                      "raLifeTime" : 1800,
                      "raInterval" : 200,
                      "enableRA" : true,
                      "enforceEUI64" : false,
                      "enableAutoConfig" : false,
                      "enableDHCPAddrConfig" : false,
                      "enableDHCPNonAddrConfig" : false,
                      "dadAttempts" : 1,
                      "nsInterval" : 1000,
                      "reachableTime" : 0
                    },
                    "securityZone" : {
                      "id" : "6dd95c28-3c9c-11e6-b776-a85c95c244a3",
                      "type" : "SecurityZone"
                    },
                    "managementOnly" : false,
                    "enableAntiSpoofing" : false,
                    "enableSGTPropagate" : true,
                    "overrideDefaultFragmentSetting" : { },
                    "name" : "GigabitEthernet1/4",
                    "description" : "TestSubIntf",
                    "id" : "SubIntfId2"
                  }, {
                    "metadata" : {
                      "timestamp" : 1467055685450,
                      "domain" : {
                        "name" : "Global",
                        "id" : "GlobalDomainUUID"
                      }
                    },
                    "links" : {
                      "self" : "/fmc_config/v1/domain/default/devices/devicerecords/domainUUID/subinterfaces/SubIntfId2"
                    },
                    "type" : "SubInterface",
                    "vlanId" : 2,
                    "subIntfId" : 25769804817,
                    "enabled" : true,
                    "MTU" : 1500,
                    "ifname" : "SubIntf2",
                    "ipv4" : {
                      "static" : { }
                    },
                    "ipv6" : {
                      "prefixes" : [ {
                        "address" : "2003::/128",
                        "default" : false,
                        "advertisement" : {
                          "offlink" : false,
                          "autoConfig" : true,
                          "preferLifeTime" : {
                            "duration" : {
                              "preferLifeTime" : 604800,
                              "validLifeTime" : 2592000
                            }
                          }
                        }
                      } ],
                      "enableIPV6" : false,
                      "linkLocalAddress" : "FE80::19",
                      "raLifeTime" : 1800,
                      "raInterval" : 200,
                      "addresses" : [ {
                        "address" : "2002::",
                        "prefix" : "128",
                        "enforceEUI64" : false
                      } ],
                      "enableRA" : true,
                      "enforceEUI64" : false,
                      "enableAutoConfig" : false,
                      "enableDHCPAddrConfig" : false,
                      "enableDHCPNonAddrConfig" : false,
                      "dadAttempts" : 1,
                      "nsInterval" : 1000,
                      "reachableTime" : 0
                    },
                    "managementOnly" : false,
                    "enableAntiSpoofing" : false,
                    "enableSGTPropagate" : true,
                    "overrideDefaultFragmentSetting" : {
                      "size" : 200,
                      "timeout" : 5,
                      "chain" : 24
                    },
                    "name" : "GigabitEthernet1/5",
                    "id" : "SubIntfId2"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves the sub-interface associated with the specified NGFW device ID and interface ID. If no interface ID is specified, retrieves list of all sub-interfaces associated with the specified NGFW device ID. <div class=\"alert alert-warning\">More details on netmod events(out of sync interfaces):<b> GET /interfaceevents</b></div> _Check the response section for applicable examples (if any)._**",
        "operationId" : "createMultipleFTDSubInterface",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The input sub-interface model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FTDSubInterface"
          }
        }, {
          "name" : "bulk",
          "in" : "query",
          "description" : "Enables bulk create for FTD sub interfaces.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/FTDSubInterface"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/subinterfaces ( Success: Test POST method for FTD logical (sub) interface )" : {
                  "type" : "SubInterface",
                  "vlanId" : 30,
                  "subIntfId" : 12345,
                  "enabled" : true,
                  "MTU" : 1500,
                  "managementOnly" : true,
                  "enableAntiSpoofing" : true,
                  "enableSGTPropagate" : true,
                  "ifname" : "Intf_name",
                  "name" : "GigabitEthernet0/1",
                  "overrideDefaultFragmentSetting" : {
                    "size" : 200,
                    "chain" : 24,
                    "timeout" : 5
                  },
                  "arpConfig" : [ {
                    "ipAddress" : "101.101.101.101/25",
                    "macAddress" : "03DC.1234.2323",
                    "enableAlias" : false
                  } ],
                  "securityZone" : {
                    "id" : "sec_zone_id",
                    "type" : "SecurityZone"
                  },
                  "ipv4" : {
                    "static" : {
                      "address" : "1.2.3.4",
                      "netmask" : "25"
                    },
                    "dhcp" : {
                      "enableDefaultRouteDHCP" : "true",
                      "dhcpRouteMetric" : 1
                    },
                    "pppoe" : {
                      "vpdnGroupName" : "VPDN_group_name",
                      "pppoeUser" : "User_name",
                      "pppoePassword" : "User_password",
                      "pppAuth" : "< PAP | CHAP | MSCHAP>",
                      "pppoeRouteMetric" : 1,
                      "enableRouteSettings" : true,
                      "ipAddress" : "1.2.3.4/25",
                      "storeCredsInFlash" : false
                    }
                  },
                  "ipv6" : {
                    "enableIPV6" : true,
                    "enforceEUI64" : false,
                    "linkLocalAddress" : "FE80::",
                    "enableAutoConfig" : true,
                    "enableDHCPAddrConfig" : true,
                    "enableDHCPNonAddrConfig" : false,
                    "dadAttempts" : 1,
                    "nsInterval" : 10000,
                    "reachableTime" : 0,
                    "enableRA" : false,
                    "raLifeTime" : 1800,
                    "raInterval" : 200,
                    "addresses" : [ {
                      "address" : "2001::",
                      "prefix" : "124",
                      "enforceEUI64" : false
                    }, {
                      "address" : "8080::",
                      "prefix" : "12",
                      "enforceEUI64" : true
                    } ],
                    "prefixes" : [ {
                      "address" : "2001::/124",
                      "default" : false,
                      "advertisement" : {
                        "offlink" : false,
                        "autoConfig" : false,
                        "preferLifeTime" : {
                          "duration" : {
                            "preferLifeTime" : 604800,
                            "validLifeTime" : 2592300
                          },
                          "expirationLifeTime" : {
                            "preferDateTime" : "2016-11-05T08:15:30-05:00",
                            "validDateTime" : "2016-12-05T08:15:30-05:00"
                          }
                        }
                      }
                    } ]
                  }
                },
                "Request example 2 : POST /fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/subinterfaces?bulk=true ( Bulk POST operation on FTD logical (sub) interface )" : [ {
                  "type" : "SubInterface",
                  "vlanId" : 30,
                  "subIntfId" : 12345,
                  "enabled" : true,
                  "MTU" : 1500,
                  "managementOnly" : true,
                  "enableAntiSpoofing" : true,
                  "enableSGTPropagate" : true,
                  "ifname" : "Intf_name",
                  "name" : "GigabitEthernet0/1",
                  "overrideDefaultFragmentSetting" : {
                    "size" : 200,
                    "chain" : 24,
                    "timeout" : 5
                  },
                  "arpConfig" : [ {
                    "ipAddress" : "101.101.101.101/25",
                    "macAddress" : "03DC.1234.2323",
                    "enableAlias" : false
                  } ],
                  "securityZone" : {
                    "id" : "sec_zone_id",
                    "type" : "SecurityZone"
                  },
                  "ipv4" : {
                    "static" : {
                      "address" : "1.2.3.4",
                      "netmask" : "25"
                    },
                    "dhcp" : {
                      "enableDefaultRouteDHCP" : "true",
                      "dhcpRouteMetric" : 1
                    },
                    "pppoe" : {
                      "vpdnGroupName" : "VPDN_group_name",
                      "pppoeUser" : "User_name",
                      "pppoePassword" : "User_password",
                      "pppAuth" : "< PAP | CHAP | MSCHAP>",
                      "pppoeRouteMetric" : 1,
                      "enableRouteSettings" : true,
                      "ipAddress" : "1.2.3.4/25",
                      "storeCredsInFlash" : false
                    }
                  },
                  "ipv6" : {
                    "enableIPV6" : true,
                    "enforceEUI64" : false,
                    "linkLocalAddress" : "FE80::",
                    "enableAutoConfig" : true,
                    "enableDHCPAddrConfig" : true,
                    "enableDHCPNonAddrConfig" : false,
                    "dadAttempts" : 1,
                    "nsInterval" : 10000,
                    "reachableTime" : 0,
                    "enableRA" : false,
                    "raLifeTime" : 1800,
                    "raInterval" : 200,
                    "addresses" : [ {
                      "address" : "2001::",
                      "prefix" : "124",
                      "enforceEUI64" : false
                    }, {
                      "address" : "8080::",
                      "prefix" : "12",
                      "enforceEUI64" : true
                    } ],
                    "prefixes" : [ {
                      "address" : "2001::/124",
                      "default" : false,
                      "advertisement" : {
                        "offlink" : false,
                        "autoConfig" : false,
                        "preferLifeTime" : {
                          "duration" : {
                            "preferLifeTime" : 604800,
                            "validLifeTime" : 2592300
                          },
                          "expirationLifeTime" : {
                            "preferDateTime" : "2016-11-05T08:15:30-05:00",
                            "validDateTime" : "2016-12-05T08:15:30-05:00"
                          }
                        }
                      }
                    } ]
                  }
                }, {
                  "type" : "SubInterface",
                  "vlanId" : 35,
                  "subIntfId" : 123,
                  "enabled" : true,
                  "MTU" : 1500,
                  "managementOnly" : true,
                  "enableAntiSpoofing" : true,
                  "enableSGTPropagate" : true,
                  "ifname" : "Intf_name_2",
                  "name" : "GigabitEthernet0/2",
                  "overrideDefaultFragmentSetting" : {
                    "size" : 200,
                    "chain" : 24,
                    "timeout" : 5
                  },
                  "arpConfig" : [ {
                    "ipAddress" : "101.101.101.101/25",
                    "macAddress" : "03DC.1234.2323",
                    "enableAlias" : false
                  } ],
                  "securityZone" : {
                    "id" : "sec_zone_id",
                    "type" : "SecurityZone"
                  },
                  "ipv4" : {
                    "static" : {
                      "address" : "1.2.3.4",
                      "netmask" : "25"
                    },
                    "dhcp" : {
                      "enableDefaultRouteDHCP" : "true",
                      "dhcpRouteMetric" : 1
                    },
                    "pppoe" : {
                      "vpdnGroupName" : "VPDN_group_name",
                      "pppoeUser" : "User_name",
                      "pppoePassword" : "User_password",
                      "pppAuth" : "< PAP | CHAP | MSCHAP>",
                      "pppoeRouteMetric" : 1,
                      "enableRouteSettings" : true,
                      "ipAddress" : "1.2.3.4/25",
                      "storeCredsInFlash" : false
                    }
                  },
                  "ipv6" : {
                    "enableIPV6" : true,
                    "enforceEUI64" : false,
                    "linkLocalAddress" : "FE80::",
                    "enableAutoConfig" : true,
                    "enableDHCPAddrConfig" : true,
                    "enableDHCPNonAddrConfig" : false,
                    "dadAttempts" : 1,
                    "nsInterval" : 10000,
                    "reachableTime" : 0,
                    "enableRA" : false,
                    "raLifeTime" : 1800,
                    "raInterval" : 200,
                    "addresses" : [ {
                      "address" : "2001::",
                      "prefix" : "124",
                      "enforceEUI64" : false
                    }, {
                      "address" : "8080::",
                      "prefix" : "12",
                      "enforceEUI64" : true
                    } ],
                    "prefixes" : [ {
                      "address" : "2001::/124",
                      "default" : false,
                      "advertisement" : {
                        "offlink" : false,
                        "autoConfig" : false,
                        "preferLifeTime" : {
                          "duration" : {
                            "preferLifeTime" : 604800,
                            "validLifeTime" : 2592300
                          },
                          "expirationLifeTime" : {
                            "preferDateTime" : "2016-11-05T08:15:30-05:00",
                            "validDateTime" : "2016-12-05T08:15:30-05:00"
                          }
                        }
                      }
                    } ]
                  }
                } ],
                "Response Example 1 :POST /fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/subinterfaces ( Success: Test POST method for FTD logical (sub) interface )" : {
                  "type" : "SubInterface",
                  "vlanId" : 30,
                  "subIntfId" : 12345,
                  "enabled" : true,
                  "MTU" : 1500,
                  "managementOnly" : true,
                  "enableAntiSpoofing" : true,
                  "enableSGTPropagate" : true,
                  "ifname" : "Intf_name",
                  "name" : "GigabitEthernet0/1",
                  "id" : "subInterfaceUUID",
                  "overrideDefaultFragmentSetting" : {
                    "size" : 200,
                    "chain" : 24,
                    "timeout" : 5
                  },
                  "arpConfig" : [ {
                    "ipAddress" : "101.101.101.101/25",
                    "macAddress" : "03DC.1234.2323",
                    "enableAlias" : false
                  } ],
                  "securityZone" : {
                    "id" : "sec_zone_id",
                    "type" : "SecurityZone"
                  },
                  "ipv4" : {
                    "static" : {
                      "address" : "1.2.3.4",
                      "netmask" : "25"
                    },
                    "dhcp" : {
                      "enableDefaultRouteDHCP" : "true",
                      "dhcpRouteMetric" : 1
                    },
                    "pppoe" : {
                      "vpdnGroupName" : "VPDN_group_name",
                      "pppoeUser" : "User_name",
                      "pppoePassword" : "User_password",
                      "pppAuth" : "< PAP | CHAP | MSCHAP>",
                      "pppoeRouteMetric" : 1,
                      "enableRouteSettings" : true,
                      "ipAddress" : "1.2.3.4/25",
                      "storeCredsInFlash" : false
                    }
                  },
                  "ipv6" : {
                    "enableIPV6" : true,
                    "enforceEUI64" : false,
                    "linkLocalAddress" : "FE80::",
                    "enableAutoConfig" : true,
                    "enableDHCPAddrConfig" : true,
                    "enableDHCPNonAddrConfig" : false,
                    "dadAttempts" : 1,
                    "nsInterval" : 10000,
                    "reachableTime" : 0,
                    "enableRA" : false,
                    "raLifeTime" : 1800,
                    "raInterval" : 200,
                    "addresses" : [ {
                      "address" : "2001::",
                      "prefix" : "124",
                      "enforceEUI64" : false
                    }, {
                      "address" : "8080::",
                      "prefix" : "12",
                      "enforceEUI64" : true
                    } ],
                    "prefixes" : [ {
                      "address" : "2001::/124",
                      "default" : false,
                      "advertisement" : {
                        "offlink" : false,
                        "autoConfig" : false,
                        "preferLifeTime" : {
                          "duration" : {
                            "preferLifeTime" : 604800,
                            "validLifeTime" : 2592300
                          },
                          "expirationLifeTime" : {
                            "preferDateTime" : "2016-11-05T08:15:30-05:00",
                            "validDateTime" : "2016-12-05T08:15:30-05:00"
                          }
                        }
                      }
                    } ]
                  },
                  "links" : {
                    "self" : "/fmc_config/v1/domain/default/devices/devicerecords/containerUUID/subinterfaces/subinterfaceUUID"
                  },
                  "metadata" : {
                    "readOnly" : {
                      "state" : false
                    },
                    "timestamp" : 1458597038,
                    "lastUser" : {
                      "name" : "admin",
                      "id" : "UserUUID",
                      "type" : "user"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "DomainUUID",
                      "type" : "domain"
                    },
                    "activity" : 0,
                    "link" : 0,
                    "speed" : -1
                  }
                },
                "Response Example 2 :POST /fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/subinterfaces?bulk=true ( Bulk POST operation on FTD logical (sub) interface )" : {
                  "links" : {
                    "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/subinterfaces?bulk=true"
                  },
                  "items" : [ {
                    "type" : "SubInterface",
                    "vlanId" : 30,
                    "subIntfId" : 12345,
                    "enabled" : true,
                    "MTU" : 1500,
                    "managementOnly" : true,
                    "enableAntiSpoofing" : true,
                    "enableSGTPropagate" : true,
                    "ifname" : "Intf_name",
                    "name" : "GigabitEthernet0/1",
                    "id" : "subInterfaceUUID",
                    "overrideDefaultFragmentSetting" : {
                      "size" : 200,
                      "chain" : 24,
                      "timeout" : 5
                    },
                    "arpConfig" : [ {
                      "ipAddress" : "101.101.101.101/25",
                      "macAddress" : "03DC.1234.2323",
                      "enableAlias" : false
                    } ],
                    "securityZone" : {
                      "id" : "sec_zone_id",
                      "type" : "SecurityZone"
                    },
                    "ipv4" : {
                      "static" : {
                        "address" : "1.2.3.4",
                        "netmask" : "25"
                      },
                      "dhcp" : {
                        "enableDefaultRouteDHCP" : "true",
                        "dhcpRouteMetric" : 1
                      },
                      "pppoe" : {
                        "vpdnGroupName" : "VPDN_group_name",
                        "pppoeUser" : "User_name",
                        "pppoePassword" : "User_password",
                        "pppAuth" : "< PAP | CHAP | MSCHAP>",
                        "pppoeRouteMetric" : 1,
                        "enableRouteSettings" : true,
                        "ipAddress" : "1.2.3.4/25",
                        "storeCredsInFlash" : false
                      }
                    },
                    "ipv6" : {
                      "enableIPV6" : true,
                      "enforceEUI64" : false,
                      "linkLocalAddress" : "FE80::",
                      "enableAutoConfig" : true,
                      "enableDHCPAddrConfig" : true,
                      "enableDHCPNonAddrConfig" : false,
                      "dadAttempts" : 1,
                      "nsInterval" : 10000,
                      "reachableTime" : 0,
                      "enableRA" : false,
                      "raLifeTime" : 1800,
                      "raInterval" : 200,
                      "addresses" : [ {
                        "address" : "2001::",
                        "prefix" : "124",
                        "enforceEUI64" : false
                      }, {
                        "address" : "8080::",
                        "prefix" : "12",
                        "enforceEUI64" : true
                      } ],
                      "prefixes" : [ {
                        "address" : "2001::/124",
                        "default" : false,
                        "advertisement" : {
                          "offlink" : false,
                          "autoConfig" : false,
                          "preferLifeTime" : {
                            "duration" : {
                              "preferLifeTime" : 604800,
                              "validLifeTime" : 2592300
                            },
                            "expirationLifeTime" : {
                              "preferDateTime" : "2016-11-05T08:15:30-05:00",
                              "validDateTime" : "2016-12-05T08:15:30-05:00"
                            }
                          }
                        }
                      } ]
                    },
                    "links" : {
                      "self" : "/fmc_config/v1/domain/default/devices/devicerecords/containerUUID/subinterfaces/subinterfaceUUID"
                    },
                    "metadata" : {
                      "readOnly" : {
                        "state" : false
                      },
                      "timestamp" : 1458597038,
                      "lastUser" : {
                        "name" : "admin",
                        "id" : "UserUUID",
                        "type" : "user"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "DomainUUID",
                        "type" : "domain"
                      },
                      "activity" : 0,
                      "link" : 0,
                      "speed" : -1
                    }
                  }, {
                    "type" : "SubInterface",
                    "vlanId" : 35,
                    "subIntfId" : 123,
                    "enabled" : true,
                    "MTU" : 1500,
                    "managementOnly" : true,
                    "enableAntiSpoofing" : true,
                    "enableSGTPropagate" : true,
                    "ifname" : "Intf_name_2",
                    "name" : "GigabitEthernet0/2",
                    "id" : "subInterfaceUUID",
                    "overrideDefaultFragmentSetting" : {
                      "size" : 200,
                      "chain" : 24,
                      "timeout" : 5
                    },
                    "arpConfig" : [ {
                      "ipAddress" : "101.101.101.101/25",
                      "macAddress" : "03DC.1234.2323",
                      "enableAlias" : false
                    } ],
                    "securityZone" : {
                      "id" : "sec_zone_id",
                      "type" : "SecurityZone"
                    },
                    "ipv4" : {
                      "static" : {
                        "address" : "1.2.3.4",
                        "netmask" : "25"
                      },
                      "dhcp" : {
                        "enableDefaultRouteDHCP" : "true",
                        "dhcpRouteMetric" : 1
                      },
                      "pppoe" : {
                        "vpdnGroupName" : "VPDN_group_name",
                        "pppoeUser" : "User_name",
                        "pppoePassword" : "User_password",
                        "pppAuth" : "< PAP | CHAP | MSCHAP>",
                        "pppoeRouteMetric" : 1,
                        "enableRouteSettings" : true,
                        "ipAddress" : "1.2.3.4/25",
                        "storeCredsInFlash" : false
                      }
                    },
                    "ipv6" : {
                      "enableIPV6" : true,
                      "enforceEUI64" : false,
                      "linkLocalAddress" : "FE80::",
                      "enableAutoConfig" : true,
                      "enableDHCPAddrConfig" : true,
                      "enableDHCPNonAddrConfig" : false,
                      "dadAttempts" : 1,
                      "nsInterval" : 10000,
                      "reachableTime" : 0,
                      "enableRA" : false,
                      "raLifeTime" : 1800,
                      "raInterval" : 200,
                      "addresses" : [ {
                        "address" : "2001::",
                        "prefix" : "124",
                        "enforceEUI64" : false
                      }, {
                        "address" : "8080::",
                        "prefix" : "12",
                        "enforceEUI64" : true
                      } ],
                      "prefixes" : [ {
                        "address" : "2001::/124",
                        "default" : false,
                        "advertisement" : {
                          "offlink" : false,
                          "autoConfig" : false,
                          "preferLifeTime" : {
                            "duration" : {
                              "preferLifeTime" : 604800,
                              "validLifeTime" : 2592300
                            },
                            "expirationLifeTime" : {
                              "preferDateTime" : "2016-11-05T08:15:30-05:00",
                              "validDateTime" : "2016-12-05T08:15:30-05:00"
                            }
                          }
                        }
                      } ]
                    },
                    "links" : {
                      "self" : "/fmc_config/v1/domain/default/devices/devicerecords/containerUUID/subinterfaces/subinterfaceUUID"
                    },
                    "metadata" : {
                      "readOnly" : {
                        "state" : false
                      },
                      "timestamp" : 1458597038,
                      "lastUser" : {
                        "name" : "admin",
                        "id" : "UserUUID",
                        "type" : "user"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "DomainUUID",
                        "type" : "domain"
                      },
                      "activity" : 0,
                      "link" : 0,
                      "speed" : -1
                    }
                  } ]
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/FTDSubInterface"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/subinterfaces/{objectId}" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves the sub-interface associated with the specified NGFW device ID and interface ID. If no interface ID is specified, retrieves list of all sub-interfaces associated with the specified NGFW device ID. <div class=\"alert alert-warning\">More details on netmod events(out of sync interfaces):<b> GET /interfaceevents</b></div>**",
        "operationId" : "getFTDSubInterface",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a sub-interface.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDSubInterface"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/subinterfaces/subinterfaceUUID ( Success: Test GET method for FTD logical interface )" : {
                  "metadata" : {
                    "timestamp" : 1467055685450,
                    "domain" : {
                      "name" : "Global",
                      "id" : "GlobalDomainUUID"
                    }
                  },
                  "links" : {
                    "self" : "/fmc_config/v1/domain/default/devices/devicerecords/containerUUID/subinterfaces/subinterfaceUUID"
                  },
                  "type" : "SubInterface",
                  "vlanId" : 2,
                  "subIntfId" : 25769804817,
                  "enabled" : true,
                  "MTU" : 1500,
                  "ifname" : "SubIntf2",
                  "ipv4" : {
                    "static" : { }
                  },
                  "ipv6" : {
                    "prefixes" : [ {
                      "address" : "2003::/128",
                      "default" : false,
                      "advertisement" : {
                        "offlink" : false,
                        "autoConfig" : true,
                        "preferLifeTime" : {
                          "duration" : {
                            "preferLifeTime" : 604800,
                            "validLifeTime" : 2592000
                          }
                        }
                      }
                    } ],
                    "enableIPV6" : false,
                    "linkLocalAddress" : "FE80::19",
                    "raLifeTime" : 1800,
                    "raInterval" : 200,
                    "addresses" : [ {
                      "address" : "2002::",
                      "prefix" : "128",
                      "enforceEUI64" : false
                    } ],
                    "enableRA" : true,
                    "enforceEUI64" : false,
                    "enableAutoConfig" : false,
                    "enableDHCPAddrConfig" : false,
                    "enableDHCPNonAddrConfig" : false,
                    "dadAttempts" : 1,
                    "nsInterval" : 1000,
                    "reachableTime" : 0
                  },
                  "managementOnly" : false,
                  "enableAntiSpoofing" : false,
                  "enableSGTPropagate" : true,
                  "overrideDefaultFragmentSetting" : {
                    "size" : 200,
                    "timeout" : 5,
                    "chain" : 24
                  },
                  "name" : "GigabitEthernet1/4",
                  "id" : "subinterfaceUUID"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves the sub-interface associated with the specified NGFW device ID and interface ID. If no interface ID is specified, retrieves list of all sub-interfaces associated with the specified NGFW device ID. <div class=\"alert alert-warning\">More details on netmod events(out of sync interfaces):<b> GET /interfaceevents</b></div> _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateFTDSubInterface",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a sub-interface.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The input sub-interface model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FTDSubInterface"
          }
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDSubInterface"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/default/devices/devicerecords/containerUUID/subinterfaces/subinterfaceUUID ( Success: Test PUT method for FTD logical (sub) interface )" : {
                  "type" : "SubInterface",
                  "vlanId" : 30,
                  "subIntfId" : 12345,
                  "enabled" : true,
                  "MTU" : 1500,
                  "managementOnly" : true,
                  "enableAntiSpoofing" : true,
                  "ifname" : "Intf_name",
                  "name" : "GigabitEthernet0/1",
                  "id" : "subinterfaceUUID",
                  "overrideDefaultFragmentSetting" : {
                    "size" : 200,
                    "chain" : 24,
                    "timeout" : 5
                  },
                  "arpConfig" : [ {
                    "ipAddress" : "101.101.101.101/25",
                    "macAddress" : "03DC.1234.2323",
                    "enableAlias" : false
                  } ],
                  "securityZone" : {
                    "id" : "sec_zone_id",
                    "type" : "SecurityZone"
                  },
                  "ipv4" : {
                    "static" : {
                      "address" : "1.2.3.4",
                      "netmask" : "25"
                    },
                    "dhcp" : {
                      "enableDefaultRouteDHCP" : "true",
                      "dhcpRouteMetric" : 1
                    },
                    "pppoe" : {
                      "vpdnGroupName" : "VPDN_group_name",
                      "pppoeUser" : "User_name",
                      "pppoePassword" : "User_password",
                      "pppAuth" : "< PAP | CHAP | MSCHAP>",
                      "pppoeRouteMetric" : 1,
                      "enableRouteSettings" : true,
                      "ipAddress" : "1.2.3.4/25",
                      "storeCredsInFlash" : false
                    }
                  },
                  "ipv6" : {
                    "enableIPV6" : true,
                    "enforceEUI64" : false,
                    "linkLocalAddress" : "FE80::",
                    "enableAutoConfig" : true,
                    "enableDHCPAddrConfig" : true,
                    "enableDHCPNonAddrConfig" : false,
                    "dadAttempts" : 1,
                    "nsInterval" : 10000,
                    "reachableTime" : 0,
                    "enableRA" : false,
                    "raLifeTime" : 1800,
                    "raInterval" : 200,
                    "addresses" : [ {
                      "address" : "2001::",
                      "prefix" : "124",
                      "enforceEUI64" : false
                    }, {
                      "address" : "8080::",
                      "prefix" : "12",
                      "enforceEUI64" : true
                    } ],
                    "prefixes" : [ {
                      "address" : "2001::/124",
                      "default" : false,
                      "advertisement" : {
                        "offlink" : false,
                        "autoConfig" : false,
                        "preferLifeTime" : {
                          "duration" : {
                            "preferLifeTime" : 604800,
                            "validLifeTime" : 2592300
                          },
                          "expirationLifeTime" : {
                            "preferDateTime" : "2016-11-05T08:15:30.000Z",
                            "validDateTime" : "2016-12-05T08:15:30.000Z"
                          }
                        }
                      }
                    } ]
                  }
                },
                "Response Example 1 :PUT /fmc_config/v1/domain/default/devices/devicerecords/containerUUID/subinterfaces/subinterfaceUUID ( Success: Test PUT method for FTD logical (sub) interface )" : {
                  "type" : "SubInterface",
                  "vlanId" : 30,
                  "subIntfId" : 12345,
                  "enabled" : true,
                  "MTU" : 1500,
                  "managementOnly" : true,
                  "enableAntiSpoofing" : true,
                  "enableSGTPropagate" : true,
                  "ifname" : "Intf_name",
                  "name" : "GigabitEthernet0/1",
                  "id" : "subinterfaceUUID",
                  "securityZone" : {
                    "id" : "sec_zone_id",
                    "type" : "SecurityZone"
                  },
                  "overrideDefaultFragmentSetting" : {
                    "size" : 200,
                    "chain" : 24,
                    "timeout" : 5
                  },
                  "arpConfig" : [ {
                    "ipAddress" : "101.101.101.101/25",
                    "macAddress" : "03DC.1234.2323",
                    "enableAlias" : false
                  } ],
                  "ipv4" : {
                    "static" : {
                      "address" : "1.2.3.4",
                      "netmask" : "25"
                    },
                    "dhcp" : {
                      "enableDefaultRouteDHCP" : "true",
                      "dhcpRouteMetric" : 1
                    },
                    "pppoe" : {
                      "vpdnGroupName" : "VPDN_group_name",
                      "pppoeUser" : "User_name",
                      "pppoePassword" : "User_password",
                      "pppAuth" : "< PAP | CHAP | MSCHAP>",
                      "pppoeRouteMetric" : 1,
                      "enableRouteSettings" : true,
                      "ipAddress" : "1.2.3.4/25",
                      "storeCredsInFlash" : false
                    }
                  },
                  "ipv6" : {
                    "enableIPV6" : true,
                    "enforceEUI64" : false,
                    "linkLocalAddress" : "FE80::",
                    "enableAutoConfig" : true,
                    "enableDHCPAddrConfig" : true,
                    "enableDHCPNonAddrConfig" : false,
                    "dadAttempts" : 1,
                    "nsInterval" : 10000,
                    "reachableTime" : 0,
                    "enableRA" : false,
                    "raLifeTime" : 1800,
                    "raInterval" : 200,
                    "addresses" : [ {
                      "address" : "2001::",
                      "prefix" : "124",
                      "enforceEUI64" : false
                    }, {
                      "address" : "8080::",
                      "prefix" : "12",
                      "enforceEUI64" : true
                    } ],
                    "prefixes" : [ {
                      "address" : "2001::/124",
                      "default" : false,
                      "advertisement" : {
                        "offlink" : false,
                        "autoConfig" : false,
                        "preferLifeTime" : {
                          "duration" : {
                            "preferLifeTime" : 604800,
                            "validLifeTime" : 2592300
                          },
                          "expirationLifeTime" : {
                            "preferDateTime" : "2016-11-05T08:15:30.000Z",
                            "validDateTime" : "2016-12-05T08:15:30.000Z"
                          }
                        }
                      }
                    } ]
                  },
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/subinterfaces/subinterfaceUUID"
                  },
                  "metadata" : {
                    "readOnly" : {
                      "state" : false
                    },
                    "timestamp" : 1458597038,
                    "lastUser" : {
                      "name" : "admin",
                      "id" : "UserUUID",
                      "type" : "user"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "DomainUUID",
                      "type" : "domain"
                    },
                    "activity" : 0,
                    "link" : 0,
                    "speed" : -1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/FTDSubInterface"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves the sub-interface associated with the specified NGFW device ID and interface ID. If no interface ID is specified, retrieves list of all sub-interfaces associated with the specified NGFW device ID. <div class=\"alert alert-warning\">More details on netmod events(out of sync interfaces):<b> GET /interfaceevents</b></div> _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteFTDSubInterface",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a sub-interface.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDSubInterface"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/subinterfaces/subinterfaceUUID ( Success: Test DELETE method for FTD logical interface )" : {
                  "metadata" : {
                    "timestamp" : 1467055685450,
                    "domain" : {
                      "name" : "Global",
                      "id" : "GlobalDomainUUID"
                    }
                  },
                  "links" : {
                    "self" : "/fmc_config/v1/domain/default/devices/devicerecords/containerUUID/subinterfaces/subinterfaceUUID"
                  },
                  "type" : "SubInterface",
                  "vlanId" : 2,
                  "subIntfId" : 25769804817,
                  "enabled" : true,
                  "MTU" : 1500,
                  "ifname" : "SubIntf2",
                  "ipv4" : {
                    "static" : { }
                  },
                  "ipv6" : {
                    "prefixes" : [ {
                      "address" : "2003::/128",
                      "default" : false,
                      "advertisement" : {
                        "offlink" : false,
                        "autoConfig" : true,
                        "preferLifeTime" : {
                          "duration" : {
                            "preferLifeTime" : 604800,
                            "validLifeTime" : 2592000
                          }
                        }
                      }
                    } ],
                    "enableIPV6" : false,
                    "linkLocalAddress" : "FE80::19",
                    "raLifeTime" : 1800,
                    "raInterval" : 200,
                    "addresses" : [ {
                      "address" : "2002::",
                      "prefix" : "128",
                      "enforceEUI64" : false
                    } ],
                    "enableRA" : true,
                    "enforceEUI64" : false,
                    "enableAutoConfig" : false,
                    "enableDHCPAddrConfig" : false,
                    "enableDHCPNonAddrConfig" : false,
                    "dadAttempts" : 1,
                    "nsInterval" : 1000,
                    "reachableTime" : 0
                  },
                  "managementOnly" : false,
                  "enableAntiSpoofing" : false,
                  "enableSGTPropagate" : true,
                  "overrideDefaultFragmentSetting" : {
                    "size" : 200,
                    "timeout" : 5,
                    "chain" : 24
                  },
                  "name" : "GigabitEthernet0/1",
                  "id" : "subinterfaceUUID"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/virtualswitches" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves, deletes, creates, or modifies the virtual switch associated with the specified NGIPS device ID and virtual switch ID. If no virtual switch ID is specified, retrieves list of all virtual switches associated with the specified NGIPS device ID.**",
        "operationId" : "getAllVirtualSwitch",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/VirtualSwitchListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/virtualswitches ( Success: Test GET ALL success )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/virtualswitches?offset=0&limit=2"
                  },
                  "items" : [ {
                    "name" : "virtual_switch_1",
                    "id" : "virtualswitchUUID1",
                    "type" : "VirtualSwitch",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/virtualswitches/virtualswitchUUID1"
                    }
                  }, {
                    "name" : "virtual_switch_2",
                    "id" : "virtualswitchUUID2",
                    "type" : "VirtualSwitch",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/virtualswitches/virtualswitchUUID2"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/virtualswitches?expanded=true ( Success: Test GET ALL success with expanded=true )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/virtualswitches?offset=0&limit=2"
                  },
                  "items" : [ {
                    "name" : "virtual_switch_1",
                    "id" : "virtualswitchUUID1",
                    "type" : "VirtualSwitch",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/virtualswitches/virtualswitchUUID1"
                    },
                    "domainId" : 2,
                    "hybridInterface" : {
                      "name" : "hybrid_1",
                      "type" : "FPLogicalInterface",
                      "id" : "hybridInterfaceUUID"
                    },
                    "switchedInterfaces" : [ {
                      "name" : "s1p3.1",
                      "type" : "FPLogicalInterface",
                      "id" : "switchedInterfaceUUID1"
                    }, {
                      "name" : "s1p4.1",
                      "type" : "FPLogicalInterface",
                      "id" : "switchedInterfaceUUID2"
                    } ],
                    "dropBPDU" : false,
                    "enableSpanningTreeProtocol" : false,
                    "strictTCPEnforcement" : false,
                    "metadata" : {
                      "readOnly" : {
                        "state" : false
                      },
                      "timestamp" : 1458595542,
                      "lastUser" : {
                        "name" : "admin",
                        "id" : "UserUUID",
                        "type" : "user"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "DomainUUID",
                        "type" : "domain"
                      }
                    }
                  }, {
                    "name" : "virtual_switch_2",
                    "id" : "virtualswitchUUID2",
                    "type" : "VirtualSwitch",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/virtualswitches/virtualswitchUUID2"
                    },
                    "domainId" : 3,
                    "dropBPDU" : false,
                    "enableSpanningTreeProtocol" : true,
                    "strictTCPEnforcement" : false,
                    "metadata" : {
                      "readOnly" : {
                        "state" : false
                      },
                      "timestamp" : 1458595542,
                      "lastUser" : {
                        "name" : "admin",
                        "id" : "UserUUID",
                        "type" : "user"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "DomainUUID",
                        "type" : "domain"
                      }
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves, deletes, creates, or modifies the virtual switch associated with the specified NGIPS device ID and virtual switch ID. If no virtual switch ID is specified, retrieves list of all virtual switches associated with the specified NGIPS device ID. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createVirtualSwitch",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The input virtual switch model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VirtualSwitch"
          }
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/VirtualSwitch"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/virtualswitches ( Test POST of Virtual Switch to add a record )" : {
                  "name" : "virtual_switch_3",
                  "type" : "VirtualSwitch",
                  "domainId" : 4,
                  "dropBPDU" : false,
                  "enableSpanningTreeProtocol" : true,
                  "strictTCPEnforcement" : false,
                  "hybridInterface" : {
                    "name" : "hybrid_1",
                    "type" : "FPLogicalInterface",
                    "id" : "hybridInterfaceUUID"
                  },
                  "switchedInterfaces" : [ {
                    "name" : "s1p3.1",
                    "type" : "FPLogicalInterface",
                    "id" : "switchedInterfaceUUID1"
                  }, {
                    "name" : "s1p4.1",
                    "type" : "FPLogicalInterface",
                    "id" : "switchedInterfaceUUID2"
                  } ]
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/VirtualSwitch"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/virtualswitches/{objectId}" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves, deletes, creates, or modifies the virtual switch associated with the specified NGIPS device ID and virtual switch ID. If no virtual switch ID is specified, retrieves list of all virtual switches associated with the specified NGIPS device ID.**",
        "operationId" : "getVirtualSwitch",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a virtual switch.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/VirtualSwitch"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/virtualswitches/virtualswitchUUID ( Success: Test GET method for virtual switch )" : {
                  "name" : "virtual_switch_1",
                  "id" : "virtualswitchUUID1",
                  "type" : "VirtualSwitch",
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/virtualswitches/virtualswitchUUID"
                  },
                  "domainId" : 2,
                  "hybridInterface" : {
                    "name" : "hybrid_1",
                    "type" : "FPLogicalInterface",
                    "id" : "hybridInterfaceUUID"
                  },
                  "switchedInterfaces" : [ {
                    "name" : "s1p3.1",
                    "type" : "FPLogicalInterface",
                    "id" : "switchedInterfaceUUID1"
                  }, {
                    "name" : "s1p4.1",
                    "type" : "FPLogicalInterface",
                    "id" : "switchedInterfaceUUID2"
                  } ],
                  "dropBPDU" : false,
                  "enableSpanningTreeProtocol" : false,
                  "strictTCPEnforcement" : false,
                  "metadata" : {
                    "readOnly" : {
                      "state" : false
                    },
                    "timestamp" : 1458595542,
                    "lastUser" : {
                      "name" : "admin",
                      "id" : "UserUUID",
                      "type" : "user"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "DomainUUID",
                      "type" : "domain"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves, deletes, creates, or modifies the virtual switch associated with the specified NGIPS device ID and virtual switch ID. If no virtual switch ID is specified, retrieves list of all virtual switches associated with the specified NGIPS device ID. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateVirtualSwitch",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a virtual switch.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The input virtual switch model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VirtualSwitch"
          }
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/VirtualSwitch"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/virtualswitches/virtualswitchUUID2 ( Test PUT of Virtual Switch to update record )" : {
                  "name" : "virtual_switch_2",
                  "id" : "virtualswitchUUID2",
                  "type" : "VirtualSwitch",
                  "domainId" : 3,
                  "dropBPDU" : true,
                  "enableSpanningTreeProtocol" : false,
                  "strictTCPEnforcement" : false,
                  "hybridInterface" : {
                    "name" : "hybrid_1",
                    "type" : "FPLogicalInterface",
                    "id" : "hybridInterfaceUUID"
                  },
                  "switchedInterfaces" : [ {
                    "name" : "s1p3.1",
                    "type" : "FPLogicalInterface",
                    "id" : "switchedInterfaceUUID1"
                  }, {
                    "name" : "s1p4.1",
                    "type" : "FPLogicalInterface",
                    "id" : "switchedInterfaceUUID2"
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/VirtualSwitch"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves, deletes, creates, or modifies the virtual switch associated with the specified NGIPS device ID and virtual switch ID. If no virtual switch ID is specified, retrieves list of all virtual switches associated with the specified NGIPS device ID. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteVirtualSwitch",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a virtual switch.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/VirtualSwitch"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/virtualswitches/virtualswitchUUID1 ( Test DELETE of Virtual Switch )" : {
                  "name" : "virtual_switch_1",
                  "id" : "virtualswitchUUID1",
                  "type" : "VirtualSwitch",
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/devices/devicerecords/containerUUID/virtualswitches/virtualswitchUUID"
                  },
                  "domainId" : 2,
                  "hybridInterface" : {
                    "name" : "hybrid_1",
                    "type" : "FPLogicalInterface",
                    "id" : "hybridInterfaceUUID"
                  },
                  "switchedInterfaces" : [ {
                    "name" : "s1p3.1",
                    "type" : "FPLogicalInterface",
                    "id" : "switchedInterfaceUUID1"
                  }, {
                    "name" : "s1p4.1",
                    "type" : "FPLogicalInterface",
                    "id" : "switchedInterfaceUUID2"
                  } ],
                  "dropBPDU" : false,
                  "enableSpanningTreeProtocol" : false,
                  "strictTCPEnforcement" : false,
                  "metadata" : {
                    "readOnly" : {
                      "state" : false
                    },
                    "timestamp" : 1458595542,
                    "lastUser" : {
                      "name" : "admin",
                      "id" : "UserUUID",
                      "type" : "user"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "DomainUUID",
                      "type" : "domain"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/virtualtunnelinterfaces" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves, deletes, creates, or modifies the vti interface associated with the specified NGFW device ID and/or interface ID.**",
        "operationId" : "getAllFTDVTIInterface",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDVTIInterfaceListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/virtualtunnelinterfaces ( Success: Test GET ALL success )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/virtualtunnelinterfaces?offset=0&limit=3"
                  },
                  "items" : [ {
                    "name" : "tunnel-1",
                    "id" : "virtualtunnelinterfaceUUID1",
                    "type" : "VTIInterface",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/virtualtunnelinterfaces/virtualtunnelinterfaceUUID1"
                    }
                  }, {
                    "name" : "tunnel-2",
                    "id" : "virtualtunnelinterfaceUUID2",
                    "type" : "VTIInterface",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/virtualtunnelinterfaces/virtualtunnelinterfaceUUID2"
                    }
                  }, {
                    "name" : "tunnel-3",
                    "id" : "virtualtunnelinterfaceUUID3",
                    "type" : "VTIInterface",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/virtualtunnelinterfaces/virtualtunnelinterfaceUUID3"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 3,
                    "count" : 3,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/virtualtunnelinterfaces/virtualtunnelinterfaceUUID?expanded=true ( Success: Test GET ALL success with expanded=true )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/virtualtunnelinterfaces/virtualtunnelinterfaceUUID?offset=0&limit=2"
                  },
                  "items" : [ {
                    "metadata" : {
                      "timestamp" : 1462814174120,
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUUID"
                      },
                      "vpnTopologyName" : "s2s-4",
                      "destinationIpAddress" : "10.10.10.10"
                    },
                    "links" : {
                      "self" : "/fmc_config/v1/domain/default/devices/devicerecords/containerUUID/virtualtunnelinterfaces/virtualtunnelinterfaceUUID1"
                    },
                    "name" : "Tunnel4",
                    "type" : "VTIInterface",
                    "tunnelSource" : {
                      "name" : "GigabitEthernet0/0",
                      "type" : "PhysicalInterface",
                      "id" : "interface UUID"
                    },
                    "tunnelId" : 4,
                    "enabled" : true,
                    "ifname" : "tunnel-4",
                    "securityZone" : {
                      "id" : "<security-zone-uuid>",
                      "type" : "SecurityZone",
                      "links" : {
                        "self" : "http://....."
                      }
                    },
                    "ipv4" : {
                      "static" : {
                        "address" : "2.2.2.2",
                        "netmask" : "255.255.255.0"
                      }
                    },
                    "ipsecMode" : "ipv4",
                    "id" : "00000000-0000-0ed3-0000-206158430258"
                  }, {
                    "metadata" : {
                      "timestamp" : 1462814174120,
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUUID"
                      },
                      "vpnTopologyName" : "s2s-4",
                      "destinationIpAddress" : "10.10.10.10"
                    },
                    "links" : {
                      "self" : "/fmc_config/v1/domain/default/devices/devicerecords/containerUUID/virtualtunnelinterfaces/virtualtunnelinterfaceUUID2"
                    },
                    "name" : "Tunnel5",
                    "type" : "VTIInterface",
                    "tunnelSource" : {
                      "name" : "GigabitEthernet0/0",
                      "type" : "PhysicalInterface",
                      "id" : "interface UUID"
                    },
                    "tunnelId" : 5,
                    "enabled" : true,
                    "ifname" : "tunnel-5",
                    "securityZone" : {
                      "id" : "<security-zone-uuid>",
                      "type" : "SecurityZone",
                      "links" : {
                        "self" : "http://....."
                      }
                    },
                    "ipv4" : {
                      "static" : {
                        "address" : "2.2.2.2",
                        "netmask" : "255.255.255.0"
                      }
                    },
                    "ipsecMode" : "ipv4",
                    "id" : "00000000-0000-0ed3-0000-206158430258"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves, deletes, creates, or modifies the vti interface associated with the specified NGFW device ID and/or interface ID. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createMultipleFTDVTIInterface",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The input NGFW vti interface model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FTDVTIInterface"
          }
        }, {
          "name" : "bulk",
          "in" : "query",
          "description" : "Enables bulk create for NGFW vti interfaces.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/FTDVTIInterface"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/virtualtunnelinterfaces ( Success: Test POST method for FTD virtual tunnel interface )" : {
                  "type" : "VTIInterface",
                  "tunnelSource" : {
                    "name" : "GigabitEthernet0/0",
                    "type" : "PhysicalInterface",
                    "id" : "interface UUID"
                  },
                  "tunnelId" : 5,
                  "enabled" : true,
                  "ifname" : "tunnel-5",
                  "securityZone" : {
                    "id" : "<security-zone-uuid>",
                    "type" : "SecurityZone",
                    "links" : {
                      "self" : "http://....."
                    }
                  },
                  "ipv4" : {
                    "static" : {
                      "address" : "169.254.100.1",
                      "netmask" : "255.255.255.252"
                    }
                  },
                  "ipsecMode" : "ipv4",
                  "id" : "00000000-0000-0ed3-0000-206158430258"
                },
                "Request example 2 : POST /fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/virtualtunnelinterfaces?bulk=true ( Bulk POST operation on FTD virtual tunnel interface )" : [ {
                  "type" : "VTIInterface",
                  "tunnelSource" : {
                    "name" : "GigabitEthernet0/1",
                    "type" : "PhysicalInterface",
                    "id" : "interface UUID"
                  },
                  "tunnelId" : 6,
                  "enabled" : true,
                  "ifname" : "tunnel-6",
                  "securityZone" : {
                    "id" : "<security-zone-uuid>",
                    "type" : "SecurityZone",
                    "links" : {
                      "self" : "http://....."
                    }
                  },
                  "ipv4" : {
                    "static" : {
                      "address" : "169.254.100.1",
                      "netmask" : "255.255.255.252"
                    }
                  },
                  "ipsecMode" : "ipv4",
                  "id" : "00000000-0000-0ed3-0000-206158430259"
                }, {
                  "type" : "VTIInterface",
                  "tunnelSource" : {
                    "name" : "GigabitEthernet0/2",
                    "type" : "PhysicalInterface",
                    "id" : "interface UUID"
                  },
                  "tunnelId" : 7,
                  "enabled" : true,
                  "ifname" : "tunnel-7",
                  "securityZone" : {
                    "id" : "<security-zone-uuid>",
                    "type" : "SecurityZone",
                    "links" : {
                      "self" : "http://....."
                    }
                  },
                  "ipv4" : {
                    "static" : {
                      "address" : "169.254.100.5",
                      "netmask" : "255.255.255.252"
                    }
                  },
                  "ipsecMode" : "ipv4",
                  "id" : "00000000-0000-0ed3-0000-206158430250"
                } ],
                "Response Example 1 :POST /fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/virtualtunnelinterfaces ( Success: Test POST method for FTD virtual tunnel interface )" : {
                  "name" : "Tunnel5",
                  "type" : "VTIInterface",
                  "tunnelSource" : {
                    "name" : "GigabitEthernet0/0",
                    "type" : "PhysicalInterface",
                    "id" : "interface UUID"
                  },
                  "tunnelId" : 5,
                  "enabled" : true,
                  "ifname" : "tunnel-5",
                  "securityZone" : {
                    "id" : "<security-zone-uuid>",
                    "type" : "SecurityZone",
                    "links" : {
                      "self" : "http://....."
                    }
                  },
                  "ipv4" : {
                    "static" : {
                      "address" : "169.254.100.1",
                      "netmask" : "255.255.255.252"
                    }
                  },
                  "ipsecMode" : "ipv4",
                  "id" : "00000000-0000-0ed3-0000-206158430258",
                  "links" : {
                    "self" : "/fmc_config/v1/domain/default/devices/devicerecords/containerUUID/virtualtunnelinterfaces/virtualtunnelinterfaceUUID"
                  },
                  "metadata" : {
                    "readOnly" : {
                      "state" : false
                    },
                    "timestamp" : 1458597038,
                    "lastUser" : {
                      "name" : "admin",
                      "id" : "UserUUID",
                      "type" : "user"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "DomainUUID",
                      "type" : "domain"
                    },
                    "vpnTopologyName" : "s2s-4",
                    "destinationIpAddress" : "10.10.10.10"
                  }
                },
                "Response Example 2 :POST /fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/virtualtunnelinterfaces?bulk=true ( Bulk POST operation on FTD virtual tunnel interface )" : {
                  "links" : {
                    "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/virtualtunnelinterfaces?bulk=true"
                  },
                  "items" : [ {
                    "name" : "Tunnel6",
                    "type" : "VTIInterface",
                    "tunnelSource" : {
                      "name" : "GigabitEthernet0/1",
                      "type" : "PhysicalInterface",
                      "id" : "interface UUID"
                    },
                    "tunnelId" : 6,
                    "enabled" : true,
                    "ifname" : "tunnel-6",
                    "securityZone" : {
                      "id" : "<security-zone-uuid>",
                      "type" : "SecurityZone",
                      "links" : {
                        "self" : "http://....."
                      }
                    },
                    "ipv4" : {
                      "static" : {
                        "address" : "169.254.100.1",
                        "netmask" : "255.255.255.252"
                      }
                    },
                    "ipsecMode" : "ipv4",
                    "id" : "00000000-0000-0ed3-0000-206158430259",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/default/devices/devicerecords/containerUUID/virtualtunnelinterfaces/virtualtunnelinterfaceUUID"
                    },
                    "metadata" : {
                      "readOnly" : {
                        "state" : false
                      },
                      "timestamp" : 1458597038,
                      "lastUser" : {
                        "name" : "admin",
                        "id" : "UserUUID",
                        "type" : "user"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "DomainUUID",
                        "type" : "domain"
                      },
                      "vpnTopologyName" : "s2s-4",
                      "destinationIpAddress" : "10.10.10.10"
                    }
                  }, {
                    "name" : "Tunnel7",
                    "type" : "VTIInterface",
                    "tunnelSource" : {
                      "name" : "GigabitEthernet0/2",
                      "type" : "PhysicalInterface",
                      "id" : "interface UUID"
                    },
                    "tunnelId" : 7,
                    "enabled" : true,
                    "ifname" : "tunnel-7",
                    "securityZone" : {
                      "id" : "<security-zone-uuid>",
                      "type" : "SecurityZone",
                      "links" : {
                        "self" : "http://....."
                      }
                    },
                    "ipv4" : {
                      "static" : {
                        "address" : "169.254.100.5",
                        "netmask" : "255.255.255.252"
                      }
                    },
                    "ipsecMode" : "ipv4",
                    "id" : "00000000-0000-0ed3-0000-206158430250",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/default/devices/devicerecords/containerUUID/virtualtunnelinterfaces/virtualtunnelinterfaceUUID"
                    },
                    "metadata" : {
                      "readOnly" : {
                        "state" : false
                      },
                      "timestamp" : 1458597038,
                      "lastUser" : {
                        "name" : "admin",
                        "id" : "UserUUID",
                        "type" : "user"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "DomainUUID",
                        "type" : "domain"
                      },
                      "vpnTopologyName" : "s2s-4",
                      "destinationIpAddress" : "10.10.10.10"
                    }
                  } ]
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/FTDVTIInterface"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/virtualtunnelinterfaces/{objectId}" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves, deletes, creates, or modifies the vti interface associated with the specified NGFW device ID and/or interface ID.**",
        "operationId" : "getFTDVTIInterface",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a NGFW vti interface.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDVTIInterface"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/virtualtunnelinterfaces/virtualtunnelinterfaceUUID ( Success: Test GET method for virtual tunnel interface )" : {
                  "name" : "Tunnel4",
                  "type" : "VTIInterface",
                  "tunnelSource" : {
                    "name" : "GigabitEthernet0/0",
                    "type" : "PhysicalInterface",
                    "id" : "interface UUID"
                  },
                  "tunnelId" : 4,
                  "enabled" : true,
                  "ifname" : "tunnel-4",
                  "securityZone" : {
                    "id" : "<security-zone-uuid>",
                    "type" : "SecurityZone",
                    "links" : {
                      "self" : "http://....."
                    }
                  },
                  "ipv4" : {
                    "static" : {
                      "address" : "2.2.2.2",
                      "netmask" : "255.255.255.0"
                    }
                  },
                  "ipv6" : {
                    "addresses" : [ {
                      "address" : "ee::11",
                      "prefix" : "64"
                    } ]
                  },
                  "ipsecMode" : "ipv6",
                  "id" : "00000000-0000-0ed3-0000-206158430258",
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/virtualtunnelinterfaces/virtualtunnelinterfaceUUID"
                  },
                  "metadata" : {
                    "readOnly" : {
                      "state" : false
                    },
                    "timestamp" : 1458597038,
                    "lastUser" : {
                      "name" : "admin",
                      "id" : "UserUUID",
                      "type" : "user"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "DomainUUID",
                      "type" : "domain"
                    },
                    "vpnTopologyName" : "s2s-4",
                    "destinationIpAddress" : "10.10.10.10"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves, deletes, creates, or modifies the vti interface associated with the specified NGFW device ID and/or interface ID. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateFTDVTIInterface",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a NGFW vti interface.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The input NGFW vti interface model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FTDVTIInterface"
          }
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDVTIInterface"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/default/devices/devicerecords/containerUUID/virtualtunnelinterfaces/virtualtunnelinterfaceUUID ( Success: Test PUT method for virtual tunnel interface )" : {
                  "type" : "VTIInterface",
                  "name" : "Tunnel5",
                  "tunnelSource" : {
                    "name" : "GigabitEthernet0/0",
                    "type" : "PhysicalInterface",
                    "id" : "interface UUID"
                  },
                  "tunnelId" : 5,
                  "enabled" : true,
                  "ifname" : "tunnel-5",
                  "securityZone" : {
                    "id" : "<security-zone-uuid>",
                    "type" : "SecurityZone",
                    "links" : {
                      "self" : "http://....."
                    }
                  },
                  "ipv4" : {
                    "static" : {
                      "address" : "2.2.2.2",
                      "netmask" : "255.255.255.0"
                    }
                  },
                  "ipsecMode" : "ipv4",
                  "id" : "00000000-0000-0ed3-0000-206158430258"
                },
                "Response Example 1 :PUT /fmc_config/v1/domain/default/devices/devicerecords/containerUUID/virtualtunnelinterfaces/virtualtunnelinterfaceUUID ( Success: Test PUT method for virtual tunnel interface )" : {
                  "type" : "VTIInterface",
                  "name" : "Tunnel5",
                  "tunnelSource" : {
                    "name" : "GigabitEthernet0/0",
                    "type" : "PhysicalInterface",
                    "id" : "interface UUID"
                  },
                  "tunnelId" : 5,
                  "enabled" : true,
                  "ifname" : "tunnel-5",
                  "securityZone" : {
                    "id" : "<security-zone-uuid>",
                    "type" : "SecurityZone",
                    "links" : {
                      "self" : "http://....."
                    }
                  },
                  "ipv4" : {
                    "static" : {
                      "address" : "2.2.2.2",
                      "netmask" : "255.255.255.0"
                    }
                  },
                  "id" : "00000000-0000-0ed3-0000-206158430258",
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/virtualtunnelinterfaces/virtualtunnelinterfaceUUID"
                  },
                  "metadata" : {
                    "readOnly" : {
                      "state" : false
                    },
                    "timestamp" : 1458597038,
                    "lastUser" : {
                      "name" : "admin",
                      "id" : "UserUUID",
                      "type" : "user"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "DomainUUID",
                      "type" : "domain"
                    },
                    "vpnTopologyName" : "s2s-4",
                    "destinationIpAddress" : "10.10.10.10"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/FTDVTIInterface"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves, deletes, creates, or modifies the vti interface associated with the specified NGFW device ID and/or interface ID. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteFTDVTIInterface",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a NGFW vti interface.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDVTIInterface"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/virtualtunnelinterfaces/virtualtunnelinterfaceUUID ( Success: Test DELETE method for virtual tunnel interface )" : {
                  "type" : "VTIInterface",
                  "name" : "Tunnel5",
                  "tunnelSource" : {
                    "name" : "GigabitEthernet0/0",
                    "type" : "PhysicalInterface",
                    "id" : "interface UUID"
                  },
                  "tunnelId" : 5,
                  "enabled" : true,
                  "ifname" : "tunnel-5",
                  "securityZone" : {
                    "id" : "<security-zone-uuid>",
                    "type" : "SecurityZone",
                    "links" : {
                      "self" : "http://....."
                    }
                  },
                  "ipv4" : {
                    "static" : {
                      "address" : "2.2.2.2",
                      "netmask" : "255.255.255.0"
                    }
                  },
                  "ipsecMode" : "ipv4",
                  "id" : "00000000-0000-0ed3-0000-206158430258",
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/virtualtunnelinterfaces/virtualtunnelinterfaceUUID"
                  },
                  "metadata" : {
                    "readOnly" : {
                      "state" : false
                    },
                    "timestamp" : 1458597038,
                    "lastUser" : {
                      "name" : "admin",
                      "id" : "UserUUID",
                      "type" : "user"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "DomainUUID",
                      "type" : "domain"
                    },
                    "vpnTopologyName" : "s2s-4",
                    "destinationIpAddress" : "10.10.10.10"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/vlaninterfaces" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves the vlan interface associated with the specified NGFW device ID and interface ID. If no interface ID is specified, retrieves list of all vlan interfaces associated with the specified NGFW device ID. <div class=\"alert alert-warning\">More details on netmod events(out of sync interfaces):<b> GET /interfaceevents</b></div>**",
        "operationId" : "getAllFTDVlanInterface",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDVlanInterfaceListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/vlaninterfaces ( GET ALL without any query strings )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/devices/devicerecords/deviceUUID/vlaninterfaces?offset=0&limit=2"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/devices/devicerecords/deviceUUID/vlaninterfaces/vlanIntf1"
                    },
                    "name" : "Vlan1",
                    "id" : "vlanIntf1"
                  }, {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/devices/devicerecords/deviceUUID/vlaninterfaces/vlanIntf2"
                    },
                    "name" : "Vlan2",
                    "id" : "vlanIntf2"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/vlaninterfaces?expanded=true ( GET ALL with expanded=true )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/default/devices/devicerecords/domainUUID/vlaninterfaces?offset=0&limit=2"
                  },
                  "items" : [ {
                    "metadata" : {
                      "timestamp" : 1467055685450,
                      "domain" : {
                        "name" : "Global",
                        "id" : "GlobalDomainUUID"
                      },
                      "hwPortAssociations" : [ {
                        "switchPortMode" : "trunk",
                        "name" : "Ethernet1/2",
                        "id" : "Switch Port Interface UUID",
                        "type" : "PhysicalInterface"
                      }, {
                        "switchPortMode" : "access",
                        "name" : "Ethernet1/4",
                        "id" : "Switch Port Interface UUID",
                        "type" : "PhysicalInterface"
                      } ]
                    },
                    "links" : {
                      "self" : "/fmc_config/v1/domain/default/devices/devicerecords/domainUUID/vlaninterfaces/VlanIntfId1"
                    },
                    "type" : "VlanInterface",
                    "vlanId" : 1,
                    "disablePortForwardOnVlan" : {
                      "id" : "interface UUID",
                      "type" : "VlanInterface",
                      "name" : "Vlan1"
                    },
                    "enabled" : true,
                    "ifname" : "vlanIntf1",
                    "mode" : "NONE",
                    "ipv4" : {
                      "static" : {
                        "address" : "10.20.40.40",
                        "netmask" : "24"
                      }
                    },
                    "ipv6" : {
                      "enableIPV6" : false,
                      "raLifeTime" : 1800,
                      "raInterval" : 200,
                      "enableRA" : true,
                      "enforceEUI64" : false,
                      "enableAutoConfig" : false,
                      "enableDHCPAddrConfig" : false,
                      "enableDHCPNonAddrConfig" : false,
                      "dadAttempts" : 1,
                      "nsInterval" : 1000,
                      "reachableTime" : 0
                    },
                    "MTU" : 1500,
                    "securityZone" : {
                      "id" : "6dd95c28-3c9c-11e6-b776-a85c95c244a3",
                      "type" : "SecurityZone"
                    },
                    "enableAntiSpoofing" : false,
                    "overrideDefaultFragmentSetting" : { },
                    "name" : "Vlan1",
                    "description" : "vlanIntf2",
                    "id" : "VlanIntfId2"
                  }, {
                    "metadata" : {
                      "timestamp" : 1467055685450,
                      "domain" : {
                        "name" : "Global",
                        "id" : "GlobalDomainUUID"
                      },
                      "hwPortAssociations" : [ {
                        "switchPortMode" : "trunk",
                        "name" : "Ethernet1/2",
                        "id" : "Switch Port Interface UUID",
                        "type" : "PhysicalInterface"
                      }, {
                        "switchPortMode" : "access",
                        "name" : "Ethernet1/4",
                        "id" : "Switch Port Interface UUID",
                        "type" : "PhysicalInterface"
                      } ]
                    },
                    "links" : {
                      "self" : "/fmc_config/v1/domain/default/devices/devicerecords/domainUUID/vlaninterfaces/VlanIntfId2"
                    },
                    "type" : "VlanInterface",
                    "vlanId" : 2,
                    "disablePortForwardOnVlan" : {
                      "id" : "interface UUID",
                      "type" : "VlanInterface",
                      "name" : "Vlan1"
                    },
                    "enabled" : true,
                    "ifname" : "vlanIntf2",
                    "mode" : "NONE",
                    "ipv4" : {
                      "static" : { }
                    },
                    "MTU" : 1500,
                    "ipv6" : {
                      "prefixes" : [ {
                        "address" : "2003::/128",
                        "default" : false,
                        "advertisement" : {
                          "offlink" : false,
                          "autoConfig" : true,
                          "preferLifeTime" : {
                            "duration" : {
                              "preferLifeTime" : 604800,
                              "validLifeTime" : 2592000
                            }
                          }
                        }
                      } ],
                      "enableIPV6" : false,
                      "linkLocalAddress" : "FE80::19",
                      "raLifeTime" : 1800,
                      "raInterval" : 200,
                      "addresses" : [ {
                        "address" : "2002::",
                        "prefix" : "128",
                        "enforceEUI64" : false
                      } ],
                      "enableRA" : true,
                      "enforceEUI64" : false,
                      "enableAutoConfig" : false,
                      "enableDHCPAddrConfig" : false,
                      "enableDHCPNonAddrConfig" : false,
                      "dadAttempts" : 1,
                      "nsInterval" : 1000,
                      "reachableTime" : 0
                    },
                    "enableAntiSpoofing" : false,
                    "overrideDefaultFragmentSetting" : {
                      "size" : 200,
                      "timeout" : 5,
                      "chain" : 24
                    },
                    "name" : "Vlan2",
                    "id" : "VlanIntfId2"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves the vlan interface associated with the specified NGFW device ID and interface ID. If no interface ID is specified, retrieves list of all vlan interfaces associated with the specified NGFW device ID. <div class=\"alert alert-warning\">More details on netmod events(out of sync interfaces):<b> GET /interfaceevents</b></div> _Check the response section for applicable examples (if any)._**",
        "operationId" : "createFTDVlanInterface",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The input NGFW vlan interface model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FTDVlanInterface"
          }
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/FTDVlanInterface"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/vlaninterfaces ( Success: Test POST method for FTD logical (vlan) interface )" : {
                  "type" : "VlanInterface",
                  "vlanId" : 30,
                  "disablePortForwardOnVlan" : {
                    "id" : "interface UUID",
                    "type" : "VlanInterface",
                    "name" : "Vlan1"
                  },
                  "enabled" : true,
                  "enableAntiSpoofing" : true,
                  "ifname" : "Intf_name",
                  "name" : "Vlan30",
                  "mode" : "NONE",
                  "MTU" : 1500,
                  "overrideDefaultFragmentSetting" : {
                    "size" : 200,
                    "chain" : 24,
                    "timeout" : 5
                  },
                  "arpConfig" : [ {
                    "ipAddress" : "101.101.101.101/25",
                    "macAddress" : "03DC.1234.2323",
                    "enableAlias" : false
                  } ],
                  "securityZone" : {
                    "id" : "sec_zone_id",
                    "type" : "SecurityZone"
                  },
                  "ipv4" : {
                    "static" : {
                      "address" : "1.2.3.4",
                      "netmask" : "25"
                    },
                    "dhcp" : {
                      "enableDefaultRouteDHCP" : "true",
                      "dhcpRouteMetric" : 1
                    },
                    "pppoe" : {
                      "vpdnGroupName" : "VPDN_group_name",
                      "pppoeUser" : "User_name",
                      "pppoePassword" : "User_password",
                      "pppAuth" : "< PAP | CHAP | MSCHAP>",
                      "pppoeRouteMetric" : 1,
                      "enableRouteSettings" : true,
                      "ipAddress" : "1.2.3.4/25",
                      "storeCredsInFlash" : false
                    }
                  },
                  "ipv6" : {
                    "enableIPV6" : true,
                    "enforceEUI64" : false,
                    "linkLocalAddress" : "FE80::",
                    "enableAutoConfig" : true,
                    "enableDHCPAddrConfig" : true,
                    "enableDHCPNonAddrConfig" : false,
                    "dadAttempts" : 1,
                    "nsInterval" : 10000,
                    "reachableTime" : 0,
                    "enableRA" : false,
                    "raLifeTime" : 1800,
                    "raInterval" : 200,
                    "addresses" : [ {
                      "address" : "2001::",
                      "prefix" : "124",
                      "enforceEUI64" : false
                    }, {
                      "address" : "8080::",
                      "prefix" : "12",
                      "enforceEUI64" : true
                    } ],
                    "prefixes" : [ {
                      "address" : "2001::/124",
                      "default" : false,
                      "advertisement" : {
                        "offlink" : false,
                        "autoConfig" : false,
                        "preferLifeTime" : {
                          "duration" : {
                            "preferLifeTime" : 604800,
                            "validLifeTime" : 2592300
                          },
                          "expirationLifeTime" : {
                            "preferDateTime" : "2016-11-05T08:15:30-05:00",
                            "validDateTime" : "2016-12-05T08:15:30-05:00"
                          }
                        }
                      }
                    } ]
                  }
                },
                "Response Example 1 :POST /fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/vlaninterfaces ( Success: Test POST method for FTD logical (vlan) interface )" : {
                  "type" : "VlanInterface",
                  "vlanId" : 30,
                  "disablePortForwardOnVlan" : {
                    "id" : "interface UUID",
                    "type" : "VlanInterface",
                    "name" : "Vlan1"
                  },
                  "enabled" : true,
                  "enableAntiSpoofing" : true,
                  "ifname" : "Intf_name",
                  "name" : "Vlan30",
                  "id" : "vlaninterfaceUUID",
                  "mode" : "NONE",
                  "MTU" : 1500,
                  "overrideDefaultFragmentSetting" : {
                    "size" : 200,
                    "chain" : 24,
                    "timeout" : 5
                  },
                  "arpConfig" : [ {
                    "ipAddress" : "101.101.101.101/25",
                    "macAddress" : "03DC.1234.2323",
                    "enableAlias" : false
                  } ],
                  "securityZone" : {
                    "id" : "sec_zone_id",
                    "type" : "SecurityZone"
                  },
                  "ipv4" : {
                    "static" : {
                      "address" : "1.2.3.4",
                      "netmask" : "25"
                    },
                    "dhcp" : {
                      "enableDefaultRouteDHCP" : "true",
                      "dhcpRouteMetric" : 1
                    },
                    "pppoe" : {
                      "vpdnGroupName" : "VPDN_group_name",
                      "pppoeUser" : "User_name",
                      "pppoePassword" : "User_password",
                      "pppAuth" : "< PAP | CHAP | MSCHAP>",
                      "pppoeRouteMetric" : 1,
                      "enableRouteSettings" : true,
                      "ipAddress" : "1.2.3.4/25",
                      "storeCredsInFlash" : false
                    }
                  },
                  "ipv6" : {
                    "enableIPV6" : true,
                    "enforceEUI64" : false,
                    "linkLocalAddress" : "FE80::",
                    "enableAutoConfig" : true,
                    "enableDHCPAddrConfig" : true,
                    "enableDHCPNonAddrConfig" : false,
                    "dadAttempts" : 1,
                    "nsInterval" : 10000,
                    "reachableTime" : 0,
                    "enableRA" : false,
                    "raLifeTime" : 1800,
                    "raInterval" : 200,
                    "addresses" : [ {
                      "address" : "2001::",
                      "prefix" : "124",
                      "enforceEUI64" : false
                    }, {
                      "address" : "8080::",
                      "prefix" : "12",
                      "enforceEUI64" : true
                    } ],
                    "prefixes" : [ {
                      "address" : "2001::/124",
                      "default" : false,
                      "advertisement" : {
                        "offlink" : false,
                        "autoConfig" : false,
                        "preferLifeTime" : {
                          "duration" : {
                            "preferLifeTime" : 604800,
                            "validLifeTime" : 2592300
                          },
                          "expirationLifeTime" : {
                            "preferDateTime" : "2016-11-05T08:15:30-05:00",
                            "validDateTime" : "2016-12-05T08:15:30-05:00"
                          }
                        }
                      }
                    } ]
                  },
                  "links" : {
                    "self" : "/fmc_config/v1/domain/default/devices/devicerecords/containerUUID/vlaninterfaces/vlaninterfaceUUID"
                  },
                  "metadata" : {
                    "readOnly" : {
                      "state" : false
                    },
                    "timestamp" : 1458597038,
                    "lastUser" : {
                      "name" : "admin",
                      "id" : "UserUUID",
                      "type" : "user"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "DomainUUID",
                      "type" : "domain"
                    },
                    "activity" : 0,
                    "link" : 0,
                    "hwPortAssociations" : [ {
                      "switchPortMode" : "trunk",
                      "name" : "Ethernet1/2",
                      "id" : "Switch Port Interface UUID",
                      "type" : "PhysicalInterface"
                    }, {
                      "switchPortMode" : "access",
                      "name" : "Ethernet1/4",
                      "id" : "Switch Port Interface UUID",
                      "type" : "PhysicalInterface"
                    } ]
                  }
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/FTDVlanInterface"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{containerUUID}/vlaninterfaces/{objectId}" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves the vlan interface associated with the specified NGFW device ID and interface ID. If no interface ID is specified, retrieves list of all vlan interfaces associated with the specified NGFW device ID. <div class=\"alert alert-warning\">More details on netmod events(out of sync interfaces):<b> GET /interfaceevents</b></div>**",
        "operationId" : "getFTDVlanInterface",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a NGFW vlan interface.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDVlanInterface"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/vlaninterfaces/vlaninterfaceUUID ( Success: Test GET method for FTD logical(vlan) interface )" : {
                  "metadata" : {
                    "timestamp" : 1467055685450,
                    "domain" : {
                      "name" : "Global",
                      "id" : "GlobalDomainUUID"
                    },
                    "hwPortAssociations" : [ {
                      "switchPortMode" : "trunk",
                      "name" : "Ethernet1/2",
                      "id" : "Switch Port Interface UUID",
                      "type" : "PhysicalInterface"
                    }, {
                      "switchPortMode" : "access",
                      "name" : "Ethernet1/4",
                      "id" : "Switch Port Interface UUID",
                      "type" : "PhysicalInterface"
                    } ]
                  },
                  "links" : {
                    "self" : "/fmc_config/v1/domain/default/devices/devicerecords/containerUUID/vlaninterfaces/vlaninterfaceUUID"
                  },
                  "type" : "VlanInterface",
                  "vlanId" : 2,
                  "disablePortForwardOnVlan" : {
                    "id" : "interface UUID",
                    "type" : "VlanInterface",
                    "name" : "Vlan1"
                  },
                  "enabled" : true,
                  "mode" : "NONE",
                  "ifname" : "vlanintf",
                  "ipv4" : {
                    "static" : { }
                  },
                  "MTU" : 1500,
                  "ipv6" : {
                    "prefixes" : [ {
                      "address" : "2003::/128",
                      "default" : false,
                      "advertisement" : {
                        "offlink" : false,
                        "autoConfig" : true,
                        "preferLifeTime" : {
                          "duration" : {
                            "preferLifeTime" : 604800,
                            "validLifeTime" : 2592000
                          }
                        }
                      }
                    } ],
                    "enableIPV6" : false,
                    "linkLocalAddress" : "FE80::19",
                    "raLifeTime" : 1800,
                    "raInterval" : 200,
                    "addresses" : [ {
                      "address" : "2002::",
                      "prefix" : "128",
                      "enforceEUI64" : false
                    } ],
                    "enableRA" : true,
                    "enforceEUI64" : false,
                    "enableAutoConfig" : false,
                    "enableDHCPAddrConfig" : false,
                    "enableDHCPNonAddrConfig" : false,
                    "dadAttempts" : 1,
                    "nsInterval" : 1000,
                    "reachableTime" : 0
                  },
                  "enableAntiSpoofing" : false,
                  "overrideDefaultFragmentSetting" : {
                    "size" : 200,
                    "timeout" : 5,
                    "chain" : 24
                  },
                  "name" : "Vlan2",
                  "id" : "vlaninterfaceUUID"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves the vlan interface associated with the specified NGFW device ID and interface ID. If no interface ID is specified, retrieves list of all vlan interfaces associated with the specified NGFW device ID. <div class=\"alert alert-warning\">More details on netmod events(out of sync interfaces):<b> GET /interfaceevents</b></div> _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateFTDVlanInterface",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a NGFW vlan interface.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The input NGFW vlan interface model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FTDVlanInterface"
          }
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDVlanInterface"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/default/devices/devicerecords/containerUUID/vlaninterfaces/vlaninterfaceUUID ( Success: Test PUT method for FTD logical (vlan) interface )" : {
                  "type" : "VlanInterface",
                  "vlanId" : 30,
                  "disablePortForwardOnVlan" : {
                    "id" : "interface UUID",
                    "type" : "VlanInterface",
                    "name" : "Vlan1"
                  },
                  "enabled" : true,
                  "enableAntiSpoofing" : true,
                  "ifname" : "Intf_name",
                  "name" : "Vlan30",
                  "id" : "vlaninterfaceUUID",
                  "mode" : "NONE",
                  "MTU" : 1500,
                  "overrideDefaultFragmentSetting" : {
                    "size" : 200,
                    "chain" : 24,
                    "timeout" : 5
                  },
                  "arpConfig" : [ {
                    "ipAddress" : "101.101.101.101/25",
                    "macAddress" : "03DC.1234.2323",
                    "enableAlias" : false
                  } ],
                  "securityZone" : {
                    "id" : "sec_zone_id",
                    "type" : "SecurityZone"
                  },
                  "ipv4" : {
                    "static" : {
                      "address" : "1.2.3.4",
                      "netmask" : "25"
                    },
                    "dhcp" : {
                      "enableDefaultRouteDHCP" : "true",
                      "dhcpRouteMetric" : 1
                    },
                    "pppoe" : {
                      "vpdnGroupName" : "VPDN_group_name",
                      "pppoeUser" : "User_name",
                      "pppoePassword" : "User_password",
                      "pppAuth" : "< PAP | CHAP | MSCHAP>",
                      "pppoeRouteMetric" : 1,
                      "enableRouteSettings" : true,
                      "ipAddress" : "1.2.3.4/25",
                      "storeCredsInFlash" : false
                    }
                  },
                  "ipv6" : {
                    "enableIPV6" : true,
                    "enforceEUI64" : false,
                    "linkLocalAddress" : "FE80::",
                    "enableAutoConfig" : true,
                    "enableDHCPAddrConfig" : true,
                    "enableDHCPNonAddrConfig" : false,
                    "dadAttempts" : 1,
                    "nsInterval" : 10000,
                    "reachableTime" : 0,
                    "enableRA" : false,
                    "raLifeTime" : 1800,
                    "raInterval" : 200,
                    "addresses" : [ {
                      "address" : "2001::",
                      "prefix" : "124",
                      "enforceEUI64" : false
                    }, {
                      "address" : "8080::",
                      "prefix" : "12",
                      "enforceEUI64" : true
                    } ],
                    "prefixes" : [ {
                      "address" : "2001::/124",
                      "default" : false,
                      "advertisement" : {
                        "offlink" : false,
                        "autoConfig" : false,
                        "preferLifeTime" : {
                          "duration" : {
                            "preferLifeTime" : 604800,
                            "validLifeTime" : 2592300
                          },
                          "expirationLifeTime" : {
                            "preferDateTime" : "2016-11-05T08:15:30.000Z",
                            "validDateTime" : "2016-12-05T08:15:30.000Z"
                          }
                        }
                      }
                    } ]
                  }
                },
                "Response Example 1 :PUT /fmc_config/v1/domain/default/devices/devicerecords/containerUUID/vlaninterfaces/vlaninterfaceUUID ( Success: Test PUT method for FTD logical (vlan) interface )" : {
                  "type" : "VlanInterface",
                  "vlanId" : 30,
                  "disablePortForwardOnVlan" : {
                    "id" : "interface UUID",
                    "type" : "VlanInterface",
                    "name" : "Vlan1"
                  },
                  "enabled" : true,
                  "enableAntiSpoofing" : true,
                  "ifname" : "Intf_name",
                  "name" : "Vlan30",
                  "id" : "vlaninterfaceUUID",
                  "mode" : "NONE",
                  "MTU" : 1500,
                  "securityZone" : {
                    "id" : "sec_zone_id",
                    "type" : "SecurityZone"
                  },
                  "overrideDefaultFragmentSetting" : {
                    "size" : 200,
                    "chain" : 24,
                    "timeout" : 5
                  },
                  "arpConfig" : [ {
                    "ipAddress" : "101.101.101.101/25",
                    "macAddress" : "03DC.1234.2323",
                    "enableAlias" : false
                  } ],
                  "ipv4" : {
                    "static" : {
                      "address" : "1.2.3.4",
                      "netmask" : "25"
                    },
                    "dhcp" : {
                      "enableDefaultRouteDHCP" : "true",
                      "dhcpRouteMetric" : 1
                    },
                    "pppoe" : {
                      "vpdnGroupName" : "VPDN_group_name",
                      "pppoeUser" : "User_name",
                      "pppoePassword" : "User_password",
                      "pppAuth" : "< PAP | CHAP | MSCHAP>",
                      "pppoeRouteMetric" : 1,
                      "enableRouteSettings" : true,
                      "ipAddress" : "1.2.3.4/25",
                      "storeCredsInFlash" : false
                    }
                  },
                  "ipv6" : {
                    "enableIPV6" : true,
                    "enforceEUI64" : false,
                    "linkLocalAddress" : "FE80::",
                    "enableAutoConfig" : true,
                    "enableDHCPAddrConfig" : true,
                    "enableDHCPNonAddrConfig" : false,
                    "dadAttempts" : 1,
                    "nsInterval" : 10000,
                    "reachableTime" : 0,
                    "enableRA" : false,
                    "raLifeTime" : 1800,
                    "raInterval" : 200,
                    "addresses" : [ {
                      "address" : "2001::",
                      "prefix" : "124",
                      "enforceEUI64" : false
                    }, {
                      "address" : "8080::",
                      "prefix" : "12",
                      "enforceEUI64" : true
                    } ],
                    "prefixes" : [ {
                      "address" : "2001::/124",
                      "default" : false,
                      "advertisement" : {
                        "offlink" : false,
                        "autoConfig" : false,
                        "preferLifeTime" : {
                          "duration" : {
                            "preferLifeTime" : 604800,
                            "validLifeTime" : 2592300
                          },
                          "expirationLifeTime" : {
                            "preferDateTime" : "2016-11-05T08:15:30.000Z",
                            "validDateTime" : "2016-12-05T08:15:30.000Z"
                          }
                        }
                      }
                    } ]
                  },
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/vlaninterfaces/vlaninterfaceUUID"
                  },
                  "metadata" : {
                    "readOnly" : {
                      "state" : false
                    },
                    "timestamp" : 1458597038,
                    "lastUser" : {
                      "name" : "admin",
                      "id" : "UserUUID",
                      "type" : "user"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "DomainUUID",
                      "type" : "domain"
                    },
                    "hwPortAssociations" : [ {
                      "switchPortMode" : "trunk",
                      "name" : "Ethernet1/2",
                      "id" : "Switch Port Interface UUID",
                      "type" : "PhysicalInterface"
                    }, {
                      "switchPortMode" : "access",
                      "name" : "Ethernet1/4",
                      "id" : "Switch Port Interface UUID",
                      "type" : "PhysicalInterface"
                    } ],
                    "activity" : 0,
                    "link" : 0
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/FTDVlanInterface"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves the vlan interface associated with the specified NGFW device ID and interface ID. If no interface ID is specified, retrieves list of all vlan interfaces associated with the specified NGFW device ID. <div class=\"alert alert-warning\">More details on netmod events(out of sync interfaces):<b> GET /interfaceevents</b></div> _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteFTDVlanInterface",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a NGFW vlan interface.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDVlanInterface"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /fmc_config/v1/domain/domainUUID/devices/devicerecords/containerUUID/vlaninterfaces/vlaninterfaceUUID ( Success: Test DELETE method for FTD logical(vlan) interface )" : {
                  "metadata" : {
                    "timestamp" : 1467055685450,
                    "domain" : {
                      "name" : "Global",
                      "id" : "GlobalDomainUUID"
                    },
                    "hwPortAssociations" : [ {
                      "switchPortMode" : "trunk",
                      "name" : "Ethernet1/2",
                      "id" : "Switch Port Interface UUID",
                      "type" : "PhysicalInterface"
                    }, {
                      "switchPortMode" : "access",
                      "name" : "Ethernet1/4",
                      "id" : "Switch Port Interface UUID",
                      "type" : "PhysicalInterface"
                    } ]
                  },
                  "links" : {
                    "self" : "/fmc_config/v1/domain/default/devices/devicerecords/containerUUID/vlaninterfaces/vlaninterfaceUUID"
                  },
                  "type" : "VlanInterface",
                  "vlanId" : 2,
                  "disablePortForwardOnVlan" : {
                    "id" : "interface UUID",
                    "type" : "VlanInterface",
                    "name" : "Vlan1"
                  },
                  "enabled" : true,
                  "ifname" : "vlanIntf2",
                  "mode" : "NONE",
                  "MTU" : 1500,
                  "ipv4" : {
                    "static" : { }
                  },
                  "ipv6" : {
                    "prefixes" : [ {
                      "address" : "2003::/128",
                      "default" : false,
                      "advertisement" : {
                        "offlink" : false,
                        "autoConfig" : true,
                        "preferLifeTime" : {
                          "duration" : {
                            "preferLifeTime" : 604800,
                            "validLifeTime" : 2592000
                          }
                        }
                      }
                    } ],
                    "enableIPV6" : false,
                    "linkLocalAddress" : "FE80::19",
                    "raLifeTime" : 1800,
                    "raInterval" : 200,
                    "addresses" : [ {
                      "address" : "2002::",
                      "prefix" : "128",
                      "enforceEUI64" : false
                    } ],
                    "enableRA" : true,
                    "enforceEUI64" : false,
                    "enableAutoConfig" : false,
                    "enableDHCPAddrConfig" : false,
                    "enableDHCPNonAddrConfig" : false,
                    "dadAttempts" : 1,
                    "nsInterval" : 1000,
                    "reachableTime" : 0
                  },
                  "enableAntiSpoofing" : false,
                  "overrideDefaultFragmentSetting" : {
                    "size" : 200,
                    "timeout" : 5,
                    "chain" : 24
                  },
                  "name" : "Vlan2",
                  "id" : "vlaninterfaceUUID"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/devices/devicerecords/{objectId}" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves or modifies the device record associated with the specified ID. Registers or unregisters a device. If no ID is specified for a GET, retrieves list of all device records.**",
        "operationId" : "getDevice",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for a device.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Device"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/devices/devicerecords/device_uuid ( Test GET of device for a uuid )" : {
                  "id" : "device_uuid",
                  "hostName" : "<host name>",
                  "name" : "nachos",
                  "type" : "Device",
                  "license_caps" : [ "PROTECT", "MALWARE" ],
                  "metadata" : {
                    "task" : "object",
                    "domain" : "object",
                    "readOnly" : "object",
                    "containerDetails" : {
                      "id" : "container_uuid",
                      "type" : "DeviceHAPair | DeviceStack | DeviceCluster",
                      "name" : "cotainer_name"
                    },
                    "isPartOfContainer" : true,
                    "snortVersion" : "string",
                    "sruVersion" : "string",
                    "vdbVersion" : "string",
                    "deviceSerialNumber" : "string",
                    "snortEngine" : "SNORT2 | SNORT3"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves or modifies the device record associated with the specified ID. Registers or unregisters a device. If no ID is specified for a GET, retrieves list of all device records. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateDevice",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for a device.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of device.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Device"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Device"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/DomainUUID/devices/devicerecords/device_uuid ( Test PUT of network object to update record )" : {
                  "id" : "device_uuid",
                  "name" : "nachos_updated",
                  "type" : "Device",
                  "hostName" : "10.20.30.40",
                  "prohibitPacketTransfer" : true
                },
                "Request example 2 : PUT /fmc_config/v1/domain/DomainUUID/devices/devicerecords ( Test PUT of network object to create record )" : {
                  "name" : "newDevice",
                  "regKey" : "test",
                  "hostName" : "10.1.1.10",
                  "type" : "Device",
                  "license_caps" : [ "PROTECT", "MALWARE" ],
                  "snortEngine" : "SNORT2 | SNORT3"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/Device"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Devices" ],
        "description" : "**Retrieves or modifies the device record associated with the specified ID. Registers or unregisters a device. If no ID is specified for a GET, retrieves list of all device records. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteDevice",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for a device.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Device"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /fmc_config/v1/domain/DomainUUID/devices/devicerecords/device_uuid ( Test DELETE of device )" : {
                  "id" : "device_uuid",
                  "name" : "nachos_updated",
                  "type" : "Device",
                  "license_caps" : [ "PROTECT", "MALWARE" ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/health/alerts" : {
      "get" : {
        "tags" : [ "Health" ],
        "description" : "**Retrieves Health Alerts.**",
        "operationId" : "getHealthAlertModel",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "Various filter criteria can be specified using the format <code>startTime:start_time_in_secs;endTime:end_time_in_secs;deviceUUIDs:List_of_device_uuids;status:List_of_statuses;moduleIDs:List_of_moduleIDs.</code><br/><br/><code>startTime</code> -- start time in unix format - startTime and endTime should be specified together<br/><code>endTime</code> -- end time in unix format - startTime and endTime should be specified together<br/><code>deviceUUIDs</code> -- List of device UUIDs (UUID is 0 for fmc ).<br/><code>status</code> -- List of status codes to filter delimited by comma, e.g. green,red,yellow.<br/><code>moduleIDs</code> -- List of module ids to filter, delimited by comma.<br/>.",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/HealthAlertModelListContainer"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/health/metrics" : {
      "get" : {
        "tags" : [ "Health" ],
        "description" : "**Retrieves HealthMonitor metrics for the device.**",
        "operationId" : "getHealthMetric",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "Various filter criteria can be specified using the format <code>deviceUUIDs:uuid1,uuid2;metric:metric_name;startTime:start_time_in_secs;endTime:end_time_in_secs;step:step_in_secs;regexFilter:filter_on_metric</code><br/><br/><code>deviceUUIDs</code> --List UUID of the device to be queried.<br/><code>metric</code> -- name of the prometheus metric to be queried.<br/><code>startTime</code> -- start time in unix format seconds.<br/><code>endTime</code> -- end time in unix format seconds.<br/><code>step</code> -- step interval in seconds over which the data is returned.<br/><code>regexFilter</code> -- filter to be applied on the metric names. Supports GO style regex e.g snort.&#42;&#124;lina.&#42; <br/><code>queryFunction</code> -- optional query function which has to be applied to the query, can be one of <code>\"avg\", \"rate\", \"min\", \"max\"</code><br/><code>rateFunctionInterval</code> -- optional interval which has to be applied to the rate function, for e.g five minutes should be specified as <code>5m</code><br/>. For e.g. to query all the memory metrics for LINA the filter parameter should be  <code>deviceUUID:&lt;uuid&gt;;metric:mem;startTime:&lt;time&gt;;endTime:&lt;time&gt;;step:60;regexFilter:used_percentage_lina</code>",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/HealthMetricListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/health/metrics ( Get all Health Metrics details. )" : {
                  "links" : {
                    "self" : "https://10.76.157.67:16286/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/health/metrics?offset=0&limit=1&filter=deviceUUIDs:d8c5ada2-a949-11ea-986f-83a5cef58c55;metric:mem;startTime:1591697330.518;endTime:1591700930.518;step:60;regexFilter:max_lina"
                  },
                  "items" : [ {
                    "regexFilter" : "mem=~\"max_lina\"",
                    "response" : "{\"status\":\"success\",\"data\":{\"resultType\":\"matrix\",\"result\":[{\"metric\":{\"__name__\":\"mem\",\"instance\":\"127.0.0.1:9273\",\"job\":\"d8c5ada2-a949-11ea-986f-83a5cef58c55\",\"mem\":\"max_lina\",\"uuid\":\"d8c5ada2-a949-11ea-986f-83a5cef58c55\"},\"values\":[[1591697330.518,\"4341001248\"],[1591697390.518,\"4341001248\"],[1591697450.518,\"4341001248\"],[1591697510.518,\"4341001248\"],[1591697570.518,\"4341001248\"],[1591697630.518,\"4341001248\"],[1591697690.518,\"4341001248\"],[1591697750.518,\"4341001248\"],[1591697810.518,\"4341001248\"],[1591697870.518,\"4341001248\"],[1591697930.518,\"4341001248\"],[1591697990.518,\"4341001248\"],[1591698050.518,\"4341001248\"],[1591698110.518,\"4341001248\"],[1591698170.518,\"4341001248\"],[1591698230.518,\"4341001248\"],[1591698290.518,\"4341001248\"],[1591698350.518,\"4341001248\"],[1591698410.518,\"4341001248\"],[1591698470.518,\"4341001248\"],[1591698530.518,\"4341001248\"],[1591698590.518,\"4341001248\"],[1591698650.518,\"4341001248\"],[1591698710.518,\"4341001248\"],[1591698770.518,\"4341001248\"],[1591698830.518,\"4341001248\"],[1591698890.518,\"4341001248\"],[1591698950.518,\"4341001248\"],[1591699010.518,\"4341001248\"],[1591699070.518,\"4341001248\"],[1591699130.518,\"4341001248\"],[1591699190.518,\"4341001248\"],[1591699250.518,\"4341001248\"],[1591699310.518,\"4341001248\"],[1591699370.518,\"4341001248\"],[1591699430.518,\"4341001248\"],[1591699490.518,\"4341001248\"],[1591699550.518,\"4341001248\"],[1591699610.518,\"4341001248\"],[1591699670.518,\"4341001248\"],[1591699730.518,\"4341001248\"],[1591699790.518,\"4341001248\"],[1591699850.518,\"4341001248\"],[1591699910.518,\"4341001248\"],[1591699970.518,\"4341001248\"],[1591700030.518,\"4341001248\"],[1591700090.518,\"4341001248\"],[1591700150.518,\"4341001248\"],[1591700210.518,\"4341001248\"],[1591700270.518,\"4341001248\"],[1591700330.518,\"4341001248\"],[1591700390.518,\"4341001248\"],[1591700450.518,\"4341001248\"],[1591700510.518,\"4341001248\"],[1591700570.518,\"4341001248\"],[1591700630.518,\"4341001248\"],[1591700690.518,\"4341001248\"],[1591700750.518,\"4341001248\"],[1591700810.518,\"4341001248\"],[1591700870.518,\"4341001248\"],[1591700930.518,\"4341001248\"]]}]}}",
                    "deviceUUID" : "d8c5ada2-a949-11ea-986f-83a5cef58c55",
                    "metric" : "mem",
                    "type" : "HealthMetric"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/integration/cloudeventsconfigs" : {
      "get" : {
        "tags" : [ "Integration" ],
        "description" : "**Retrieves or modifies the cloud event configuration associated with the specified ID. If no ID is specified for a GET, retrieves a list of the singleton cloud event configuration object.**",
        "operationId" : "getAllCloudEvents",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/CloudEventsListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/DomainUUID/integration/cloudeventsconfigs ( GET ALL method for Cloud Events )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/integration/cloudeventsconfigs?offset=0&limit=1"
                  },
                  "items" : [ {
                    "id" : "CloudEventsConfigsUUID",
                    "type" : "CloudEventsConfigs",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/integration/cloudeventsconfigs/CloudEventsConfigsUUID"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/DomainUUID/integration/cloudeventsconfigs?expanded=true ( GET ALL method for CloudEventsConfigs with expanded set to true )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/integration/cloudeventsconfigs?offset=0&limit=1&expanded=true"
                  },
                  "items" : [ {
                    "id" : "CloudEventsConfigsUUID",
                    "type" : "CloudEventsConfig",
                    "sendIntrusionEvents" : true,
                    "sendFileEvents" : true,
                    "sendConnectionEvents" : true,
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/integration/cloudeventsconfigs/CloudEventsConfigsUUID"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/integration/cloudeventsconfigs/{objectId}" : {
      "get" : {
        "tags" : [ "Integration" ],
        "description" : "**Retrieves or modifies the cloud event configuration associated with the specified ID. If no ID is specified for a GET, retrieves a list of the singleton cloud event configuration object.**",
        "operationId" : "getCloudEvents",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for cloud event configuration.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/CloudEvents"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/integration/cloudeventsconfigs/CloudEventsConfigsUUID ( GET Cloud Events for the given UUID )" : {
                  "id" : "CloudEventsConfigsUUID",
                  "type" : "CloudEventsConfig",
                  "sendIntrusionEvents" : true,
                  "sendFileEvents" : true,
                  "sendConnectionEvents" : true,
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/integration/cloudeventsconfigs/CloudEventsConfigsUUID"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Integration" ],
        "description" : "**Retrieves or modifies the cloud event configuration associated with the specified ID. If no ID is specified for a GET, retrieves a list of the singleton cloud event configuration object. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateCloudEvents",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for cloud event configuration.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of cloud event configuration.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CloudEvents"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/CloudEvents"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/domainUUID/integration/cloudeventsconfigs/CloudEventsConfigsUUID ( PUT to update the Cloud Event Config )" : {
                  "id" : "CloudEventsConfigsUUID",
                  "type" : "CloudEventsConfig",
                  "sendIntrusionEvents" : false,
                  "sendFileEvents" : true,
                  "sendConnectionEvents" : true
                },
                "Response Example 1 :PUT /fmc_config/v1/domain/domainUUID/integration/cloudeventsconfigs/CloudEventsConfigsUUID ( PUT to update the Cloud Event Config )" : {
                  "id" : "CloudEventsConfigsUUID",
                  "type" : "CloudEventsConfig",
                  "sendIntrusionEvents" : false,
                  "sendFileEvents" : true,
                  "sendConnectionEvents" : true,
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/integration/cloudeventsconfigs/CloudEventsConfigsUUID"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/CloudEvents"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/integration/cloudregions" : {
      "get" : {
        "tags" : [ "Integration" ],
        "description" : "**Retrieves or modifies the cloud region configuration associated with the specified ID. If no ID is specified for a GET, retrieves list of all cloud regions.**",
        "operationId" : "getAllCloudRegion",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/CloudRegionListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/domainUUID/integration/cloudregions ( GET ALL method for CloudRegion )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/integration/cloudregions?offset=0&limit=1"
                  },
                  "items" : [ {
                    "id" : "cloudRegionUUID",
                    "type" : "CloudRegion",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/integration/cloudregions/cloudRegionUUID"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/domainUUID/integration/cloudregions?expanded=true ( GET ALL method for CloudRegion with expanded set to true )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/integration/cloudregions?offset=0&limit=1&expanded=true"
                  },
                  "items" : [ {
                    "id" : "cloudRegionUUID",
                    "type" : "CloudRegion",
                    "name" : "example-region",
                    "description" : "Example",
                    "domain" : "region.example.com",
                    "current" : true,
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/integration/cloudregions/cloudRegionUUID"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/integration/cloudregions/{objectId}" : {
      "get" : {
        "tags" : [ "Integration" ],
        "description" : "**Retrieves or modifies the cloud region configuration associated with the specified ID. If no ID is specified for a GET, retrieves list of all cloud regions.**",
        "operationId" : "getCloudRegion",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for a cloud region.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/CloudRegion"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/domainUUID/integration/cloudregions/cloudRegionUUID ( GET CloudRegion for the given UUID )" : {
                  "id" : "cloudRegionUUID",
                  "type" : "CloudRegion",
                  "name" : "example-region",
                  "description" : "Example",
                  "domain" : "region.example.com",
                  "current" : true,
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/integration/cloudregions/cloudRegionUUID"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Integration" ],
        "description" : "**Retrieves or modifies the cloud region configuration associated with the specified ID. If no ID is specified for a GET, retrieves list of all cloud regions. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateCloudRegion",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for a cloud region.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of cloud region.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CloudRegion"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/CloudRegion"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/domainUUID/integration/cloudregions/cloudRegionUUID ( PUT to update the CloudRegion )" : {
                  "id" : "cloudRegionUUID",
                  "type" : "CloudRegion",
                  "current" : true
                },
                "Response Example 1 :PUT /fmc_config/v1/domain/domainUUID/integration/cloudregions/cloudRegionUUID ( PUT to update the CloudRegion )" : {
                  "id" : "cloudRegionUUID",
                  "type" : "CloudRegion",
                  "name" : "example-region",
                  "description" : "Example",
                  "domain" : "region.example.com",
                  "current" : true,
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/integration/cloudregions/cloudRegionUUID"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/CloudRegion"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/integration/externallookups" : {
      "get" : {
        "tags" : [ "Integration" ],
        "description" : "**Retrieves, deletes, creates, or modifies the external lookup associated with the specified ID. If no ID is specified for a GET, retrieves list of all external lookups.**",
        "operationId" : "getAllExternalLookup",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ExternalLookupListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/DomainUUID/integration/externallookups ( GET ALL method for External Lookup )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/integration/externallookups?offset=0&limit=25"
                  },
                  "items" : [ {
                    "id" : "ExternalLookupUUID",
                    "type" : "ExternalLookup",
                    "name" : "test1055",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/integration/externallookups/ExternalLookupUUID"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 25,
                    "count" : 1,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/DomainUUID/integration/externallookups?expanded=true ( GET ALL method for ExternalLookup with expanded set to true )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/integration/externallookups?offset=0&limit=25&expanded=true"
                  },
                  "items" : [ {
                    "id" : "ExternalLookupUUID",
                    "type" : "ExternalLookup",
                    "name" : "test1055",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/integration/externallookups/ExternalLookupUUID"
                    },
                    "template" : "http://www.example.com/{ip}",
                    "enabled" : true
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Integration" ],
        "description" : "**Retrieves, deletes, creates, or modifies the external lookup associated with the specified ID. If no ID is specified for a GET, retrieves list of all external lookups. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createExternalLookup",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of external lookup.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ExternalLookup"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/ExternalLookup"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /fmc_config/v1/domain/domainUUID/integration/externallookups ( POST operation on External Lookup. )" : {
                  "name" : "test",
                  "template" : "http://www.example.com",
                  "enabled" : true,
                  "type" : "ExternalLookup"
                },
                "Response Example 1 :POST /fmc_config/v1/domain/domainUUID/integration/externallookups ( POST operation on External Lookup. )" : {
                  "id" : "ExternalLookupUUID",
                  "type" : "ExternalLookup",
                  "name" : "test",
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/integration/externallookups/ExternalLookupUUID"
                  },
                  "template" : "http://www.example.com",
                  "enabled" : true
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/ExternalLookup"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/integration/externallookups/{objectId}" : {
      "get" : {
        "tags" : [ "Integration" ],
        "description" : "**Retrieves, deletes, creates, or modifies the external lookup associated with the specified ID. If no ID is specified for a GET, retrieves list of all external lookups.**",
        "operationId" : "getExternalLookup",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for an external lookup.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ExternalLookup"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/integration/externallookups/ExternalLookupUUID ( GET External Lookup for the given UUID )" : {
                  "id" : "ExternalLookupUUID",
                  "type" : "ExternalLookup",
                  "name" : "test1055",
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/integration/externallookups/ExternalLookupUUID"
                  },
                  "template" : "http://www.example.com/{ip}",
                  "enabled" : true
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Integration" ],
        "description" : "**Retrieves, deletes, creates, or modifies the external lookup associated with the specified ID. If no ID is specified for a GET, retrieves list of all external lookups. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateExternalLookup",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for an external lookup.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of external lookup.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ExternalLookup"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ExternalLookup"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/domainUUID/integration/externallookups/ExternalLookupUUID ( PUT to update an ExternalLookup )" : {
                  "name" : "change_name",
                  "template" : "http://www.example.com",
                  "enabled" : true,
                  "type" : "ExternalLookup",
                  "id" : "ExternalLookupUUID"
                },
                "Response Example 1 :PUT /fmc_config/v1/domain/domainUUID/integration/externallookups/ExternalLookupUUID ( PUT to update an ExternalLookup )" : {
                  "id" : "ExternalLookupUUID",
                  "type" : "ExternalLookup",
                  "name" : "change_name",
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/integration/externallookups/ExternalLookupUUID"
                  },
                  "template" : "http://www.example.com",
                  "enabled" : true
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/ExternalLookup"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Integration" ],
        "description" : "**Retrieves, deletes, creates, or modifies the external lookup associated with the specified ID. If no ID is specified for a GET, retrieves list of all external lookups. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteExternalLookup",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for an external lookup.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ExternalLookup"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /fmc_config/v1/domain/domainUUID/integration/externallookups/ExternalLookupUUID ( DELETE an External Lookup for the given UUID )" : {
                  "id" : "ExternalLookupUUID",
                  "type" : "ExternalLookup",
                  "name" : "test",
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/integration/externallookups/ExternalLookupUUID"
                  },
                  "template" : "http://www.example.com",
                  "enabled" : true
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/integration/externalstorage" : {
      "get" : {
        "tags" : [ "Integration" ],
        "description" : "**Retrieves, deletes, creates, or modifies the external event storage config.**",
        "operationId" : "getAllExternalStorage",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ExternalStorageListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/domainUUID/integration/externalstorage ( GET ALL method for ExternalStorage )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/integration/externalstorage?offset=0&limit=1"
                  },
                  "items" : [ {
                    "id" : "externalStorageUUID",
                    "type" : "ExternalStorage",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/integration/externalstorage/externalStorageUUID"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/domainUUID/integration/externalstorage?expanded=true ( GET ALL method for ExternalStorage with expanded set to true )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/integration/externalstorage?offset=0&limit=1&expanded=true"
                  },
                  "items" : [ {
                    "id" : "externalStorageUUID",
                    "type" : "ExternalStorage",
                    "name" : "example-config",
                    "description" : "Example",
                    "crossLaunchEnabled" : true,
                    "doNotStoreConnectionEvents" : false,
                    "isLinaLoggingEnabled" : false,
                    "remoteQueryHost" : "example.com",
                    "remoteQueryPort" : 443,
                    "remoteQueryCert" : "Remote Query Cert",
                    "uiHost" : "example.com",
                    "uiPort" : 443,
                    "logHost" : "10.20.30.40",
                    "logPort" : 8514,
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/integration/externalstorage/externalStorageUUID"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/integration/externalstorage/{objectId}" : {
      "get" : {
        "tags" : [ "Integration" ],
        "description" : "**Retrieves, deletes, creates, or modifies the external event storage config.**",
        "operationId" : "getExternalStorage",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for an external event storage config.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ExternalStorage"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/domainUUID/integration/externalstorage/externalStorageUUID ( GET ExternalStorage for the given UUID )" : {
                  "id" : "externalStorageUUID",
                  "type" : "ExternalStorage",
                  "name" : "example-config",
                  "description" : "Example",
                  "crossLaunchEnabled" : true,
                  "doNotStoreConnectionEvents" : false,
                  "isLinaLoggingEnabled" : false,
                  "remoteQueryHost" : "example.com",
                  "remoteQueryPort" : 443,
                  "remoteQueryCert" : "Remote Query Cert",
                  "uiHost" : "example.com",
                  "uiPort" : 443,
                  "logHost" : "10.20.30.40",
                  "logPort" : 8514,
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/integration/externalstorage/externalStorageUUID"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Integration" ],
        "description" : "**Retrieves, deletes, creates, or modifies the external event storage config. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateExternalStorage",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for an external event storage config.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of external event storage config.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ExternalStorage"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ExternalStorage"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/domainUUID/integration/externalstorage/externalStorageUUID ( PUT to update the ExternalStorage )" : {
                  "id" : "externalStorageUUID",
                  "type" : "ExternalStorage",
                  "crossLaunchEnabled" : true,
                  "doNotStoreConnectionEvents" : false,
                  "isLinaLoggingEnabled" : false,
                  "remoteQueryHost" : "example.com",
                  "remoteQueryPort" : 443,
                  "remoteQueryCert" : "Remote Query Cert",
                  "uiHost" : "example.com",
                  "uiPort" : 443,
                  "logHost" : "10.20.30.40",
                  "logPort" : 8514
                },
                "Response Example 1 :PUT /fmc_config/v1/domain/domainUUID/integration/externalstorage/externalStorageUUID ( PUT to update the ExternalStorage )" : {
                  "id" : "externalStorageUUID",
                  "type" : "ExternalStorage",
                  "name" : "example-config",
                  "description" : "Example",
                  "crossLaunchEnabled" : true,
                  "doNotStoreConnectionEvents" : false,
                  "isLinaLoggingEnabled" : false,
                  "remoteQueryHost" : "example.com",
                  "remoteQueryPort" : 443,
                  "remoteQueryCert" : "Remote Query Cert",
                  "uiHost" : "example.com",
                  "uiPort" : 443,
                  "logHost" : "10.20.30.40",
                  "logPort" : 8514,
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/integration/externalstorage/externalStorageUUID"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/ExternalStorage"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/integration/fmchastatuses" : {
      "get" : {
        "tags" : [ "Integration" ],
        "description" : "**[DEV ERROR: Missing description]**",
        "operationId" : "getFMCHAStatus",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FMCHAStatusListContainer"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/integration/securexconfigs" : {
      "get" : {
        "tags" : [ "Integration" ],
        "description" : "**Retrieves, creates, or modifies the SecureX configuration associated with the specified ID. If no ID is specified for a GET, retrieves list of all SecureX configurations.**",
        "operationId" : "getAllSecurexConfig",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/SecurexConfigListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/domainUUID/integration/securexconfigs ( GET ALL method for SecureX Configuration )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/integration/securexconfigs?offset=0&limit=1"
                  },
                  "items" : [ {
                    "id" : "securexConfigUUID",
                    "type" : "SecurexConfig",
                    "name" : "securexconfig",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/integration/securexconfigs/securexConfigUUID"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/domainUUID/integration/securexconfigs?expanded=true ( GET ALL method for SecurexConfig with expanded set to true )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/integration/securexconfigs?offset=0&limit=1&expanded=true"
                  },
                  "items" : [ {
                    "id" : "securexConfigUUID",
                    "type" : "SecurexConfig",
                    "name" : "securexconfig",
                    "enabled" : true,
                    "clientId" : "client-1234",
                    "clientPassword" : "*********",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/integration/securexconfigs/securexConfigUUID"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/integration/securexconfigs/{objectId}" : {
      "get" : {
        "tags" : [ "Integration" ],
        "description" : "**Retrieves, creates, or modifies the SecureX configuration associated with the specified ID. If no ID is specified for a GET, retrieves list of all SecureX configurations.**",
        "operationId" : "getSecurexConfig",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the SecureX configuration.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/SecurexConfig"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/domainUUID/integration/securexconfigs/securexConfigUUID ( GET SecurexConfig for the given UUID )" : {
                  "id" : "securexConfigUUID",
                  "type" : "SecurexConfig",
                  "name" : "securexconfig",
                  "enabled" : true,
                  "clientId" : "client-1234",
                  "clientPassword" : "*********",
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/integration/securexconfigs/securexConfigUUID"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Integration" ],
        "description" : "**Retrieves, creates, or modifies the SecureX configuration associated with the specified ID. If no ID is specified for a GET, retrieves list of all SecureX configurations. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateSecurexConfig",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the SecureX configuration.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The input SecureX configuration model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SecurexConfig"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/SecurexConfig"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/domainUUID/integration/securexconfigs/securexConfigUUID ( PUT to update the SecurexConfig )" : {
                  "id" : "securexConfigUUID",
                  "type" : "SecurexConfig",
                  "enabled" : true,
                  "clientId" : "",
                  "clientPassword" : "*********"
                },
                "Request example 2 : PUT /fmc_config/v1/domain/domainUUID/integration/securexconfigs/securexConfigUUID ( PUT to enable SecurexConfig without credentials )" : {
                  "id" : "securexConfigUUID",
                  "enabled" : true
                },
                "Request example 3 : PUT /fmc_config/v1/domain/domainUUID/integration/securexconfigs/securexConfigUUID ( PUT to disable SecurexConfig without credentials )" : {
                  "id" : "securexConfigUUID",
                  "enabled" : false
                },
                "Response Example 1 :PUT /fmc_config/v1/domain/domainUUID/integration/securexconfigs/securexConfigUUID ( PUT to update the SecurexConfig )" : {
                  "id" : "securexConfigUUID",
                  "type" : "SecurexConfig",
                  "name" : "securexconfig",
                  "enabled" : true,
                  "clientId" : "client-1234",
                  "clientPassword" : "*********",
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/integration/securexconfigs/securexConfigUUID"
                  }
                },
                "Response Example 2 :PUT /fmc_config/v1/domain/domainUUID/integration/securexconfigs/securexConfigUUID ( PUT to enable SecurexConfig without credentials )" : {
                  "id" : "securexConfigUUID",
                  "type" : "SecurexConfig",
                  "enabled" : true,
                  "clientId" : "client-1234",
                  "clientPassword" : "*********",
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/integration/securexconfigs/securexConfigUUID"
                  }
                },
                "Response Example 3 :PUT /fmc_config/v1/domain/domainUUID/integration/securexconfigs/securexConfigUUID ( PUT to disable SecurexConfig without credentials )" : {
                  "id" : "securexConfigUUID",
                  "type" : "SecurexConfig",
                  "enabled" : false,
                  "clientId" : "client-1234",
                  "clientPassword" : "*********",
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/integration/securexconfigs/securexConfigUUID"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/SecurexConfig"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/job/taskstatuses/{objectId}" : {
      "get" : {
        "tags" : [ "Status" ],
        "description" : "**Retrieves information about a previously submitted pending job/task with the specified ID.**",
        "operationId" : "getTaskStatus",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "UUID of request.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/TaskStatus"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/job/taskstatuses/taskID ( GET a specific Task Status based on ID. )" : {
                  "type" : "TaskStatus",
                  "status" : "status_of_queried_task",
                  "taskType" : "valid_enum",
                  "description" : "description_about_task",
                  "message" : "message_about_task",
                  "id" : "taskID",
                  "links" : {
                    "self" : "https://fmc_host_ip/api/fmc_config/v1/domain/global/job/taskstatuses/taskID"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/anyconnectcustomattributes" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the AnyConnect Custom Attribute associated with the specified ID. If no ID is specified for a GET, retrieves list of all AnyConnect Custom Attribute objects.**",
        "operationId" : "getAllAnyConnectCustomAttributeModel",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "To be used in conjunction with <code>\"unusedOnly:true\"</code> to search for unused objects and <code>\"nameOrValue:{nameOrValue}\"</code> to search for both name and value.",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AnyConnectCustomAttributeModelListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/DomainUUID/object/anyconnectcustomattributes?limit=1 ( Get all paginated anyconnect custom attribute objects with limit=1 )" : {
                  "links" : {
                    "self" : "https://<IP:PORT>/api/fmc_config/v1/domain/{domainUUID}/object/anyconnectcustomattributes?offset=0&limit=1"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "https://<IP:PORT>/api/fmc_config/v1/domain/{domainUUID}/object/anyconnectcustomattributes"
                    },
                    "type" : "AnyConnectCustomAttribute",
                    "name" : "string",
                    "id" : "string",
                    "anyConnectAttribute" : "string"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/anyconnectcustomattributes/{containerUUID}/overrides" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves all(Domain and Device) overrides on a AnyConnect Custom Attribute object. Response will always be in expanded form. If passed, the \"expanded\" query parameter will be ignored.**",
        "operationId" : "getAnyConnectCustomAttributeOverride",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AnyConnectCustomAttributeOverrideListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET fmc_config/v1/domain/{domainUUID}/object/anyconnectcustomattributes/{containerUUID}/overrides?offset=0&limit=1 ( Get all overrides on given anyconnect custom attribute objects )" : {
                  "links" : {
                    "self" : "https://<IP:PORT>/api/fmc_config/v1/domain/{domainUUID}/object/anyconnectcustomattributes/{containerUUID}/overrides?offset=0&limit=1"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "https://<IP:PORT>/api/fmc_config/v1/domain/{domainUUID}/object/anyconnectcustomattributes/{containerUUID}?overrideTargetId=targetUUID"
                    },
                    "type" : "AnyConnectCustomAttribute",
                    "anyConnectAttribute" : "DYNAMIC_SPLIT_TUNNELING",
                    "overrides" : {
                      "parent" : {
                        "id" : "AnyConnectCustomAttributeUUID",
                        "type" : "AnyConnectCustomAttribute"
                      },
                      "target" : {
                        "name" : "Global \\ dom2",
                        "id" : "targetUUID",
                        "type" : "Domain"
                      }
                    },
                    "overridable" : true,
                    "description" : "CustomAttr-4 desc",
                    "name" : "CustomAttr-4",
                    "id" : "AnyConnectCustomAttributeUUID",
                    "metadata" : {
                      "timestamp" : "number",
                      "lastUser" : {
                        "name" : "admin"
                      },
                      "domain" : {
                        "name" : "Global \\ dom2",
                        "id" : "domainUUID",
                        "type" : "Domain"
                      }
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/anyconnectcustomattributes/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the AnyConnect Custom Attribute associated with the specified ID. If no ID is specified for a GET, retrieves list of all AnyConnect Custom Attribute objects.**",
        "operationId" : "getAnyConnectCustomAttributeModel",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for AnyConnect Custom Attribute object.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AnyConnectCustomAttributeModel"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/object/anyconnectcustomattributes/objectId ( Get anyconnect custom attribute for particuler object ID )" : {
                  "links" : {
                    "self" : "https://<IP:PORT>/api/fmc_config/v1/domain/{domainUUID}/object/anyconnectcustomattributes/{objectId}"
                  },
                  "type" : "AnyConnectCustomAttribute",
                  "anyConnectAttribute" : "string",
                  "name" : "string",
                  "id" : "string",
                  "metadata" : {
                    "domain" : {
                      "id" : "string"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/anyconnectpackages" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the AnyConnect Package associated with the specified ID. If no ID is specified for a GET, retrieves list of all AnyConnect Package objects.**",
        "operationId" : "getAllAnyConnectPackageModel",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "To be used in conjunction with <code>\"unusedOnly:true\"</code> to search for unused objects and <code>\"nameOrValue:{nameOrValue}\"</code> to search for both name and value.",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AnyConnectPackageModelListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/DomainUUID/object/anyconnectpackages?limit=1 ( Get all paginated anyconnect package objects with limit=1 )" : {
                  "links" : {
                    "self" : "https://<IP:PORT>/api/fmc_config/v1/domain/{domainUUID}/object/anyconnectpackages?offset=0&limit=1"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "https://<IP:PORT>/api/fmc_config/v1/domain/{domainUUID}/object/anyconnectpackages"
                    },
                    "type" : "AnyConnectPackage",
                    "name" : "string",
                    "id" : "string",
                    "fileName" : "string"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/anyconnectpackages/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the AnyConnect Package associated with the specified ID. If no ID is specified for a GET, retrieves list of all AnyConnect Package objects.**",
        "operationId" : "getAnyConnectPackageModel",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for AnyConnect Package object.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AnyConnectPackageModel"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/object/anyconnectpackages/objectId ( Get anyconnect package for particuler object ID )" : {
                  "links" : {
                    "self" : "https://<IP:PORT>/api/fmc_config/v1/domain/{domainUUID}/object/anyconnectpackages/{objectId}"
                  },
                  "type" : "AnyConnectPackage",
                  "fileName" : "string",
                  "name" : "string",
                  "id" : "string",
                  "metadata" : {
                    "domain" : {
                      "id" : "string"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/anyconnectprofiles" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the AnyConnect Profile associated with the specified ID. If no ID is specified for a GET, retrieves list of all AnyConnect Profile objects.**",
        "operationId" : "getAllAnyConnectProfileModel",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "To be used in conjunction with <code>\"unusedOnly:true\"</code> to search for unused objects and <code>\"nameOrValue:{nameOrValue}\"</code> to search for both name and value.",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AnyConnectProfileModelListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/DomainUUID/object/anyconnectprofiles?limit=1 ( Get all paginated anyconnect profile objects with limit=1 )" : {
                  "links" : {
                    "self" : "https://<IP:PORT>/api/fmc_config/v1/domain/{domainUUID}/object/anyconnectprofiles?offset=0&limit=1"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "https://<IP:PORT>/api/fmc_config/v1/domain/{domainUUID}/object/anyconnectprofiles/{objectId}"
                    },
                    "type" : "AnyConnectProfile",
                    "name" : "string",
                    "id" : "string",
                    "fileName" : "string",
                    "fileType" : "string"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/anyconnectprofiles/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the AnyConnect Profile associated with the specified ID. If no ID is specified for a GET, retrieves list of all AnyConnect Profile objects.**",
        "operationId" : "getAnyConnectProfileModel",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for AnyConnect Profile object.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AnyConnectProfileModel"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/object/anyconnectpackages/objectId ( Get anyconnect profile for particuler object ID )" : {
                  "links" : {
                    "self" : "https://<IP:PORT>/api/fmc_config/v1/domain/{domainUUID}/object/anyconnectpackages/{objectId}"
                  },
                  "type" : "AnyConnectPackage",
                  "fileName" : "string",
                  "fileType" : "string",
                  "name" : "string",
                  "id" : "string",
                  "metadata" : {
                    "domain" : {
                      "id" : "string"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/anyprotocolportobjects" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves any protocol port object associated with the specified ID. If no ID is specified for a GET, retrieves list of all any protocol port objects (all port objects with a protocol value of All).**",
        "operationId" : "getAllAnyProtocolPortObject",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "To be used in conjunction with <code>\"unusedOnly:true\"</code> to search for unused objects and <code>\"nameOrValue:{nameOrValue}\"</code> to search for both name and value.",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AnyProtocolPortObjectListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/DomainUUID/object/anyprotocolportobjects ( Success Test GET ALL of AnyProtocolPort Objects )" : {
                  "links" : {
                    "self" : "https://fmc_host_ip/api/fmc_config/v1/domain/global/object/anyprotocolportobjects/anyProtocolPortObjUUID",
                    "parent" : "https://fmc_host_ip/api/fmc_config/v1/domain/global/object/ports"
                  },
                  "type" : "AnyProtocolPortObject",
                  "name" : "myAny",
                  "description" : " ",
                  "id" : "anyProtocolPortObjUUID"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/anyprotocolportobjects/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves any protocol port object associated with the specified ID. If no ID is specified for a GET, retrieves list of all any protocol port objects (all port objects with a protocol value of All).**",
        "operationId" : "getAnyProtocolPortObject",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the object.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AnyProtocolPortObject"
            },
            "examples" : { }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/applicationcategories" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the application category object associated with the specified ID. If no ID is specified, retrieves list of all application category objects.**",
        "operationId" : "getAllApplicationCategory",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ApplicationCategoryListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/domainUUID/object/applicationcategories?limit=2 ( Get all paginated ApplicationCategory with limit set 2 )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/object/applicationcategories?offset=0&limit=2"
                  },
                  "items" : [ {
                    "type" : "ApplicationCategory",
                    "id" : "2325",
                    "name" : "Low",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/object/applicationcategories/2325"
                    }
                  }, {
                    "type" : "ApplicationCategory",
                    "id" : "1234",
                    "name" : "Medium",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/object/applicationcategories/1234"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 5,
                    "next" : [ "/fmc_config/v1/domain/domainUUID/object/applicationcategories?offset=2&limit=2", "/fmc_config/v1/domain/domainUUID/object/applicationcategories?offset=4&limit=1" ],
                    "pages" : 3
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/domainUUID/object/applicationcategories?limit=2&expanded=true ( Get all paginated application with limit set 2 )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/object/applicationcategories?offset=0&limit=5"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/object/applicationcategories/1234"
                    },
                    "type" : "ApplicationCategory",
                    "name" : "Very Low 1234",
                    "id" : "1234",
                    "metadata" : {
                      "count" : 1094
                    }
                  }, {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/object/applicationcategories/2325"
                    },
                    "type" : "ApplicationCategory",
                    "name" : "050plus",
                    "id" : "2325",
                    "metadata" : {
                      "count" : 808
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 5,
                    "next" : [ "/fmc_config/v1/domain/domainUUID/object/applicationcategories?offset=2&limit=2", "/fmc_config/v1/domain/domainUUID/object/applicationcategories?offset=4&limit=1" ],
                    "pages" : 3
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/applicationcategories/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the application category object associated with the specified ID. If no ID is specified, retrieves list of all application category objects.**",
        "operationId" : "getApplicationCategory",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the object.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ApplicationCategory"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/domainUUID/object/applicationcategories/2325 ( Get ApplicationCategory by id )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/object/applicationcategories/2325"
                  },
                  "type" : "ApplicationCategory",
                  "name" : "050plus",
                  "id" : "2325",
                  "metadata" : {
                    "count" : 1094
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/applicationfilters" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the application filter object associated with the specified ID. If no ID is specified, retrieves list of all application filter objects.**",
        "operationId" : "getAllApplicationFilter",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ApplicationFilterListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/domainUUID/object/applicationfilters ( Get all paginated ApplicationFilter )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/object/applicationfilters?offset=0&limit=1"
                  },
                  "items" : [ {
                    "name" : "test1",
                    "id" : "907b5452-e4e0-11e5-87ba-df5089dc85eb",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/object/applicationfilters/907b5452-e4e0-11e5-87ba-df5089dc85eb"
                    },
                    "type" : "ApplicationFilter"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/domainUUID/object/applicationfilters?expanded=true ( Get all paginated application filters )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/object/applicationfilters?offset=0&limit=1"
                  },
                  "items" : [ {
                    "appConditions" : [ {
                      "search" : "Risks:Very Low Business Relevance:Very Low",
                      "risks" : [ {
                        "type" : "ApplicationRisk",
                        "name" : "Very Low",
                        "id" : "VERY_LOW"
                      } ],
                      "productivities" : [ {
                        "name" : "Very Low",
                        "id" : "VERY_LOW",
                        "type" : "ApplicationProductivity",
                        "metadata" : {
                          "count" : 218
                        }
                      } ]
                    } ],
                    "name" : "test1",
                    "id" : "907b5452-e4e0-11e5-87ba-df5089dc85eb",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/object/applicationfilters/907b5452-e4e0-11e5-87ba-df5089dc85eb"
                    },
                    "type" : "ApplicationFilter",
                    "metadata" : {
                      "count" : 218
                    },
                    "applications" : [ {
                      "appProductivity" : {
                        "name" : "Very Low",
                        "id" : "VERY_LOW",
                        "type" : "ApplicationProductivity",
                        "metadata" : {
                          "count" : 0
                        }
                      },
                      "decrypted" : false,
                      "type" : "Application",
                      "name" : "21 Questions",
                      "risk" : {
                        "type" : "ApplicationRisk",
                        "name" : "Very Low",
                        "id" : "VERY_LOW"
                      },
                      "applicationTypes" : [ {
                        "type" : "ApplicationType",
                        "metadata" : {
                          "count" : 0
                        },
                        "name" : "Webapp",
                        "id" : "WEBAPP"
                      } ]
                    } ]
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the application filter object associated with the specified ID. If no ID is specified, retrieves list of all application filter objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createApplicationFilter",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The input application filter object model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ApplicationFilter"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/ApplicationFilter"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/ApplicationFilter"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/applicationfilters/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the application filter object associated with the specified ID. If no ID is specified, retrieves list of all application filter objects.**",
        "operationId" : "getApplicationFilter",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the object.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ApplicationFilter"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/domainUUID/object/applicationfilters/907b5452-e4e0-11e5-87ba-df5089dc85eb ( Get Application Filter by id )" : {
                  "appConditions" : [ {
                    "search" : "Risks:Very Low Business Relevance:Very Low",
                    "risks" : [ {
                      "type" : "ApplicationRisk",
                      "name" : "Very Low",
                      "id" : "VERY_LOW"
                    } ],
                    "productivities" : [ {
                      "name" : "Very Low",
                      "id" : "VERY_LOW",
                      "type" : "ApplicationProductivity",
                      "metadata" : {
                        "count" : 218
                      }
                    } ]
                  } ],
                  "name" : "test1",
                  "id" : "907b5452-e4e0-11e5-87ba-df5089dc85eb",
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/object/applicationfilters/907b5452-e4e0-11e5-87ba-df5089dc85eb"
                  },
                  "type" : "ApplicationFilter",
                  "metadata" : {
                    "count" : 218
                  },
                  "applications" : [ {
                    "appProductivity" : {
                      "name" : "Very Low",
                      "id" : "VERY_LOW",
                      "type" : "ApplicationProductivity",
                      "metadata" : {
                        "count" : 0
                      }
                    },
                    "decrypted" : false,
                    "type" : "Application",
                    "name" : "21 Questions",
                    "risk" : {
                      "type" : "ApplicationRisk",
                      "name" : "Very Low",
                      "id" : "VERY_LOW"
                    },
                    "applicationTypes" : [ {
                      "type" : "ApplicationType",
                      "metadata" : {
                        "count" : 0
                      },
                      "name" : "Webapp",
                      "id" : "WEBAPP"
                    } ]
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the application filter object associated with the specified ID. If no ID is specified, retrieves list of all application filter objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateApplicationFilter",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the object.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The input application filter object model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ApplicationFilter"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ApplicationFilter"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/ApplicationFilter"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the application filter object associated with the specified ID. If no ID is specified, retrieves list of all application filter objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteApplicationFilter",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the object.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ApplicationFilter"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/applicationproductivities" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the application productivity object associated with the specified ID. If no ID is specified, retrieves list of all application productivity objects.**",
        "operationId" : "getAllApplicationProductivity",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ApplicationProductivityListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/domainUUID/object/applicationproductivities?limit=2 ( Get all paginated Application Risk with limit set 2 )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/object/applicationproductivities?offset=0&limit=2"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/object/applicationproductivities/LOW"
                    },
                    "type" : "ApplicationProductivity",
                    "id" : "LOW",
                    "name" : "Low"
                  }, {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/object/applicationproductivities/MEDIUM"
                    },
                    "type" : "ApplicationProductivity",
                    "id" : "MEDIUM",
                    "name" : "Medium"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 5,
                    "next" : [ "/fmc_config/v1/domain/domainUUID/object/applicationproductivities?offset=2&limit=2", "/fmc_config/v1/domain/domainUUID/object/applicationproductivities?offset=4&limit=1" ],
                    "pages" : 3
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/domainUUID/object/applicationproductivities?limit=2&expanded=true ( Get all paginated application risk with limit set 2 )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/object/applicationproductivities?offset=0&limit=5"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/object/applicationproductivities/VERY_LOW"
                    },
                    "type" : "ApplicationProductivity",
                    "name" : "Very Low",
                    "id" : "VERY_LOW",
                    "metadata" : {
                      "count" : 1094
                    }
                  }, {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/object/applicationproductivities/LOW"
                    },
                    "type" : "ApplicationProductivity",
                    "name" : "Low",
                    "id" : "LOW",
                    "metadata" : {
                      "count" : 808
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 5,
                    "next" : [ "/fmc_config/v1/domain/domainUUID/object/applicationproductivities?offset=2&limit=2", "/fmc_config/v1/domain/domainUUID/object/applicationproductivities?offset=4&limit=1" ],
                    "pages" : 3
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/applicationproductivities/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the application productivity object associated with the specified ID. If no ID is specified, retrieves list of all application productivity objects.**",
        "operationId" : "getApplicationProductivity",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the object.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ApplicationProductivity"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/domainUUID/object/applicationproductivities/VERY_LOW ( Get country object by id )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/object/applicationproductivities/VERY_LOW"
                  },
                  "type" : "ApplicationProductivity",
                  "name" : "Very Low",
                  "id" : "VERY_LOW",
                  "metadata" : {
                    "count" : 1094
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/applicationrisks" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the application risk object associated with the specified ID. If no ID is specified, retrieves list of all application risk objects.**",
        "operationId" : "getAllApplicationRisk",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ApplicationRiskListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/domainUUID/object/applicationrisks?limit=2 ( Get all paginated Application Risk with limit set 2 )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/object/applicationrisks?offset=0&limit=2"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/object/applicationrisks/LOW"
                    },
                    "type" : "ApplicationRisk",
                    "id" : "LOW",
                    "name" : "Low"
                  }, {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/object/applicationrisks/MEDIUM"
                    },
                    "type" : "ApplicationRisk",
                    "id" : "MEDIUM",
                    "name" : "Medium"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 5,
                    "next" : [ "/fmc_config/v1/domain/domainUUID/object/applicationrisks?offset=2&limit=2", "/fmc_config/v1/domain/domainUUID/object/applicationrisks?offset=4&limit=1" ],
                    "pages" : 3
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/domainUUID/object/applicationrisks?limit=2&expanded=true ( Get all paginated application risk with limit set 2 )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/object/applicationrisks?offset=0&limit=5"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/object/applicationrisks/VERY_LOW"
                    },
                    "type" : "ApplicationRisk",
                    "name" : "Very Low",
                    "id" : "VERY_LOW",
                    "metadata" : {
                      "count" : 1094
                    }
                  }, {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/object/applicationrisks/LOW"
                    },
                    "type" : "ApplicationRisk",
                    "name" : "Low",
                    "id" : "LOW",
                    "metadata" : {
                      "count" : 808
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 5,
                    "next" : [ "/fmc_config/v1/domain/domainUUID/object/applicationrisks?offset=2&limit=2", "/fmc_config/v1/domain/domainUUID/object/applicationrisks?offset=4&limit=1" ],
                    "pages" : 3
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/applicationrisks/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the application risk object associated with the specified ID. If no ID is specified, retrieves list of all application risk objects.**",
        "operationId" : "getApplicationRisk",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the object.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ApplicationRisk"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/domainUUID/object/applicationrisks/VERY_LOW ( Get country object by id )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/object/applicationrisks/VERY_LOW"
                  },
                  "type" : "ApplicationRisk",
                  "name" : "Very Low",
                  "id" : "VERY_LOW",
                  "metadata" : {
                    "count" : 1094
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/applications" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the application object associated with the specified ID. If no ID is specified, retrieves list of all application objects.**",
        "operationId" : "getAllApplication",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ApplicationListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/domainUUID/object/applications?limit=2 ( Get all paginated Application with limit set 2 )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/object/applications?offset=0&limit=2"
                  },
                  "items" : [ {
                    "type" : "Application",
                    "id" : "2325",
                    "name" : "Low",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/object/applications/2325"
                    }
                  }, {
                    "type" : "Application",
                    "id" : "1234",
                    "name" : "Medium",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/object/applications/1234"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 5,
                    "next" : [ "/fmc_config/v1/domain/domainUUID/object/applications?offset=2&limit=2", "/fmc_config/v1/domain/domainUUID/object/applications?offset=4&limit=1" ],
                    "pages" : 3
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/domainUUID/object/applications?limit=2&expanded=true ( Get all paginated application with limit set 2 )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/object/applications?offset=0&limit=5"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/object/applications/1234"
                    },
                    "type" : "Application",
                    "name" : "Very Low 1234",
                    "id" : "1234",
                    "metadata" : {
                      "count" : 1094
                    }
                  }, {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/object/applications/2325"
                    },
                    "type" : "Application",
                    "name" : "050plus",
                    "id" : "2325",
                    "metadata" : {
                      "count" : 808
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 5,
                    "next" : [ "/fmc_config/v1/domain/domainUUID/object/applications?offset=2&limit=2", "/fmc_config/v1/domain/domainUUID/object/applications?offset=4&limit=1" ],
                    "pages" : 3
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/applications/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the application object associated with the specified ID. If no ID is specified, retrieves list of all application objects.**",
        "operationId" : "getApplication",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the object.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Application"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/domainUUID/object/applications/2325 ( Get Application by id )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/object/applications/2325"
                  },
                  "type" : "Application",
                  "name" : "050plus",
                  "id" : "2325",
                  "metadata" : {
                    "count" : 1094
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/applicationtags" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the application tag object associated with the specified ID. If no ID is specified, retrieves list of all application tag objects.**",
        "operationId" : "getAllApplicationTag",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ApplicationTagListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/domainUUID/object/applicationtags?limit=2 ( Get all paginated ApplicationTag with limit set 2 )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/object/applicationtags?offset=0&limit=2"
                  },
                  "items" : [ {
                    "type" : "ApplicationTag",
                    "id" : "2325",
                    "name" : "Low",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/object/applicationtags/2325"
                    }
                  }, {
                    "type" : "ApplicationTag",
                    "id" : "1234",
                    "name" : "Medium",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/object/applicationtags/1234"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 5,
                    "next" : [ "/fmc_config/v1/domain/domainUUID/object/applicationtags?offset=2&limit=2", "/fmc_config/v1/domain/domainUUID/object/applicationtags?offset=4&limit=1" ],
                    "pages" : 3
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/domainUUID/object/applicationtags?limit=2&expanded=true ( Get all paginated application with limit set 2 )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/object/applicationtags?offset=0&limit=5"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/object/applicationtags/1234"
                    },
                    "type" : "ApplicationTag",
                    "name" : "Very Low 1234",
                    "id" : "1234",
                    "metadata" : {
                      "count" : 1094
                    }
                  }, {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/object/applicationtags/2325"
                    },
                    "type" : "ApplicationTag",
                    "name" : "050plus",
                    "id" : "2325",
                    "metadata" : {
                      "count" : 808
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 5,
                    "next" : [ "/fmc_config/v1/domain/domainUUID/object/applicationtags?offset=2&limit=2", "/fmc_config/v1/domain/domainUUID/object/applicationtags?offset=4&limit=1" ],
                    "pages" : 3
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/applicationtags/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the application tag object associated with the specified ID. If no ID is specified, retrieves list of all application tag objects.**",
        "operationId" : "getApplicationTag",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the object.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ApplicationTag"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/domainUUID/object/applicationtags/2325 ( Get ApplicationTag by id )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/object/applicationtags/2325"
                  },
                  "type" : "ApplicationTag",
                  "name" : "tag1",
                  "id" : "2325",
                  "metadata" : {
                    "count" : 1094
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/applicationtypes" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the application type object associated with the specified ID. If no ID is specified, retrieves list of all application type objects.**",
        "operationId" : "getAllApplicationType",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ApplicationTypeListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/domainUUID/object/applicationtypes?limit=2 ( Get all paginated ApplicationType with limit set 2 )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/object/applicationtypes?offset=0&limit=2"
                  },
                  "items" : [ {
                    "type" : "ApplicationType",
                    "id" : "2325",
                    "name" : "Low",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/object/applicationtypes/2325"
                    }
                  }, {
                    "type" : "ApplicationType",
                    "id" : "1234",
                    "name" : "Medium",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/object/applicationtypes/1234"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 5,
                    "next" : [ "/fmc_config/v1/domain/domainUUID/object/applicationtypes?offset=2&limit=2", "/fmc_config/v1/domain/domainUUID/object/applicationtypes?offset=4&limit=1" ],
                    "pages" : 3
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/domainUUID/object/applicationtypes?limit=2&expanded=true ( Get all paginated application with limit set 2 )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/object/applicationtypes?offset=0&limit=5"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/object/applicationtypes/1234"
                    },
                    "type" : "ApplicationType",
                    "name" : "Very Low 1234",
                    "id" : "1234",
                    "metadata" : {
                      "count" : 1094
                    }
                  }, {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/object/applicationtypes/2325"
                    },
                    "type" : "ApplicationType",
                    "name" : "050plus",
                    "id" : "2325",
                    "metadata" : {
                      "count" : 808
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 5,
                    "next" : [ "/fmc_config/v1/domain/domainUUID/object/applicationtypes?offset=2&limit=2", "/fmc_config/v1/domain/domainUUID/object/applicationtypes?offset=4&limit=1" ],
                    "pages" : 3
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/applicationtypes/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the application type object associated with the specified ID. If no ID is specified, retrieves list of all application type objects.**",
        "operationId" : "getApplicationType",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the object.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ApplicationType"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/domainUUID/object/applicationtypes/2325 ( Get ApplicationType by id )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/object/applicationtypes/2325"
                  },
                  "type" : "ApplicationType",
                  "name" : "type1",
                  "id" : "2325",
                  "metadata" : {
                    "count" : 1094
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/aspathlists" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the aspath object associated with the specified ID. If no ID is specified, retrieves list of all aspath objects.**",
        "operationId" : "getAllAsPathList",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AsPathListListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /api/fmc_config/v1/domain/{domainUUID}/object/aspathlists ( Get all paginated AsPathList objects )" : {
                  "items" : [ {
                    "links" : {
                      "self" : "https://fmc-host:port/api/fmc_config/v1/domain/DomainUUID/object/aspathlists/asPathListObjectUUID"
                    },
                    "id" : "0050568A-2C4B-0ed3-0000-008589934595",
                    "entries" : [ {
                      "regularExpression" : "564",
                      "type" : "AsPathEntry",
                      "action" : "PERMIT"
                    } ],
                    "name" : 34,
                    "type" : "ASPathList",
                    "metadata" : {
                      "timestamp" : 1557854207076,
                      "lastUser" : {
                        "name" : "admin"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "e276abec-e0f2-11e3-8169-6d9ed49b625f"
                      }
                    }
                  }, {
                    "links" : {
                      "self" : "https://fmc-host:port/api/fmc_config/v1/domain/DomainUUID/object/aspathlists/asPathListObjectUUID"
                    },
                    "id" : "0050568A-2C4B-0ed3-0000-008589934632",
                    "entries" : [ {
                      "regularExpression" : "555",
                      "type" : "AsPathEntry",
                      "action" : "PERMIT"
                    } ],
                    "name" : 40,
                    "type" : "ASPathList",
                    "metadata" : {
                      "timestamp" : 1557854252396,
                      "lastUser" : {
                        "name" : "admin"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "e276abec-e0f2-11e3-8169-6d9ed49b625f"
                      }
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/aspathlists/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the aspath object associated with the specified ID. If no ID is specified, retrieves list of all aspath objects.**",
        "operationId" : "getAsPathList",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the asPath.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AsPathList"
            },
            "examples" : { }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/certenrollments" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the Cert Enrollment object associated with the specified ID. If no ID is specified for a GET, retrieves list of all PKI enrollment objects.**",
        "operationId" : "getAllVpnPKIEnrollmentModel",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/VpnPKIEnrollmentModelListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/DomainUUID/object/certenrollments?limit=1 ( Get all paginated PKI Enrollment objects with limit=1 )" : {
                  "links" : {
                    "self" : "https://bglgrp0231-pod.cisco.com:13655/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/object/certenrollments?offset=0&limit=1"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "https://bglgrp0231-pod.cisco.com:13655/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/object/certenrollments/005056A9-039E-0ed3-0000-476741369876"
                    },
                    "type" : "CertEnrollment",
                    "name" : "PKI_Single",
                    "id" : "005056A9-039E-0ed3-0000-476741369876"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/certenrollments/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the Cert Enrollment object associated with the specified ID. If no ID is specified for a GET, retrieves list of all PKI enrollment objects.**",
        "operationId" : "getVpnPKIEnrollmentModel",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for Cert Enrollment object.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/VpnPKIEnrollmentModel"
            },
            "examples" : { }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/certificatemaps" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the Certificate Map associated with the specified ID. If no ID is specified for a GET, retrieves list of all Certificate Map objects.**",
        "operationId" : "getAllCertificateMapModel",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "To be used in conjunction with <code>\"unusedOnly:true\"</code> to search for unused objects and <code>\"nameOrValue:{nameOrValue}\"</code> to search for both name and value.",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/CertificateMapModelListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/DomainUUID/object/certificatemaps?limit=1 ( Get all paginated certificate map objects with limit=1 )" : {
                  "links" : {
                    "self" : "https://<IP:PORT>/api/fmc_config/v1/domain/{domainUUID}/object/certificatemaps?offset=0&limit=1"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "https://<IP:PORT>/api/fmc_config/v1/domain/{domainUUID}/object/certificatemaps/{objectId}"
                    },
                    "rules" : [ {
                      "field" : "SUBJECT",
                      "component" : "WHOLE_FIELD",
                      "operator" : "EQUALS",
                      "value" : "String"
                    } ],
                    "type" : "CertificateMap",
                    "name" : "String",
                    "id" : "String"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/certificatemaps/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the Certificate Map associated with the specified ID. If no ID is specified for a GET, retrieves list of all Certificate Map objects.**",
        "operationId" : "getCertificateMapModel",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for Certificate Map object.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/CertificateMapModel"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/object/certificatemaps/ObjectId ( Get certificate map objects for particuler object ID )" : {
                  "links" : {
                    "self" : "https://<IP:PORT>/api/fmc_config/v1/domain/{domainUUID}/object/certificatemaps/{objectId}"
                  },
                  "rules" : [ {
                    "field" : "SUBJECT",
                    "component" : "WHOLE_FIELD",
                    "operator" : "EQUALS",
                    "value" : "String"
                  } ],
                  "type" : "CertificateMap",
                  "name" : "String",
                  "id" : "String",
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/communitylists" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Community lists object Read only.**",
        "operationId" : "getAllCommunityList",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/CommunityListListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/domainUUID/object/communitylists ( Success: Test GET ALL success )" : { },
                "Response Example 2 : GET /fmc_config/v1/domain/domainUUID/object/communitylists ( Success: Test GET ALL success )" : { }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/communitylists/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Community lists object Read only.**",
        "operationId" : "getCommunityList",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "UUID of the community lists object.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/CommunityList"
            },
            "examples" : { }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/continents" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the continent object associated with the specified ID. If no ID is specified, retrieves list of all continent objects.**",
        "operationId" : "getAllContinentObject",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ContinentObjectListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/DomainUUID/object/continents?limit=2 ( Get all paginated continent objects with limit set 2 )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/continents?offset=0&limit=2"
                  },
                  "items" : [ {
                    "id" : "6",
                    "name" : "North America",
                    "type" : "Continent",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/object/continents/6"
                    }
                  }, {
                    "id" : "4",
                    "name" : "Asia",
                    "type" : "Continent",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/object/continents/4"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 7,
                    "pages" : 4,
                    "next" : [ "/fmc_config/v1/domain/DomainUUID/object/continents?offset=2&limit=2", "/fmc_config/v1/domain/DomainUUID/object/continents?offset=4&limit=2", "/fmc_config/v1/domain/DomainUUID/object/continents?offset=6&limit=1" ]
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/DomainUUID/object/continents?limit=1&expanded=true ( Get all paginated continent objects with limit set 1 )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/continents?offset=0&limit=1"
                  },
                  "items" : [ {
                    "id" : "6",
                    "name" : "North America",
                    "type" : "Continent",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/object/continents/6"
                    },
                    "countries" : [ {
                      "id" : "533",
                      "name" : "Aruba",
                      "iso2" : "aw",
                      "iso3" : "abw",
                      "type" : "Country"
                    }, {
                      "id" : "660",
                      "name" : "Anguilla",
                      "iso2" : "ai",
                      "iso3" : "aia",
                      "type" : "Country"
                    }, {
                      "id" : "530",
                      "name" : "Netherlands Antilles",
                      "iso2" : "an",
                      "iso3" : "ant",
                      "type" : "Country"
                    }, {
                      "id" : "28",
                      "name" : "Antigua and Barbuda",
                      "iso2" : "ag",
                      "iso3" : "atg",
                      "type" : "Country"
                    }, {
                      "id" : "535",
                      "name" : "Bonaire, Sint Eustatius and Saba",
                      "iso2" : "bq",
                      "iso3" : "bes",
                      "type" : "Country"
                    }, {
                      "id" : "44",
                      "name" : "Bahamas",
                      "iso2" : "bs",
                      "iso3" : "bhs",
                      "type" : "Country"
                    }, {
                      "id" : "652",
                      "name" : "Saint Barthélemy",
                      "iso2" : "bl",
                      "iso3" : "blm",
                      "type" : "Country"
                    }, {
                      "id" : "84",
                      "name" : "Belize",
                      "iso2" : "bz",
                      "iso3" : "blz",
                      "type" : "Country"
                    }, {
                      "id" : "60",
                      "name" : "Bermuda",
                      "iso2" : "bm",
                      "iso3" : "bmu",
                      "type" : "Country"
                    }, {
                      "id" : "52",
                      "name" : "Barbados",
                      "iso2" : "bb",
                      "iso3" : "brb",
                      "type" : "Country"
                    }, {
                      "id" : "124",
                      "name" : "Canada",
                      "iso2" : "ca",
                      "iso3" : "can",
                      "type" : "Country"
                    }, {
                      "id" : "188",
                      "name" : "Costa Rica",
                      "iso2" : "cr",
                      "iso3" : "cri",
                      "type" : "Country"
                    }, {
                      "id" : "192",
                      "name" : "Cuba",
                      "iso2" : "cu",
                      "iso3" : "cub",
                      "type" : "Country"
                    }, {
                      "id" : "531",
                      "name" : "Curaçao",
                      "iso2" : "cw",
                      "iso3" : "cuw",
                      "type" : "Country"
                    }, {
                      "id" : "136",
                      "name" : "Cayman Islands",
                      "iso2" : "ky",
                      "iso3" : "cym",
                      "type" : "Country"
                    }, {
                      "id" : "212",
                      "name" : "Dominica",
                      "iso2" : "dm",
                      "iso3" : "dma",
                      "type" : "Country"
                    }, {
                      "id" : "214",
                      "name" : "Dominican Republic",
                      "iso2" : "do",
                      "iso3" : "dom",
                      "type" : "Country"
                    }, {
                      "id" : "312",
                      "name" : "Guadeloupe",
                      "iso2" : "gp",
                      "iso3" : "glp",
                      "type" : "Country"
                    }, {
                      "id" : "308",
                      "name" : "Grenada",
                      "iso2" : "gd",
                      "iso3" : "grd",
                      "type" : "Country"
                    }, {
                      "id" : "304",
                      "name" : "Greenland",
                      "iso2" : "gl",
                      "iso3" : "grl",
                      "type" : "Country"
                    }, {
                      "id" : "320",
                      "name" : "Guatemala",
                      "iso2" : "gt",
                      "iso3" : "gtm",
                      "type" : "Country"
                    }, {
                      "id" : "340",
                      "name" : "Honduras",
                      "iso2" : "hn",
                      "iso3" : "hnd",
                      "type" : "Country"
                    }, {
                      "id" : "332",
                      "name" : "Haiti",
                      "iso2" : "ht",
                      "iso3" : "hti",
                      "type" : "Country"
                    }, {
                      "id" : "388",
                      "name" : "Jamaica",
                      "iso2" : "jm",
                      "iso3" : "jam",
                      "type" : "Country"
                    }, {
                      "id" : "659",
                      "name" : "Saint Kitts And Nevis",
                      "iso2" : "kn",
                      "iso3" : "kna",
                      "type" : "Country"
                    }, {
                      "id" : "662",
                      "name" : "Saint Lucia",
                      "iso2" : "lc",
                      "iso3" : "lca",
                      "type" : "Country"
                    }, {
                      "id" : "663",
                      "name" : "Saint Martin",
                      "iso2" : "mf",
                      "iso3" : "maf",
                      "type" : "Country"
                    }, {
                      "id" : "484",
                      "name" : "Mexico",
                      "iso2" : "mx",
                      "iso3" : "mex",
                      "type" : "Country"
                    }, {
                      "id" : "500",
                      "name" : "Montserrat",
                      "iso2" : "ms",
                      "iso3" : "msr",
                      "type" : "Country"
                    }, {
                      "id" : "474",
                      "name" : "Martinique",
                      "iso2" : "mq",
                      "iso3" : "mtq",
                      "type" : "Country"
                    }, {
                      "id" : "558",
                      "name" : "Nicaragua",
                      "iso2" : "ni",
                      "iso3" : "nic",
                      "type" : "Country"
                    }, {
                      "id" : "591",
                      "name" : "Panama",
                      "iso2" : "pa",
                      "iso3" : "pan",
                      "type" : "Country"
                    }, {
                      "id" : "630",
                      "name" : "Puerto Rico",
                      "iso2" : "pr",
                      "iso3" : "pri",
                      "type" : "Country"
                    }, {
                      "id" : "222",
                      "name" : "El Salvador",
                      "iso2" : "sv",
                      "iso3" : "slv",
                      "type" : "Country"
                    }, {
                      "id" : "666",
                      "name" : "Saint Pierre And Miquelon",
                      "iso2" : "pm",
                      "iso3" : "spm",
                      "type" : "Country"
                    }, {
                      "id" : "534",
                      "name" : "Sint Maarten (Dutch part)",
                      "iso2" : "sx",
                      "iso3" : "sxm",
                      "type" : "Country"
                    }, {
                      "id" : "796",
                      "name" : "Turks And Caicos Islands",
                      "iso2" : "tc",
                      "iso3" : "tca",
                      "type" : "Country"
                    }, {
                      "id" : "780",
                      "name" : "Trinidad and Tobago",
                      "iso2" : "tt",
                      "iso3" : "tto",
                      "type" : "Country"
                    }, {
                      "id" : "840",
                      "name" : "United States",
                      "iso2" : "us",
                      "iso3" : "usa",
                      "type" : "Country"
                    }, {
                      "id" : "670",
                      "name" : "Saint Vincent And The Grenadines",
                      "iso2" : "vc",
                      "iso3" : "vct",
                      "type" : "Country"
                    }, {
                      "id" : "92",
                      "name" : "British Virgin Islands",
                      "iso2" : "vg",
                      "iso3" : "vgb",
                      "type" : "Country"
                    }, {
                      "id" : "850",
                      "name" : "U.S. Virgin Islands",
                      "iso2" : "vi",
                      "iso3" : "vir",
                      "type" : "Country"
                    } ]
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 7,
                    "pages" : 7,
                    "next" : [ "/fmc_config/v1/domain/DomainUUID/object/continents?offset=1&limit=1", "/fmc_config/v1/domain/DomainUUID/object/continents?offset=2&limit=1", "/fmc_config/v1/domain/DomainUUID/object/continents?offset=3&limit=1", "/fmc_config/v1/domain/DomainUUID/object/continents?offset=4&limit=1" ]
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/continents/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the continent object associated with the specified ID. If no ID is specified, retrieves list of all continent objects.**",
        "operationId" : "getContinentObject",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of continent objects.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ContinentObject"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/object/continents/2 ( Get continent object by id )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/continents/2"
                  },
                  "id" : "2",
                  "name" : "Antarctica",
                  "type" : "Continent",
                  "countries" : [ {
                    "id" : "10",
                    "name" : "Antarctica",
                    "iso2" : "aq",
                    "iso3" : "ata",
                    "type" : "Country"
                  }, {
                    "id" : "260",
                    "name" : "French Southern Territories",
                    "iso2" : "tf",
                    "iso3" : "atf",
                    "type" : "Country"
                  }, {
                    "id" : "74",
                    "name" : "Bouvet Island",
                    "iso2" : "bv",
                    "iso3" : "bvt",
                    "type" : "Country"
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/countries" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the country object associated with the specified ID. If no ID is specified, retrieves list of all country objects.**",
        "operationId" : "getAllCountryObject",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/CountryObjectListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/DomainUUID/object/countries?limit=2 ( Get all paginated country objects with limit set 2 )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/countries?offset=0&limit=2"
                  },
                  "items" : [ {
                    "id" : "countryUUID",
                    "name" : "Aruba",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/object/countries/countryUUID"
                    },
                    "type" : "Country"
                  }, {
                    "id" : "country2UUID",
                    "name" : "Anguilla",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/object/countries/country2UUID"
                    },
                    "type" : "Country"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 252,
                    "next" : [ "/fmc_config/v1/domain/DomainUUID/object/countries?offset=2&limit=2", "/fmc_config/v1/domain/DomainUUID/object/countries?offset=4&limit=2", "/fmc_config/v1/domain/DomainUUID/object/countries?offset=6&limit=2", "/fmc_config/v1/domain/DomainUUID/object/countries?offset=8&limit=2" ],
                    "pages" : 126
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/DomainUUID/object/countries?limit=2&expanded=true ( Get all paginated country objects with limit set 2 )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/countries?offset=0&limit=2"
                  },
                  "items" : [ {
                    "id" : "countryUUID",
                    "name" : "Aruba",
                    "iso2" : "aw",
                    "iso3" : "abw",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/object/countries/countryUUID"
                    },
                    "type" : "Country"
                  }, {
                    "id" : "country2UUID",
                    "name" : "Anguilla",
                    "iso2" : "ai",
                    "iso3" : "aia",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/object/countries/country2UUID"
                    },
                    "type" : "Country"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 252,
                    "next" : [ "/fmc_config/v1/domain/DomainUUID/object/countries?offset=2&limit=2", "/fmc_config/v1/domain/DomainUUID/object/countries?offset=4&limit=2", "/fmc_config/v1/domain/DomainUUID/object/countries?offset=6&limit=2", "/fmc_config/v1/domain/DomainUUID/object/countries?offset=8&limit=2" ],
                    "pages" : 126
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/countries/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the country object associated with the specified ID. If no ID is specified, retrieves list of all country objects.**",
        "operationId" : "getCountryObject",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of continent objects.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/CountryObject"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/object/countries/countryUUID ( Get country object by id )" : {
                  "id" : "countryUUID",
                  "name" : "Aruba",
                  "iso2" : "aw",
                  "iso3" : "abw",
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/countries/countryUUID"
                  },
                  "type" : "Country"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/dnsservergroups" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the DNS Server Group object associated with the specified ID. If no ID is specified for a GET, retrieves list of all DNS Server Group objects.**",
        "operationId" : "getAllDNSServerGroupObject",
        "parameters" : [ {
          "name" : "overrideTargetId",
          "in" : "query",
          "description" : "Retrieves the override(s) associated with the object on given target ID.",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/DNSServerGroupObjectListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /api/fmc_config/v1/domain/DomainUUID/object/dnsservergroups ( Get all paginated DNS Server Group objects )" : {
                  "links" : {
                    "self" : "api/fmc_config/v1/domain/DomainUUID/object/dnsservergroups?offset=0&limit=3"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "/api/fmc_config/v1/domain/DomainUUID/object/dnsservergroups/DNSServerGroupObjectUUID"
                    },
                    "type" : "DNSServerGroupObject",
                    "name" : "DNSServerGroupObjectName1",
                    "id" : "DNSServerGroupObjectUUID"
                  }, {
                    "links" : {
                      "self" : "/api/fmc_config/v1/domain/DomainUUID/object/dnsservergroups/DNSServerGroupObjectUUID"
                    },
                    "type" : "DNSServerGroupObject",
                    "name" : "DNSServerGroupObjectName2",
                    "id" : "DNSServerGroupObjectUUID"
                  }, {
                    "links" : {
                      "self" : "/api/fmc_config/v1/domain/DomainUUID/object/dnsservergroups/DNSServerGroupObjectUUID"
                    },
                    "type" : "DNSServerGroupObject",
                    "name" : "DNSServerGroupObjectName3",
                    "id" : "DNSServerGroupObjectUUID"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 3,
                    "count" : 3,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /api/fmc_config/v1/domain/DomainUUID/object/dnsservergroups?expanded=true ( Get all paginated DNS Server Group objects  )" : {
                  "links" : {
                    "self" : "/api/fmc_config/v1/domain/DomainUUID/object/dnsservergroups?offset=0&limit=3&expanded=true"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "/api/fmc_config/v1/domain/DomainUUID/object/dnsservergroups/DNSServerGroupObjectUUID"
                    },
                    "dnsservers" : [ {
                      "name-server" : "IPv4/IPv6hostaddress1"
                    }, {
                      "name-server" : "IPv4/IPv6hostaddress2"
                    } ],
                    "retries" : 2,
                    "defaultdomain" : "cisco.com",
                    "type" : "DNSServerGroupObject",
                    "name" : "DNSServerGroupObjectName1",
                    "timeout" : 2,
                    "id" : "DNSServerGroupObjectUUID",
                    "metadata" : {
                      "timestamp" : 1524118335170,
                      "lastUser" : {
                        "name" : "rest"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "DomainUUID"
                      }
                    }
                  }, {
                    "links" : {
                      "self" : "/api/fmc_config/v1/domain/DomainUUID/object/dnsservergroups/DNSServerGroupObjectUUID"
                    },
                    "dnsservers" : [ {
                      "name-server" : "IPv4/IPv6hostaddress1"
                    }, {
                      "name-server" : "IPv4/IPv6hostaddress2"
                    } ],
                    "retries" : 1,
                    "defaultdomain" : "cisco.com",
                    "type" : "DNSServerGroupObject",
                    "name" : "DNSServerGroupObjectName2",
                    "timeout" : 1,
                    "id" : "DNSServerGroupObjectUUID",
                    "metadata" : {
                      "timestamp" : 1523597066886,
                      "lastUser" : {
                        "name" : "rest"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "DomainUUID"
                      }
                    }
                  }, {
                    "links" : {
                      "self" : "/api/fmc_config/v1/domain/DomainUUID/object/dnsservergroups/DNSServerGroupObjectUUID"
                    },
                    "dnsservers" : [ {
                      "name-server" : "IPv4/IPv6hostaddress1"
                    }, {
                      "name-server" : "IPv4/IPv6hostaddress2"
                    } ],
                    "retries" : 2,
                    "defaultdomain" : "cisco.com",
                    "type" : "DNSServerGroupObject",
                    "name" : "DNSServerGroupObjectName3",
                    "timeout" : 2,
                    "id" : "DNSServerGroupObjectUUID",
                    "metadata" : {
                      "timestamp" : 1524118310520,
                      "lastUser" : {
                        "name" : "rest"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "DomainUUID"
                      }
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the DNS Server Group object associated with the specified ID. If no ID is specified for a GET, retrieves list of all DNS Server Group objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createDNSServerGroupObject",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of DNS Server Group object.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DNSServerGroupObject"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/DNSServerGroupObject"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /api/fmc_config/v1/domain/DomainUUID/object/dnsservergroups ( POST method for DNS Server Group Object )" : {
                  "timeout" : 3,
                  "name" : "DNSServerGroupObjectName1",
                  "type" : "DNSServerGroupObject",
                  "defaultdomain" : "txcisco.com",
                  "dnsservers" : [ {
                    "name-server" : "IPv4/IPv6hostaddress1"
                  }, {
                    "name-server" : "IPv4/IPv6hostaddress2"
                  }, {
                    "name-server" : "IPv4/IPv6hostaddress3"
                  }, {
                    "name-server" : "IPv4/IPv6hostaddress4"
                  }, {
                    "name-server" : "IPv4/IPv6hostaddress5"
                  }, {
                    "name-server" : "IPv4/IPv6hostaddress6"
                  } ],
                  "retries" : 3
                },
                "Response Example 1 :POST /api/fmc_config/v1/domain/DomainUUID/object/dnsservergroups ( POST method for DNS Server Group Object )" : {
                  "links" : {
                    "self" : "/api/fmc_config/v1/domain/DomainUUID/object/dnsservergroups/DNSServerGroupObjectUUID"
                  },
                  "timeout" : 3,
                  "name" : "DNSServerGroupObjectName1",
                  "type" : "DNSServerGroupObject",
                  "defaultdomain" : "txcisco.com",
                  "dnsservers" : [ {
                    "name-server" : "IPv4/IPv6hostaddress1"
                  }, {
                    "name-server" : "IPv4/IPv6hostaddress2"
                  }, {
                    "name-server" : "IPv4/IPv6hostaddress3"
                  }, {
                    "name-server" : "IPv4/IPv6hostaddress4"
                  }, {
                    "name-server" : "IPv4/IPv6hostaddress5"
                  }, {
                    "name-server" : "IPv4/IPv6hostaddress6"
                  } ],
                  "retries" : 3,
                  "id" : "DNSServerGroupObjectUUID",
                  "metadata" : {
                    "timestamp" : 0,
                    "lastUser" : {
                      "name" : "rest"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "DomainUUID"
                    }
                  }
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/DNSServerGroupObject"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/dnsservergroups/{containerUUID}/overrides" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves all(Domain and Device) overrides on a ICMPV4 object.Response will always be in expanded form. If passed, the \"expanded\" query parameter will be ignored.**",
        "operationId" : "getAllDNSServerGroupOverride",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/DNSServerGroupOverrideListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/domainUUID/object/dnsservergroups/dnsservergroupUUID/overrides ( Get all paginated DNSServerGroup object overrides )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/object/dnsservergroups/dnsservergroupUUID/overrides?offset=0&limit=2"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/object/dnsservergroups/dnsservergroupUUID?overrideTargetId=targetUUID"
                    },
                    "timeout" : 2,
                    "defaultdomain" : "internal.cisco.com",
                    "name" : "dns1",
                    "type" : "DNSServerGroupObject",
                    "dnsservers" : [ {
                      "name-server" : "192.168.1.21"
                    }, {
                      "name-server" : "10.10.27.21"
                    } ],
                    "retries" : 2,
                    "id" : "dnsservergroupUUID",
                    "overrides" : {
                      "parent" : {
                        "id" : "dnsservergroupUUID",
                        "type" : "DNSServerGroupObject"
                      },
                      "target" : {
                        "name" : "10.10.27.28",
                        "id" : "targetUUID",
                        "type" : "Device"
                      }
                    },
                    "overridable" : true,
                    "metadata" : {
                      "timestamp" : 1596612383480,
                      "lastUser" : {
                        "name" : "admin"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "e276abec-e0f2-11e3-8169-6d9ed49b625f",
                        "type" : "Domain"
                      }
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/dnsservergroups/{containerUUID}/overrides/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves all(Domain and Device) overrides on a ICMPV4 object.Response will always be in expanded form. If passed, the \"expanded\" query parameter will be ignored.**",
        "operationId" : "getDNSServerGroupOverride",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for DNS Server Group object.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/DNSServerGroupOverride"
            },
            "examples" : { }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/dnsservergroups/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the DNS Server Group object associated with the specified ID. If no ID is specified for a GET, retrieves list of all DNS Server Group objects.**",
        "operationId" : "getDNSServerGroupObject",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for DNS Server Group object.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "overrideTargetId",
          "in" : "query",
          "description" : "Retrieves the override(s) associated with the object on given target ID.",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/DNSServerGroupObject"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /api/fmc_config/v1/domain/DomainUUID/object/dnsservergroups/DNSServerGroupObjectUUID ( Get DNS Server Group object by id )" : {
                  "links" : {
                    "self" : "/api/fmc_config/v1/domain/DomainUUID/object/dnsservergroups/DNSServerGroupObjectUUID"
                  },
                  "dnsservers" : [ {
                    "name-server" : "IPv4/IPv6hostaddress1"
                  }, {
                    "name-server" : "IPv4/IPv6hostaddress2"
                  } ],
                  "retries" : 1,
                  "defaultdomain" : "cisco.com",
                  "type" : "DNSServerGroupObject",
                  "name" : "DNSServerGroupObjectName1",
                  "timeout" : 1,
                  "id" : "DNSServerGroupObjectUUID",
                  "metadata" : {
                    "timestamp" : 1523597066886,
                    "lastUser" : {
                      "name" : "rest"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "DomainUUID"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the DNS Server Group object associated with the specified ID. If no ID is specified for a GET, retrieves list of all DNS Server Group objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateDNSServerGroupObject",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for DNS Server Group object.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of DNS Server Group object.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DNSServerGroupObject"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/DNSServerGroupObject"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /api/fmc_config/v1/domain/DomainUUID/object/dnsservergroups/DNSServerGroupObjectUUID ( PUT method for DNS Server Group Object )" : {
                  "dnsservers" : [ {
                    "name-server" : "IPv4/IPv6hostaddress1"
                  }, {
                    "name-server" : "IPv4/IPv6hostaddress2"
                  } ],
                  "retries" : 1,
                  "defaultdomain" : "cisco.com",
                  "type" : "DNSServerGroupObject",
                  "name" : "DNSServerGroupObjectName1",
                  "timeout" : 1,
                  "id" : "DNSServerGroupObjectUUID"
                },
                "Response Example 1 :PUT /api/fmc_config/v1/domain/DomainUUID/object/dnsservergroups/DNSServerGroupObjectUUID ( PUT method for DNS Server Group Object )" : {
                  "links" : {
                    "self" : "/api/fmc_config/v1/domain/DomainUUID/object/dnsservergroups/DNSServerGroupObjectUUID"
                  },
                  "dnsservers" : [ {
                    "name-server" : "IPv4/IPv6hostaddress1"
                  }, {
                    "name-server" : "IPv4/IPv6hostaddress2"
                  } ],
                  "retries" : 1,
                  "defaultdomain" : "cisco.com",
                  "type" : "DNSServerGroupObject",
                  "name" : "DNSServerGroupObjectName1",
                  "timeout" : 1,
                  "id" : "DNSServerGroupObjectUUID",
                  "metadata" : {
                    "timestamp" : 0,
                    "lastUser" : {
                      "name" : "rest"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "DomainUUID"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/DNSServerGroupObject"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the DNS Server Group object associated with the specified ID. If no ID is specified for a GET, retrieves list of all DNS Server Group objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteDNSServerGroupObject",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for DNS Server Group object.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "overrideTargetId",
          "in" : "query",
          "description" : "Retrieves the override(s) associated with the object on given target ID.",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/DNSServerGroupObject"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /api/fmc_config/v1/domain/DomainUUID/object/dnsservergroups/DNSServerGroupObjectUUID ( DELETE method for DNS Server Group Object )" : {
                  "links" : {
                    "self" : "/api/fmc_config/v1/domain/DomainUUID/object/dnsservergroups/DNSServerGroupObjectUUID"
                  },
                  "dnsservers" : [ {
                    "name-server" : "IPv4/IPv6hostaddress1"
                  }, {
                    "name-server" : "IPv4/IPv6hostaddress2"
                  } ],
                  "retries" : 1,
                  "defaultdomain" : "cisco.com",
                  "type" : "DNSServerGroupObject",
                  "name" : "DNSServerGroupObjectName1",
                  "timeout" : 1,
                  "id" : "DNSServerGroupObjectUUID",
                  "metadata" : {
                    "timestamp" : 1524129145233,
                    "lastUser" : {
                      "name" : "rest"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "DomainUUID"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/dynamicobjectmappings" : {
      "post" : {
        "tags" : [ "Object" ],
        "description" : "**Adds or removes Dynamic Object Mappings for specific Dynamic Objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createDynamicObjectMappingsBulk",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of Dynamic Object Mappings Bulk Object.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DynamicObjectMappingsBulk"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/DynamicObjectMappingsBulk"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /api/fmc_config/v1/domain/DomainUUID/object/dynamicobjectmappings ( POST Dynamic Object Mappings Bulk )" : {
                  "add" : [ {
                    "mappings" : [ "192.168.1.1", "192.168.2.1" ],
                    "dynamicObject" : {
                      "name" : "Marketing",
                      "id" : "005056AB-931D-0ed3-0000-004294967373",
                      "type" : "DynamicObject"
                    }
                  }, {
                    "mappings" : [ "192.168.100.1", "192.168.200.1" ],
                    "dynamicObject" : {
                      "id" : "005056AB-931D-0ed3-0000-004294967391",
                      "name" : "IP",
                      "type" : "DynamicObject"
                    }
                  } ],
                  "remove" : [ {
                    "mappings" : [ "0.0.0.0" ],
                    "dynamicObject" : {
                      "id" : "005056AB-931D-0ed3-0000-004294967391",
                      "name" : "IP",
                      "type" : "DynamicObject"
                    }
                  } ]
                },
                "Response Example 1 :POST /api/fmc_config/v1/domain/DomainUUID/object/dynamicobjectmappings ( POST Dynamic Object Mappings Bulk )" : {
                  "add" : [ {
                    "dynamicObject" : {
                      "id" : "005056AB-931D-0ed3-0000-004294967373",
                      "name" : "Marketing",
                      "type" : "DynamicObject"
                    },
                    "mappings" : [ "192.168.1.1", "192.168.2.1" ]
                  }, {
                    "dynamicObject" : {
                      "id" : "005056AB-931D-0ed3-0000-004294967391",
                      "name" : "IP",
                      "type" : "DynamicObject"
                    },
                    "mappings" : [ "192.168.100.1", "192.168.200.1" ]
                  } ],
                  "remove" : [ {
                    "dynamicObject" : {
                      "name" : "IP",
                      "id" : "005056AB-931D-0ed3-0000-004294967391",
                      "type" : "DynamicObject"
                    },
                    "mappings" : [ "0.0.0.0" ]
                  } ]
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/DynamicObjectMappingsBulk"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Object" ],
        "description" : "**Adds or removes Dynamic Object Mappings for specific Dynamic Objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteMultipleDynamicObjectMappingsBulk",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "Specify filter criteria<ul><li>Object with ids: <code>\"ids:id1,id2,...\"</code></li><li>Unused objects: <code>\"unusedOnly:true\"</code></li><li>Name starts with: <code>\"nameStartsWith:{name-pattern}\"</code></li><li>Agent ID: <code>\"agentId:{Agent ID}\"</code></li></ul>",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "bulk",
          "in" : "query",
          "description" : "Enables bulk removal of mappings",
          "required" : true,
          "type" : "boolean"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/DynamicObjectMappingsBulk"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/dynamicobjects" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the Dynamic Object associated with the specified ID. If no ID is specified for a GET, retrieves list of all Dynamic Objects.**",
        "operationId" : "getAllDynamicObject",
        "parameters" : [ {
          "name" : "name",
          "in" : "query",
          "description" : "If parameter is specified, only the Dynamic Objects matching with the specified name will be displayed. Cannot be used if object ID is specified in path.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "includeCount",
          "in" : "query",
          "description" : "If parameter is specified, mappingsCount field will be added into metadata. Can be used if object ID is specified in path.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Specify filter criteria<ul><li>Object with ids: <code>\"ids:id1,id2,...\"</code></li><li>Unused objects: <code>\"unusedOnly:true\"</code></li><li>Name starts with: <code>\"nameStartsWith:{name-pattern}\"</code></li></ul>",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/DynamicObjectListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /api/fmc_config/v1/domain/DomainUUID/object/dynamicobjects?expanded=true ( Get all paginated Dynamic Objects )" : {
                  "links" : {
                    "self" : "api/fmc_config/v1/domain/DomainUUID/object/dynamicobjects?expanded=true&offset=0&limit=3"
                  },
                  "items" : [ {
                    "id" : "0050568D-75AB-0ed3-0000-038654707195",
                    "name" : "11",
                    "type" : "DynamicObject",
                    "objectType" : "IP",
                    "links" : {
                      "self" : "/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/object/dynamicobjects/0050568D-75AB-0ed3-0000-038654707195"
                    },
                    "metadata" : {
                      "domain" : {
                        "name" : "Global",
                        "id" : "e276abec-e0f2-11e3-8169-6d9ed49b625f",
                        "type" : "Domain"
                      }
                    }
                  }, {
                    "id" : "0050568D-75AB-0ed3-0000-038654707213",
                    "name" : "12",
                    "type" : "DynamicObject",
                    "objectType" : "IP",
                    "links" : {
                      "self" : "/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/object/dynamicobjects/0050568D-75AB-0ed3-0000-038654707213"
                    },
                    "metadata" : {
                      "domain" : {
                        "name" : "Global",
                        "id" : "e276abec-e0f2-11e3-8169-6d9ed49b625f",
                        "type" : "Domain"
                      }
                    }
                  }, {
                    "id" : "0050568D-75AB-0ed3-0000-038654707231",
                    "name" : "13",
                    "type" : "DynamicObject",
                    "objectType" : "IP",
                    "links" : {
                      "self" : "/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/object/dynamicobjects/0050568D-75AB-0ed3-0000-038654707231"
                    },
                    "metadata" : {
                      "mappingsCount" : 42,
                      "domain" : {
                        "name" : "Global",
                        "id" : "e276abec-e0f2-11e3-8169-6d9ed49b625f",
                        "type" : "Domain"
                      }
                    }
                  } ],
                  "paging" : {
                    "offset" : "0",
                    "limit" : "3",
                    "count" : "3",
                    "pages" : "1"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the Dynamic Object associated with the specified ID. If no ID is specified for a GET, retrieves list of all Dynamic Objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createMultipleDynamicObject",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of Dynamic Object.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DynamicObject"
          }
        }, {
          "name" : "bulk",
          "in" : "query",
          "description" : "Enables bulk create (POST) or delete (DELETE) of Dynamic Objects.",
          "required" : false,
          "type" : "boolean"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/DynamicObject"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /api/fmc_config/v1/domain/DomainUUID/object/dynamicobjects ( POST method for Dynamic Object )" : {
                  "name" : "Marketing",
                  "description" : "IPs of marketing department",
                  "type" : "DynamicObject",
                  "objectType" : "IP"
                },
                "Request example 2 : POST /api/fmc_config/v1/domain/DomainUUID/object/dynamicobjects?bulk=true ( POST method for bulk creation of Dynamic Objects )" : [ {
                  "name" : "Marketing",
                  "description" : "IPs of marketing department",
                  "type" : "DynamicObject",
                  "objectType" : "IP"
                }, {
                  "name" : "Engineering",
                  "description" : "IPs of engineering department",
                  "type" : "DynamicObject",
                  "objectType" : "IP"
                } ],
                "Response Example 1 :POST /api/fmc_config/v1/domain/DomainUUID/object/dynamicobjects ( POST method for Dynamic Object )" : {
                  "id" : "005056AB-931D-0ed3-0000-004294967338",
                  "name" : "Marketing",
                  "description" : "IPs of marketing department",
                  "type" : "DynamicObject",
                  "objectType" : "IP",
                  "links" : {
                    "self" : "/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/object/dynamicobjects/005056AB-931D-0ed3-0000-004294967338"
                  },
                  "metadata" : {
                    "domain" : {
                      "name" : "Global",
                      "id" : "e276abec-e0f2-11e3-8169-6d9ed49b625f",
                      "type" : "Domain"
                    }
                  }
                },
                "Response Example 2 :POST /api/fmc_config/v1/domain/DomainUUID/object/dynamicobjects?bulk=true ( POST method for bulk creation of Dynamic Objects )" : {
                  "links" : {
                    "self" : "/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/object/dynamicobjects?bulk=true"
                  },
                  "items" : [ {
                    "id" : "005056A9-4E43-0ed3-0000-128849018968",
                    "name" : "Marketing",
                    "description" : "IPs of marketing department",
                    "type" : "DynamicObject",
                    "objectType" : "IP",
                    "links" : {
                      "self" : "/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/object/dynamicobjects/005056A9-4E43-0ed3-0000-128849018968"
                    }
                  }, {
                    "id" : "005056A9-4E43-0ed3-0000-128849018969",
                    "name" : "Engineering",
                    "description" : "IPs of engineering department",
                    "type" : "DynamicObject",
                    "objectType" : "IP",
                    "links" : {
                      "self" : "/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/object/dynamicobjects/005056A9-4E43-0ed3-0000-128849018969"
                    }
                  } ]
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/DynamicObject"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the Dynamic Object associated with the specified ID. If no ID is specified for a GET, retrieves list of all Dynamic Objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteMultipleDynamicObject",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "Specify filter criteria<ul><li>Object with ids: <code>\"ids:id1,id2,...\"</code></li><li>Unused objects: <code>\"unusedOnly:true\"</code></li><li>Name starts with: <code>\"nameStartsWith:{name-pattern}\"</code></li></ul>",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "bulk",
          "in" : "query",
          "description" : "Enables bulk create (POST) or delete (DELETE) of Dynamic Objects.",
          "required" : true,
          "type" : "boolean"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/DynamicObject"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /api/fmc_config/v1/domain/DomainUUID/object/dynamicobjects/dynamicobjectUUID ( DELETE method for Dynamic Object )" : {
                  "id" : "005056AB-931D-0ed3-0000-004294967338",
                  "name" : "Marketing",
                  "description" : "IPs of marketing department",
                  "type" : "DynamicObject",
                  "objectType" : "IP",
                  "links" : {
                    "self" : "/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/object/dynamicobjects/005056AB-931D-0ed3-0000-004294967338"
                  },
                  "metadata" : {
                    "domain" : {
                      "name" : "Global",
                      "id" : "e276abec-e0f2-11e3-8169-6d9ed49b625f",
                      "type" : "Domain"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/dynamicobjects/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the Dynamic Object associated with the specified ID. If no ID is specified for a GET, retrieves list of all Dynamic Objects.**",
        "operationId" : "getDynamicObject",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier or name of Dynamic Object.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "includeCount",
          "in" : "query",
          "description" : "If parameter is specified, mappingsCount field will be added into metadata. Can be used if object ID is specified in path.",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/DynamicObject"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /api/fmc_config/v1/domain/DomainUUID/object/dynamicobjects/dynamicObjectUUID ( GET Dynamic Object by id )" : {
                  "id" : "dynamicObjectUUID",
                  "type" : "DynamicObject",
                  "objectype" : "ip",
                  "name" : "Name of Dynamic Object",
                  "description" : "Description of Dynamic Object",
                  "links" : {
                    "self" : "/api/fmc_config/v1/domain/DomainUUID/object/dynamicbjects/dynamicObjectUUID"
                  },
                  "metadata" : {
                    "domain" : {
                      "id" : "domainUUID",
                      "type" : "Domain",
                      "name" : "Global"
                    },
                    "lastUser" : {
                      "name" : "admin",
                      "id" : "userUUID",
                      "type" : "User"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the Dynamic Object associated with the specified ID. If no ID is specified for a GET, retrieves list of all Dynamic Objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateDynamicObject",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of Dynamic Object.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DynamicObject"
          }
        }, {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier or name of Dynamic Object.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/DynamicObject"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /api/fmc_config/v1/domain/DomainUUID/object/dynamicobjects/dynamicobjectUUID/ ( PUT method for Dynamic Object )" : {
                  "id" : "005056AB-931D-0ed3-0000-004294967338",
                  "name" : "Marketing",
                  "description" : "IPs of marketing department changed",
                  "type" : "DynamicObject",
                  "objectType" : "IP"
                },
                "Response Example 1 :PUT /api/fmc_config/v1/domain/DomainUUID/object/dynamicobjects/dynamicobjectUUID/ ( PUT method for Dynamic Object )" : {
                  "id" : "005056AB-931D-0ed3-0000-004294967338",
                  "name" : "Marketing",
                  "description" : "IPs of marketing department changed",
                  "type" : "DynamicObject",
                  "objectType" : "IP",
                  "links" : {
                    "self" : "/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/object/dynamicobjects/005056AB-931D-0ed3-0000-004294967338"
                  },
                  "metadata" : {
                    "domain" : {
                      "name" : "Global",
                      "id" : "e276abec-e0f2-11e3-8169-6d9ed49b625f",
                      "type" : "Domain"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/DynamicObject"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the Dynamic Object associated with the specified ID. If no ID is specified for a GET, retrieves list of all Dynamic Objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteDynamicObject",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier or name of Dynamic Object.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/DynamicObject"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /api/fmc_config/v1/domain/DomainUUID/object/dynamicobjects/dynamicobjectUUID ( DELETE method for Dynamic Object )" : {
                  "id" : "005056AB-931D-0ed3-0000-004294967338",
                  "name" : "Marketing",
                  "description" : "IPs of marketing department",
                  "type" : "DynamicObject",
                  "objectType" : "IP",
                  "links" : {
                    "self" : "/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/object/dynamicobjects/005056AB-931D-0ed3-0000-004294967338"
                  },
                  "metadata" : {
                    "domain" : {
                      "name" : "Global",
                      "id" : "e276abec-e0f2-11e3-8169-6d9ed49b625f",
                      "type" : "Domain"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/dynamicobjects/{objectId}/mappings" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, adds, or removes the Dynamic Object Mappings associated with the specified ID.**",
        "operationId" : "getDynamicObjectMappings",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier or name of Dynamic Object.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/DynamicObjectMappingsListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /api/fmc_config/v1/domain/DomainUUID/object/dynamicobjects/dynamicobjectUUID/mappings ( GET mappings for specific Dynamic Object )" : {
                  "items" : [ {
                    "mapping" : "1.1.1.1"
                  }, {
                    "mapping" : "1.1.1.4/24"
                  }, {
                    "mapping" : "1.1.3.4"
                  }, {
                    "mapping" : "1.2.2.1"
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, adds, or removes the Dynamic Object Mappings associated with the specified ID. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateDynamicObjectMappings",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier or name of Dynamic Object.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "action",
          "in" : "query",
          "description" : "Specify action for dynamic object mappings. It can be one of [\"add\", \"remove\", \"remove_all\"]",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The input dynamic object mappings model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DynamicObjectMappings"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/DynamicObjectMappings"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /api/fmc_config/v1/domain/DomainUUID/object/dynamicobjects/dynamicobjectUUID/mappings?action=add ( Add Dynamic Object Mappings )" : {
                  "mappings" : [ "1.1.1.2", "1.2.3.4/24" ],
                  "type" : "DynamicObjectMappings",
                  "id" : "0050568D-75AB-0ed3-0000-038654707195"
                },
                "Request example 2 : PUT /api/fmc_config/v1/domain/DomainUUID/object/dynamicobjects/dynamicobjectUUID/mappings?action=remove ( Add Dynamic Object Mappings )" : {
                  "mappings" : [ "1.1.1.2", "1.2.3.4/24" ],
                  "type" : "DynamicObjectMappings",
                  "id" : "0050568D-75AB-0ed3-0000-038654707195"
                },
                "Request example 3 : PUT /api/fmc_config/v1/domain/DomainUUID/object/dynamicobjects/dynamicobjectUUID/mappings?action=remove_all ( Add Dynamic Object Mappings )" : {
                  "type" : "DynamicObjectMappings",
                  "id" : "0050568D-75AB-0ed3-0000-038654707195"
                },
                "Response Example 1 :PUT /api/fmc_config/v1/domain/DomainUUID/object/dynamicobjects/dynamicobjectUUID/mappings?action=add ( Add Dynamic Object Mappings )" : {
                  "mappings" : [ "1.1.1.2", "1.2.3.4/24" ],
                  "type" : "DynamicObjectMappings",
                  "id" : "0050568D-75AB-0ed3-0000-038654707195"
                },
                "Response Example 2 :PUT /api/fmc_config/v1/domain/DomainUUID/object/dynamicobjects/dynamicobjectUUID/mappings?action=remove ( Add Dynamic Object Mappings )" : {
                  "mappings" : [ "1.1.1.2", "1.2.3.4/24" ],
                  "type" : "DynamicObjectMappings",
                  "id" : "0050568D-75AB-0ed3-0000-038654707195"
                },
                "Response Example 3 :PUT /api/fmc_config/v1/domain/DomainUUID/object/dynamicobjects/dynamicobjectUUID/mappings?action=remove_all ( Add Dynamic Object Mappings )" : {
                  "type" : "DynamicObjectMappings",
                  "id" : "0050568D-75AB-0ed3-0000-038654707195"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/DynamicObjectMappings"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, adds, or removes the Dynamic Object Mappings associated with the specified ID. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteMultipleDynamicObjectMappings",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "Specify filter criteria<ul><li>Object with ids: <code>\"ids:id1,id2,...\"</code></li><li>Unused objects: <code>\"unusedOnly:true\"</code></li><li>Name starts with: <code>\"nameStartsWith:{name-pattern}\"</code></li><li>Agent ID: <code>\"agentId:{Agent ID}\"</code></li></ul>",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "bulk",
          "in" : "query",
          "description" : "Enables bulk removal of mappings",
          "required" : true,
          "type" : "boolean"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/DynamicObjectMappings"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/endpointdevicetypes" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the endpoint device type object associated with the specified ID. If no ID is specified, retrieves list of all endpoint device type objects.**",
        "operationId" : "getAllEndPointDeviceType",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/EndPointDeviceTypeListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/exampledomainuuid/object/endpointdevicetypes ( Success: Test GET ALL success of all Endpoint Device Types )" : {
                  "links" : {
                    "self" : "https://example.com:443/api/fmc_config/v1/domain/exampledomainuuid/object/endpointdevicetypes?offset=0&limit=2"
                  },
                  "items" : [ {
                    "name" : "ExampleEndPointDeviceTypename",
                    "id" : "exampleEndPointDeviceTypeuuid",
                    "type" : "EndPointDeviceType",
                    "links" : {
                      "self" : "https://example.com:443/api/fmc_config/v1/domain/exampledomainuuid/object/endpointdevicetypes/exampleEndPointDeviceTypeuuid"
                    }
                  }, {
                    "name" : "ExampleEndPointDeviceTypename2",
                    "id" : "exampleEndPointDeviceTypeuuid2",
                    "type" : "EndPointDeviceType",
                    "links" : {
                      "self" : "https://example.com:443/api/fmc_config/v1/domain/exampledomainuuid/object/endpointdevicetypes/exampleEndPointDeviceTypeuuid2"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/exampledomainuuid/object/endpointdevicetypes?expanded=true ( Success: Test GET ALL success with expanded=true )" : {
                  "links" : {
                    "self" : "httpshttps://example.com:443/api/fmc_config/v1/domain/exampledomainuuid/object/endpointdevicetypes?expanded=true"
                  },
                  "items" : [ {
                    "name" : "ExampleEndPointDeviceTypename",
                    "id" : "exampleEndPointDeviceTypeuuid",
                    "type" : "EndPointDeviceType",
                    "description" : "example description.",
                    "fqName" : "<fully qualified name>",
                    "links" : {
                      "self" : "https://example.com:443/api/fmc_config/v1/domain/exampledomainuuid/object/endpointdevicetypes/exampleEndPointDeviceTypeuuid"
                    },
                    "metadata" : {
                      "readOnly" : {
                        "state" : true
                      },
                      "timestamp" : 41540695097,
                      "lastUser" : {
                        "name" : "testuser",
                        "id" : "testuseruuid",
                        "type" : "User"
                      },
                      "domain" : {
                        "name" : "TestDomain",
                        "id" : "testdomainuuid",
                        "type" : "Domain"
                      }
                    }
                  }, {
                    "name" : "ExampleEndPointDeviceTypename2",
                    "id" : "exampleEndPointDeviceTypeuuid2",
                    "type" : "EndPointDeviceType",
                    "description" : "example description.2",
                    "fqName" : "<fully qualified name>",
                    "links" : {
                      "self" : "https://example.com:443/api/fmc_config/v1/domain/exampledomainuuid/object/endpointdevicetypes/exampleEndPointDeviceTypeuuid2"
                    },
                    "metadata" : {
                      "readOnly" : {
                        "state" : true
                      },
                      "timestamp" : 414393589,
                      "lastUser" : {
                        "name" : "testuser2",
                        "id" : "testuseruuid2",
                        "type" : "User"
                      },
                      "domain" : {
                        "name" : "TestDomain2",
                        "id" : "testdomainuuid2",
                        "type" : "Domain"
                      }
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/endpointdevicetypes/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the endpoint device type object associated with the specified ID. If no ID is specified, retrieves list of all endpoint device type objects.**",
        "operationId" : "getEndPointDeviceType",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the endpoint device type object.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/EndPointDeviceType"
            },
            "examples" : { }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/expandedcommunitylists" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Extended community list object CRUD.**",
        "operationId" : "getAllExpandedCommunityList",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ExpandedCommunityListListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/domainUUID/object/expandedcommunitylists ( Success: Test GET ALL success )" : {
                  "links" : {
                    "self" : "https://FMC-HOST/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/object/expandedcommunitylists?offset=0&limit=2&expanded=true"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "https://FMC-HOST/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/object/expandedcommunitylists/00505681-3A7E-0ed3-0000-017179869236"
                    },
                    "entries" : [ {
                      "seqnumber" : 1,
                      "action" : "PERMIT",
                      "type" : "Expanded",
                      "regularExpression" : "3456"
                    }, {
                      "seqnumber" : 2,
                      "action" : "DENY",
                      "type" : "Expanded",
                      "regularExpression" : "5678"
                    } ],
                    "name" : "Exp",
                    "overridable" : false,
                    "type" : "CommunityListObject",
                    "id" : "00505681-3A7E-0ed3-0000-017179869236"
                  }, {
                    "links" : {
                      "self" : "https://FMC-HOST/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/object/expandedcommunitylists/00505681-3A7E-0ed3-0000-021474836503"
                    },
                    "entries" : [ {
                      "seqnumber" : 1,
                      "action" : "PERMIT",
                      "type" : "Expanded",
                      "regularExpression" : "986"
                    }, {
                      "seqnumber" : 2,
                      "action" : "DENY",
                      "type" : "Expanded",
                      "regularExpression" : "5643"
                    } ],
                    "name" : "Exp2",
                    "overridable" : false,
                    "type" : "CommunityListObject",
                    "id" : "00505681-3A7E-0ed3-0000-021474836503"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/expandedcommunitylists/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Extended community list object CRUD.**",
        "operationId" : "getExpandedCommunityList",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "UUID of the Extended community list object.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ExpandedCommunityList"
            },
            "examples" : { }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/extendedaccesslists" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves list of all Extended Access List objects.**",
        "operationId" : "getAllExtendedAccessListModel",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ExtendedAccessListModelListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/DomainUUID/object/extendedaccesslist?limit=1 ( Get all paginated extended  access list objects with limit=1 )" : {
                  "links" : {
                    "self" : "https://bglgrp0231-pod.cisco.com:13655/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/object/extendedaccesslist?offset=0&limit=1"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "https://bglgrp0231-pod.cisco.com:13655/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/object/extendedaccesslist/005056A9-039E-0ed3-0000-476741369876"
                    },
                    "type" : "extendedaccesslist",
                    "name" : "ACL1",
                    "id" : "005056A9-039E-0ed3-0000-476741369876"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/extendedaccesslists/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves list of all Extended Access List objects.**",
        "operationId" : "getExtendedAccessListModel",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique Identifier of a Extended Access List object.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ExtendedAccessListModel"
            },
            "examples" : { }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/fqdns" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the FQDN object associated with the specified ID. If no ID is specified for a GET, retrieves list of all FQDN objects.**",
        "operationId" : "getAllFQDNObject",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "To be used in conjunction with <code>\"unusedOnly:true\"</code> to search for unused objects and <code>\"nameOrValue:{nameOrValue}\"</code> to search for both name and value.",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FQDNObjectListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/3333-4444-5555-666/object/fqdns ( Get all paginated FQDN objects )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/default/object/fqdns?offset=0&limit=2"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/default/object/fqdns/1111-2222-3333-4444",
                      "parent" : "/fmc_config/v1/domain/default/object/networkaddresses"
                    },
                    "type" : "FQDN",
                    "id" : "1111-2222-3333-4444",
                    "name" : "newFQDN"
                  }, {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/default/object/fqdns/2222-3333-4444-5555",
                      "parent" : "/fmc_config/v1/domain/default/object/networkaddresses"
                    },
                    "type" : "FQDN",
                    "id" : "2222-3333-4444-5555",
                    "name" : "Test1"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/3333-4444-5555-666/object/fqdns?expanded=true ( Get all paginated FQDN objects with expanded set to true )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/default/object/fqdns?offset=0&limit=2"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/default/object/fqdns/1111-2222-3333-4444",
                      "parent" : "/fmc_config/v1/domain/default/object/networkaddresses"
                    },
                    "type" : "FQDN",
                    "value" : "marketplace.cisco.com",
                    "dnsResolution" : "IPV4_ONLY",
                    "overridable" : false,
                    "description" : " ",
                    "id" : "1111-2222-3333-4444",
                    "name" : "MarketPlace",
                    "metadata" : {
                      "lastUser" : {
                        "name" : "admin"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUuid"
                      },
                      "parentType" : "NetworkAddress"
                    }
                  }, {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/default/object/fqdns/2222-3333-4444-5555",
                      "parent" : "/fmc_config/v1/domain/default/object/networkaddresses"
                    },
                    "type" : "FQDN",
                    "value" : "downloads.cisco.com",
                    "dnsResolution" : "IPV4_AND_IPV6",
                    "overridable" : false,
                    "description" : " ",
                    "id" : "2222-3333-4444-5555",
                    "name" : "Test1",
                    "metadata" : {
                      "lastUser" : {
                        "name" : "admin"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUuid"
                      },
                      "parentType" : "NetworkAddress"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                },
                "Response Example 3 : GET /fmc_config/v1/domain/domainUuid/object/fqdns?expanded=true&overrideTargetId=4444-5555-6666-7777 ( Success: Test GET ALL method from global domain for fqdnObject when overrides are assigned to child domain )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUuid/object/fqdns?offset=0&limit=1"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUuid/object/fqdns/2222-3333-4444-5555?overrideTargetId=3333-4444-5555-666",
                      "parent" : "/fmc_config/v1/domain/domainUuid/object/networkaddresses"
                    },
                    "type" : "FQDN",
                    "value" : "marketplace.cisco.com",
                    "overrides" : {
                      "parent" : {
                        "id" : "2222-3333-4444-5555",
                        "type" : "FQDN"
                      },
                      "target" : {
                        "name" : "Global \\ Asia",
                        "id" : "3333-4444-5555-666",
                        "type" : "Domain"
                      }
                    },
                    "overridable" : true,
                    "description" : " ",
                    "name" : "pvs_global",
                    "id" : "2222-3333-4444-5555",
                    "metadata" : {
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global \\ Asia",
                        "id" : "3333-4444-5555-666"
                      },
                      "ipType" : "V_4",
                      "parentType" : "NetworkAddress"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                },
                "Response Example 4 : GET /fmc_config/v1/domain/4444-5555-6666-7777/object/fqdns?expanded=true&overrideTargetId=4444-5555-6666-7777 ( Success: Test GET ALL method from child domain for fqdnObject when overrides are assigned to child domain )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/3333-4444-5555-666/object/fqdns?offset=0&limit=1&overrideTargetId=3333-4444-5555-666"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/3333-4444-5555-666/object/fqdns/2222-3333-4444-5555?overrideTargetId=3333-4444-5555-666",
                      "parent" : "/fmc_config/v1/domain/3333-4444-5555-666/object/networkaddresses"
                    },
                    "type" : "FQDN",
                    "value" : "marketplace.cisco.com",
                    "overrides" : {
                      "parent" : {
                        "id" : "2222-3333-4444-5555",
                        "type" : "FQDN"
                      },
                      "target" : {
                        "name" : "Global \\ Asia",
                        "id" : "3333-4444-5555-666",
                        "type" : "Domain"
                      }
                    },
                    "overridable" : true,
                    "description" : " ",
                    "name" : "pvs_global",
                    "id" : "2222-3333-4444-5555",
                    "metadata" : {
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global \\ Asia",
                        "id" : "3333-4444-5555-666"
                      },
                      "ipType" : "V_4",
                      "parentType" : "NetworkAddress"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the FQDN object associated with the specified ID. If no ID is specified for a GET, retrieves list of all FQDN objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createMultipleFQDNObject",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of FQDN object.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FQDNObject"
          }
        }, {
          "name" : "bulk",
          "in" : "query",
          "description" : "Enables bulk create for FQDN objects.",
          "required" : false,
          "type" : "boolean"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/FQDNObject"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /fmc_config/v1/domain/3333-4444-5555-666/object/fqdns ( POST to create a FQDN object )" : {
                  "name" : "TestFQDN",
                  "type" : "FQDN",
                  "value" : "downloads.cisco.com",
                  "dnsResolution" : "IPV4_ONLY",
                  "description" : "Test Description"
                },
                "Request example 2 : POST /fmc_config/v1/domain/3333-4444-5555-666/object/fqdns ( POST to create a FQDN object Override )" : {
                  "name" : "TestFQDN",
                  "type" : "FQDN",
                  "value" : "downloads.cisco.com",
                  "dnsResolution" : "IPV4_ONLY",
                  "description" : "Test Description",
                  "overrides" : {
                    "parent" : {
                      "id" : "5555-6666-7777-8888"
                    },
                    "target" : {
                      "id" : "3333-4444-5555-666",
                      "type" : "Domain"
                    }
                  }
                },
                "Request example 3 : POST /fmc_config/v1/domain/DomainUUID/object/fqdns?bulk=true ( Bulk POST operation on fqdn objects with overrides )" : [ {
                  "type" : "FQDN",
                  "value" : "www.cisco.com",
                  "overrides" : {
                    "parent" : {
                      "id" : "fqdn_obj_uuid",
                      "type" : "FQDN"
                    },
                    "target" : {
                      "name" : "Global \\ EUROPE",
                      "id" : "domain_uuid",
                      "type" : "Domain"
                    }
                  },
                  "overridable" : true,
                  "description" : " ",
                  "name" : "fqdn_obj",
                  "id" : "fqdn_obj_uuid"
                }, {
                  "type" : "FQDN",
                  "value" : "www.google.com",
                  "overrides" : {
                    "parent" : {
                      "id" : "fqdn_obj_uuid",
                      "type" : "FQDN"
                    },
                    "target" : {
                      "name" : "FTDv_R1",
                      "id" : "device_uuid",
                      "type" : "Device"
                    }
                  },
                  "overridable" : true,
                  "description" : " ",
                  "name" : "fqdn_obj",
                  "id" : "fqdn_obj_uuid"
                } ],
                "Request example 4 : POST /fmc_config/v1/domain/domainUuid/object/fqdns ( POST to create overrides on an FQDN object )" : {
                  "type" : "FQDN",
                  "dnsResolution" : "IPV4_AND_IPV6",
                  "value" : "example.com",
                  "overridable" : true,
                  "description" : " ",
                  "id" : "fqdn1_uuid",
                  "overrides" : {
                    "parent" : {
                      "id" : "fqdn1_uuid",
                      "type" : "FQDN"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "device_uuid",
                      "type" : "Device"
                    }
                  },
                  "name" : "fqdn2"
                },
                "Response Example 1 :POST /fmc_config/v1/domain/3333-4444-5555-666/object/fqdns ( POST to create a FQDN object )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/default/object/fqdns/5555-6666-7777-8888",
                    "parent" : "/fmc_config/v1/domain/default/object/networkaddresses"
                  },
                  "type" : "FQDN",
                  "value" : "downloads.cisco.com",
                  "dnsResolution" : "IPV4_ONLY",
                  "overridable" : false,
                  "id" : "5555-6666-7777-8888",
                  "name" : "TestFQDN",
                  "metadata" : {
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUuid"
                    },
                    "parentType" : "NetworkAddress"
                  }
                },
                "Response Example 2 :POST /fmc_config/v1/domain/3333-4444-5555-666/object/fqdns ( POST to create a FQDN object Override )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/default/object/fqdns/5555-6666-7777-8888?overrideTargetId=3333-4444-5555-666",
                    "parent" : "/fmc_config/v1/domain/default/object/networkaddresses"
                  },
                  "type" : "FQDN",
                  "value" : "downloads.cisco.com",
                  "dnsResolution" : "IPV4_ONLY",
                  "overridable" : false,
                  "id" : "5555-6666-7777-8888",
                  "name" : "TestFQDN",
                  "overrides" : {
                    "parent" : {
                      "id" : "5555-6666-7777-8888",
                      "type" : "FQDN"
                    },
                    "target" : {
                      "name" : "Global \\ Asia",
                      "id" : "3333-4444-5555-666",
                      "type" : "Domain"
                    }
                  },
                  "metadata" : {
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUuid"
                    },
                    "parentType" : "NetworkAddress"
                  }
                },
                "Response Example 3 :POST /fmc_config/v1/domain/DomainUUID/object/fqdns?bulk=true ( Bulk POST operation on fqdn objects with overrides )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/fqdns?bulk=true"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/fqdns/fqdn_obj_uuid",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/networkaddresses"
                    },
                    "type" : "FQDN",
                    "value" : "www.cisco.com",
                    "dnsResolution" : "IPV4_AND_IPV6",
                    "overrides" : {
                      "parent" : {
                        "id" : "fqdn_obj_uuid",
                        "type" : "FQDN"
                      },
                      "target" : {
                        "name" : "Global \\ EUROPE",
                        "id" : "domain_uuid",
                        "type" : "Domain"
                      }
                    },
                    "overridable" : true,
                    "name" : "fqdn_obj",
                    "id" : "fqdn_obj_uuid",
                    "metadata" : {
                      "timestamp" : 0,
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global \\ EUROPE",
                        "id" : "domain_uuid"
                      },
                      "parentType" : "NetworkAddress"
                    }
                  }, {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/fqdns/fqdn_obj_uuid",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/networkaddresses"
                    },
                    "type" : "FQDN",
                    "value" : "www.google.com",
                    "dnsResolution" : "IPV4_AND_IPV6",
                    "overrides" : {
                      "parent" : {
                        "id" : "fqdn_obj_uuid",
                        "type" : "FQDN"
                      },
                      "target" : {
                        "name" : "FTDv_R1",
                        "id" : "device_uuid",
                        "type" : "Device"
                      }
                    },
                    "overridable" : true,
                    "name" : "fqdn_obj",
                    "id" : "fqdn_obj_uuid",
                    "metadata" : {
                      "timestamp" : 0,
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global \\ ASIA",
                        "id" : "domain_uuid"
                      },
                      "parentType" : "NetworkAddress"
                    }
                  } ]
                },
                "Response Example 4 :POST /fmc_config/v1/domain/domainUuid/object/fqdns ( POST to create overrides on an FQDN object )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/fqdns/fqdn1_uuid?overrideTargetId=device_uuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/networkaddresses"
                  },
                  "type" : "FQDN",
                  "dnsResolution" : "IPV4_AND_IPV6",
                  "value" : "example.com",
                  "overrides" : {
                    "parent" : {
                      "id" : "fqdn1_uuid",
                      "type" : "FQDN"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "device_uuid",
                      "type" : "Device"
                    }
                  },
                  "overridable" : true,
                  "id" : "fqdn1_uuid",
                  "name" : "fqdn2",
                  "metadata" : {
                    "timestamp" : 0,
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUuid"
                    },
                    "parentType" : "NetworkAddress"
                  }
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/FQDNObject"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/fqdns/{containerUUID}/overrides" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves all(Domain and Device) overrides on a FQDN object.Response will always be in expanded form. If passed, the \"expanded\" query parameter will be ignored.**",
        "operationId" : "getAllFQDNOverride",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FQDNOverrideListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/domainUUID/object/fqdns/fqdnObjectUUID/overrides ( Get all overrides on given FQDN objects )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/object/fqdns/fqdnObjectUUID/overrides?offset=0&limit=1"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/object/fqdns/fqdnObjectUUID?overrideTargetId=targetUUID"
                    },
                    "type" : "FQDN",
                    "value" : "a.b.c.d.com",
                    "dnsResolution" : "IPV4_AND_IPV6",
                    "overrides" : {
                      "parent" : {
                        "id" : "fqdnObjectUUID",
                        "type" : "FQDN"
                      },
                      "target" : {
                        "name" : "10.10.19.27",
                        "id" : "targetUUID",
                        "type" : "Device"
                      }
                    },
                    "overridable" : true,
                    "description" : " ",
                    "name" : "fqdn_obj",
                    "id" : "fqdnObjectUUID",
                    "metadata" : {
                      "timestamp" : 1520428174236,
                      "lastUser" : {
                        "name" : "user1"
                      },
                      "domain" : {
                        "name" : "Global \\ INDIA \\ BENGALURU",
                        "id" : "domainUUID"
                      }
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/fqdns/{containerUUID}/overrides/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves all(Domain and Device) overrides on a FQDN object.Response will always be in expanded form. If passed, the \"expanded\" query parameter will be ignored.**",
        "operationId" : "getFQDNOverride",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Input NOT Expected here",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FQDNOverride"
            },
            "examples" : { }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/fqdns/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the FQDN object associated with the specified ID. If no ID is specified for a GET, retrieves list of all FQDN objects.**",
        "operationId" : "getFQDNObject",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for FQDN object.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "overrideTargetId",
          "in" : "query",
          "description" : "Retrieves the override(s) associated with the FQDN object on given target ID.",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FQDNObject"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/3333-4444-5555-666/object/fqdns/5555-6666-7777-8888 ( GET a FQDN object for the given UUID )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/default/object/fqdns/5555-6666-7777-8888",
                    "parent" : "/fmc_config/v1/domain/default/object/networkaddresses"
                  },
                  "type" : "FQDN",
                  "value" : "www.cisco.com",
                  "dnsResolution" : "IPV4_ONLY",
                  "overridable" : false,
                  "description" : "Test Description",
                  "id" : "5555-6666-7777-8888",
                  "name" : "TestFQDN",
                  "metadata" : {
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUuid"
                    },
                    "parentType" : "NetworkAddress"
                  }
                },
                "Response Example 2 :GET /fmc_config/v1/domain/domainUuid/object/fqdns/2222-3333-4444-5555?expanded=true&overrideTargetId=3333-4444-5555-666 ( Success: Test GET method from global domain on a specific fqdnObject which has override assigned as child domain )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUuid/object/fqdns/2222-3333-4444-5555?overrideTargetId=3333-4444-5555-666",
                    "parent" : "/fmc_config/v1/domain/domainUuid/object/networkaddresses"
                  },
                  "type" : "FQDN",
                  "value" : "marketplace.cisco.com",
                  "overrides" : {
                    "parent" : {
                      "id" : "2222-3333-4444-5555",
                      "type" : "FQDN"
                    },
                    "target" : {
                      "name" : "Global \\ Asia",
                      "id" : "3333-4444-5555-666",
                      "type" : "Domain"
                    }
                  },
                  "overridable" : true,
                  "description" : " ",
                  "name" : "pvs_global",
                  "id" : "2222-3333-4444-5555",
                  "metadata" : {
                    "lastUser" : {
                      "name" : "pvs"
                    },
                    "domain" : {
                      "name" : "Global \\ Asia",
                      "id" : "3333-4444-5555-666"
                    },
                    "ipType" : "V_4",
                    "parentType" : "NetworkAddress"
                  }
                },
                "Response Example 3 :GET /fmc_config/v1/domain/4444-5555-6666-7777/object/fqdns/2222-3333-4444-5555?expanded=true&overrideTargetId=3333-4444-5555-666 ( Success: Test GET method from child domain on a fqdnObject which has child domain assigned as override )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/3333-4444-5555-666/object/fqdns/2222-3333-4444-5555?overrideTargetId=3333-4444-5555-666",
                    "parent" : "/fmc_config/v1/domain/3333-4444-5555-666/object/networkaddresses"
                  },
                  "type" : "FQDN",
                  "value" : "marketplace.cisco.com",
                  "overrides" : {
                    "parent" : {
                      "id" : "2222-3333-4444-5555",
                      "type" : "FQDN"
                    },
                    "target" : {
                      "name" : "Global \\ Asia",
                      "id" : "3333-4444-5555-666",
                      "type" : "Domain"
                    }
                  },
                  "overridable" : true,
                  "description" : " ",
                  "name" : "pvs_global",
                  "id" : "2222-3333-4444-5555",
                  "metadata" : {
                    "lastUser" : {
                      "name" : "pvs"
                    },
                    "domain" : {
                      "name" : "Global \\ Asia",
                      "id" : "3333-4444-5555-666"
                    },
                    "ipType" : "V_4",
                    "parentType" : "NetworkAddress"
                  }
                },
                "Response Example 4 :GET /fmc_config/v1/domain/4444-5555-6666-7777/object/fqdns/1111-2222-3333-4444?expanded=true&overrideTargetId=dcea-1111-3333-2222 ( Success: Test GET method from child domain on a fqdnObject which has device assigned as override )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUuid/object/fqdns/1111-2222-3333-4444?overrideTargetId=dcea-1111-3333-2222",
                    "parent" : "/fmc_config/v1/domain/domainUuid/object/networkaddresses"
                  },
                  "type" : "FQDN",
                  "value" : "marketplace.cisco.com",
                  "overrides" : {
                    "parent" : {
                      "id" : "1111-2222-3333-4444",
                      "type" : "FQDN"
                    },
                    "target" : {
                      "name" : "192.168.0.166",
                      "id" : "dcea-1111-3333-2222",
                      "type" : "Device"
                    }
                  },
                  "overridable" : true,
                  "description" : " ",
                  "name" : "pvs_global",
                  "id" : "1111-2222-3333-4444",
                  "metadata" : {
                    "lastUser" : {
                      "name" : "api"
                    },
                    "domain" : {
                      "name" : "Global \\ Asia",
                      "id" : "3333-4444-5555-666"
                    },
                    "ipType" : "V_4",
                    "parentType" : "NetworkAddress"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the FQDN object associated with the specified ID. If no ID is specified for a GET, retrieves list of all FQDN objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateFQDNObject",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for FQDN object.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of FQDN object.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FQDNObject"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FQDNObject"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/3333-4444-5555-666/object/fqdns/5555-6666-7777-8888 ( PUT to update a FQDN object )" : {
                  "type" : "FQDN",
                  "value" : "www.cisco.com",
                  "dnsResolution" : "IPV6_ONLY",
                  "overridable" : false,
                  "description" : "Test Description",
                  "id" : "5555-6666-7777-8888",
                  "name" : "TestFQDN"
                },
                "Request example 2 : PUT /fmc_config/v1/domain/3333-4444-5555-666/object/fqdns/5555-6666-7777-8888 ( PUT to update a FQDN object Override )" : {
                  "type" : "FQDN",
                  "value" : "www.cisco.com",
                  "dnsResolution" : "IPV6_ONLY",
                  "overridable" : false,
                  "description" : "Test Description",
                  "id" : "5555-6666-7777-8888",
                  "name" : "TestFQDN",
                  "overrides" : {
                    "parent" : {
                      "id" : "5555-6666-7777-8888"
                    },
                    "target" : {
                      "id" : "3333-4444-5555-666",
                      "type" : "Domain"
                    }
                  }
                },
                "Request example 3 : PUT /fmc_config/v1/domain/domainUuid/object/fqdns/fqdn2_uuid ( PUT to update override on a host object. )" : {
                  "type" : "FQDN",
                  "dnsResolution" : "IPV4_AND_IPV6",
                  "value" : "cisco.com",
                  "overridable" : true,
                  "description" : " ",
                  "id" : "fqdn2_uuid",
                  "overrides" : {
                    "parent" : {
                      "id" : "fqdn2_uuid",
                      "type" : "FQDN"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "device_uuid",
                      "type" : "Device"
                    }
                  },
                  "name" : "fqdn2"
                },
                "Response Example 1 :PUT /fmc_config/v1/domain/3333-4444-5555-666/object/fqdns/5555-6666-7777-8888 ( PUT to update a FQDN object )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/default/object/fqdns/5555-6666-7777-8888",
                    "parent" : "/fmc_config/v1/domain/default/object/networkaddresses"
                  },
                  "type" : "FQDN",
                  "value" : "www.cisco.com",
                  "dnsResolution" : "IPV6_ONLY",
                  "overridable" : false,
                  "id" : "5555-6666-7777-8888",
                  "name" : "TestFQDN",
                  "metadata" : {
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUuid"
                    },
                    "parentType" : "NetworkAddress"
                  }
                },
                "Response Example 2 :PUT /fmc_config/v1/domain/3333-4444-5555-666/object/fqdns/5555-6666-7777-8888 ( PUT to update a FQDN object Override )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/default/object/fqdns/5555-6666-7777-8888?overrideTargetId=3333-4444-5555-666",
                    "parent" : "/fmc_config/v1/domain/default/object/networkaddresses"
                  },
                  "type" : "FQDN",
                  "value" : "www.cisco.com",
                  "dnsResolution" : "IPV6_ONLY",
                  "overridable" : false,
                  "id" : "5555-6666-7777-8888",
                  "name" : "TestFQDN",
                  "overrides" : {
                    "parent" : {
                      "id" : "5555-6666-7777-8888",
                      "type" : "FQDN"
                    },
                    "target" : {
                      "name" : "Global \\ Asia",
                      "id" : "3333-4444-5555-666",
                      "type" : "Domain"
                    }
                  },
                  "metadata" : {
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUuid"
                    },
                    "parentType" : "NetworkAddress"
                  }
                },
                "Response Example 3 :PUT /fmc_config/v1/domain/domainUuid/object/fqdns/fqdn2_uuid ( PUT to update override on a host object. )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/fqdns/fqdn2_uuid?overrideTargetId=device_uuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/networkaddresses"
                  },
                  "type" : "FQDN",
                  "dnsResolution" : "IPV4_AND_IPV6",
                  "value" : "cisco.com",
                  "overrides" : {
                    "parent" : {
                      "id" : "fqdn2_uuid",
                      "type" : "FQDN"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "device_uuid",
                      "type" : "Device"
                    }
                  },
                  "overridable" : true,
                  "id" : "fqdn2_uuid",
                  "name" : "fqdn2",
                  "metadata" : {
                    "timestamp" : 0,
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUuid"
                    },
                    "parentType" : "NetworkAddress"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/FQDNObject"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the FQDN object associated with the specified ID. If no ID is specified for a GET, retrieves list of all FQDN objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteFQDNObject",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for FQDN object.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FQDNObject"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /fmc_config/v1/domain/3333-4444-5555-666/object/fqdns/5555-6666-7777-8888 ( DELETE a FQDN object for the given UUID )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/default/object/fqdns/5555-6666-7777-8888",
                    "parent" : "/fmc_config/v1/domain/default/object/networkaddresses"
                  },
                  "type" : "FQDN",
                  "value" : "www.cisco.com",
                  "dnsResolution" : "IPV6_ONLY",
                  "overridable" : false,
                  "description" : "Test Description",
                  "id" : "5555-6666-7777-8888",
                  "name" : "TestFQDN",
                  "metadata" : {
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUuid"
                    },
                    "parentType" : "NetworkAddress"
                  }
                },
                "Response Example 2 :DELETE /fmc_config/v1/domain/3333-4444-5555-666/object/fqdns/5555-6666-7777-8888?overrideTargetId=3333-4444-5555-666 ( DELETE a FQDN object override for the given UUID )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/default/object/fqdns/5555-6666-7777-8888?overrideTargetId=3333-4444-5555-666",
                    "parent" : "/fmc_config/v1/domain/default/object/networkaddresses"
                  },
                  "type" : "FQDN",
                  "value" : "www.cisco.com",
                  "dnsResolution" : "IPV6_ONLY",
                  "overridable" : false,
                  "description" : "Test Description",
                  "id" : "5555-6666-7777-8888",
                  "name" : "TestFQDN",
                  "overrides" : {
                    "parent" : {
                      "id" : "5555-6666-7777-8888",
                      "type" : "FQDN"
                    },
                    "target" : {
                      "name" : "Global \\ Asia",
                      "id" : "3333-4444-5555-666",
                      "type" : "Domain"
                    }
                  },
                  "metadata" : {
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUuid"
                    },
                    "parentType" : "NetworkAddress"
                  }
                },
                "Response Example 3 :DELETE /fmc_config/v1/domain/domainUuid/object/fqdns/fqdn2_uuid?overrideTargetId=device_uuid ( DELETE an override on an FQDN object )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/fqdns/fqdn2_uuid?overrideTargetId=device_uuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/networkaddresses"
                  },
                  "type" : "FQDN",
                  "dnsResolution" : "IPV4_AND_IPV6",
                  "value" : "cisco.com",
                  "overrides" : {
                    "parent" : {
                      "id" : "fqdn2_uuid",
                      "type" : "FQDN"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "device_uuid",
                      "type" : "Device"
                    }
                  },
                  "overridable" : true,
                  "description" : " ",
                  "id" : "fqdn2_uuid",
                  "name" : "fqdn2",
                  "metadata" : {
                    "timestamp" : 1527230774136,
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUuid"
                    },
                    "parentType" : "NetworkAddress"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/geolocations" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the geolocation object associated with the specified ID. If no ID is specified, retrieves list of all geolocation objects.**",
        "operationId" : "getAllGeoLocationObject",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/GeoLocationObjectListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/DomainUUID/object/geolocations ( Get all paginated geolocation objects )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/geolocations?offset=0&limit=1"
                  },
                  "items" : [ {
                    "name" : "geolocation_1",
                    "type" : "Geolocation",
                    "id" : "geolocationUUID",
                    "links" : {
                      "self" : "fmc_config/v1/domain/DomainUUID/object/geolocations/geolocationUUID"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/DomainUUID/object/geolocations?expanded=true ( Get all paginated geolocation objects )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/geolocations?offset=0&limit=1"
                  },
                  "items" : [ {
                    "name" : "geolocation_1",
                    "type" : "Geolocation",
                    "id" : "geolocationUUID",
                    "links" : {
                      "self" : "fmc_config/v1/domain/DomainUUID/object/geolocations/geolocationUUID"
                    },
                    "continents" : [ {
                      "name" : "Antarctica",
                      "id" : "2",
                      "type" : "Continent",
                      "countries" : [ {
                        "id" : "10",
                        "name" : "Antarctica",
                        "iso2" : "aq",
                        "iso3" : "ata",
                        "type" : "Country"
                      }, {
                        "id" : "260",
                        "name" : "French Southern Territories",
                        "iso2" : "tf",
                        "iso3" : "atf",
                        "type" : "Country"
                      }, {
                        "id" : "74",
                        "name" : "Bouvet Island",
                        "iso2" : "bv",
                        "iso3" : "bvt",
                        "type" : "Country"
                      } ]
                    } ],
                    "countries" : [ {
                      "id" : "356",
                      "name" : "India",
                      "iso2" : "in",
                      "iso3" : "ind",
                      "type" : "Country"
                    } ]
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the geolocation object associated with the specified ID. If no ID is specified, retrieves list of all geolocation objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createGeoLocationObject",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of geolocation objects.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/GeoLocationObject"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/GeoLocationObject"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/GeoLocationObject"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/geolocations/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the geolocation object associated with the specified ID. If no ID is specified, retrieves list of all geolocation objects.**",
        "operationId" : "getGeoLocationObject",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of geolocation objects.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/GeoLocationObject"
            },
            "examples" : { }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the geolocation object associated with the specified ID. If no ID is specified, retrieves list of all geolocation objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateGeoLocationObject",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of geolocation objects.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of geolocation objects.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/GeoLocationObject"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/GeoLocationObject"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/GeoLocationObject"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the geolocation object associated with the specified ID. If no ID is specified, retrieves list of all geolocation objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteGeoLocationObject",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of geolocation objects.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/GeoLocationObject"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/globaltimezones" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the objects representing all the time zones defined in the IANA global time zone (tz) database.**",
        "operationId" : "getAllGlobalTimeZone",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/GlobalTimeZoneListContainer"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/globaltimezones/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the objects representing all the time zones defined in the IANA global time zone (tz) database.**",
        "operationId" : "getGlobalTimeZone",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the global time zone as per the IANA tz database.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/GlobalTimeZone"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/grouppolicies" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Defines  the group policies for VPN**",
        "operationId" : "getAllGroupPolicyModel",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/GroupPolicyModelListContainer"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/grouppolicies/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Defines  the group policies for VPN**",
        "operationId" : "getGroupPolicyModel",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the Group policy.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/GroupPolicyModel"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/object/grouppolicies/grouppolicyUUID ( Get Group policy object by ID )" : {
                  "links" : {
                    "self" : "https://fmcip/api/fmc_config/v1/domain/DomainUUID/object/grouppolicies/grouppolicyUUID"
                  },
                  "name" : "grouppolicy1",
                  "description" : "This is sample group policy",
                  "version" : "h22oqefvu7hdm",
                  "protocol" : "SSL",
                  "generalSettings" : {
                    "banner" : "This is a sample Banner",
                    "addressAssignment" : {
                      "ipv4LocalAddressPool" : [ {
                        "name" : "ipv4pool1",
                        "id" : "ipv4LocalAddressPoolUUID",
                        "type" : "Ipv4AddressPool"
                      } ],
                      "dhcpScope" : {
                        "name" : "dhcpscope",
                        "id" : "dhcpScopeUUID",
                        "type" : "Network"
                      },
                      "defaultDomainName" : "cisco.com"
                    },
                    "primaryDNSServer" : {
                      "name" : "primarydns",
                      "id" : "primaryDNSServerUUID",
                      "type" : "Network"
                    },
                    "secondaryDNSServer" : {
                      "name" : "secondarydns",
                      "id" : "secondaryDNSServerUUID",
                      "type" : "Network"
                    },
                    "primaryWINSServer" : {
                      "name" : "primarywins",
                      "id" : "primaryWINSServerUUID",
                      "type" : "Network"
                    },
                    "secondaryWINSServer" : {
                      "name" : "secondarywins",
                      "id" : "secondaryWINSServerUUID",
                      "type" : "Network"
                    },
                    "splitTunnelSettings" : {
                      "ipv4SplitTunnelPolicy" : "TUNNEL_ALL",
                      "ipv6SplitTunnelPolicy" : "TUNNEL_ALL",
                      "splitTunnelACL" : {
                        "name" : "splitacl",
                        "id" : "splitTunnelACLUUID",
                        "type" : "StandardAccessList|ExtendedAccessList"
                      },
                      "splitDNSRequestPolicy" : "USE_SPLIT_TUNNEL_SETTING",
                      "splitDNSDomainList" : "SplitACL"
                    }
                  },
                  "anyConnectSettings" : {
                    "vpnClientProfile" : {
                      "name" : "remoteaccessprofile",
                      "id" : "2d9d6bda-865a-11e8-8472-bb2ae5b3416b",
                      "type" : "AnyconnectFile"
                    },
                    "clientModules" : [ {
                      "moduleType" : "AMP_ENABLER",
                      "moduleProfile" : {
                        "name" : "ampenabler",
                        "id" : "vpnClientProfileUUID",
                        "type" : "AnyconnectFile"
                      },
                      "enableModuleDownload" : false
                    } ],
                    "sslSettings" : {
                      "sslCompression" : "DISABLED",
                      "dtlsCompression" : "DISABLED",
                      "mtuSize" : 1000,
                      "ignoreDFBit" : false
                    },
                    "connectionSettings" : {
                      "enableKeepAliveMessages" : true,
                      "keepAliveMessageInterval" : 20,
                      "enableGatewayDPD" : true,
                      "gatewayDPDInterval" : 30,
                      "enableClientDPD" : true,
                      "clientDPDInterval" : 30,
                      "bypassUnsupportProtocol" : false,
                      "enableSSLrekey" : false,
                      "rekeyMethod" : "NEW_TUNNEL",
                      "rekeyInterval" : 4,
                      "clientFirewallPrivateNetworkRules" : {
                        "id" : "clientFirewallPrivateNetworkRulesUUID",
                        "type" : "ExtendedAccessList",
                        "name" : "privateNetACL"
                      },
                      "clientFirewallPublicNetworkRules" : {
                        "id" : "clientFirewallPublicNetworkRulesUUID",
                        "type" : "ExtendedAccessList",
                        "name" : "publicNetACL"
                      }
                    },
                    "customAttributes" : [ {
                      "anyConnectAttribute" : "PER_APP_VPN",
                      "customAttributeObject" : {
                        "name" : "customAttributeObjectName",
                        "id" : "customAttributeObjectUUID",
                        "type" : "AnyConnectCustomAttribute"
                      }
                    } ]
                  },
                  "advancedSettings" : {
                    "vpnTrafficFilterACL" : {
                      "id" : "vpnTrafficFilterACLUUID",
                      "type" : "ExtendedAccessList",
                      "name" : "vpnTrafficfilter"
                    },
                    "restrictVPNToVLANId" : 5,
                    "sessionSettings" : {
                      "accessHours" : {
                        "id" : "accessHoursUUID",
                        "type" : "TimeRange",
                        "name" : "timerangehours"
                      },
                      "simultaneousLoginPerUser" : 3,
                      "maxConnectionTimeout" : null,
                      "maxConnectionTimeAlertInterval" : 1,
                      "vpnIdleTimeout" : 30,
                      "vpnIdleTimeoutAlertInterval" : 1
                    }
                  },
                  "id" : "f3b4fda4-1e03-11e8-b53e-e7bb7add7360",
                  "type" : "GroupPolicy",
                  "metadata" : { }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/hosts" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the host object associated with the specified ID. If no ID is specified for a GET, retrieves list of all host objects.**",
        "operationId" : "getAllHostObject",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "To be used in conjunction with <code>\"unusedOnly:true\"</code> to search for unused objects and <code>\"nameOrValue:{nameOrValue}\"</code> to search for both name and value.",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/HostObjectListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/domainUUID/object/hosts ( Get all paginated host objects )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/default/object/hosts?offset=0&limit=2"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/default/object/hosts/hostObject1UUID",
                      "parent" : "/fmc_config/v1/domain/default/object/networkaddresses"
                    },
                    "type" : "Host",
                    "id" : "hostObject1UUID",
                    "name" : "any-ipv6"
                  }, {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/default/object/hosts/hostObject2UUID",
                      "parent" : "/fmc_config/v1/domain/default/object/networkaddresses"
                    },
                    "type" : "Host",
                    "id" : "hostObject2UUID",
                    "name" : "Test1"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/domainUUID/object/hosts?expanded=true ( Get all paginated host objects with expanded set to true )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/default/object/hosts?offset=0&limit=2"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/default/object/hosts/hostObject1UUID",
                      "parent" : "/fmc_config/v1/domain/default/object/networkaddresses"
                    },
                    "type" : "Host",
                    "value" : "::/0",
                    "overridable" : false,
                    "description" : " ",
                    "id" : "hostObject1UUID",
                    "name" : "any-ipv6",
                    "metadata" : {
                      "readOnly" : {
                        "state" : true,
                        "reason" : "SYSTEM"
                      },
                      "lastUser" : {
                        "name" : "admin"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "GloablDomainUUID"
                      },
                      "ipType" : "V_6",
                      "parentType" : "NetworkAddress"
                    }
                  }, {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/default/object/hosts/hostObject2UUID",
                      "parent" : "/fmc_config/v1/domain/default/object/networkaddresses"
                    },
                    "type" : "Host",
                    "value" : "10.5.3.20",
                    "overridable" : false,
                    "description" : " ",
                    "id" : "hostObject2UUID",
                    "name" : "Test1",
                    "metadata" : {
                      "lastUser" : {
                        "name" : "admin"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "GloablDomainUUID"
                      },
                      "ipType" : "V_4",
                      "parentType" : "NetworkAddress"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                },
                "Response Example 3 : GET /fmc_config/v1/domain/GlobalDomainUUID/object/hosts?expanded=true&overrideTargetId=childDomainUUID ( Success: Test GET ALL method from global domain for HostObject when overrides are assigned to child domain )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/GloablDomainUUID/object/hosts?offset=0&limit=1"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/GloablDomainUUID/object/hosts/hostObject2UUID",
                      "parent" : "/fmc_config/v1/domain/GloablDomainUUID/object/networkaddresses"
                    },
                    "type" : "Host",
                    "value" : "1.2.3.4",
                    "overrides" : {
                      "parent" : {
                        "id" : "hostObject2UUID",
                        "type" : "Host"
                      },
                      "target" : {
                        "name" : "Global \\ Asia",
                        "id" : "domainUUID",
                        "type" : "Domain"
                      }
                    },
                    "overridable" : true,
                    "description" : " ",
                    "name" : "pvs_global",
                    "id" : "hostObject2UUID",
                    "metadata" : {
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global \\ Asia",
                        "id" : "domainUUID"
                      },
                      "ipType" : "V_4",
                      "parentType" : "NetworkAddress"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                },
                "Response Example 4 : GET /fmc_config/v1/domain/childDomainUUID/object/hosts?expanded=true&overrideTargetId=childDomainUUID ( Success: Test GET ALL method from child domain for HostObject when overrides are assigned to child domain )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/object/hosts?offset=0&limit=1"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/object/hosts/hostObject2UUID",
                      "parent" : "/fmc_config/v1/domain/domainUUID/object/networkaddresses"
                    },
                    "type" : "Host",
                    "value" : "1.2.3.4",
                    "overrides" : {
                      "parent" : {
                        "id" : "hostObject2UUID",
                        "type" : "Host"
                      },
                      "target" : {
                        "name" : "Global \\ Asia",
                        "id" : "domainUUID",
                        "type" : "Domain"
                      }
                    },
                    "overridable" : true,
                    "description" : " ",
                    "name" : "pvs_global",
                    "id" : "hostObject2UUID",
                    "metadata" : {
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global \\ Asia",
                        "id" : "domainUUID"
                      },
                      "ipType" : "V_4",
                      "parentType" : "NetworkAddress"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the host object associated with the specified ID. If no ID is specified for a GET, retrieves list of all host objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createMultipleHostObject",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of host object.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/HostObject"
          }
        }, {
          "name" : "bulk",
          "in" : "query",
          "description" : "Enables bulk create for host objects.",
          "required" : false,
          "type" : "boolean"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/HostObject"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /fmc_config/v1/domain/domainUUID/object/hosts ( POST to create a host object )" : {
                  "name" : "TestHost",
                  "type" : "Host",
                  "value" : "10.5.3.20",
                  "description" : "Test Description"
                },
                "Request example 2 : POST /fmc_config/v1/domain/domainUUID/object/hosts?bulk=true ( Bulk POST operation for Host object )" : [ {
                  "name" : "host1",
                  "type" : "Host",
                  "value" : "10.5.3.20",
                  "description" : "Test Description"
                }, {
                  "name" : "Host2",
                  "type" : "Host",
                  "value" : "1.2.3.4",
                  "description" : "Host object 2"
                } ],
                "Request example 3 : POST /fmc_config/v1/domain/domainUUID/object/hosts?bulk=true ( Bulk POST operation for Host object with overrides )" : [ {
                  "type" : "Host",
                  "value" : "10.10.10.10",
                  "overrides" : {
                    "parent" : {
                      "name" : "host1",
                      "id" : "host1_uuid",
                      "type" : "Host"
                    },
                    "target" : {
                      "name" : "Global \\ EUROPE",
                      "id" : "domain_uuid",
                      "type" : "Domain"
                    }
                  },
                  "overridable" : true,
                  "description" : " ",
                  "name" : "host1",
                  "id" : "host1_uuid"
                }, {
                  "type" : "Host",
                  "value" : "10.10.10.20",
                  "overrides" : {
                    "parent" : {
                      "name" : "host1",
                      "id" : "host1_uuid",
                      "type" : "Host"
                    },
                    "target" : {
                      "name" : "FTDv_R1",
                      "id" : "device_uuid",
                      "type" : "Device"
                    }
                  },
                  "overridable" : true,
                  "description" : " ",
                  "name" : "host1",
                  "id" : "host1_uuid"
                } ],
                "Request example 4 : POST /fmc_config/v1/domain/domainUUID/object/hosts ( POST request to create a host object override )" : {
                  "type" : "Host",
                  "value" : "1.2.3.5",
                  "overridable" : true,
                  "description" : " ",
                  "overrides" : {
                    "parent" : {
                      "id" : "host2_uuid",
                      "type" : "Host"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "device_uuid",
                      "type" : "Device"
                    }
                  },
                  "id" : "host2_uuid",
                  "name" : "host2"
                },
                "Response Example 1 :POST /fmc_config/v1/domain/domainUUID/object/hosts ( POST to create a host object )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/default/object/hosts/hostObject3UUID",
                    "parent" : "/fmc_config/v1/domain/default/object/networkaddresses"
                  },
                  "type" : "Host",
                  "value" : "10.5.3.20",
                  "overridable" : false,
                  "id" : "hostObject3UUID",
                  "name" : "TestHost",
                  "metadata" : {
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "GloablDomainUUID"
                    },
                    "ipType" : "V_4",
                    "parentType" : "NetworkAddress"
                  }
                },
                "Response Example 2 :POST /fmc_config/v1/domain/domainUUID/object/hosts?bulk=true ( Bulk POST operation for Host object )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/hosts?bulk=true"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/hosts/host1UUID",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/networkaddresses"
                    },
                    "type" : "Host",
                    "value" : "10.5.3.20",
                    "overridable" : false,
                    "description" : "Test Description",
                    "name" : "host1",
                    "id" : "host1UUID",
                    "metadata" : {
                      "timestamp" : 0,
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUuid"
                      },
                      "ipType" : "V_4",
                      "parentType" : "NetworkAddress"
                    }
                  }, {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/hosts/host2UUID",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/networkaddresses"
                    },
                    "type" : "Host",
                    "value" : "1.2.3.4",
                    "overridable" : false,
                    "description" : "Host object 2",
                    "name" : "Host2",
                    "id" : "host2UUID",
                    "metadata" : {
                      "timestamp" : 0,
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUuid"
                      },
                      "ipType" : "V_4",
                      "parentType" : "NetworkAddress"
                    }
                  } ]
                },
                "Response Example 3 :POST /fmc_config/v1/domain/domainUUID/object/hosts?bulk=true ( Bulk POST operation for Host object with overrides )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/hosts?bulk=true"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/hosts/host1_uuid",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/networkaddresses"
                    },
                    "type" : "Host",
                    "value" : "10.10.10.4",
                    "overrides" : {
                      "parent" : {
                        "id" : "host1_uuid",
                        "type" : "Host"
                      },
                      "target" : {
                        "name" : "Global \\ EUROPE",
                        "id" : "domain_uuid",
                        "type" : "Domain"
                      }
                    },
                    "overridable" : true,
                    "name" : "t_host4",
                    "id" : "host1_uuid",
                    "metadata" : {
                      "timestamp" : 0,
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global \\ EUROPE",
                        "id" : "domain_uuid"
                      },
                      "ipType" : "V_4",
                      "parentType" : "NetworkAddress"
                    }
                  }, {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/hosts/host1_uuid",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/networkaddresses"
                    },
                    "type" : "Host",
                    "value" : "10.10.10.4",
                    "overrides" : {
                      "parent" : {
                        "id" : "host1_uuid",
                        "type" : "Host"
                      },
                      "target" : {
                        "name" : "FTDv_R1",
                        "id" : "device_uuid",
                        "type" : "Device"
                      }
                    },
                    "overridable" : true,
                    "name" : "t_host4",
                    "id" : "host1_uuid",
                    "metadata" : {
                      "timestamp" : 0,
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global \\ ASIA",
                        "id" : "domain_uuid"
                      },
                      "ipType" : "V_4",
                      "parentType" : "NetworkAddress"
                    }
                  } ]
                },
                "Response Example 4 :POST /fmc_config/v1/domain/domainUUID/object/hosts ( POST request to create a host object override )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/hosts/00000000-0000-0ed3-0000-008589935903?overrideTargetId=device_uuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/networkaddresses"
                  },
                  "type" : "Host",
                  "value" : "1.2.3.5",
                  "overrides" : {
                    "parent" : {
                      "id" : "host2_uuid",
                      "type" : "Host"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "device_uuid",
                      "type" : "Device"
                    }
                  },
                  "overridable" : true,
                  "id" : "host2_uuid",
                  "name" : "host2",
                  "metadata" : {
                    "timestamp" : 0,
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUuid"
                    },
                    "ipType" : "V_4",
                    "parentType" : "NetworkAddress"
                  }
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/HostObject"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/hosts/{containerUUID}/overrides" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves all(Domain and Device) overrides on a Host object.Response will always be in expanded form. If passed, the \"expanded\" query parameter will be ignored.**",
        "operationId" : "getAllHostOverride",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/HostOverrideListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/domainUUID/object/hosts/hostUUID/overrides ( Get all paginated host objects )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/object/hosts/hostUUID/overrides?offset=0&limit=2"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/object/hosts/hostUUID?overrideTargetId=targetUUID"
                    },
                    "type" : "Host",
                    "value" : "3.3.3.3",
                    "overrides" : {
                      "parent" : {
                        "id" : "hostUUID",
                        "type" : "Host"
                      },
                      "target" : {
                        "name" : "Global \\ BENGALURU",
                        "id" : "domainUUID",
                        "type" : "Domain"
                      }
                    },
                    "overridable" : true,
                    "description" : " ",
                    "name" : "Host_1",
                    "id" : "hostUUID",
                    "metadata" : {
                      "timestamp" : 1520333477540,
                      "lastUser" : {
                        "name" : "user1"
                      },
                      "domain" : {
                        "name" : "Global \\ BENGALURU",
                        "id" : "domainUUID"
                      }
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/hosts/{containerUUID}/overrides/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves all(Domain and Device) overrides on a Host object.Response will always be in expanded form. If passed, the \"expanded\" query parameter will be ignored.**",
        "operationId" : "getHostOverride",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Input NOT Expected here",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/HostOverride"
            },
            "examples" : { }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/hosts/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the host object associated with the specified ID. If no ID is specified for a GET, retrieves list of all host objects.**",
        "operationId" : "getHostObject",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for host object.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "overrideTargetId",
          "in" : "query",
          "description" : "Retrieves the override(s) associated with the host object on given target ID.",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/HostObject"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/domainUUID/object/hosts/hostObject3UUID ( GET a host object for the given UUID )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/default/object/hosts/hostObject3UUID",
                    "parent" : "/fmc_config/v1/domain/default/object/networkaddresses"
                  },
                  "type" : "Host",
                  "value" : "10.5.3.28",
                  "overridable" : false,
                  "description" : "Test Description",
                  "id" : "hostObject3UUID",
                  "name" : "TestHost",
                  "metadata" : {
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "GloablDomainUUID"
                    },
                    "ipType" : "V_4",
                    "parentType" : "NetworkAddress"
                  }
                },
                "Response Example 2 :GET /fmc_config/v1/domain/GlobalDomainUUID/object/hosts/host_object_uuid?expanded=true&overrideTargetId=childDomainUUID ( Success: Test GET method from global domain on a specific HostObject which has override assigned as child domain )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/GloablDomainUUID/object/hosts/hostObject2UUID",
                    "parent" : "/fmc_config/v1/domain/GloablDomainUUID/object/networkaddresses"
                  },
                  "type" : "Host",
                  "value" : "1.2.3.4",
                  "overrides" : {
                    "parent" : {
                      "id" : "hostObject2UUID",
                      "type" : "Host"
                    },
                    "target" : {
                      "name" : "Global \\ Asia",
                      "id" : "domainUUID",
                      "type" : "Domain"
                    }
                  },
                  "overridable" : true,
                  "description" : " ",
                  "name" : "pvs_global",
                  "id" : "hostObject2UUID",
                  "metadata" : {
                    "lastUser" : {
                      "name" : "pvs"
                    },
                    "domain" : {
                      "name" : "Global \\ Asia",
                      "id" : "domainUUID"
                    },
                    "ipType" : "V_4",
                    "parentType" : "NetworkAddress"
                  }
                },
                "Response Example 3 :GET /fmc_config/v1/domain/childDomainUUID/object/hosts/host_object_uuid?expanded=true&overrideTargetId=childDomainUUID ( Success: Test GET method from child domain on a HostObject which has child domain assigned as override )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/object/hosts/hostObject2UUID",
                    "parent" : "/fmc_config/v1/domain/domainUUID/object/networkaddresses"
                  },
                  "type" : "Host",
                  "value" : "1.2.3.4",
                  "overrides" : {
                    "parent" : {
                      "id" : "hostObject2UUID",
                      "type" : "Host"
                    },
                    "target" : {
                      "name" : "Global \\ Asia",
                      "id" : "domainUUID",
                      "type" : "Domain"
                    }
                  },
                  "overridable" : true,
                  "description" : " ",
                  "name" : "pvs_global",
                  "id" : "hostObject2UUID",
                  "metadata" : {
                    "lastUser" : {
                      "name" : "pvs"
                    },
                    "domain" : {
                      "name" : "Global \\ Asia",
                      "id" : "domainUUID"
                    },
                    "ipType" : "V_4",
                    "parentType" : "NetworkAddress"
                  }
                },
                "Response Example 4 :GET /fmc_config/v1/domain/childDomainUUID/object/hosts/host_object_uuid?expanded=true&overrideTargetId=deviceUUID ( Success: Test GET method from child domain on a HostObject which has device assigned as override )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/GloablDomainUUID/object/hosts/hostObjectUUID",
                    "parent" : "/fmc_config/v1/domain/GloablDomainUUID/object/networkaddresses"
                  },
                  "type" : "Host",
                  "value" : "1.2.3.4",
                  "overrides" : {
                    "parent" : {
                      "id" : "hostObjectUUID",
                      "type" : "Host"
                    },
                    "target" : {
                      "name" : "192.168.0.166",
                      "id" : "DeviceUUID",
                      "type" : "Device"
                    }
                  },
                  "overridable" : true,
                  "description" : " ",
                  "name" : "pvs_global",
                  "id" : "hostObjectUUID",
                  "metadata" : {
                    "lastUser" : {
                      "name" : "api"
                    },
                    "domain" : {
                      "name" : "Global \\ Asia",
                      "id" : "domainUUID"
                    },
                    "ipType" : "V_4",
                    "parentType" : "NetworkAddress"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the host object associated with the specified ID. If no ID is specified for a GET, retrieves list of all host objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateHostObject",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for host object.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of host object.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/HostObject"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/HostObject"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/domainUUID/object/hosts/hostObject3UUID ( PUT to update a host object )" : {
                  "type" : "Host",
                  "value" : "10.5.3.28",
                  "overridable" : false,
                  "description" : "Test Description",
                  "id" : "hostObject3UUID",
                  "name" : "TestHost"
                },
                "Request example 2 : PUT /fmc_config/v1/domain/domainUUID/object/hosts/host2_uuid ( PUT to update override value on a given host override object )" : {
                  "type" : "Host",
                  "value" : "12.2.3.5",
                  "overridable" : true,
                  "description" : " ",
                  "overrides" : {
                    "parent" : {
                      "id" : "host2_uuid",
                      "type" : "Host"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "device_uuid",
                      "type" : "Device"
                    }
                  },
                  "id" : "host2_uuid",
                  "name" : "host2"
                },
                "Response Example 1 :PUT /fmc_config/v1/domain/domainUUID/object/hosts/hostObject3UUID ( PUT to update a host object )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/default/object/hosts/hostObject3UUID",
                    "parent" : "/fmc_config/v1/domain/default/object/networkaddresses"
                  },
                  "type" : "Host",
                  "value" : "10.5.3.28",
                  "overridable" : false,
                  "id" : "hostObject3UUID",
                  "name" : "TestHost",
                  "metadata" : {
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "GloablDomainUUID"
                    },
                    "ipType" : "V_4",
                    "parentType" : "NetworkAddress"
                  }
                },
                "Response Example 2 :PUT /fmc_config/v1/domain/domainUUID/object/hosts/host2_uuid ( PUT to update override value on a given host override object )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/hosts/00000000-0000-0ed3-0000-008589935903?overrideTargetId=device_uuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/networkaddresses"
                  },
                  "type" : "Host",
                  "value" : "12.2.3.5",
                  "overrides" : {
                    "parent" : {
                      "id" : "host2_uuid",
                      "type" : "Host"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "device_uuid",
                      "type" : "Device"
                    }
                  },
                  "overridable" : true,
                  "id" : "host2_uuid",
                  "name" : "host2",
                  "metadata" : {
                    "timestamp" : 0,
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUuid"
                    },
                    "ipType" : "V_4",
                    "parentType" : "NetworkAddress"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/HostObject"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the host object associated with the specified ID. If no ID is specified for a GET, retrieves list of all host objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteHostObject",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for host object.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/HostObject"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /fmc_config/v1/domain/domainUUID/object/hosts/hostObject3UUID ( DELETE a host object for the given UUID )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/default/object/hosts/hostObject3UUID",
                    "parent" : "/fmc_config/v1/domain/default/object/networkaddresses"
                  },
                  "type" : "Host",
                  "value" : "10.5.3.28",
                  "overridable" : false,
                  "description" : "Test Description",
                  "id" : "hostObject3UUID",
                  "name" : "TestHost",
                  "metadata" : {
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "GloablDomainUUID"
                    },
                    "ipType" : "V_4",
                    "parentType" : "NetworkAddress"
                  }
                },
                "Response Example 2 :DELETE /fmc_config/v1/domain/domainUUID/object/hosts/host2_uuid?overrideTargetId=device_uuid ( DELETE a specific host override object )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/hosts/host2_uuid?overrideTargetId=device_uuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/networkaddresses"
                  },
                  "type" : "Host",
                  "value" : "1.2.3.5",
                  "overrides" : {
                    "parent" : {
                      "id" : "host2_uuid",
                      "type" : "Host"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "device_uuid",
                      "type" : "Device"
                    }
                  },
                  "overridable" : true,
                  "description" : " ",
                  "id" : "host2_uuid",
                  "name" : "host2",
                  "metadata" : {
                    "timestamp" : 1527150522950,
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUuid"
                    },
                    "ipType" : "V_4",
                    "parentType" : "NetworkAddress"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/hostscanpackages" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves HostScan packages. If no ID is specified for a GET, retrieves list of all HostScan packages.**",
        "operationId" : "getAllHostScanPackageObject",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/HostScanPackageObjectListContainer"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/hostscanpackages/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves HostScan packages. If no ID is specified for a GET, retrieves list of all HostScan packages.**",
        "operationId" : "getHostScanPackageObject",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for HostScan packages.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/HostScanPackageObject"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/icmpv4objects" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the icmpv4 object associated with the specified ID. If no ID is specified for a GET, retrieves list of all icmpv4 objects.**",
        "operationId" : "getAllICMPV4Object",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "To be used in conjunction with <code>\"unusedOnly:true\"</code> to search for unused objects and <code>\"nameOrValue:{nameOrValue}\"</code> to search for both name and value.",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ICMPV4ObjectListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/GlobalDomainUUID/object/icmpv4objects?expanded=true&overrideTargetId=childDomainUUID ( Success: Test GET ALL method from global domain for ICMPV4Object when overrides are assigned to child domain )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/global/object/icmpv4objects?offset=0&limit=1"
                  },
                  "items" : [ {
                    "metadata" : {
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global \\ Asia",
                        "id" : "childDomainUUID"
                      },
                      "parentType" : "Port"
                    },
                    "links" : {
                      "self" : "/fmc_config/v1/domain/global/object/icmpv4objects/icmpv4ObjectUUID",
                      "parent" : "/fmc_config/v1/domain/global/object/ports"
                    },
                    "type" : "ICMPV4Object",
                    "code" : 0,
                    "icmpType" : "3",
                    "overrides" : {
                      "parent" : {
                        "id" : "icmpv4ObjectUUID",
                        "type" : "ICMPV4Object"
                      },
                      "target" : {
                        "name" : "Global \\ Asia",
                        "id" : "childDomainUUID",
                        "type" : "Domain"
                      }
                    },
                    "overridable" : true,
                    "description" : " ",
                    "name" : "pvs_icmpv4",
                    "id" : "icmpv4ObjectUUID"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/childDomainUUID/object/icmpv4objects?expanded=true&overrideTargetId=childDomainUUID ( Success: Test GET ALL method from child domain for ICMPV4Object when overrides are assigned to child domain )" : {
                  "links" : {
                    "self" : "https://fmc_host_ip/api/fmc_config/v1/domain/childDomainUUID/object/icmpv4objects?offset=0&limit=1"
                  },
                  "items" : [ {
                    "metadata" : {
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global \\ Asia",
                        "id" : "childDomainUUID"
                      },
                      "parentType" : "Port"
                    },
                    "links" : {
                      "self" : "https://fmc_host_ip/api/fmc_config/v1/domain/childDomainUUID/object/icmpv4objects/icmpv4ObjectUUID",
                      "parent" : "https://fmc_host_ip/api/fmc_config/v1/domain/childDomainUUID/object/ports"
                    },
                    "type" : "ICMPV4Object",
                    "code" : 0,
                    "icmpType" : "3",
                    "overrides" : {
                      "parent" : {
                        "id" : "icmpv4ObjectUUID",
                        "type" : "ICMPV4Object"
                      },
                      "target" : {
                        "name" : "Global \\ Asia",
                        "id" : "childDomainUUID",
                        "type" : "Domain"
                      }
                    },
                    "overridable" : true,
                    "description" : " ",
                    "name" : "pvs_icmpv4",
                    "id" : "icmpv4ObjectUUID"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the icmpv4 object associated with the specified ID. If no ID is specified for a GET, retrieves list of all icmpv4 objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createMultipleICMPV4Object",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The input icmpv4 object model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ICMPV4Object"
          }
        }, {
          "name" : "bulk",
          "in" : "query",
          "description" : "Enables bulk create for ICMPv4 objects.",
          "required" : false,
          "type" : "boolean"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/ICMPV4Object"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /fmc_config/v1/domain/DomainUUID/object/icmpv4objects ( Test registration of ICMPV4Object to create a new record )" : {
                  "name" : "icmpv4_obj1",
                  "icmpType" : "3",
                  "code" : 0,
                  "type" : "ICMPV4Object"
                },
                "Request example 2 : POST /fmc_config/v1/domain/DomainUUID/object/icmpv4objects?bulk=true ( Bulk POST operation on ICMPV4 objects. )" : [ {
                  "name" : "icmpv4_obj1",
                  "icmpType" : "3",
                  "code" : 0,
                  "type" : "ICMPV4Object"
                }, {
                  "name" : "icmpv4_obj2",
                  "icmpType" : "4",
                  "code" : 0,
                  "type" : "ICMPV4Object"
                } ],
                "Request example 3 : POST /fmc_config/v1/domain/DomainUUID/object/icmpv4objects?bulk=true ( Bulk POST operation on ICMPV4 objects with overrides )" : [ {
                  "type" : "ICMPV4Object",
                  "code" : 2,
                  "icmpType" : "5",
                  "overridable" : true,
                  "description" : " ",
                  "name" : "icmp4_obj",
                  "overrides" : {
                    "parent" : {
                      "id" : "icmp4_obj_uuid",
                      "type" : "ICMPV4Object"
                    },
                    "target" : {
                      "name" : "Global \\ EUROPE",
                      "id" : "domain_uuid",
                      "type" : "Domain"
                    }
                  },
                  "id" : "icmp4_obj_uuid"
                }, {
                  "type" : "ICMPV4Object",
                  "code" : 1,
                  "icmpType" : "5",
                  "overridable" : true,
                  "description" : " ",
                  "name" : "icmp4_obj",
                  "overrides" : {
                    "parent" : {
                      "id" : "icmp4_obj_uuid",
                      "type" : "ICMPV4Object"
                    },
                    "target" : {
                      "name" : "FTDv_R1",
                      "id" : "device_uuid",
                      "type" : "Device"
                    }
                  },
                  "id" : "icmp4_obj_uuid"
                } ],
                "Request example 4 : POST /fmc_config/v1/domain/DomainUUID/object/icmpv4objects ( POST request to create an override on ICMPv4 object )" : {
                  "type" : "ICMPV4Object",
                  "code" : 0,
                  "icmpType" : "3",
                  "overridable" : true,
                  "overrides" : {
                    "parent" : {
                      "id" : "icmpv4_obj1_uuid",
                      "type" : "ICMPV4Object"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "target_uuid",
                      "type" : "Device"
                    }
                  },
                  "id" : "icmpv4_obj1_uuid",
                  "name" : "icmpv4_obj1"
                },
                "Response Example 2 :POST /fmc_config/v1/domain/DomainUUID/object/icmpv4objects?bulk=true ( Bulk POST operation on ICMPV4 objects. )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/icmpv4objects?bulk=true"
                  },
                  "items" : [ {
                    "metadata" : {
                      "timestamp" : 0,
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUuid"
                      },
                      "parentType" : "Port"
                    },
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/icmpv4objects/icmpv4_obj1Uuid",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/ports"
                    },
                    "type" : "ICMPV4Object",
                    "code" : 0,
                    "icmpType" : "3",
                    "overridable" : false,
                    "description" : " ",
                    "name" : "icmpv4_obj1",
                    "id" : "icmpv4_obj1Uuid"
                  }, {
                    "metadata" : {
                      "timestamp" : 0,
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUuid"
                      },
                      "parentType" : "Port"
                    },
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/icmpv4objects/icmpv4_obj2Uuid",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/ports"
                    },
                    "type" : "ICMPV4Object",
                    "code" : 0,
                    "icmpType" : "4",
                    "overridable" : false,
                    "description" : " ",
                    "name" : "icmpv4_obj2",
                    "id" : "icmpv4_obj2Uuid"
                  } ]
                },
                "Response Example 3 :POST /fmc_config/v1/domain/DomainUUID/object/icmpv4objects?bulk=true ( Bulk POST operation on ICMPV4 objects with overrides )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/icmpv4objects?bulk=true"
                  },
                  "items" : [ {
                    "metadata" : {
                      "timestamp" : 0,
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global \\ EUROPE",
                        "id" : "domain_uuid"
                      },
                      "parentType" : "Port"
                    },
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/icmpv4objects/icmp4_obj_uuid",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/ports"
                    },
                    "type" : "ICMPV4Object",
                    "code" : 2,
                    "icmpType" : "5",
                    "overrides" : {
                      "parent" : {
                        "id" : "icmp4_obj_uuid",
                        "type" : "ICMPV4Object"
                      },
                      "target" : {
                        "name" : "Global \\ EUROPE",
                        "id" : "domain_uuid",
                        "type" : "Domain"
                      }
                    },
                    "overridable" : true,
                    "name" : "icmp4_obj",
                    "id" : "icmp4_obj_uuid"
                  }, {
                    "metadata" : {
                      "timestamp" : 0,
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global \\ ASIA",
                        "id" : "domain_uuid"
                      },
                      "parentType" : "Port"
                    },
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/icmpv4objects/icmp4_obj_uuid",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/ports"
                    },
                    "type" : "ICMPV4Object",
                    "code" : 1,
                    "icmpType" : "5",
                    "overrides" : {
                      "parent" : {
                        "id" : "icmp4_obj_uuid",
                        "type" : "ICMPV4Object"
                      },
                      "target" : {
                        "name" : "FTDv_R1",
                        "id" : "device_uuid",
                        "type" : "Device"
                      }
                    },
                    "overridable" : true,
                    "name" : "icmp4_obj",
                    "id" : "icmp4_obj_uuid"
                  } ]
                },
                "Response Example 4 :POST /fmc_config/v1/domain/DomainUUID/object/icmpv4objects ( POST request to create an override on ICMPv4 object )" : {
                  "metadata" : {
                    "timestamp" : 0,
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUuid"
                    },
                    "parentType" : "Port"
                  },
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/icmpv4objects/icmpv4_obj1_uuid?overrideTargetId=target_uuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/ports"
                  },
                  "type" : "ICMPV4Object",
                  "code" : 0,
                  "icmpType" : "3",
                  "overrides" : {
                    "parent" : {
                      "id" : "icmpv4_obj1_uuid",
                      "type" : "ICMPV4Object"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "target_uuid",
                      "type" : "Device"
                    }
                  },
                  "overridable" : true,
                  "id" : "icmpv4_obj1_uuid",
                  "name" : "icmpv4_obj1"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/ICMPV4Object"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/icmpv4objects/{containerUUID}/overrides" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves all(Domain and Device) overrides on a ICMPV4 object.Response will always be in expanded form. If passed, the \"expanded\" query parameter will be ignored.**",
        "operationId" : "getAllICMPV4ObjectOverride",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ICMPV4ObjectOverrideListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/domainUUID/object/icmpv4objects/icmpv4ObjectUUID/overrides ( Get all (domain and device) overrides on gievn ICMPV4 Object )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/object/icmpv4objects/icmpv4ObjectUUID/overrides?offset=0&limit=1"
                  },
                  "items" : [ {
                    "metadata" : {
                      "timestamp" : 1520343093440,
                      "lastUser" : {
                        "name" : "user"
                      },
                      "domain" : {
                        "name" : "Global \\ INDIA",
                        "id" : "domainUUID"
                      },
                      "parentType" : "PortObject"
                    },
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/object/icmpv4objects/icmpv4ObjectUUID?overrideTargetId=targetUUID"
                    },
                    "type" : "ICMPV4Object",
                    "icmpType" : "3",
                    "overrides" : {
                      "parent" : {
                        "id" : "icmpv4ObjectUUID",
                        "type" : "ICMPV4Object"
                      },
                      "target" : {
                        "name" : "10.10.19.25",
                        "id" : "targetUUID",
                        "type" : "Device"
                      }
                    },
                    "overridable" : true,
                    "description" : " ",
                    "name" : "port_1",
                    "id" : "icmpv4ObjectUUID"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/icmpv4objects/{containerUUID}/overrides/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves all(Domain and Device) overrides on a ICMPV4 object.Response will always be in expanded form. If passed, the \"expanded\" query parameter will be ignored.**",
        "operationId" : "getICMPV4ObjectOverride",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Input NOT Expected here",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ICMPV4ObjectOverride"
            },
            "examples" : { }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/icmpv4objects/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the icmpv4 object associated with the specified ID. If no ID is specified for a GET, retrieves list of all icmpv4 objects.**",
        "operationId" : "getICMPV4Object",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the object.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "overrideTargetId",
          "in" : "query",
          "description" : "Retrieves the override(s) associated with the ICMPv4 object on given target ID.",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ICMPV4Object"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/object/icmpv4objects/icmpv4Object1UUID ( Test GET of ICMPV4 Object for a uuid )" : {
                  "id" : "icmpv4Object1UUID",
                  "name" : "icmpv4_obj1",
                  "type" : "ICMPV4Object",
                  "icmpType" : "3",
                  "code" : 0
                },
                "Response Example 2 :GET /fmc_config/v1/domain/GlobalDomainUUID/object/icmpv4objects/icmpv4ObjectUUID?expanded=true&overrideTargetId=childDomainUUID ( Success: Test GET method from global domain on a specific ICMPV4Object which has override assigned as child domain )" : {
                  "metadata" : {
                    "lastUser" : {
                      "name" : "pvs"
                    },
                    "domain" : {
                      "name" : "Global \\ Asia",
                      "id" : "childDomainUUID"
                    },
                    "parentType" : "Port"
                  },
                  "links" : {
                    "self" : "/fmc_config/v1/domain/global/object/icmpv4objects/icmpv4ObjectUUID",
                    "parent" : "/fmc_config/v1/domain/global/object/ports"
                  },
                  "type" : "ICMPV4Object",
                  "code" : 0,
                  "icmpType" : "3",
                  "overrides" : {
                    "parent" : {
                      "id" : "icmpv4ObjectUUID",
                      "type" : "ICMPV4Object"
                    },
                    "target" : {
                      "name" : "Global \\ Asia",
                      "id" : "childDomainUUID",
                      "type" : "Domain"
                    }
                  },
                  "overridable" : true,
                  "description" : " ",
                  "name" : "pvs_icmpv4",
                  "id" : "icmpv4ObjectUUID"
                },
                "Response Example 3 :GET /fmc_config/v1/domain/childDomainUUID/object/icmpv4objects/icmpv4ObjectUUID?expanded=true&overrideTargetId=childDomainUUID ( Success: Test GET method from child domain on a ICMPV4Object which has child domain assigned as override )" : {
                  "metadata" : {
                    "lastUser" : {
                      "name" : "pvs"
                    },
                    "domain" : {
                      "name" : "Global \\ Asia",
                      "id" : "childDomainUUID"
                    },
                    "parentType" : "Port"
                  },
                  "links" : {
                    "self" : "/fmc_config/v1/domain/childDomainUUID/object/icmpv4objects/icmpv4ObjectUUID",
                    "parent" : "/fmc_config/v1/domain/childDomainUUID/object/ports"
                  },
                  "type" : "ICMPV4Object",
                  "code" : 0,
                  "icmpType" : "3",
                  "overrides" : {
                    "parent" : {
                      "id" : "icmpv4ObjectUUID",
                      "type" : "ICMPV4Object"
                    },
                    "target" : {
                      "name" : "Global \\ Asia",
                      "id" : "childDomainUUID",
                      "type" : "Domain"
                    }
                  },
                  "overridable" : true,
                  "description" : " ",
                  "name" : "pvs_icmpv4",
                  "id" : "icmpv4ObjectUUID"
                },
                "Response Example 4 :GET /fmc_config/v1/domain/childDomainUUID/object/icmpv4objects/icmpv4ObjectUUID?expanded=true&overrideTargetId=deviceUUID ( Success: Test GET method from child domain on a ICMPV4Object which has device assigned as override )" : {
                  "metadata" : {
                    "lastUser" : {
                      "name" : "api"
                    },
                    "domain" : {
                      "name" : "Global \\ Asia",
                      "id" : "domainUUID"
                    },
                    "parentType" : "Port"
                  },
                  "links" : {
                    "self" : "/fmc_config/v1/domain/global/object/icmpv4objects/icmpv4ObjectUUID",
                    "parent" : "/fmc_config/v1/domain/global/object/ports"
                  },
                  "type" : "ICMPV4Object",
                  "code" : 1,
                  "icmpType" : "3",
                  "overrides" : {
                    "parent" : {
                      "id" : "icmpv4ObjectUUID",
                      "type" : "ICMPV4Object"
                    },
                    "target" : {
                      "name" : "device_name",
                      "id" : "deviceUUID",
                      "type" : "Device"
                    }
                  },
                  "overridable" : true,
                  "description" : " ",
                  "name" : "pvs_icmpv4",
                  "id" : "icmpv4ObjectUUID"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the icmpv4 object associated with the specified ID. If no ID is specified for a GET, retrieves list of all icmpv4 objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateICMPV4Object",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the object.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The input icmpv4 object model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ICMPV4Object"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ICMPV4Object"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/DomainUUID/object/icmpv4objects/icmpv4Object1UUID ( Test PUT of ICMPV4 object to update record )" : {
                  "id" : "icmpv4Object1UUID",
                  "name" : "icmpv4_obj1_updated",
                  "type" : "ICMPV4Object",
                  "icmpType" : "3",
                  "code" : 1
                },
                "Request example 2 : PUT /fmc_config/v1/domain/DomainUUID/object/icmpv4objects ( Test PUT of network object to create record )" : {
                  "name" : "icmpv4_obj2",
                  "type" : "Device",
                  "icmpType" : "3",
                  "code" : 0
                },
                "Request example 3 : PUT /fmc_config/v1/domain/DomainUUID/object/icmpv4objects/icmpv4_obj1_uuid ( PUT request to update override on icmpv4 object )" : {
                  "type" : "ICMPV4Object",
                  "code" : 0,
                  "icmpType" : "3",
                  "overridable" : true,
                  "overrides" : {
                    "parent" : {
                      "id" : "icmpv4_obj1_uuid",
                      "type" : "ICMPV4Object"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "target_uuid",
                      "type" : "Device"
                    }
                  },
                  "id" : "icmpv4_obj1_uuid",
                  "name" : "icmpv4_obj1"
                },
                "Response Example 3 :PUT /fmc_config/v1/domain/DomainUUID/object/icmpv4objects/icmpv4_obj1_uuid ( PUT request to update override on icmpv4 object )" : {
                  "metadata" : {
                    "timestamp" : 0,
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUuid"
                    },
                    "parentType" : "Port"
                  },
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/icmpv4objects/icmpv4_obj1_uuid?overrideTargetId=target_uuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/ports"
                  },
                  "type" : "ICMPV4Object",
                  "code" : 0,
                  "icmpType" : "3",
                  "overrides" : {
                    "parent" : {
                      "id" : "icmpv4_obj1_uuid",
                      "type" : "ICMPV4Object"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "target_uuid",
                      "type" : "Device"
                    }
                  },
                  "overridable" : true,
                  "id" : "icmpv4_obj1_uuid",
                  "name" : "icmpv4_obj1"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/ICMPV4Object"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the icmpv4 object associated with the specified ID. If no ID is specified for a GET, retrieves list of all icmpv4 objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteICMPV4Object",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the object.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ICMPV4Object"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /fmc_config/v1/domain/DomainUUID/object/icmpv4objects/icmpv4Object2UUID ( Test DELETE of ICMPV4 Object )" : {
                  "id" : "icmpv4Object2UUID",
                  "name" : "icmpv4_obj2",
                  "type" : "ICMPV4Object",
                  "icmpType" : "3",
                  "code" : 0
                },
                "Response Example 2 :DELETE /fmc_config/v1/domain/DomainUUID/object/icmpv4objects/icmpv4_obj1_uuid?overrideTargetId=target_uuid ( DELETE request to remove an override on icmpv4 object )" : {
                  "metadata" : {
                    "timestamp" : 1527350965026,
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUuid"
                    },
                    "parentType" : "Port"
                  },
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/icmpv4objects/icmpv4_obj1_uuid?overrideTargetId=target_uuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/ports"
                  },
                  "type" : "ICMPV4Object",
                  "code" : 0,
                  "icmpType" : "3",
                  "overrides" : {
                    "parent" : {
                      "id" : "icmpv4_obj1_uuid",
                      "type" : "ICMPV4Object"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "target_uuid",
                      "type" : "Device"
                    }
                  },
                  "overridable" : true,
                  "description" : " ",
                  "id" : "icmpv4_obj1_uuid",
                  "name" : "icmpv4_obj1"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/icmpv6objects" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the icmpv6 object associated with the specified ID. If no ID is specified for a GET, retrieves list of all icmpv6 objects.**",
        "operationId" : "getAllICMPV6Object",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "To be used in conjunction with <code>\"unusedOnly:true\"</code> to search for unused objects and <code>\"nameOrValue:{nameOrValue}\"</code> to search for both name and value.",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ICMPV6ObjectListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/GlobalDomainUUID/object/icmpv6objects?expanded=true&overrideTargetId=childDomainUUID ( Success: Test GET ALL method from global domain for ICMPV6Object when overrides are assigned to child domain )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/global/object/icmpv6objects?offset=0&limit=1"
                  },
                  "items" : [ {
                    "metadata" : {
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global \\ Asia",
                        "id" : "childDomainUUID"
                      },
                      "parentType" : "Port"
                    },
                    "links" : {
                      "self" : "/fmc_config/v1/domain/global/object/icmpv6objects/icmpv6ObjectUUID",
                      "parent" : "/fmc_config/v1/domain/global/object/ports"
                    },
                    "type" : "ICMPV6Object",
                    "code" : 0,
                    "icmpType" : "3",
                    "overrides" : {
                      "parent" : {
                        "id" : "icmpv6ObjectUUID",
                        "type" : "ICMPV6Object"
                      },
                      "target" : {
                        "name" : "Global \\ Asia",
                        "id" : "childDomainUUID",
                        "type" : "Domain"
                      }
                    },
                    "overridable" : true,
                    "description" : " ",
                    "name" : "pvs_icmpv6",
                    "id" : "icmpv6ObjectUUID"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/childDomainUUID/object/icmpv6objects?expanded=true&overrideTargetId=childDomainUUID ( Success: Test GET ALL method from child domain for ICMPV6Object when overrides are assigned to child domain )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/childDomainUUID/object/icmpv6objects?offset=0&limit=1"
                  },
                  "items" : [ {
                    "metadata" : {
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global \\ Asia",
                        "id" : "childDomainUUID"
                      },
                      "parentType" : "Port"
                    },
                    "links" : {
                      "self" : "/fmc_config/v1/domain/childDomainUUID/object/icmpv6objects/icmpv6ObjectUUID",
                      "parent" : "/fmc_config/v1/domain/childDomainUUID/object/ports"
                    },
                    "type" : "ICMPV6Object",
                    "code" : 0,
                    "icmpType" : "3",
                    "overrides" : {
                      "parent" : {
                        "id" : "icmpv6ObjectUUID",
                        "type" : "ICMPV6Object"
                      },
                      "target" : {
                        "name" : "Global \\ Asia",
                        "id" : "childDomainUUID",
                        "type" : "Domain"
                      }
                    },
                    "overridable" : true,
                    "description" : " ",
                    "name" : "pvs_icmpv6",
                    "id" : "icmpv6ObjectUUID"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the icmpv6 object associated with the specified ID. If no ID is specified for a GET, retrieves list of all icmpv6 objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createMultipleICMPV6Object",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The input icmpv6 object model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ICMPV6Object"
          }
        }, {
          "name" : "bulk",
          "in" : "query",
          "description" : "Enables bulk create for ICMPv6 objects.",
          "required" : false,
          "type" : "boolean"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/ICMPV6Object"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /fmc_config/v1/domain/DomainUUID/object/icmpv6objects ( Test registration of ICMPV6Object to create a new record )" : {
                  "name" : "icmpv6_obj1",
                  "icmpType" : "3",
                  "code" : 0,
                  "type" : "ICMPV6Object"
                },
                "Request example 2 : POST /fmc_config/v1/domain/DomainUUID/object/icmpv6objects?bulk=true ( Bulk POST operation on ICMPV6 objects. )" : [ {
                  "name" : "icmpv6_obj1",
                  "icmpType" : "3",
                  "code" : 0,
                  "type" : "ICMPV6Object"
                }, {
                  "name" : "icmpv6_obj2",
                  "icmpType" : "2",
                  "code" : 0,
                  "type" : "ICMPV6Object"
                } ],
                "Request example 3 : POST /fmc_config/v1/domain/DomainUUID/object/icmpv6objects?bulk=true ( Bulk POST operation on ICMPV6 objects with overrides )" : [ {
                  "type" : "ICMPV6Object",
                  "code" : 0,
                  "icmpType" : "2",
                  "overridable" : true,
                  "description" : " ",
                  "name" : "icmp6_obj",
                  "overrides" : {
                    "parent" : {
                      "id" : "icmp6_obj_uuid",
                      "type" : "ICMPV6Object"
                    },
                    "target" : {
                      "name" : "Global \\ EUROPE",
                      "id" : "domain_uuid",
                      "type" : "Domain"
                    }
                  },
                  "id" : "icmp6_obj_uuid"
                }, {
                  "type" : "ICMPV6Object",
                  "code" : 1,
                  "icmpType" : "3",
                  "overridable" : true,
                  "description" : " ",
                  "name" : "icmp6_obj",
                  "overrides" : {
                    "parent" : {
                      "id" : "icmp6_obj_uuid",
                      "type" : "ICMPV6Object"
                    },
                    "target" : {
                      "name" : "FTDv_R1",
                      "id" : "device_uuid",
                      "type" : "Device"
                    }
                  },
                  "id" : "icmp6_obj_uuid"
                } ],
                "Request example 4 : POST /fmc_config/v1/domain/DomainUUID/object/icmpv6objects ( POST request to create override on ICMPv6 object )" : {
                  "type" : "ICMPV6Object",
                  "code" : 0,
                  "icmpType" : "3",
                  "overridable" : true,
                  "overrides" : {
                    "parent" : {
                      "id" : "icmpv6_obj1_uuid",
                      "type" : "ICMPV6Object"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "target_uuid",
                      "type" : "Device"
                    }
                  },
                  "id" : "icmpv6_obj1_uuid",
                  "name" : "icmpv6_obj1"
                },
                "Response Example 2 :POST /fmc_config/v1/domain/DomainUUID/object/icmpv6objects?bulk=true ( Bulk POST operation on ICMPV6 objects. )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/icmpv6objects?bulk=true"
                  },
                  "items" : [ {
                    "metadata" : {
                      "timestamp" : 0,
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUuid"
                      },
                      "parentType" : "Port"
                    },
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/icmpv6objects/icmpv6_obj1Uuid",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/ports"
                    },
                    "type" : "ICMPV6Object",
                    "code" : 0,
                    "icmpType" : "3",
                    "overridable" : false,
                    "description" : " ",
                    "name" : "icmpv6_obj1",
                    "id" : "icmpv6_obj1Uuid"
                  }, {
                    "metadata" : {
                      "timestamp" : 0,
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUuid"
                      },
                      "parentType" : "Port"
                    },
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/icmpv6objects/icmpv6_obj2Uuid",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/ports"
                    },
                    "type" : "ICMPV6Object",
                    "code" : 0,
                    "icmpType" : "2",
                    "overridable" : false,
                    "description" : " ",
                    "name" : "icmpv6_obj2",
                    "id" : "icmpv6_obj2Uuid"
                  } ]
                },
                "Response Example 3 :POST /fmc_config/v1/domain/DomainUUID/object/icmpv6objects?bulk=true ( Bulk POST operation on ICMPV6 objects with overrides )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/icmpv6objects?bulk=true"
                  },
                  "items" : [ {
                    "metadata" : {
                      "timestamp" : 0,
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global \\ EUROPE",
                        "id" : "domain_uuid"
                      },
                      "parentType" : "Port"
                    },
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/icmpv6objects/icmp6_obj_uuid",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/ports"
                    },
                    "type" : "ICMPV6Object",
                    "code" : 0,
                    "icmpType" : "2",
                    "overrides" : {
                      "parent" : {
                        "id" : "icmp6_obj_uuid",
                        "type" : "ICMPV6Object"
                      },
                      "target" : {
                        "name" : "Global \\ EUROPE",
                        "id" : "domain_uuid",
                        "type" : "Domain"
                      }
                    },
                    "overridable" : true,
                    "name" : "icmp6_obj",
                    "id" : "icmp6_obj_uuid"
                  }, {
                    "metadata" : {
                      "timestamp" : 0,
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global \\ ASIA",
                        "id" : "domain_uuid"
                      },
                      "parentType" : "Port"
                    },
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/icmpv6objects/icmp6_obj_uuid",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/ports"
                    },
                    "type" : "ICMPV6Object",
                    "code" : 1,
                    "icmpType" : "3",
                    "overrides" : {
                      "parent" : {
                        "id" : "icmp6_obj_uuid",
                        "type" : "ICMPV6Object"
                      },
                      "target" : {
                        "name" : "FTDv_R1",
                        "id" : "device_uuid",
                        "type" : "Device"
                      }
                    },
                    "overridable" : true,
                    "name" : "icmp6_obj",
                    "id" : "icmp6_obj_uuid"
                  } ]
                },
                "Response Example 4 :POST /fmc_config/v1/domain/DomainUUID/object/icmpv6objects ( POST request to create override on ICMPv6 object )" : {
                  "metadata" : {
                    "timestamp" : 0,
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUuid"
                    },
                    "parentType" : "Port"
                  },
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/icmpv6objects/icmpv6_obj1_uuid?overrideTargetId=target_uuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/ports"
                  },
                  "type" : "ICMPV6Object",
                  "code" : 0,
                  "icmpType" : "3",
                  "overrides" : {
                    "parent" : {
                      "id" : "icmpv6_obj1_uuid",
                      "type" : "ICMPV6Object"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "target_uuid",
                      "type" : "Device"
                    }
                  },
                  "overridable" : true,
                  "id" : "icmpv6_obj1_uuid",
                  "name" : "icmpv6_obj1"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/ICMPV6Object"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/icmpv6objects/{containerUUID}/overrides" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**[DEV ERROR: Missing description]**",
        "operationId" : "getAllICMPV6ObjectOverride",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ICMPV6ObjectOverrideListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/domainUUID/object/icmpv6objects/icmpv6ObjectUUID/overrides ( Get all (domain and device) overrides on gievn ICMPV6 Object )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/object/icmpv6objects/icmpv6ObjectUUID/overrides?offset=0&limit=1"
                  },
                  "items" : [ {
                    "metadata" : {
                      "timestamp" : 1520343130476,
                      "lastUser" : {
                        "name" : "user"
                      },
                      "domain" : {
                        "name" : "Global \\ BENGALURU",
                        "id" : "domainUUID"
                      },
                      "parentType" : "PortObject"
                    },
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/object/icmpv6objects/icmpv6ObjectUUID?overrideTargetId=targetUUID"
                    },
                    "type" : "ICMPV6Object",
                    "icmpType" : "131",
                    "overrides" : {
                      "parent" : {
                        "id" : "icmpv6ObjectUUID",
                        "type" : "ICMPV6Object"
                      },
                      "target" : {
                        "name" : "Global \\ BENGALURU",
                        "id" : "targetUUID",
                        "type" : "Domain"
                      }
                    },
                    "overridable" : true,
                    "description" : " ",
                    "name" : "icmp_6",
                    "id" : "icmpv6ObjectUUID"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/icmpv6objects/{containerUUID}/overrides/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**[DEV ERROR: Missing description]**",
        "operationId" : "getICMPV6ObjectOverride",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "[DEV ERROR: Missing description]",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ICMPV6ObjectOverride"
            },
            "examples" : { }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/icmpv6objects/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the icmpv6 object associated with the specified ID. If no ID is specified for a GET, retrieves list of all icmpv6 objects.**",
        "operationId" : "getICMPV6Object",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the object.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "overrideTargetId",
          "in" : "query",
          "description" : "Retrieves the override(s) associated with the ICMPv6 object on given target ID.",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ICMPV6Object"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/object/icmpv6objects/icmpv6ObjectUUID ( Test GET of ICMPV6 Object for a uuid )" : {
                  "id" : "icmpv6ObjectUUID",
                  "name" : "icmpv6_obj1",
                  "type" : "ICMPV6Object",
                  "icmpType" : "3",
                  "code" : 0
                },
                "Response Example 2 :GET /fmc_config/v1/domain/GlobalDomainUUID/object/icmpv6objects/icmpv6ObjectUUID?expanded=true&overrideTargetId=childDomainUUID ( Success: Test GET method from global domain on a specific ICMPV6Object which has override assigned as child domain )" : {
                  "metadata" : {
                    "lastUser" : {
                      "name" : "pvs"
                    },
                    "domain" : {
                      "name" : "Global \\ Asia",
                      "id" : "childDomainUUID"
                    },
                    "parentType" : "Port"
                  },
                  "links" : {
                    "self" : "/fmc_config/v1/domain/global/object/icmpv6objects/icmpv6ObjectUUID",
                    "parent" : "/fmc_config/v1/domain/global/object/ports"
                  },
                  "type" : "ICMPV6Object",
                  "code" : 0,
                  "icmpType" : "3",
                  "overrides" : {
                    "parent" : {
                      "id" : "icmpv6ObjectUUID",
                      "type" : "ICMPV6Object"
                    },
                    "target" : {
                      "name" : "Global \\ Asia",
                      "id" : "childDomainUUID",
                      "type" : "Domain"
                    }
                  },
                  "overridable" : true,
                  "description" : " ",
                  "name" : "pvs_icmpv6",
                  "id" : "icmpv6ObjectUUID"
                },
                "Response Example 3 :GET /fmc_config/v1/domain/childDomainUUID/object/icmpv6objects/icmpv6ObjectUUID?expanded=true&overrideTargetId=childDomainUUID ( Success: Test GET method from child domain on a ICMPV6Object which has child domain assigned as override )" : {
                  "metadata" : {
                    "lastUser" : {
                      "name" : "pvs"
                    },
                    "domain" : {
                      "name" : "Global \\ Asia",
                      "id" : "childDomainUUID"
                    },
                    "parentType" : "Port"
                  },
                  "links" : {
                    "self" : "/fmc_config/v1/domain/childDomainUUID/object/icmpv6objects/icmpv6ObjectUUID",
                    "parent" : "/fmc_config/v1/domain/childDomainUUID/object/ports"
                  },
                  "type" : "ICMPV6Object",
                  "code" : 0,
                  "icmpType" : "3",
                  "overrides" : {
                    "parent" : {
                      "id" : "icmpv6ObjectUUID",
                      "type" : "ICMPV6Object"
                    },
                    "target" : {
                      "name" : "Global \\ Asia",
                      "id" : "childDomainUUID",
                      "type" : "Domain"
                    }
                  },
                  "overridable" : true,
                  "description" : " ",
                  "name" : "pvs_icmpv6",
                  "id" : "icmpv6ObjectUUID"
                },
                "Response Example 4 :GET /fmc_config/v1/domain/childDomainUUID/object/icmpv6objects/icmpv6ObjectUUID?expanded=true&overrideTargetId=deviceUUID ( Success: Test GET method from child domain on a ICMPV6Object which has device assigned as override )" : {
                  "metadata" : {
                    "lastUser" : {
                      "name" : "api"
                    },
                    "domain" : {
                      "name" : "Global \\ Asia",
                      "id" : "childDomainUUID"
                    },
                    "parentType" : "Port"
                  },
                  "links" : {
                    "self" : "/fmc_config/v1/domain/global/object/icmpv6objects/icmpv6ObjectUUID",
                    "parent" : "/fmc_config/v1/domain/global/object/ports"
                  },
                  "type" : "ICMPV6Object",
                  "code" : 0,
                  "icmpType" : "3",
                  "overrides" : {
                    "parent" : {
                      "id" : "icmpv6ObjectUUID",
                      "type" : "ICMPV6Object"
                    },
                    "target" : {
                      "name" : "device_name",
                      "id" : "device_uuid",
                      "type" : "Device"
                    }
                  },
                  "overridable" : true,
                  "description" : " ",
                  "name" : "pvs_icmpv6",
                  "id" : "icmpv6ObjectUUID"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the icmpv6 object associated with the specified ID. If no ID is specified for a GET, retrieves list of all icmpv6 objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateICMPV6Object",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the object.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The input icmpv6 object model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ICMPV6Object"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ICMPV6Object"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/DomainUUID/object/icmpv6objects/icmpv6ObjectUUID ( Test PUT of ICMPV6 object to update record )" : {
                  "id" : "icmpv6ObjectUUID",
                  "name" : "icmpv6_obj1_updated",
                  "type" : "ICMPV6Object",
                  "icmpType" : "3",
                  "code" : 1
                },
                "Request example 2 : PUT /fmc_config/v1/domain/DomainUUID/object/icmpv6objects ( Test PUT of network object to create record )" : {
                  "name" : "icmpv6_obj2",
                  "type" : "Device",
                  "icmpType" : "3",
                  "code" : 0
                },
                "Request example 3 : PUT /fmc_config/v1/domain/DomainUUID/object/icmpv6objects/icmpv6_obj1_uuid ( PUT request to update override on an ICMPv6 object )" : {
                  "type" : "ICMPV6Object",
                  "code" : 0,
                  "icmpType" : "3",
                  "overridable" : true,
                  "overrides" : {
                    "parent" : {
                      "id" : "icmpv6_obj1_uuid",
                      "type" : "ICMPV6Object"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "target_uuid",
                      "type" : "Device"
                    }
                  },
                  "id" : "icmpv6_obj1_uuid",
                  "name" : "icmpv6_obj1"
                },
                "Response Example 3 :PUT /fmc_config/v1/domain/DomainUUID/object/icmpv6objects/icmpv6_obj1_uuid ( PUT request to update override on an ICMPv6 object )" : {
                  "metadata" : {
                    "timestamp" : 0,
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUuid"
                    },
                    "parentType" : "Port"
                  },
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/icmpv6objects/icmpv6_obj1_uuid?overrideTargetId=target_uuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/ports"
                  },
                  "type" : "ICMPV6Object",
                  "code" : 0,
                  "icmpType" : "3",
                  "overrides" : {
                    "parent" : {
                      "id" : "icmpv6_obj1_uuid",
                      "type" : "ICMPV6Object"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "target_uuid",
                      "type" : "Device"
                    }
                  },
                  "overridable" : true,
                  "id" : "icmpv6_obj1_uuid",
                  "name" : "icmpv6_obj1"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/ICMPV6Object"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the icmpv6 object associated with the specified ID. If no ID is specified for a GET, retrieves list of all icmpv6 objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteICMPV6Object",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the object.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ICMPV6Object"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /fmc_config/v1/domain/DomainUUID/object/icmpv6objects/icmpv6Object2UUID ( Test DELETE of ICMPV6 Object )" : {
                  "id" : "icmpv6Object2UUID",
                  "name" : "icmpv6_obj2",
                  "type" : "ICMPV6Object",
                  "icmpType" : "3",
                  "code" : 0
                },
                "Response Example 2 :DELETE /fmc_config/v1/domain/DomainUUID/object/icmpv6objects/icmpv6_obj1_uuid?overrideTargetId=target_uuid ( DELETE request to remove an override on ICMPv6 object )" : {
                  "metadata" : {
                    "timestamp" : 1527357152850,
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUuid"
                    },
                    "parentType" : "Port"
                  },
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/icmpv6objects/icmpv6_obj1_uuid?overrideTargetId=target_uuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/ports"
                  },
                  "type" : "ICMPV6Object",
                  "code" : 0,
                  "icmpType" : "3",
                  "overrides" : {
                    "parent" : {
                      "id" : "icmpv6_obj1_uuid",
                      "type" : "ICMPV6Object"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "target_uuid",
                      "type" : "Device"
                    }
                  },
                  "overridable" : true,
                  "description" : " ",
                  "id" : "icmpv6_obj1_uuid",
                  "name" : "icmpv6_obj1"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/ikev1ipsecproposals" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the IKEv1 IPSec Proposal associated with the specified ID. If no ID is specified for a GET, retrieves list of all IKEv1 IPSec Proposal objects.**",
        "operationId" : "getAllIKEv1IPsecProposal",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/IKEv1IPsecProposalListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/DomainUUID/object/ikev1ipsecproposals?limit=2 ( Get all paginated ikev1ipsecproposal objects with limit set 2 )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/ikev1ipsecproposals?offset=0&limit=2"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/object/ikev1ipsecproposals/ikev1ipsecproposalUUID"
                    },
                    "name" : "ikev1ipsecproposal-1",
                    "id" : "ikev1ipsecproposalUUID",
                    "type" : "IKEv1IPsecProposal"
                  }, {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/object/ikev1ipsecproposals/ikev1ipsecproposalUUID"
                    },
                    "name" : "ikev1ipsecproposal-2",
                    "id" : "ikev1ipsecproposalUUID",
                    "type" : "IKEv1IPsecProposal"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/DomainUUID/object/ikev1ipsecproposals?limit=2&expanded=true ( Get all paginated ikev1 ipsec proposal objects with limit set 2 )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/ikev1ipsecproposals?offset=0&limit=2"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/object/ikev1ipsecproposals/ikev1ipsecproposalUUID"
                    },
                    "name" : "ikev1ipsecproposal-1",
                    "description" : "IKEv1 IPsec object description",
                    "id" : "ikev1ipsecproposalUUID",
                    "espEncryption" : "AES-192",
                    "espHash" : "SHA",
                    "type" : "IKEv1IPsecProposal"
                  }, {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/object/ikev1ipsecproposals/ikev1ipsecproposalUUID"
                    },
                    "name" : "ikev1ipsecproposal-2",
                    "description" : "IKEv1 IPsec object description",
                    "id" : "ikev1ipsecproposalUUID",
                    "espEncryption" : "DES",
                    "espHash" : "MD5",
                    "type" : "IKEv1IPsecProposal"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the IKEv1 IPSec Proposal associated with the specified ID. If no ID is specified for a GET, retrieves list of all IKEv1 IPSec Proposal objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createIKEv1IPsecProposal",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of IKEv1 IPSec Proposal object.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/IKEv1IPsecProposal"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/IKEv1IPsecProposal"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /fmc_config/v1/domain/DomainUUID/object/ikev1ipsecproposals ( POST method for IKEv1 IPsec Proposal )" : {
                  "name" : "ikev1ipsecproposal-test-1",
                  "id" : "ikev1ipsecproposalUUID",
                  "espEncryption" : "DES",
                  "espHash" : "MD5",
                  "description" : "IKEv1 IPsec object description"
                },
                "Response Example 1 :POST /fmc_config/v1/domain/DomainUUID/object/ikev1ipsecproposals ( POST method for IKEv1 IPsec Proposal )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/object/ikev1ipsecproposals/ikev1ipsecproposalUUID",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/object/ikev1ipsecproposals"
                  },
                  "name" : "ikev1ipsecproposal-test-1",
                  "id" : "ikev1ipsecproposalUUID",
                  "espEncryption" : "DES",
                  "espHash" : "MD5",
                  "type" : "IKEv1IPsecProposal",
                  "description" : "IKEv1 IPsec object description"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/IKEv1IPsecProposal"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/ikev1ipsecproposals/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the IKEv1 IPSec Proposal associated with the specified ID. If no ID is specified for a GET, retrieves list of all IKEv1 IPSec Proposal objects.**",
        "operationId" : "getIKEv1IPsecProposal",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for IKEv1 IPSec Proposal object.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/IKEv1IPsecProposal"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/object/ikev1ipsecproposals/ikev1ipsecproposalUUID ( Get ikev1 ipsec proposal object by id )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/ikev1ipsecproposals/ikev1ipsecproposalUUID"
                  },
                  "espEncryption" : "AES-192",
                  "espHash" : "NONE",
                  "name" : "ikev1ipsecproposal-1",
                  "description" : "IKEv1 IPsec Proposal object description",
                  "id" : "ikev1ipsecproposalUUID",
                  "type" : "IKEv1IPsecProposal"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the IKEv1 IPSec Proposal associated with the specified ID. If no ID is specified for a GET, retrieves list of all IKEv1 IPSec Proposal objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateIKEv1IPsecProposal",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for IKEv1 IPSec Proposal object.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of IKEv1 IPSec Proposal object.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/IKEv1IPsecProposal"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/IKEv1IPsecProposal"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/DomainUUID/object/ikev1ipsecproposals/ikev1ipsecproposalUUID ( PUT method for IKEv1 IPsec Proposal )" : {
                  "name" : "ikev1ipsecproposal-test-1",
                  "id" : "ikev1ipsecproposalUUID",
                  "espEncryption" : "DES",
                  "espHash" : "NONE",
                  "description" : "IKEv1 IPsec object description"
                },
                "Response Example 1 :PUT /fmc_config/v1/domain/DomainUUID/object/ikev1ipsecproposals/ikev1ipsecproposalUUID ( PUT method for IKEv1 IPsec Proposal )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/object/ikev1ipsecproposals/ikev1ipsecproposalUUID",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/object/ikev1ipsecproposals"
                  },
                  "name" : "ikev1ipsecproposal-test-1",
                  "id" : "ikev1ipsecproposalUUID",
                  "espEncryption" : "DES",
                  "espHash" : "MD5",
                  "type" : "IKEv1IPsecProposal",
                  "description" : "IKEv1 IPsec object description"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/IKEv1IPsecProposal"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the IKEv1 IPSec Proposal associated with the specified ID. If no ID is specified for a GET, retrieves list of all IKEv1 IPSec Proposal objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteIKEv1IPsecProposal",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for IKEv1 IPSec Proposal object.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/IKEv1IPsecProposal"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /fmc_config/v1/domain/DomainUUID/object/ikev1ipsecproposals/ikev1ipsecproposalUUID ( DELETE method for IKEv1 IPsec Proposal )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/object/ikev1ipsecproposals/ikev1ipsecproposalUUID",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/object/ikev1ipsecproposals"
                  },
                  "name" : "ikev1ipsecproposal-test-1",
                  "id" : "ikev1ipsecproposalUUID",
                  "espEncryption" : "DES",
                  "espHash" : "MD5",
                  "type" : "IKEv1IPsecProposal",
                  "description" : "IKEv1 IPsec object description"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/ikev1policies" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the IKEv1 policy object associated with the specified ID. If no ID is specified for a GET, retrieves list of all IKEv1 policy objects.**",
        "operationId" : "getAllIkev1PolicyObject",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Ikev1PolicyObjectListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/DomainUUID/object/ikev1policies?limit=2 ( Get all paginated ikev1policy objects with limit set 2 )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/ikev1policies?offset=0&limit=2"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/object/ikev1policies/ikev1policyUUID"
                    },
                    "name" : "ikev1policy-1",
                    "id" : "ikev1policyUUID",
                    "type" : "IKEv1Policy"
                  }, {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/object/ikev1policies/ikev1policyUUID"
                    },
                    "name" : "ikev1policy-2",
                    "id" : "ikev1policyUUID",
                    "type" : "IKEv1Policy"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/DomainUUID/object/ikev1policies?limit=2&expanded=true ( Get all paginated ikev1 policy objects with limit set 2 and expanded is set to true )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/ikev1policies?offset=0&limit=2"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/object/ikev1policies/ikev1policyUUID"
                    },
                    "priority" : 20,
                    "lifetimeInSeconds" : 86400,
                    "diffieHellmanGroup" : 5,
                    "authenticationMethod" : "Preshared Key",
                    "encryption" : "AES-128",
                    "hash" : "SHA",
                    "name" : "ikev1policy-1",
                    "description" : "IKEv1 Policy object description",
                    "id" : "ikev1policyUUID",
                    "type" : "IKEv1Policy"
                  }, {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/object/ikev1policies/ikev1policyUUID"
                    },
                    "priority" : 20,
                    "lifetimeInSeconds" : 86400,
                    "diffieHellmanGroup" : 5,
                    "authenticationMethod" : "Preshared Key",
                    "encryption" : "AES-128",
                    "hash" : "SHA",
                    "name" : "ikev1policy-2",
                    "description" : "IKEv1 Policy object description",
                    "id" : "ikev1policyUUID",
                    "type" : "IKEv1Policy"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the IKEv1 policy object associated with the specified ID. If no ID is specified for a GET, retrieves list of all IKEv1 policy objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createIkev1PolicyObject",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of IKEv1 policy object.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Ikev1PolicyObject"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/Ikev1PolicyObject"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /fmc_config/v1/domain/DomainUUID/object/ikev1policies ( POST method for IKEv1 Policy Object )" : {
                  "name" : "ikev1policy-test-1",
                  "priority" : 20,
                  "lifetimeInSeconds" : 86400,
                  "diffieHellmanGroup" : 5,
                  "authenticationMethod" : "Preshared Key",
                  "encryption" : "AES-128",
                  "hash" : "SHA",
                  "type" : "IKEv1Policy",
                  "description" : "IKEv1 Policy object description"
                },
                "Response Example 1 :POST /fmc_config/v1/domain/DomainUUID/object/ikev1policies ( POST method for IKEv1 Policy Object )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/object/ikev1policies/ikev1policyUUID",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/object/ikev1policies"
                  },
                  "priority" : 20,
                  "lifetimeInSeconds" : 86400,
                  "diffieHellmanGroup" : 5,
                  "authenticationMethod" : "Preshared Key",
                  "encryption" : "AES-128",
                  "hash" : "SHA",
                  "name" : "ikev1policy-test-1",
                  "description" : "IKEv1 Policy object description",
                  "id" : "ikev1policyUUID",
                  "type" : "IKEv1Policy"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/Ikev1PolicyObject"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/ikev1policies/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the IKEv1 policy object associated with the specified ID. If no ID is specified for a GET, retrieves list of all IKEv1 policy objects.**",
        "operationId" : "getIkev1PolicyObject",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for IKEv1 policy object.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Ikev1PolicyObject"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/object/ikev1policies/ikev1policyUUID ( Get ikev1 policy object by id )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/object/ikev1policies/ikev1policyUUID"
                  },
                  "priority" : 20,
                  "lifetimeInSeconds" : 86400,
                  "diffieHellmanGroup" : 5,
                  "authenticationMethod" : "Preshared Key",
                  "encryption" : "AES-128",
                  "hash" : "SHA",
                  "name" : "ikev1_object",
                  "description" : "Get ikev1 policy object by id",
                  "id" : "ikev1policyUUID",
                  "type" : "IKEv1Policy"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the IKEv1 policy object associated with the specified ID. If no ID is specified for a GET, retrieves list of all IKEv1 policy objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateIkev1PolicyObject",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for IKEv1 policy object.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of IKEv1 policy object.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Ikev1PolicyObject"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Ikev1PolicyObject"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/DomainUUID/object/ikev1policies/ikev1policyUUID ( PUT method for IKEv1 Policy )" : {
                  "name" : "ikev1policy-test-1",
                  "id" : "ikev1policyUUID",
                  "priority" : 20,
                  "lifetimeInSeconds" : 86400,
                  "diffieHellmanGroup" : 5,
                  "authenticationMethod" : "Preshared Key",
                  "encryption" : "AES-128",
                  "hash" : "SHA",
                  "type" : "IKEv1Policy",
                  "description" : "IKEv1 Policy object description"
                },
                "Response Example 1 :PUT /fmc_config/v1/domain/DomainUUID/object/ikev1policies/ikev1policyUUID ( PUT method for IKEv1 Policy )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/object/ikev1policies/ikev1policyUUID",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/object/ikev1policies"
                  },
                  "name" : "ikev1policy-test-1",
                  "id" : "ikev1policyUUID",
                  "priority" : 20,
                  "lifetimeInSeconds" : 86400,
                  "diffieHellmanGroup" : 5,
                  "authenticationMethod" : "Preshared Key",
                  "encryption" : "AES-128",
                  "hash" : "SHA",
                  "type" : "IKEv1Policy",
                  "description" : "IKEv1 Policy object description"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/Ikev1PolicyObject"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the IKEv1 policy object associated with the specified ID. If no ID is specified for a GET, retrieves list of all IKEv1 policy objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteIkev1PolicyObject",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for IKEv1 policy object.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Ikev1PolicyObject"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /fmc_config/v1/domain/DomainUUID/object/ikev1policies/ikev1policyUUID ( DELETE method for IKEv1 Policy )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/object/ikev1policies/ikev1policyUUID",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/object/ikev1policies"
                  },
                  "name" : "ikev1policy-test-1",
                  "id" : "ikev1policyUUID",
                  "priority" : 20,
                  "lifetimeInSeconds" : 86400,
                  "diffieHellmanGroup" : 5,
                  "authenticationMethod" : "Preshared Key",
                  "encryption" : "AES-128",
                  "hash" : "SHA",
                  "type" : "IKEv1Policy",
                  "description" : "IKEv1 Policy object description"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/ikev2ipsecproposals" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the IKEv2 IPSec Proposal associated with the specified ID. If no ID is specified for a GET, retrieves list of all IKEv2 IPSec Proposal objects.**",
        "operationId" : "getAllIKEv2IPsecProposal",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/IKEv2IPsecProposalListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/DomainUUID/object/ikev2ipsecproposals?limit=2 ( Get all paginated ikev2ipsecproposal objects with limit set 2 )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/ikev2ipsecproposals?offset=0&limit=2"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/object/ikev2ipsecproposals/ikev2ipsecproposalUUID"
                    },
                    "name" : "ikev2ipsecproposal-1",
                    "id" : "ikev2ipsecproposalUUID",
                    "type" : "IKEv2IPsecProposal"
                  }, {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/object/ikev2ipsecproposals/ikev2ipsecproposalUUID"
                    },
                    "name" : "ikev2ipsecproposal-2",
                    "id" : "ikev2ipsecproposalUUID",
                    "type" : "IKEv2IPsecProposal"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/DomainUUID/object/ikev2ipsecproposals?limit=2&expanded=true ( Get all paginated ikev2 ipsec proposal objects with limit set 2 )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/ikev2ipsecproposals?offset=0&limit=2"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/object/ikev2ipsecproposals/ikev2ipsecproposalUUID"
                    },
                    "name" : "ikev2ipsecproposal-1",
                    "description" : "IKEv2 IPsec object description",
                    "id" : "ikev2ipsecproposalUUID",
                    "encryptionAlgorithms" : [ "3DES", "AES-192" ],
                    "integrityAlgorithms" : [ "SHA-256", "SHA-512" ],
                    "type" : "IKEv2IPsecProposal"
                  }, {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/object/ikev2ipsecproposals/ikev2ipsecproposalUUID"
                    },
                    "name" : "ikev2ipsecproposal-2",
                    "description" : "IKEv2 IPsec object description",
                    "id" : "ikev2ipsecproposalUUID",
                    "encryptionAlgorithms" : [ "3DES", "AES-192" ],
                    "integrityAlgorithms" : [ "SHA-256", "SHA-512" ],
                    "type" : "IKEv2IPsecProposal"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the IKEv2 IPSec Proposal associated with the specified ID. If no ID is specified for a GET, retrieves list of all IKEv2 IPSec Proposal objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createIKEv2IPsecProposal",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of IKEv2 IPSec Proposal object.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/IKEv2IPsecProposal"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/IKEv2IPsecProposal"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /fmc_config/v1/domain/DomainUUID/object/ikev2ipsecproposals ( POST method for IKEv2 IPsec Proposal )" : {
                  "name" : "ikev2ipsecproposal-test-1",
                  "id" : "ikev2ipsecproposalUUID",
                  "encryptionAlgorithms" : [ "3DES", "AES-192" ],
                  "integrityAlgorithms" : [ "SHA-256", "SHA-512" ],
                  "type" : "IKEv2IPsecProposal",
                  "description" : "IKEv2 IPsec object description"
                },
                "Response Example 1 :POST /fmc_config/v1/domain/DomainUUID/object/ikev2ipsecproposals ( POST method for IKEv2 IPsec Proposal )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/object/ikev2ipsecproposals/ikev2ipsecproposalUUID",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/object/ikev2ipsecproposals"
                  },
                  "name" : "ikev2ipsecproposal-test-1",
                  "id" : "ikev2ipsecproposalUUID",
                  "encryptionAlgorithms" : [ "3DES", "AES-192" ],
                  "integrityAlgorithms" : [ "SHA-256", "SHA-512" ],
                  "type" : "IKEv2IPsecProposal",
                  "description" : "IKEv2 IPsec object description"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/IKEv2IPsecProposal"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/ikev2ipsecproposals/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the IKEv2 IPSec Proposal associated with the specified ID. If no ID is specified for a GET, retrieves list of all IKEv2 IPSec Proposal objects.**",
        "operationId" : "getIKEv2IPsecProposal",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for IKEv2 IPSec Proposal object.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/IKEv2IPsecProposal"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/object/ikev2ipsecproposals/ikev2ipsecproposalUUID ( Get ikev1 ipsec proposal object by id )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/ikev2ipsecproposals/ikev2ipsecproposalUUID"
                  },
                  "encryptionAlgorithms" : [ "3DES", "AES-192" ],
                  "integrityAlgorithms" : [ "SHA-256", "SHA-512" ],
                  "name" : "ikev2ipsecproposal-1",
                  "description" : "IKEv2 IPsec Proposal object description",
                  "id" : "ikev2ipsecproposalUUID",
                  "type" : "IKEv2IPsecProposal"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the IKEv2 IPSec Proposal associated with the specified ID. If no ID is specified for a GET, retrieves list of all IKEv2 IPSec Proposal objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateIKEv2IPsecProposal",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for IKEv2 IPSec Proposal object.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of IKEv2 IPSec Proposal object.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/IKEv2IPsecProposal"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/IKEv2IPsecProposal"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/DomainUUID/object/ikev2ipsecproposals/ikev2ipsecproposalUUID ( PUT method for IKEv2 IPsec Proposal )" : {
                  "name" : "ikev2ipsecproposal-test-1",
                  "id" : "ikev2ipsecproposalUUID",
                  "encryptionAlgorithms" : [ "3DES" ],
                  "integrityAlgorithms" : [ "SHA-256" ],
                  "type" : "IKEv2IPsecProposal",
                  "description" : "IKEv2 IPsec object description"
                },
                "Response Example 1 :PUT /fmc_config/v1/domain/DomainUUID/object/ikev2ipsecproposals/ikev2ipsecproposalUUID ( PUT method for IKEv2 IPsec Proposal )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/object/ikev2ipsecproposals/ikev2ipsecproposalUUID",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/object/ikev2ipsecproposals"
                  },
                  "name" : "ikev2ipsecproposal-test-1",
                  "id" : "ikev2ipsecproposalUUID",
                  "encryptionAlgorithms" : [ "3DES" ],
                  "integrityAlgorithms" : [ "SHA-256" ],
                  "type" : "IKEv2IPsecProposal",
                  "description" : "IKEv1 IPsec object description"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/IKEv2IPsecProposal"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the IKEv2 IPSec Proposal associated with the specified ID. If no ID is specified for a GET, retrieves list of all IKEv2 IPSec Proposal objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteIKEv2IPsecProposal",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for IKEv2 IPSec Proposal object.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/IKEv2IPsecProposal"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /fmc_config/v1/domain/DomainUUID/object/ikev2ipsecproposals/ikev2ipsecproposalUUID ( DELETE method for IKEv2 IPsec Proposal )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/object/ikev2ipsecproposals/ikev2ipsecproposalUUID",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/object/ikev2ipsecproposals"
                  },
                  "name" : "ikev2ipsecproposal-test-1",
                  "id" : "ikev2ipsecproposalUUID",
                  "encryptionAlgorithms" : [ "3DES", "AES-192" ],
                  "integrityAlgorithms" : [ "SHA-256", "SHA-512" ],
                  "type" : "IKEv2IPsecProposal",
                  "description" : "IKEv2 IPsec object description"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/ikev2policies" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the IKEv2 object associated with the specified ID. If no ID is specified for a GET, retrieves list of all IKEv2 monitor objects.**",
        "operationId" : "getAllIkev2PolicyObject",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Ikev2PolicyObjectListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/domainUUID/object/ikev2policies?expanded=true ( Get all paginated Ikev2 objects with expanded set to true )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/default/object/ikev2policies?expanded=true"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "https://<fmc_url>/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/object/ikev2policies/005056A9-5C7D-0ed3-0000-000000000400"
                    },
                    "priority" : 10,
                    "type" : "Ikev2Policy",
                    "lifetimeInSeconds" : 86400,
                    "encryptionAlgorithms" : [ "AES-GCM", "AES-GCM-192", "AES-GCM-256" ],
                    "integrityAlgorithms" : [ "NULL" ],
                    "prfIntegrityAlgorithms" : [ "SHA", "SHA-256", "SHA-384", "SHA-512" ],
                    "diffieHellmanGroups" : [ 5, 14, 19, 20, 21 ],
                    "name" : "AES-GCM-NULL-SHA",
                    "description" : " ",
                    "id" : "005056A9-5C7D-0ed3-0000-000000000400"
                  }, {
                    "links" : {
                      "self" : "https://<fmc_url>/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/object/ikev2policies/005056A9-5C7D-0ed3-0000-000000000401"
                    },
                    "priority" : 20,
                    "type" : "Ikev2Policy",
                    "lifetimeInSeconds" : 86400,
                    "encryptionAlgorithms" : [ "AES", "AES-192", "AES-256" ],
                    "integrityAlgorithms" : [ "SHA", "SHA-256", "SHA-384", "SHA-512" ],
                    "prfIntegrityAlgorithms" : [ "SHA", "SHA-256", "SHA-384", "SHA-512" ],
                    "diffieHellmanGroups" : [ 5, 14, 20, 21, 24 ],
                    "name" : "AES-SHA-SHA",
                    "description" : " ",
                    "id" : "005056A9-5C7D-0ed3-0000-000000000401"
                  }, {
                    "links" : {
                      "self" : "https://<fmc_url>/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/object/ikev2policies/005056A9-5C7D-0ed3-0000-081604378664"
                    },
                    "priority" : 10,
                    "type" : "Ikev2Policy",
                    "lifetimeInSeconds" : 86400,
                    "encryptionAlgorithms" : [ "AES-GCM", "AES-GCM-192", "AES-GCM-256" ],
                    "integrityAlgorithms" : [ "NULL" ],
                    "prfIntegrityAlgorithms" : [ "SHA", "SHA-256", "SHA-384", "SHA-512" ],
                    "diffieHellmanGroups" : [ 5, 14, 19, 20, 21 ],
                    "name" : "api_ike2",
                    "description" : " ",
                    "id" : "005056A9-5C7D-0ed3-0000-081604378664"
                  }, {
                    "links" : {
                      "self" : "https://<fmc_url>/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/object/ikev2policies/005056A9-5C7D-0ed3-0000-000000000402"
                    },
                    "priority" : 80,
                    "type" : "Ikev2Policy",
                    "lifetimeInSeconds" : 86400,
                    "encryptionAlgorithms" : [ "DES" ],
                    "integrityAlgorithms" : [ "SHA" ],
                    "prfIntegrityAlgorithms" : [ "SHA" ],
                    "diffieHellmanGroups" : [ 5 ],
                    "name" : "DES-SHA-SHA",
                    "description" : " ",
                    "id" : "005056A9-5C7D-0ed3-0000-000000000402"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 4,
                    "count" : 4,
                    "pages" : 1
                  },
                  "expectStatus" : 200,
                  "expectHeaderContains" : [ {
                    "content-type" : "application/json"
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the IKEv2 object associated with the specified ID. If no ID is specified for a GET, retrieves list of all IKEv2 monitor objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createIkev2PolicyObject",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of IKEv2 object.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Ikev2PolicyObject"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/Ikev2PolicyObject"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /fmc_config/v1/domain/domainUUID/object/ikev2policies ( POST to create a Ikev2 object )" : {
                  "priority" : 12,
                  "type" : "Ikev2Policy",
                  "lifetimeInSeconds" : 86400,
                  "encryptionAlgorithms" : [ "AES-GCM", "AES-GCM-192", "AES-GCM-256" ],
                  "integrityAlgorithms" : [ "NULL" ],
                  "prfIntegrityAlgorithms" : [ "SHA", "SHA-256", "SHA-384", "SHA-512" ],
                  "diffieHellmanGroups" : [ 5, 14, 19, 20, 21 ],
                  "name" : "api_ike33",
                  "description" : " "
                },
                "Response Example 1 :POST /fmc_config/v1/domain/domainUUID/object/ikev2policies ( POST to create a Ikev2 object )" : {
                  "links" : {
                    "self" : "https://<fmc_url>/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/object/ikev2policies/005056A9-5C7D-0ed3-0000-081604379456"
                  },
                  "priority" : 12,
                  "type" : "Ikev2Policy",
                  "lifetimeInSeconds" : 86400,
                  "encryptionAlgorithms" : [ "AES-GCM", "AES-GCM-192", "AES-GCM-256" ],
                  "integrityAlgorithms" : [ "NULL" ],
                  "prfIntegrityAlgorithms" : [ "SHA", "SHA-256", "SHA-384", "SHA-512" ],
                  "diffieHellmanGroups" : [ 5, 14, 19, 20, 21 ],
                  "name" : "api_ike33",
                  "description" : " ",
                  "id" : "005056A9-5C7D-0ed3-0000-081604379456",
                  "metadata" : {
                    "timestamp" : 0,
                    "lastUser" : {
                      "name" : "gp1"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "e276abec-e0f2-11e3-8169-6d9ed49b625f"
                    }
                  }
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/Ikev2PolicyObject"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/ikev2policies/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the IKEv2 object associated with the specified ID. If no ID is specified for a GET, retrieves list of all IKEv2 monitor objects.**",
        "operationId" : "getIkev2PolicyObject",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for IKEv2 monitor object.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Ikev2PolicyObject"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/domainUUID/object/ikev2policies ( null )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/default/object/ikev2policies?offset=0&limit=2"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/default/object/ikev2policies/ikev2Object1UUID"
                    },
                    "type" : "Ikev2Policy",
                    "id" : "ikev2Object1UUID",
                    "name" : "ikev2_test"
                  }, {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/default/object/ikev2policies/ikev2Object2UUID"
                    },
                    "type" : "Ikev2Policy",
                    "id" : "ikev2Object2UUID",
                    "name" : "ikev2_test2"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the IKEv2 object associated with the specified ID. If no ID is specified for a GET, retrieves list of all IKEv2 monitor objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateIkev2PolicyObject",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for IKEv2 monitor object.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of IKEv2 object.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Ikev2PolicyObject"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Ikev2PolicyObject"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/domainUUID/object/ikev2policies/ikev2Object3UUID ( PUT to update a Ikev2 object )" : {
                  "id" : "005056A9-5C7D-0ed3-0000-081604379285",
                  "priority" : 12,
                  "type" : "Ikev2Policy",
                  "lifetimeInSeconds" : 86400,
                  "encryptionAlgorithms" : [ "AES-GCM", "AES-GCM-192", "AES-GCM-256" ],
                  "integrityAlgorithms" : [ "NULL" ],
                  "prfIntegrityAlgorithms" : [ "SHA", "SHA-256", "SHA-384", "SHA-512" ],
                  "diffieHellmanGroups" : [ 5, 14, 19, 20, 21 ],
                  "name" : "api_ike22",
                  "description" : " "
                },
                "Response Example 1 :PUT /fmc_config/v1/domain/domainUUID/object/ikev2policies/ikev2Object3UUID ( PUT to update a Ikev2 object )" : {
                  "links" : {
                    "self" : "https://<fmc_url>/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/object/ikev2policies/005056A9-5C7D-0ed3-0000-081604379285"
                  },
                  "priority" : 12,
                  "type" : "Ikev2Policy",
                  "lifetimeInSeconds" : 86400,
                  "encryptionAlgorithms" : [ "AES-GCM", "AES-GCM-192", "AES-GCM-256" ],
                  "integrityAlgorithms" : [ "NULL" ],
                  "prfIntegrityAlgorithms" : [ "SHA", "SHA-256", "SHA-384", "SHA-512" ],
                  "diffieHellmanGroups" : [ 5, 14, 19, 20, 21 ],
                  "name" : "api_ike22",
                  "description" : " ",
                  "id" : "005056A9-5C7D-0ed3-0000-081604379285",
                  "metadata" : {
                    "timestamp" : 0,
                    "lastUser" : {
                      "name" : "gp1"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "e276abec-e0f2-11e3-8169-6d9ed49b625f"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/Ikev2PolicyObject"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the IKEv2 object associated with the specified ID. If no ID is specified for a GET, retrieves list of all IKEv2 monitor objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteIkev2PolicyObject",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for IKEv2 monitor object.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Ikev2PolicyObject"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /fmc_config/v1/domain/DomainUUID/object/ikev2policies/ikev2MonitorObjectUUID ( DELETE method for Ikev2 Monitor Object )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/object/ikev2policies/ikev2ObjectUUID"
                  },
                  "priority" : 12,
                  "type" : "Ikev2Policy",
                  "lifetimeInSeconds" : 86400,
                  "encryptionAlgorithms" : [ "AES-GCM", "AES-GCM-192", "AES-GCM-256" ],
                  "integrityAlgorithms" : [ "NULL" ],
                  "prfIntegrityAlgorithms" : [ "SHA", "SHA-256", "SHA-384", "SHA-512" ],
                  "diffieHellmanGroups" : [ 5, 14, 19, 20, 21 ],
                  "name" : "api_ike22",
                  "id" : "005056A9-5C7D-0ed3-0000-081604379285",
                  "metadata" : {
                    "timestamp" : 1517283234730,
                    "lastUser" : {
                      "name" : "gp1"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "e276abec-e0f2-11e3-8169-6d9ed49b625f"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/interfacegroups" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the Interface group objects associated with the specified ID. If no ID is specified for a GET, retrieves list of all interface group objects.**",
        "operationId" : "getAllInterfaceGroupObject",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/InterfaceGroupObjectListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/domainUUID/object/interfacegroups ( Get all paginated interfacegroup  objects )" : {
                  "links" : {
                    "self" : "https://example.cisco.com/api/fmc_config/v1/domain/default/object/interfacegroups?offset=0&limit=2"
                  },
                  "items" : [ {
                    "name" : "Test2",
                    "id" : "Interface-group-UUID-2",
                    "type" : "InterfaceGroup",
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/default/object/interfacegroups/Interface-group-UUID-2",
                      "parent" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/interfaceobjects/"
                    }
                  }, {
                    "name" : "Test1",
                    "id" : "Interface-group-UUID-3",
                    "type" : "InterfaceGroup",
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/default/object/interfacegroups/Interface-group-UUID-3",
                      "parent" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/interfaceobjects/"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/domainUUID/object/interfacegroups?expanded=true ( Get all paginated interfacegroup  objects expanded=true )" : {
                  "links" : {
                    "self" : "https://vienna.cisco.com/api/fmc_config/v1/domain/default/object/interfacegroups?offset=0&limit=2"
                  },
                  "items" : [ {
                    "name" : "Test2",
                    "id" : "Interface-group-UUID-2",
                    "type" : "InterfaceGroup",
                    "links" : {
                      "self" : "https://vienna.cisco.com/api/fmc_config/v1/domain/default/object/interfacegroups/Interface-group-UUID-2",
                      "parent" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/interfaceobjects/"
                    },
                    "metadata" : {
                      "readOnly" : {
                        "state" : true
                      },
                      "timestamp" : 1459973987,
                      "lastUser" : {
                        "name" : "admin",
                        "id" : "User-UUID",
                        "type" : "user"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUUID",
                        "type" : "domain"
                      },
                      "parentType" : "InterfaceObject"
                    },
                    "interfaceMode" : "ASA",
                    "interfaces" : [ {
                      "type" : "FPPhysicalInterface",
                      "id" : "Intf-UUID-3",
                      "name" : "outside"
                    }, {
                      "type" : "FPPhysicalInterface",
                      "id" : "Intf-UUID-4",
                      "name" : "inside"
                    } ]
                  }, {
                    "name" : "Test1",
                    "id" : "Interface-group-UUID-3",
                    "type" : "InterfaceGroup",
                    "links" : {
                      "self" : "https://vienna.cisco.com/api/fmc_config/v1/domain/default/object/interfacegroups/Interface-group-UUID-3",
                      "parent" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/interfaceobjects/"
                    },
                    "metadata" : {
                      "readOnly" : {
                        "state" : true
                      },
                      "timestamp" : 1459973857,
                      "lastUser" : {
                        "name" : "admin",
                        "id" : "User-UUID",
                        "type" : "user"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUUID",
                        "type" : "domain"
                      },
                      "parentType" : "InterfaceObject"
                    },
                    "interfaceMode" : "INLINE",
                    "interfaces" : [ {
                      "type" : "FPPhysicalInterface",
                      "id" : "Intf-UUID-5",
                      "name" : "s1p2"
                    }, {
                      "type" : "FPPhysicalInterface",
                      "id" : "Intf-UUID-6",
                      "name" : "s1p1"
                    } ]
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the Interface group objects associated with the specified ID. If no ID is specified for a GET, retrieves list of all interface group objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createMultipleInterfaceGroupObject",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The input interface group object model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/InterfaceGroupObject"
          }
        }, {
          "name" : "bulk",
          "in" : "query",
          "description" : "Enables bulk create for interface group objects.",
          "required" : false,
          "type" : "boolean"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/InterfaceGroupObject"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /fmc_config/v1/domain/domainUUID/object/interfacegroups ( POST method for interface group object )" : {
                  "type" : "InterfaceGroup",
                  "name" : "InterfaceGroupObject5",
                  "interfaceMode" : "INLINE",
                  "interfaces" : [ {
                    "type" : "PhysicalInterface",
                    "id" : "Intf-UUID-1",
                    "name" : "eth1"
                  }, {
                    "type" : "PhysicalInterface",
                    "id" : "Intf-UUID-2",
                    "name" : "eth2"
                  } ]
                },
                "Request example 2 : POST /fmc_config/v1/domain/domainUUID/object/interfacegroups?bulk=true ( bulk POST method for interface groups )" : [ {
                  "type" : "InterfaceGroup",
                  "name" : "IG1",
                  "interfaceMode" : "ROUTED",
                  "interfaces" : [ {
                    "type" : "PhysicalInterface",
                    "id" : "Intf-UUID-1",
                    "name" : "eth1"
                  }, {
                    "type" : "PhysicalInterface",
                    "id" : "Intf-UUID-2",
                    "name" : "eth2"
                  } ]
                }, {
                  "type" : "InterfaceGroup",
                  "name" : "IG2",
                  "interfaceMode" : "ROUTED",
                  "interfaces" : [ {
                    "type" : "PhysicalInterface",
                    "id" : "Intf-UUID-3",
                    "name" : "eth3"
                  }, {
                    "type" : "PhysicalInterface",
                    "id" : "Intf-UUID-4",
                    "name" : "eth4"
                  } ]
                } ],
                "Response Example 1 :POST /fmc_config/v1/domain/domainUUID/object/interfacegroups ( POST method for interface group object )" : {
                  "name" : "InterfaceGroupObject5",
                  "id" : "Interface-group-UUID-1",
                  "type" : "InterfaceGroup",
                  "links" : {
                    "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/interfacegroups/Interface-group-UUID-1",
                    "parent" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/interfaceobjects/"
                  },
                  "metadata" : {
                    "timestamp" : 1459973987,
                    "readOnly" : {
                      "state" : true
                    },
                    "domain" : {
                      "id" : "domainUUID",
                      "type" : "Domain",
                      "name" : "Global"
                    },
                    "lastUser" : {
                      "name" : "admin",
                      "id" : "User-UUID",
                      "type" : "User"
                    },
                    "parentType" : "InterfaceObject"
                  },
                  "interfaceMode" : "INLINE",
                  "interfaces" : [ {
                    "type" : "PhysicalInterface",
                    "id" : "Intf-UUID-1",
                    "name" : "eth1"
                  }, {
                    "type" : "PhysicalInterface",
                    "id" : "Intf-UUID-2",
                    "name" : "eth2"
                  } ]
                },
                "Response Example 2 :POST /fmc_config/v1/domain/domainUUID/object/interfacegroups?bulk=true ( bulk POST method for interface groups )" : {
                  "links" : {
                    "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/interfacegroups?bulk=true"
                  },
                  "items" : [ {
                    "name" : "IG1",
                    "id" : "IG1_UUID",
                    "type" : "InterfaceGroup",
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/interfacegroups/IG1_UUID",
                      "parent" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/interfaceobjects"
                    },
                    "metadata" : {
                      "readOnly" : {
                        "state" : true
                      },
                      "parentType" : "InterfaceObject",
                      "timestamp" : 1518506949,
                      "lastUser" : {
                        "name" : "admin",
                        "id" : "User-UUID",
                        "type" : "user"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUUID",
                        "type" : "domain"
                      }
                    },
                    "interfaces" : [ {
                      "type" : "PhysicalInterface",
                      "id" : "Intf-UUID-1",
                      "name" : "eth1"
                    }, {
                      "type" : "PhysicalInterface",
                      "id" : "Intf-UUID-2",
                      "name" : "eth2"
                    } ],
                    "interfaceMode" : "ROUTED"
                  }, {
                    "name" : "IG2",
                    "id" : "IG2_UUID",
                    "type" : "InterfaceGroup",
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/interfacegroups/IG2_UUID",
                      "parent" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/interfaceobjects"
                    },
                    "metadata" : {
                      "readOnly" : {
                        "state" : true
                      },
                      "parentType" : "InterfaceObject",
                      "timestamp" : 1518506949,
                      "lastUser" : {
                        "name" : "admin",
                        "id" : "User-UUID",
                        "type" : "user"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUUID",
                        "type" : "domain"
                      }
                    },
                    "interfaces" : [ {
                      "type" : "PhysicalInterface",
                      "id" : "Intf-UUID-3",
                      "name" : "eth3"
                    }, {
                      "type" : "PhysicalInterface",
                      "id" : "Intf-UUID-4",
                      "name" : "eth4"
                    } ],
                    "interfaceMode" : "ROUTED"
                  } ]
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/InterfaceGroupObject"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/interfacegroups/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the Interface group objects associated with the specified ID. If no ID is specified for a GET, retrieves list of all interface group objects.**",
        "operationId" : "getInterfaceGroupObject",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the object.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "groupByDevice",
          "in" : "query",
          "description" : "Set true to group interfaces by device and return as <code>devices</code> attribute, instead of <code>interfaces</code>.",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/InterfaceGroupObject"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/domainUUID/object/interfacegroups/Interface-group-UUID-1 ( GET method for interface group object by UUID )" : {
                  "name" : "InterfaceGroupObject5",
                  "id" : "Interface-group-UUID-1",
                  "type" : "InterfaceGroup",
                  "links" : {
                    "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/interfacegroups/Interface-group-UUID-1",
                    "parent" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/interfaceobjects/"
                  },
                  "metadata" : {
                    "timestamp" : 1459973987,
                    "readOnly" : {
                      "state" : true
                    },
                    "domain" : {
                      "id" : "domainUUID",
                      "type" : "Domain",
                      "name" : "Global"
                    },
                    "lastUser" : {
                      "name" : "admin",
                      "id" : "User-UUID",
                      "type" : "User"
                    }
                  },
                  "interfaceMode" : "INLINE",
                  "interfaces" : [ {
                    "type" : "FPPhysicalInterface",
                    "id" : "Intf-UUID-1",
                    "name" : "eth1"
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the Interface group objects associated with the specified ID. If no ID is specified for a GET, retrieves list of all interface group objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateInterfaceGroupObject",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the object.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The input interface group object model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/InterfaceGroupObject"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/InterfaceGroupObject"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/domainUUID/object/interfacegroups/Interface-group-UUID-1 ( PUT method for interface group object )" : {
                  "type" : "InterfaceGroup",
                  "name" : "InterfaceGroupObject5",
                  "id" : "Interface-group-UUID-1",
                  "interfaceMode" : "INLINE",
                  "interfaces" : [ {
                    "type" : "FPPhysicalInterface",
                    "id" : "Intf-UUID-1",
                    "name" : "eth1"
                  } ]
                },
                "Response Example 1 :PUT /fmc_config/v1/domain/domainUUID/object/interfacegroups/Interface-group-UUID-1 ( PUT method for interface group object )" : {
                  "name" : "InterfaceGroupObject5",
                  "id" : "Interface-group-UUID-1",
                  "type" : "InterfaceGroup",
                  "links" : {
                    "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/interfacegroups/Interface-group-UUID-1",
                    "parent" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/interfaceobjects/"
                  },
                  "metadata" : {
                    "timestamp" : 1459973987,
                    "readOnly" : {
                      "state" : true
                    },
                    "domain" : {
                      "id" : "domainUUID",
                      "type" : "Domain",
                      "name" : "Global"
                    },
                    "lastUser" : {
                      "name" : "admin",
                      "id" : "User-UUID",
                      "type" : "User"
                    },
                    "parentType" : "InterfaceObject"
                  },
                  "interfaceMode" : "INLINE",
                  "interfaces" : [ {
                    "type" : "FPPhysicalInterface",
                    "id" : "Intf-UUID-1",
                    "name" : "eth1",
                    "deviceId" : "6aea9a46-d256-11e5-9f49-a0e56e5a9137"
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/InterfaceGroupObject"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the Interface group objects associated with the specified ID. If no ID is specified for a GET, retrieves list of all interface group objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteInterfaceGroupObject",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the object.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/InterfaceGroupObject"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /fmc_config/v1/domain/domainUUID/object/interfacegroups/Interface-group-UUID-1 ( DELETE method for interface group object )" : {
                  "name" : "InterfaceGroupObject5",
                  "id" : "Interface-group-UUID-1",
                  "type" : "InterfaceGroup",
                  "links" : {
                    "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/interfacegroups/Interface-group-UUID-1",
                    "parent" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/interfaceobjects/"
                  },
                  "metadata" : {
                    "timestamp" : 1459973987,
                    "readOnly" : {
                      "state" : true
                    },
                    "domain" : {
                      "id" : "domainUUID",
                      "type" : "Domain",
                      "name" : "Global"
                    },
                    "lastUser" : {
                      "name" : "admin",
                      "id" : "User-UUID",
                      "type" : "User"
                    },
                    "parentType" : "InterfaceObject"
                  },
                  "interfaceMode" : "INLINE",
                  "interfaces" : [ {
                    "type" : "FPPhysicalInterface",
                    "id" : "Intf-UUID-1",
                    "name" : "eth1"
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/interfaceobjects" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves list of all the interface objects both security zones and interface groups.**",
        "operationId" : "getAllInterfaceObject",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/InterfaceObjectListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/domainUUID/object/interfaceobjects ( Get all paginated interface  objects )" : {
                  "links" : {
                    "self" : "https://example.cisco.com/api/fmc_config/v1/domain/default/object/interfaceobjects?offset=0&limit=2"
                  },
                  "items" : [ {
                    "name" : "Test2",
                    "id" : "Interface-obj-UUID-2",
                    "type" : "InterfaceGroup",
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/default/object/interfaceobjects/Interface-obj-UUID-2"
                    }
                  }, {
                    "name" : "Test1",
                    "id" : "Interface-obj-UUID-3",
                    "type" : "InterfaceGroup",
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/default/object/interfacegroups/Interface-obj-UUID-3",
                      "parent" : "https://example.cisco.com/api/fmc_config/v1/domain/default/object/interfaceobjects/"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/domainUUID/object/interfaceobjects?expanded=true ( Get all paginated interfaceobject  objects expanded=true )" : {
                  "links" : {
                    "self" : "https://vienna.cisco.com/api/fmc_config/v1/domain/default/object/interfaceobjects?offset=0&limit=2"
                  },
                  "items" : [ {
                    "name" : "Test2",
                    "id" : "Interface-obj-UUID-2",
                    "type" : "InterfaceGroup",
                    "links" : {
                      "self" : "https://vienna.cisco.com/api/fmc_config/v1/domain/default/object/interfacegroups/Interface-obj-UUID-2",
                      "parent" : "https://example.cisco.com/api/fmc_config/v1/domain/default/object/interfaceobjects/"
                    },
                    "metadata" : {
                      "readOnly" : {
                        "state" : true
                      },
                      "timestamp" : 1459973987,
                      "lastUser" : {
                        "name" : "admin",
                        "id" : "User-UUID",
                        "type" : "user"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUUID",
                        "type" : "domain"
                      }
                    },
                    "interfaceMode" : "ASA",
                    "interfaces" : [ {
                      "type" : "FPPhysicalInterface",
                      "id" : "Intf-UUID-3",
                      "name" : "outside"
                    }, {
                      "type" : "FPPhysicalInterface",
                      "id" : "Intf-UUID-4",
                      "name" : "inside"
                    } ]
                  }, {
                    "name" : "Test1",
                    "id" : "Interface-obj-UUID-3",
                    "type" : "InterfaceGroup",
                    "links" : {
                      "self" : "https://vienna.cisco.com/api/fmc_config/v1/domain/default/object/interfacegroups/Interface-obj-UUID-3",
                      "parent" : "https://example.cisco.com/api/fmc_config/v1/domain/default/object/interfaceobjects/"
                    },
                    "metadata" : {
                      "readOnly" : {
                        "state" : true
                      },
                      "timestamp" : 1459973857,
                      "lastUser" : {
                        "name" : "admin",
                        "id" : "User-UUID",
                        "type" : "user"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUUID",
                        "type" : "domain"
                      }
                    },
                    "interfaceMode" : "INLINE",
                    "interfaces" : [ {
                      "type" : "FPPhysicalInterface",
                      "id" : "Intf-UUID-5",
                      "name" : "s1p2"
                    }, {
                      "type" : "FPPhysicalInterface",
                      "id" : "Intf-UUID-6",
                      "name" : "s1p1"
                    } ]
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/interfaceobjects/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves list of all the interface objects both security zones and interface groups.**",
        "operationId" : "getInterfaceObject",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the object.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/InterfaceObject"
            },
            "examples" : { }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/intrusionrulegroups" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies Snort 3 intrusion rulegroup associated with the specified ID. If no ID is specified for a GET, retrieves list of all Snort 3 intrusion group objects.**",
        "operationId" : "getAllSnort3IntrusionRuleGroupsObject",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "Value can be any of the formats (including quotes): <code>\"name:Browser/Firefox\"</code> or <code>\"currentSecurityLevel:DISABLED\"</code> or <code>\"showonlyparents:{true/false}\"</code> or <code>\"includeCount:true\"</code>.",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Snort3IntrusionRuleGroupsObjectListContainer"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies Snort 3 intrusion rulegroup associated with the specified ID. If no ID is specified for a GET, retrieves list of all Snort 3 intrusion group objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createMultipleSnort3IntrusionRuleGroupsObject",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of Snort 3 rulegroup.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Snort3IntrusionRuleGroupsObject"
          }
        }, {
          "name" : "bulk",
          "in" : "query",
          "description" : "This parameter specifies that bulk operation is being used in the query. This parameter is required for bulk Snort 3 rulegroup operations.",
          "required" : false,
          "type" : "boolean"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/Snort3IntrusionRuleGroupsObject"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /fmc_config/v1/domain/DomainUUID/object/intrusionrulegroups ( Success: POST method for Snort3IntrusionRuleGroupsObject with minimum required fields )" : {
                  "description" : "Custom Intrusion Rule group1",
                  "name" : "Custom RuleGroup 1",
                  "type" : "IntrusionRuleGroup"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/Snort3IntrusionRuleGroupsObject"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/intrusionrulegroups/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies Snort 3 intrusion rulegroup associated with the specified ID. If no ID is specified for a GET, retrieves list of all Snort 3 intrusion group objects.**",
        "operationId" : "getSnort3IntrusionRuleGroupsObject",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier of a Snort 3 intrusion rulegroup.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Snort3IntrusionRuleGroupsObject"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/domainUUID/object/intrusionrulegroups ( Success: Test GET method for Snort3IntrusionRuleGroupsObjectObject )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/object/intrusionrulegroups?offset=0&limit=2"
                  },
                  "items" : [ {
                    "name" : "Group1",
                    "id" : "id_of_rule_group",
                    "isSystemDefined" : false,
                    "description" : "A description about Group1 goes here"
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies Snort 3 intrusion rulegroup associated with the specified ID. If no ID is specified for a GET, retrieves list of all Snort 3 intrusion group objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateSnort3IntrusionRuleGroupsObject",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier of a Snort 3 intrusion rulegroup.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of Snort 3 rulegroup.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Snort3IntrusionRuleGroupsObject"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Snort3IntrusionRuleGroupsObject"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/domainUUID/object/intrusionrulegroups/Snort3IntrusionRuleGroupsObjectObject-UUID ( Success: Test PUT method for Snort3IntrusionRuleGroupsObjectObject )" : {
                  "description" : "Updated Custom Intrusion Rule group1",
                  "name" : "Updated Custom RuleGroup 1",
                  "type" : "IntrusionRuleGroup"
                },
                "Request example 2 : PUT /fmc_config/v1/domain/domainUUID/object/intrusionrulegroups?bulk=true ( Success: Test Bulk PUT method for Snort3IntrusionRuleGroupsObjectObject )" : [ {
                  "description" : "Updated Custom Intrusion Rule group1",
                  "name" : "Updated Custom RuleGroup 1",
                  "type" : "IntrusionRuleGroup"
                }, {
                  "description" : "Updated Custom Intrusion Rule group2",
                  "name" : "Updated Custom RuleGroup 2",
                  "type" : "IntrusionRuleGroup"
                } ]
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/Snort3IntrusionRuleGroupsObject"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies Snort 3 intrusion rulegroup associated with the specified ID. If no ID is specified for a GET, retrieves list of all Snort 3 intrusion group objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteSnort3IntrusionRuleGroupsObject",
        "parameters" : [ {
          "name" : "cascadeDeleteOrphanedRules",
          "in" : "query",
          "description" : "Boolean value for deleting orphan rule. Mandatory if custom rulegroup has unique/unshared rules which becomes orphan after custom rule Group delete.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier of a Snort 3 intrusion rulegroup.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Snort3IntrusionRuleGroupsObject"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/intrusionrules" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies Snort 3 intrusion rule associated with the specified ID. If no ID is specified for a GET, retrieves list of all Snort 3 intrusion rules.**",
        "operationId" : "getAllSnort3IPSRulesObject",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "Value can be any of the formats (including quotes): <code>\"gid:123;sid:456\"</code> or <code>\"overrides:true;ipspolicy:{uuid1,uuid2,...}</code> or <code>\"fts:789\"</code>. (TODO: describe all the keys). <code>ipspolicy</code> is a comma-separated list of Snort 3 Intrusion Policy IDs.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting parameters to be provided e.g. sid,-sid,gid,-gid,msg,-msg.",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Snort3IPSRulesObjectListContainer"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies Snort 3 intrusion rule associated with the specified ID. If no ID is specified for a GET, retrieves list of all Snort 3 intrusion rules. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createMultipleSnort3IPSRulesObject",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of Snort 3 intrusion rule.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Snort3IPSRulesObject"
          }
        }, {
          "name" : "bulk",
          "in" : "query",
          "description" : "This parameter specifies that bulk operation is being used in the query. This parameter is required for bulk Snort 3 intrusion rule operations.",
          "required" : false,
          "type" : "boolean"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/Snort3IPSRulesObject"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /fmc_config/v1/domain/DomainUUID/object/intrusionrules ( Success: POST method for Snort3IPSRulesObject with minimum required fields )" : {
                  "type" : "IntrusionRule",
                  "ruleData" : "alert icmp any any -> any any ( sid:10000301; gid:2000; msg:\"CUSTOM RULE1\"; classtype:icmp-event; rev:1; )",
                  "ruleGroups" : [ {
                    "name" : "CUSTOM_RULES",
                    "id" : "0050568A-7769-0ed3-0000-008589940030",
                    "type" : "IntrusionRuleGroup"
                  } ]
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/Snort3IPSRulesObject"
            },
            "examples" : { }
          }
        }
      },
      "put" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies Snort 3 intrusion rule associated with the specified ID. If no ID is specified for a GET, retrieves list of all Snort 3 intrusion rules. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateMultipleSnort3IPSRulesObject",
        "parameters" : [ {
          "name" : "bulk",
          "in" : "query",
          "description" : "This parameter specifies that bulk operation is being used in the query. This parameter is required for bulk Snort 3 intrusion rule operations.",
          "required" : true,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of Snort 3 intrusion rule.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Snort3IPSRulesObject"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Snort3IPSRulesObject"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/domainUUID/object/intrusionrules/Snort3IPSRulesObject-UUID ( Success: Test PUT method for Snort3IPSRulesObject )" : {
                  "type" : "IntrusionRule",
                  "id" : "0050568A-7769-0ed3-0000-008589940125",
                  "name" : "2000:10000301",
                  "gid" : 2000,
                  "sid" : 10000301,
                  "revision" : 1,
                  "isSystemDefined" : false,
                  "msg" : "CUSTOM RULE1",
                  "ruleData" : "alert icmp any any -> any any ( sid:10000301; gid:2000; msg:\"CUSTOM RULE1\"; classtype:icmp-event; rev:1; )",
                  "ruleAction" : [ {
                    "defaultState" : "DISABLE",
                    "policy" : {
                      "name" : "ips3",
                      "id" : "0050568A-7769-0ed3-0000-008589939827",
                      "type" : "IntrusionPolicy",
                      "isSystemDefined" : false
                    }
                  }, {
                    "defaultState" : "DISABLE",
                    "policy" : {
                      "name" : "IPS",
                      "id" : "0050568A-7769-0ed3-0000-008589936387",
                      "type" : "IntrusionPolicy",
                      "isSystemDefined" : false
                    }
                  }, {
                    "defaultState" : "DISABLE",
                    "policy" : {
                      "name" : "ips2",
                      "id" : "0050568A-7769-0ed3-0000-008589939444",
                      "type" : "IntrusionPolicy",
                      "isSystemDefined" : false
                    }
                  }, {
                    "defaultState" : "DISABLE",
                    "policy" : {
                      "name" : "Maximum Detection",
                      "id" : "3c7d3f87-c264-504e-9a16-4a9cd5fc502c",
                      "type" : "IntrusionPolicy",
                      "isSystemDefined" : true
                    }
                  }, {
                    "defaultState" : "DISABLE",
                    "policy" : {
                      "name" : "Security Over Connectivity",
                      "id" : "0f9e8294-d03d-5b1f-a70c-549ca9213405",
                      "type" : "IntrusionPolicy",
                      "isSystemDefined" : true
                    }
                  }, {
                    "defaultState" : "DISABLE",
                    "policy" : {
                      "name" : "Balanced Security and Connectivity",
                      "id" : "6c66b83c-bc23-55b6-879d-c4d847443503",
                      "type" : "IntrusionPolicy",
                      "isSystemDefined" : true
                    }
                  }, {
                    "defaultState" : "DISABLE",
                    "policy" : {
                      "name" : "Connectivity Over Security",
                      "id" : "4cba6c52-6a07-54cd-a324-5bb7be06a484",
                      "type" : "IntrusionPolicy",
                      "isSystemDefined" : true
                    }
                  }, {
                    "defaultState" : "DISABLE",
                    "policy" : {
                      "name" : "No Rules Active",
                      "id" : "ba8dc24f-f2a4-53dc-86b3-5252e5682579",
                      "type" : "IntrusionPolicy",
                      "isSystemDefined" : true
                    }
                  } ],
                  "ruleGroups" : [ {
                    "name" : "CUSTOM_RULES",
                    "id" : "0050568A-7769-0ed3-0000-008589940030",
                    "type" : "IntrusionRuleGroup"
                  } ]
                },
                "Request example 2 : PUT /fmc_config/v1/domain/domainUUID/object/intrusionrules?bulk=true ( Success: Test Bulk PUT method for Snort3IPSRulesObject )" : [ {
                  "type" : "IntrusionRule",
                  "id" : "0050568A-7769-0ed3-0000-008589940125",
                  "name" : "2000:10000301",
                  "gid" : 2000,
                  "sid" : 10000301,
                  "revision" : 1,
                  "isSystemDefined" : false,
                  "msg" : "CUSTOM RULE1",
                  "ruleData" : "alert icmp any any -> any any ( sid:10000301; gid:2000; msg:\"CUSTOM RULE1\"; classtype:icmp-event; rev:1; )",
                  "ruleAction" : [ {
                    "defaultState" : "DISABLE",
                    "policy" : {
                      "name" : "ips3",
                      "id" : "0050568A-7769-0ed3-0000-008589939827",
                      "type" : "IntrusionPolicy",
                      "isSystemDefined" : false
                    }
                  }, {
                    "defaultState" : "DISABLE",
                    "policy" : {
                      "name" : "IPS",
                      "id" : "0050568A-7769-0ed3-0000-008589936387",
                      "type" : "IntrusionPolicy",
                      "isSystemDefined" : false
                    }
                  }, {
                    "defaultState" : "DISABLE",
                    "policy" : {
                      "name" : "ips2",
                      "id" : "0050568A-7769-0ed3-0000-008589939444",
                      "type" : "IntrusionPolicy",
                      "isSystemDefined" : false
                    }
                  }, {
                    "defaultState" : "DISABLE",
                    "policy" : {
                      "name" : "Maximum Detection",
                      "id" : "3c7d3f87-c264-504e-9a16-4a9cd5fc502c",
                      "type" : "IntrusionPolicy",
                      "isSystemDefined" : true
                    }
                  }, {
                    "defaultState" : "DISABLE",
                    "policy" : {
                      "name" : "Security Over Connectivity",
                      "id" : "0f9e8294-d03d-5b1f-a70c-549ca9213405",
                      "type" : "IntrusionPolicy",
                      "isSystemDefined" : true
                    }
                  }, {
                    "defaultState" : "DISABLE",
                    "policy" : {
                      "name" : "Balanced Security and Connectivity",
                      "id" : "6c66b83c-bc23-55b6-879d-c4d847443503",
                      "type" : "IntrusionPolicy",
                      "isSystemDefined" : true
                    }
                  }, {
                    "defaultState" : "DISABLE",
                    "policy" : {
                      "name" : "Connectivity Over Security",
                      "id" : "4cba6c52-6a07-54cd-a324-5bb7be06a484",
                      "type" : "IntrusionPolicy",
                      "isSystemDefined" : true
                    }
                  }, {
                    "defaultState" : "DISABLE",
                    "policy" : {
                      "name" : "No Rules Active",
                      "id" : "ba8dc24f-f2a4-53dc-86b3-5252e5682579",
                      "type" : "IntrusionPolicy",
                      "isSystemDefined" : true
                    }
                  } ],
                  "ruleGroups" : [ {
                    "name" : "CUSTOM_RULES",
                    "id" : "0050568A-7769-0ed3-0000-008589940030",
                    "type" : "IntrusionRuleGroup"
                  } ]
                } ]
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/Snort3IPSRulesObject"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies Snort 3 intrusion rule associated with the specified ID. If no ID is specified for a GET, retrieves list of all Snort 3 intrusion rules. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteMultipleSnort3IPSRulesObject",
        "parameters" : [ {
          "name" : "bulk",
          "in" : "query",
          "description" : "This parameter specifies that bulk operation is being used in the query. This parameter is required for bulk Snort 3 intrusion rule operations.",
          "required" : true,
          "type" : "boolean"
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Value can be any of the formats (including quotes): <code>\"gid:123;sid:456\"</code> or <code>\"overrides:true;ipspolicy:{uuid1,uuid2,...}</code> or <code>\"fts:789\"</code>. (TODO: describe all the keys). <code>ipspolicy</code> is a comma-separated list of Snort 3 Intrusion Policy IDs.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Snort3IPSRulesObject"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/intrusionrules/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies Snort 3 intrusion rule associated with the specified ID. If no ID is specified for a GET, retrieves list of all Snort 3 intrusion rules.**",
        "operationId" : "getSnort3IPSRulesObject",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier of a Snort 3 intrusion rule.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Snort3IPSRulesObject"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/domainUUID/object/intrusionrules ( Success: Test GET method for Snort3IPSRulesObject )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/object/intrusionrules?offset=0&limit=2"
                  },
                  "items" : [ {
                    "name" : "Group1",
                    "id" : "id_of_rule_group",
                    "isSystemDefined" : false,
                    "description" : "A description about Group1 goes here"
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies Snort 3 intrusion rule associated with the specified ID. If no ID is specified for a GET, retrieves list of all Snort 3 intrusion rules. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateSnort3IPSRulesObject",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier of a Snort 3 intrusion rule.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of Snort 3 intrusion rule.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Snort3IPSRulesObject"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Snort3IPSRulesObject"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/domainUUID/object/intrusionrules/Snort3IPSRulesObject-UUID ( Success: Test PUT method for Snort3IPSRulesObject )" : {
                  "type" : "IntrusionRule",
                  "id" : "0050568A-7769-0ed3-0000-008589940125",
                  "name" : "2000:10000301",
                  "gid" : 2000,
                  "sid" : 10000301,
                  "revision" : 1,
                  "isSystemDefined" : false,
                  "msg" : "CUSTOM RULE1",
                  "ruleData" : "alert icmp any any -> any any ( sid:10000301; gid:2000; msg:\"CUSTOM RULE1\"; classtype:icmp-event; rev:1; )",
                  "ruleAction" : [ {
                    "defaultState" : "DISABLE",
                    "policy" : {
                      "name" : "ips3",
                      "id" : "0050568A-7769-0ed3-0000-008589939827",
                      "type" : "IntrusionPolicy",
                      "isSystemDefined" : false
                    }
                  }, {
                    "defaultState" : "DISABLE",
                    "policy" : {
                      "name" : "IPS",
                      "id" : "0050568A-7769-0ed3-0000-008589936387",
                      "type" : "IntrusionPolicy",
                      "isSystemDefined" : false
                    }
                  }, {
                    "defaultState" : "DISABLE",
                    "policy" : {
                      "name" : "ips2",
                      "id" : "0050568A-7769-0ed3-0000-008589939444",
                      "type" : "IntrusionPolicy",
                      "isSystemDefined" : false
                    }
                  }, {
                    "defaultState" : "DISABLE",
                    "policy" : {
                      "name" : "Maximum Detection",
                      "id" : "3c7d3f87-c264-504e-9a16-4a9cd5fc502c",
                      "type" : "IntrusionPolicy",
                      "isSystemDefined" : true
                    }
                  }, {
                    "defaultState" : "DISABLE",
                    "policy" : {
                      "name" : "Security Over Connectivity",
                      "id" : "0f9e8294-d03d-5b1f-a70c-549ca9213405",
                      "type" : "IntrusionPolicy",
                      "isSystemDefined" : true
                    }
                  }, {
                    "defaultState" : "DISABLE",
                    "policy" : {
                      "name" : "Balanced Security and Connectivity",
                      "id" : "6c66b83c-bc23-55b6-879d-c4d847443503",
                      "type" : "IntrusionPolicy",
                      "isSystemDefined" : true
                    }
                  }, {
                    "defaultState" : "DISABLE",
                    "policy" : {
                      "name" : "Connectivity Over Security",
                      "id" : "4cba6c52-6a07-54cd-a324-5bb7be06a484",
                      "type" : "IntrusionPolicy",
                      "isSystemDefined" : true
                    }
                  }, {
                    "defaultState" : "DISABLE",
                    "policy" : {
                      "name" : "No Rules Active",
                      "id" : "ba8dc24f-f2a4-53dc-86b3-5252e5682579",
                      "type" : "IntrusionPolicy",
                      "isSystemDefined" : true
                    }
                  } ],
                  "ruleGroups" : [ {
                    "name" : "CUSTOM_RULES",
                    "id" : "0050568A-7769-0ed3-0000-008589940030",
                    "type" : "IntrusionRuleGroup"
                  } ]
                },
                "Request example 2 : PUT /fmc_config/v1/domain/domainUUID/object/intrusionrules?bulk=true ( Success: Test Bulk PUT method for Snort3IPSRulesObject )" : [ {
                  "type" : "IntrusionRule",
                  "id" : "0050568A-7769-0ed3-0000-008589940125",
                  "name" : "2000:10000301",
                  "gid" : 2000,
                  "sid" : 10000301,
                  "revision" : 1,
                  "isSystemDefined" : false,
                  "msg" : "CUSTOM RULE1",
                  "ruleData" : "alert icmp any any -> any any ( sid:10000301; gid:2000; msg:\"CUSTOM RULE1\"; classtype:icmp-event; rev:1; )",
                  "ruleAction" : [ {
                    "defaultState" : "DISABLE",
                    "policy" : {
                      "name" : "ips3",
                      "id" : "0050568A-7769-0ed3-0000-008589939827",
                      "type" : "IntrusionPolicy",
                      "isSystemDefined" : false
                    }
                  }, {
                    "defaultState" : "DISABLE",
                    "policy" : {
                      "name" : "IPS",
                      "id" : "0050568A-7769-0ed3-0000-008589936387",
                      "type" : "IntrusionPolicy",
                      "isSystemDefined" : false
                    }
                  }, {
                    "defaultState" : "DISABLE",
                    "policy" : {
                      "name" : "ips2",
                      "id" : "0050568A-7769-0ed3-0000-008589939444",
                      "type" : "IntrusionPolicy",
                      "isSystemDefined" : false
                    }
                  }, {
                    "defaultState" : "DISABLE",
                    "policy" : {
                      "name" : "Maximum Detection",
                      "id" : "3c7d3f87-c264-504e-9a16-4a9cd5fc502c",
                      "type" : "IntrusionPolicy",
                      "isSystemDefined" : true
                    }
                  }, {
                    "defaultState" : "DISABLE",
                    "policy" : {
                      "name" : "Security Over Connectivity",
                      "id" : "0f9e8294-d03d-5b1f-a70c-549ca9213405",
                      "type" : "IntrusionPolicy",
                      "isSystemDefined" : true
                    }
                  }, {
                    "defaultState" : "DISABLE",
                    "policy" : {
                      "name" : "Balanced Security and Connectivity",
                      "id" : "6c66b83c-bc23-55b6-879d-c4d847443503",
                      "type" : "IntrusionPolicy",
                      "isSystemDefined" : true
                    }
                  }, {
                    "defaultState" : "DISABLE",
                    "policy" : {
                      "name" : "Connectivity Over Security",
                      "id" : "4cba6c52-6a07-54cd-a324-5bb7be06a484",
                      "type" : "IntrusionPolicy",
                      "isSystemDefined" : true
                    }
                  }, {
                    "defaultState" : "DISABLE",
                    "policy" : {
                      "name" : "No Rules Active",
                      "id" : "ba8dc24f-f2a4-53dc-86b3-5252e5682579",
                      "type" : "IntrusionPolicy",
                      "isSystemDefined" : true
                    }
                  } ],
                  "ruleGroups" : [ {
                    "name" : "CUSTOM_RULES",
                    "id" : "0050568A-7769-0ed3-0000-008589940030",
                    "type" : "IntrusionRuleGroup"
                  } ]
                } ]
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/Snort3IPSRulesObject"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies Snort 3 intrusion rule associated with the specified ID. If no ID is specified for a GET, retrieves list of all Snort 3 intrusion rules. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteSnort3IPSRulesObject",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier of a Snort 3 intrusion rule.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Snort3IPSRulesObject"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/intrusionrulesupload" : {
      "post" : {
        "tags" : [ "Object" ],
        "description" : "**Imports custom Snort 3 intrusion rules. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createSnort3IPSRulesFileUpload",
        "consumes" : [ "multipart/form-data" ],
        "parameters" : [ {
          "name" : "payloadFile",
          "in" : "formData",
          "description" : "File containing the custom Snort 3 intrusion rules. <code>.rules and .txt</code> are supported file formats.<code>*required</code>",
          "required" : false,
          "type" : "file"
        }, {
          "name" : "ruleImportMode",
          "in" : "formData",
          "description" : "Enums used to add, update or replace the rules in the rulegroups.<code>MERGE</code> and <code>REPLACE</code> are supported enums.<code>*required</code>",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ruleGroups",
          "in" : "formData",
          "description" : "Comma-separated list of rulegroups to which rules should be associated. Example are group-id1,group-id2.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "validateOnly",
          "in" : "formData",
          "description" : "Boolean identifier to validate or import rules. <code>true</code> is the default value.",
          "required" : false,
          "type" : "boolean"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/Snort3IPSRulesFileUpload"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /fmc_config/v1/domain/domainUUID/object/intrusionrulesupload ( Success: Test POST method for Snort3IPSRulesFileUpload )" : {
                  "payloadFile" : ".rules or .txt format Snort3 rule file",
                  "ruleGroups" : "group-id1,group-id2,group-id3",
                  "validateOnly" : "TRUE or FALSE",
                  "ruleImportMode" : "ENUM (MERGE, REPLACE)"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/Snort3IPSRulesFileUpload"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/ipv4addresspools" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the IPv4 Address Pool object associated with the specified ID. If no ID is specified for a GET, retrieves list of all IPv4 Address Pool objects.**",
        "operationId" : "getAllIPv4AddressPool",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "To be used in conjunction with <code>\"unusedOnly:true\"</code> to search for unused objects and <code>\"nameOrValue:{nameOrValue}\"</code> to search for both name and value.",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/IPv4AddressPoolListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/DomainUUID/object/ipv4addresspools?limit=2&expanded=false ( Get all paginated IPv4AddressPool objects with limit set 2 and expanded is set to flase )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/ipv4addresspools?offset=0&limit=2"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/object/ipv4addresspools/ipv4addresspoolUUID"
                    },
                    "name" : "IPv4AddressPool-1",
                    "id" : "IPv4AddressPool-1UUID",
                    "type" : "IPv4AddressPool"
                  }, {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/object/ipv4addresspools/ipv4addresspoolUUID"
                    },
                    "name" : "IPv4AddressPool-2",
                    "id" : "IPv4AddressPool-2UUID",
                    "type" : "IPv4AddressPool"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/DomainUUID/object/ipv4addresspools?limit=2&expanded=true ( Get all paginated ipv4addresspool  objects with limit set 2 and expanded is set to true )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/ipv4addresspools?offset=0&limit=2"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/object/ipv4addresspools/ipv4addresspoolUUID"
                    },
                    "mask" : "255.255.255.0",
                    "type" : "IPv4AddressPool",
                    "ipAddressRange" : "10.72.1.10-10.72.1.150",
                    "overridable" : true,
                    "description" : "IPv4AddressPool object description",
                    "id" : "IPv4AddressPool-1UUID",
                    "name" : "IPv4AddressPool-1",
                    "metadata" : {
                      "timestamp" : "number",
                      "lastUser" : {
                        "name" : "user1"
                      },
                      "domain" : {
                        "name" : "Global \\ INDIA",
                        "id" : "domainUUID",
                        "type" : "Domain"
                      }
                    }
                  }, {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/object/ipv4addresspools/ipv4addresspoolUUID"
                    },
                    "mask" : "255.255.255.0",
                    "type" : "IPv4AddressPool",
                    "ipAddressRange" : "10.77.8.10-10.77.8.150",
                    "overridable" : true,
                    "description" : "IPv4AddressPool object description",
                    "id" : "IPv4AddressPool-2UUID",
                    "name" : "IPv4AddressPool-2",
                    "metadata" : {
                      "timestamp" : "number",
                      "lastUser" : {
                        "name" : "user1"
                      },
                      "domain" : {
                        "name" : "Global \\ INDIA \\ Chennai",
                        "id" : "domainUUID",
                        "type" : "Domain"
                      }
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/ipv4addresspools/{containerUUID}/overrides" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves all(Domain and Device) overrides on a IPv4 Address Pool object. Response will always be in expanded form. If passed, the \"expanded\" query parameter will be ignored.**",
        "operationId" : "getIPv4AddressPoolOverride",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/IPv4AddressPoolOverrideListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/domainUUID/object/ipv4addresspools/ipv4addresspoolUUID/overrides ( Get all overrides on given IPv4AddressPool objects )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/object/ipv4addresspools/ipv4addresspoolUUID/overrides?offset=0&limit=1"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/object/ipv4addresspools/ipv4addresspoolUUID?overrideTargetId=targetUUID"
                    },
                    "mask" : "255.255.255.0",
                    "type" : "IPv4AddressPool",
                    "ipAddressRange" : "10.72.1.10-10.72.1.150",
                    "overrides" : {
                      "parent" : {
                        "id" : "ipv4addresspoolUUID",
                        "type" : "IPv4AddressPool"
                      },
                      "target" : {
                        "name" : "10.10.19.27",
                        "id" : "targetUUID",
                        "type" : "Device"
                      }
                    },
                    "overridable" : true,
                    "description" : "IPv6AddressPool object description",
                    "name" : "IPV4_2",
                    "id" : "IPV4_2UUID",
                    "metadata" : {
                      "timestamp" : "number",
                      "lastUser" : {
                        "name" : "user1"
                      },
                      "domain" : {
                        "name" : "Global \\ INDIA \\ BENGALURU",
                        "id" : "domainUUID"
                      }
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/ipv4addresspools/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the IPv4 Address Pool object associated with the specified ID. If no ID is specified for a GET, retrieves list of all IPv4 Address Pool objects.**",
        "operationId" : "getIPv4AddressPool",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the object.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "overrideTargetId",
          "in" : "query",
          "description" : "Retrieves the override(s) associated with the IPv4 Address Pool object on given target ID.",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/IPv4AddressPool"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/object/ipv4addresspools/ipv4addresspoolUUID ( Get ipv4addresspool object by id )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/object/ipv4addresspools/ipv4addresspoolUUID"
                  },
                  "mask" : "255.255.255.0",
                  "type" : "IPv4AddressPool",
                  "ipAddressRange" : "10.72.1.10-10.72.1.150",
                  "overridable" : true,
                  "description" : "IPv4AddressPool object description",
                  "id" : "IPv4AddressPool-1UUID",
                  "name" : "IPv4AddressPool-1",
                  "metadata" : {
                    "timestamp" : "number",
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUUID",
                      "type" : "Domain"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/ipv4prefixlists" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Ipv4Prefix List Object CRUD**",
        "operationId" : "getAllIPv4PrefixList",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/IPv4PrefixListListContainer"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/ipv4prefixlists/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Ipv4Prefix List Object CRUD**",
        "operationId" : "getIPv4PrefixList",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "UUID of the Ipv4Prefix list.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/IPv4PrefixList"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/ipv6addresspools" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the IPv6 Address Pool object associated with the specified ID. If no ID is specified for a GET, retrieves list of all IPv6 Address Pool objects.**",
        "operationId" : "getAllIPv6AddressPool",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "To be used in conjunction with <code>\"unusedOnly:true\"</code> to search for unused objects and <code>\"nameOrValue:{nameOrValue}\"</code> to search for both name and value.",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/IPv6AddressPoolListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/DomainUUID/object/ipv6addresspools?limit=2&expanded=true ( Get all paginated ipv6addresspool objects with limit set 2 and expanded is set to true )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/ipv6addresspools?offset=0&limit=2"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/object/ipv6addresspools/ipv6addresspoolUUID"
                    },
                    "name" : "IPv6AddressPool-1",
                    "id" : "IPv6AddressPool-1UUID",
                    "type" : "IPv6AddressPool",
                    "ipv6StartAddress" : "fd70::5/64",
                    "numberOfAddresses" : 20,
                    "description" : "IPv6AddressPool object description",
                    "metadata" : {
                      "timestamp" : "number",
                      "lastUser" : {
                        "name" : "admin"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUUID",
                        "type" : "Domain"
                      }
                    }
                  }, {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/object/ipv6addresspools/ipv6addresspoolUUID"
                    },
                    "name" : "IPv6AddressPool-2",
                    "id" : "IPv6AddressPool-2UUID",
                    "type" : "IPv6AddressPool",
                    "ipv6StartAddress" : "2001:DB8::1/32",
                    "numberOfAddresses" : 100,
                    "description" : "IPv6AddressPool object description",
                    "metadata" : {
                      "timestamp" : "number",
                      "lastUser" : {
                        "name" : "admin"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUUID",
                        "type" : "Domain"
                      }
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/DomainUUID/object/ipv6addresspools?limit=2&expanded=false ( Get all paginated ipv6addresspool objects with limit set 2 and expanded is set to false )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/ipv6addresspools?offset=0&limit=2"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/object/ipv6addresspools/ipv6addresspoolUUID"
                    },
                    "type" : "IPv6AddressPool",
                    "id" : "IPv6AddressPool-1UUID",
                    "name" : "IPv6AddressPool-1"
                  }, {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/object/ipv6addresspools/ipv6addresspoolUUID"
                    },
                    "type" : "IPv6AddressPool",
                    "id" : "IPv6AddressPool-2UUID",
                    "name" : "IPv6AddressPool-2"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/ipv6addresspools/{containerUUID}/overrides" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves all(Domain and Device) overrides on a IPv6 Address Pool object. Response will always be in expanded form. If passed, the \"expanded\" query parameter will be ignored.**",
        "operationId" : "getIPv6AddressPoolOverride",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/IPv6AddressPoolOverrideListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/domainUUID/object/ipv6addresspools/ipv6addresspoolUUID/overrides ( Get all overrides for ipv6 address pool object )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/object/ipv6addresspools/ipv6addresspoolUUID/overrides?offset=0&limit=2"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/object/ipv6addresspools/ipv6addresspoolUUID?overrideTargetId=targetUUID"
                    },
                    "type" : "IPv6AddressPool",
                    "ipv6StartAddress" : "2001:DB8::1/32",
                    "numberOfAddresses" : 1,
                    "overrides" : {
                      "parent" : {
                        "id" : "ipv6addresspoolUUID",
                        "type" : "IPv6AddressPool"
                      },
                      "target" : {
                        "name" : "10.10.19.25",
                        "id" : "targetUUID",
                        "type" : "Device"
                      }
                    },
                    "overridable" : true,
                    "description" : "IPv6AddressPool object description",
                    "name" : "Ipv6-1",
                    "id" : "Ipv6-1UUID",
                    "metadata" : {
                      "timestamp" : "number",
                      "lastUser" : {
                        "name" : "user1"
                      },
                      "domain" : {
                        "name" : "Global \\ INDIA",
                        "id" : "domainUUID"
                      }
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/ipv6addresspools/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the IPv6 Address Pool object associated with the specified ID. If no ID is specified for a GET, retrieves list of all IPv6 Address Pool objects.**",
        "operationId" : "getIPv6AddressPool",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the object.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "overrideTargetId",
          "in" : "query",
          "description" : "Retrieves the override(s) associated with the IPv6 Address Pool object on given target ID.",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/IPv6AddressPool"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/object/ipv6addresspools/ipv6addresspoolUUID ( Get IPv6pools object by id )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/object/ipv6addresspools/ipv6addresspoolUUID"
                  },
                  "type" : "IPv6AddressPool",
                  "ipv6StartAddress" : "2001:DB8::1/32",
                  "numberOfAddresses" : 10,
                  "overridable" : true,
                  "description" : "IPv6AddressPool object description",
                  "id" : "IPv6AddressPool-1lUUID",
                  "name" : "IPv6AddressPool-1",
                  "metadata" : {
                    "timestamp" : "number",
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUUID",
                      "type" : "Domain"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/ipv6prefixlists" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Ipv6Prefix List Object CRUD**",
        "operationId" : "getAllIPv6PrefixList",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/IPv6PrefixListListContainer"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/ipv6prefixlists/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Ipv6Prefix List Object CRUD**",
        "operationId" : "getIPv6PrefixList",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "UUID of the Ipv6Prefix list.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/IPv6PrefixList"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/isesecuritygrouptags" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the ISE security group tag object with the specified ID. If no ID is specified, retrieves list of all ISE security group tag objects.**",
        "operationId" : "getAllISESecurityGroupTag",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ISESecurityGroupTagListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/exampledomainuuid/object/isesecuritygrouptags ( Success: Test GET ALL success of all ISE Security Group Tags )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/exampledomainuuid/object/isesecuritygrouptags?offset=0&limit=2"
                  },
                  "items" : [ {
                    "name" : "ExampleISESGTname",
                    "id" : "exampleisesgtuuid",
                    "type" : "ISESecurityGroupTag",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/exampledomainuuid/object/isesecuritygrouptags/exampleisesgtuuid"
                    }
                  }, {
                    "name" : "ExampleISESGTname2",
                    "id" : "exampleisesgtuuid2",
                    "type" : "ISESecurityGroupTag",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/exampledomainuuid/object/isesecuritygrouptags/exampleisesgtuuid2"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/exampledomainuuid/object/isesecuritygrouptags?expanded=true ( Success: Test GET ALL success with expanded=true )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/exampledomainuuid/object/isesecuritygrouptags?expanded=true"
                  },
                  "items" : [ {
                    "name" : "ExampleISESGTname",
                    "id" : "exampleisesgtuuid",
                    "type" : "ISESecurityGroupTag",
                    "description" : "example description.",
                    "tag" : 0,
                    "links" : {
                      "self" : "https://example.com:443/api/fmc_config/v1/domain/exampledomainuuid/object/isesecuritygrouptags/exampleisesgtuuid"
                    }
                  }, {
                    "name" : "ExampleISESGTname2",
                    "id" : "exampleisesgtuuid2",
                    "type" : "ISESecurityGroupTag",
                    "description" : "example description.2",
                    "tag" : 0,
                    "links" : {
                      "self" : "https://example.com:443/api/fmc_config/v1/domain/exampledomainuuid/object/isesecuritygrouptags/exampleisesgtuuid2"
                    },
                    "metadata" : {
                      "readOnly" : {
                        "state" : true
                      },
                      "timestamp" : "Sat Jan 17 20:30:39 UTC 1970",
                      "lastUser" : {
                        "name" : "testuser2",
                        "id" : "testuseruuid2",
                        "type" : "User"
                      },
                      "domain" : {
                        "name" : "TestDomain2",
                        "id" : "testdomainuuid2",
                        "type" : "Domain"
                      }
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/isesecuritygrouptags/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the ISE security group tag object with the specified ID. If no ID is specified, retrieves list of all ISE security group tag objects.**",
        "operationId" : "getISESecurityGroupTag",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the ISE security group tag object.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ISESecurityGroupTag"
            },
            "examples" : { }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/keychains" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the Keychain object associated with the specified ID. If no ID is specified for a GET, retrieves list of all Keychain objects.**",
        "operationId" : "getAllKeyChainObject",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/KeyChainObjectListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /api/fmc_config/v1/domain/DomainUUID/object/keychain ( Get all paginated Key Chain objects )" : {
                  "links" : {
                    "self" : "api/fmc_config/v1/domain/DomainUUID/object/keychain?offset=0&limit=3"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "/api/fmc_config/v1/domain/DomainUUID/object/keychain/KeyChainUUID"
                    },
                    "type" : "KeyChainObject",
                    "name" : "KeyChainObjectName1",
                    "id" : "KeyChainUUID"
                  }, {
                    "links" : {
                      "self" : "/api/fmc_config/v1/domain/DomainUUID/object/keychain/KeyChainUUID"
                    },
                    "type" : "KeyChainObject",
                    "name" : "KeyChainObjectName2",
                    "id" : "KeyChainUUID"
                  }, {
                    "links" : {
                      "self" : "/api/fmc_config/v1/domain/DomainUUID/object/keychain/KeyChainUUID"
                    },
                    "type" : "KeyChainObject",
                    "name" : "KeyChainObjectName3",
                    "id" : "KeyChainUUID"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 3,
                    "count" : 3,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /api/fmc_config/v1/domain/DomainUUID/object/keychain?expanded=true ( Get all paginated Key Chain objects  )" : {
                  "links" : {
                    "self" : "/api/fmc_config/v1/domain/DomainUUID/object/keychain?offset=0&limit=3&expanded=true"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "/api/fmc_config/v1/domain/DomainUUID/object/keychain/KeyChainUUID"
                    },
                    "keys" : [ {
                      "keyId" : 1,
                      "authString" : {
                        "cryptoEncryptionType" : "PLAINTEXT",
                        "cryptoKeyString" : "keyString"
                      },
                      "acceptLifeTime" : {
                        "startLifeTimeValue" : "2018-08-25T12:14:23",
                        "endLifetimeType" : "DATETIME",
                        "endLifeTimeValue" : "2018-08-27T12:14:23"
                      },
                      "sendLifeTime" : {
                        "startLifeTimeValue" : "2018-08-25T12:14:23",
                        "endLifetimeType" : "DATETIME",
                        "endLifeTimeValue" : "2018-08-27T12:14:23"
                      },
                      "authAlgorithm" : "md5"
                    }, {
                      "keyId" : 2,
                      "authString" : {
                        "cryptoEncryptionType" : "PLAINTEXT",
                        "cryptoKeyString" : "keyString"
                      },
                      "acceptLifeTime" : {
                        "startLifeTimeValue" : "2018-08-25T12:14:23",
                        "endLifetimeType" : "DATETIME",
                        "endLifeTimeValue" : "2018-08-27T12:14:23"
                      },
                      "sendLifeTime" : {
                        "startLifeTimeValue" : "2018-08-25T12:14:23",
                        "endLifetimeType" : "DURATION",
                        "endLifeTimeValue" : "234"
                      },
                      "authAlgorithm" : "md5"
                    } ],
                    "type" : "KeyChainObject",
                    "name" : "KeyChainObjectName1",
                    "id" : "KeyChainUUID",
                    "description" : "description for keychain object",
                    "metadata" : {
                      "timestamp" : 1524118335170,
                      "lastUser" : {
                        "name" : "rest"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "DomainUUID"
                      }
                    }
                  }, {
                    "links" : {
                      "self" : "/api/fmc_config/v1/domain/DomainUUID/object/keychain/KeyChainUUID"
                    },
                    "keys" : [ {
                      "keyId" : 1,
                      "authString" : {
                        "cryptoEncryptionType" : "PLAINTEXT",
                        "cryptoKeyString" : "keyString"
                      },
                      "acceptLifeTime" : {
                        "startLifeTimeValue" : "2018-08-25T12:14:23",
                        "endLifetimeType" : "DATETIME",
                        "endLifeTimeValue" : "2018-08-27T12:14:23"
                      },
                      "sendLifeTime" : {
                        "startLifeTimeValue" : "2018-08-25T12:14:23",
                        "endLifetimeType" : "DATETIME",
                        "endLifeTimeValue" : "2018-08-27T12:14:23"
                      },
                      "authAlgorithm" : "md5"
                    }, {
                      "keyId" : 2,
                      "authString" : {
                        "cryptoEncryptionType" : "PLAINTEXT",
                        "cryptoKeyString" : "keyString"
                      },
                      "acceptLifeTime" : {
                        "startLifeTimeValue" : "2018-08-25T12:14:23",
                        "endLifetimeType" : "DATETIME",
                        "endLifeTimeValue" : "2018-08-27T12:14:23"
                      },
                      "sendLifeTime" : {
                        "startLifeTimeValue" : "2018-08-25T12:14:23",
                        "endLifetimeType" : "DURATION",
                        "endLifeTimeValue" : "234"
                      },
                      "authAlgorithm" : "md5"
                    } ],
                    "type" : "KeyChainObject",
                    "name" : "KeyChainObjectName2",
                    "id" : "KeyChainUUID",
                    "description" : "description for keychain object",
                    "metadata" : {
                      "timestamp" : 1523597066886,
                      "lastUser" : {
                        "name" : "rest"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "DomainUUID"
                      }
                    }
                  }, {
                    "links" : {
                      "self" : "/api/fmc_config/v1/domain/DomainUUID/object/keychain/KeyChainUUID"
                    },
                    "keys" : [ {
                      "keyId" : 1,
                      "authString" : {
                        "cryptoEncryptionType" : "PLAINTEXT",
                        "cryptoKeyString" : "keyString"
                      },
                      "acceptLifeTime" : {
                        "startLifeTimeValue" : "2018-08-25T12:14:23",
                        "endLifetimeType" : "DATETIME",
                        "endLifeTimeValue" : "2018-08-27T12:14:23"
                      },
                      "sendLifeTime" : {
                        "startLifeTimeValue" : "2018-08-25T12:14:23",
                        "endLifetimeType" : "DATETIME",
                        "endLifeTimeValue" : "2018-08-27T12:14:23"
                      },
                      "authAlgorithm" : "md5"
                    }, {
                      "keyId" : 2,
                      "authString" : {
                        "cryptoEncryptionType" : "PLAINTEXT",
                        "cryptoKeyString" : "keyString"
                      },
                      "acceptLifeTime" : {
                        "startLifeTimeValue" : "2018-08-25T12:14:23",
                        "endLifetimeType" : "DATETIME",
                        "endLifeTimeValue" : "2018-08-27T12:14:23"
                      },
                      "sendLifeTime" : {
                        "startLifeTimeValue" : "2018-08-25T12:14:23",
                        "endLifetimeType" : "DURATION",
                        "endLifeTimeValue" : "234"
                      },
                      "authAlgorithm" : "md5"
                    } ],
                    "type" : "KeyChainObject",
                    "name" : "KeyChainObjectName3",
                    "id" : "KeyChainUUID",
                    "description" : "description for keychain object",
                    "metadata" : {
                      "timestamp" : 1524118310520,
                      "lastUser" : {
                        "name" : "rest"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "DomainUUID"
                      }
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the Keychain object associated with the specified ID. If no ID is specified for a GET, retrieves list of all Keychain objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createMultipleKeyChainObject",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of KeyChain object.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/KeyChainObject"
          }
        }, {
          "name" : "bulk",
          "in" : "query",
          "description" : "Enables bulk create for KeyChain objects.",
          "required" : false,
          "type" : "boolean"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/KeyChainObject"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /api/fmc_config/v1/domain/DomainUUID/object/keychain ( POST method for Key Chain Object )" : {
                  "name" : "KeyChainObjectName1",
                  "type" : "KeyChainObject",
                  "overridable" : false,
                  "keys" : [ {
                    "keyId" : 2,
                    "authString" : {
                      "cryptoEncryptionType" : "PLAINTEXT",
                      "cryptoKeyString" : "keyString"
                    },
                    "acceptLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DATETIME",
                      "endLifeTimeValue" : "2018-08-27T12:14:23"
                    },
                    "sendLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DURATION",
                      "endLifeTimeValue" : "234"
                    },
                    "authAlgorithm" : "md5"
                  }, {
                    "keyId" : 24,
                    "authString" : {
                      "cryptoEncryptionType" : "PLAINTEXT",
                      "cryptoKeyString" : "keyString"
                    },
                    "acceptLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DATETIME",
                      "endLifeTimeValue" : "2018-08-27T12:14:23"
                    },
                    "sendLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "INFINITE"
                    },
                    "authAlgorithm" : "md5"
                  }, {
                    "keyId" : 3,
                    "authString" : {
                      "cryptoEncryptionType" : "PLAINTEXT",
                      "cryptoKeyString" : "keyString"
                    },
                    "acceptLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DATETIME",
                      "endLifeTimeValue" : "2018-08-27T12:14:23"
                    },
                    "sendLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DATETIME",
                      "endLifeTimeValue" : "2018-08-27T12:14:23"
                    },
                    "authAlgorithm" : "md5"
                  }, {
                    "keyId" : 34,
                    "authString" : {
                      "cryptoEncryptionType" : "PLAINTEXT",
                      "cryptoKeyString" : "keyString"
                    },
                    "acceptLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DATETIME",
                      "endLifeTimeValue" : "2018-08-27T12:14:23"
                    },
                    "sendLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DATETIME",
                      "endLifeTimeValue" : "2018-08-27T12:14:23"
                    },
                    "authAlgorithm" : "md5"
                  }, {
                    "keyId" : 4,
                    "authString" : {
                      "cryptoEncryptionType" : "PLAINTEXT",
                      "cryptoKeyString" : "keyString"
                    },
                    "acceptLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DATETIME",
                      "endLifeTimeValue" : "2018-08-27T12:14:23"
                    },
                    "sendLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DATETIME",
                      "endLifeTimeValue" : "2018-08-27T12:14:23"
                    },
                    "authAlgorithm" : "md5"
                  }, {
                    "keyId" : 5,
                    "authString" : {
                      "cryptoEncryptionType" : "PLAINTEXT",
                      "cryptoKeyString" : "keyString"
                    },
                    "acceptLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DATETIME",
                      "endLifeTimeValue" : "2018-08-27T12:14:23"
                    },
                    "sendLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DATETIME",
                      "endLifeTimeValue" : "2018-08-27T12:14:23"
                    },
                    "authAlgorithm" : "md5"
                  } ]
                },
                "Request example 2 : POST /api/fmc_config/v1/domain/DomainUUID/object/keychain?bulk=true ( POST method for Key Chain Bulk Object )" : [ {
                  "keys" : [ {
                    "sendLifeTime" : {
                      "endLifeTimeValue" : "2018-09-15T15:53:00",
                      "endLifetimeType" : "DATETIME",
                      "startLifeTimeValue" : "2018-08-15T15:53:00"
                    },
                    "keyId" : 1,
                    "authAlgorithm" : "md5",
                    "authString" : {
                      "cryptoEncryptionType" : "PLAINTEXT",
                      "cryptoKeyString" : "plaintext"
                    },
                    "acceptLifeTime" : {
                      "endLifeTimeValue" : "2018-09-15T15:53:00",
                      "endLifetimeType" : "DATETIME",
                      "startLifeTimeValue" : "2018-08-15T15:53:00"
                    }
                  } ],
                  "description" : "desciption",
                  "type" : "KeyChainObject",
                  "name" : "KeyChain1"
                }, {
                  "keys" : [ {
                    "authAlgorithm" : "md5",
                    "sendLifeTime" : {
                      "endLifeTimeValue" : "2018-09-15T15:53:00",
                      "endLifetimeType" : "DATETIME",
                      "startLifeTimeValue" : "2018-08-15T15:53:00"
                    },
                    "authString" : {
                      "cryptoKeyString" : "plaintext",
                      "cryptoEncryptionType" : "PLAINTEXT"
                    },
                    "acceptLifeTime" : {
                      "endLifeTimeValue" : "2018-09-15T15:53:00",
                      "endLifetimeType" : "DATETIME",
                      "startLifeTimeValue" : "2018-08-15T15:53:00"
                    },
                    "keyId" : 1
                  } ],
                  "type" : "KeyChainObject",
                  "description" : "desciption",
                  "name" : "keychain2"
                } ],
                "Request example 3 : POST /api/fmc_config/v1/domain/DomainUUID/object/keychain?bulk=true ( POST method for Key Chain Object with Bulk Override )" : [ {
                  "description" : "override_keychain_rest_5",
                  "name" : "parent_keychain_rest_6",
                  "overrides" : {
                    "parent" : {
                      "id" : "KeyChainUUID",
                      "type" : "KeyChainObject"
                    },
                    "target" : {
                      "id" : "DeviceUUID",
                      "name" : "DeviceName",
                      "type" : "Device"
                    }
                  },
                  "keys" : [ {
                    "authAlgorithm" : "md5",
                    "sendLifeTime" : {
                      "endLifeTimeValue" : "2018-09-15T15:53:00",
                      "endLifetimeType" : "DATETIME",
                      "startLifeTimeValue" : "2018-08-15T15:53:00"
                    },
                    "authString" : {
                      "cryptoKeyString" : "plaintext",
                      "cryptoEncryptionType" : "PLAINTEXT"
                    },
                    "acceptLifeTime" : {
                      "endLifeTimeValue" : "2018-09-15T15:53:00",
                      "endLifetimeType" : "DATETIME",
                      "startLifeTimeValue" : "2018-08-15T15:53:00"
                    },
                    "keyId" : 1
                  }, {
                    "authAlgorithm" : "md5",
                    "sendLifeTime" : {
                      "endLifeTimeValue" : "2018-09-15T15:53:00",
                      "endLifetimeType" : "DATETIME",
                      "startLifeTimeValue" : "2018-08-15T15:53:00"
                    },
                    "authString" : {
                      "cryptoKeyString" : "plaintext",
                      "cryptoEncryptionType" : "PLAINTEXT"
                    },
                    "acceptLifeTime" : {
                      "endLifeTimeValue" : "2018-09-15T15:53:00",
                      "endLifetimeType" : "DATETIME",
                      "startLifeTimeValue" : "2018-08-15T15:53:00"
                    },
                    "keyId" : 2
                  }, {
                    "authAlgorithm" : "md5",
                    "sendLifeTime" : {
                      "endLifeTimeValue" : "2018-09-15T15:53:00",
                      "endLifetimeType" : "DATETIME",
                      "startLifeTimeValue" : "2018-08-15T15:53:00"
                    },
                    "authString" : {
                      "cryptoKeyString" : "plaintext",
                      "cryptoEncryptionType" : "PLAINTEXT"
                    },
                    "acceptLifeTime" : {
                      "endLifeTimeValue" : "2018-09-15T15:53:00",
                      "endLifetimeType" : "DATETIME",
                      "startLifeTimeValue" : "2018-08-15T15:53:00"
                    },
                    "keyId" : 3
                  } ],
                  "type" : "KeyChainObject",
                  "overridable" : true
                }, {
                  "description" : "override_keychain_rest_6",
                  "name" : "parent_keychain_rest_6",
                  "overrides" : {
                    "parent" : {
                      "id" : "KeyChainUUID",
                      "type" : "KeyChainObject"
                    },
                    "target" : {
                      "id" : "DomainUUID",
                      "name" : "DomainName",
                      "type" : "Domain"
                    }
                  },
                  "keys" : [ {
                    "authAlgorithm" : "md5",
                    "sendLifeTime" : {
                      "endLifeTimeValue" : "2018-09-15T15:53:00",
                      "endLifetimeType" : "DATETIME",
                      "startLifeTimeValue" : "2018-08-15T15:53:00"
                    },
                    "authString" : {
                      "cryptoKeyString" : "plaintext",
                      "cryptoEncryptionType" : "PLAINTEXT"
                    },
                    "acceptLifeTime" : {
                      "endLifeTimeValue" : "2018-09-15T15:53:00",
                      "endLifetimeType" : "DATETIME",
                      "startLifeTimeValue" : "2018-08-15T15:53:00"
                    },
                    "keyId" : 1
                  }, {
                    "authAlgorithm" : "md5",
                    "sendLifeTime" : {
                      "endLifeTimeValue" : "2018-09-15T15:53:00",
                      "endLifetimeType" : "DATETIME",
                      "startLifeTimeValue" : "2018-08-15T15:53:00"
                    },
                    "authString" : {
                      "cryptoKeyString" : "plaintext",
                      "cryptoEncryptionType" : "PLAINTEXT"
                    },
                    "acceptLifeTime" : {
                      "endLifeTimeValue" : "2018-09-15T15:53:00",
                      "endLifetimeType" : "DATETIME",
                      "startLifeTimeValue" : "2018-08-15T15:53:00"
                    },
                    "keyId" : 2
                  }, {
                    "authAlgorithm" : "md5",
                    "sendLifeTime" : {
                      "endLifeTimeValue" : "2018-09-15T15:53:00",
                      "endLifetimeType" : "DATETIME",
                      "startLifeTimeValue" : "2018-08-15T15:53:00"
                    },
                    "authString" : {
                      "cryptoKeyString" : "plaintext",
                      "cryptoEncryptionType" : "PLAINTEXT"
                    },
                    "acceptLifeTime" : {
                      "endLifeTimeValue" : "2018-09-15T15:53:00",
                      "endLifetimeType" : "DATETIME",
                      "startLifeTimeValue" : "2018-08-15T15:53:00"
                    },
                    "keyId" : 3
                  } ],
                  "type" : "KeyChainObject",
                  "overridable" : true
                } ],
                "Request example 4 : POST /api/fmc_config/v1/domain/DomainUUID/object/keychain ( POST method for Key Chain override Object with device )" : {
                  "name" : "KeyChainObjectName1",
                  "type" : "KeyChainObject",
                  "description" : "description for keychain object",
                  "keys" : [ {
                    "keyId" : 2,
                    "authString" : {
                      "cryptoEncryptionType" : "PLAINTEXT",
                      "cryptoKeyString" : "keyString"
                    },
                    "acceptLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DATETIME",
                      "endLifeTimeValue" : "2018-08-27T12:14:23"
                    },
                    "sendLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DURATION",
                      "endLifeTimeValue" : "234"
                    },
                    "authAlgorithm" : "md5"
                  }, {
                    "keyId" : 24,
                    "authString" : {
                      "cryptoEncryptionType" : "PLAINTEXT",
                      "cryptoKeyString" : "keyString"
                    },
                    "acceptLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DATETIME",
                      "endLifeTimeValue" : "2018-08-27T12:14:23"
                    },
                    "sendLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "INFINITE"
                    },
                    "authAlgorithm" : "md5"
                  } ],
                  "overrides" : {
                    "parent" : {
                      "id" : "KeyChainUUID",
                      "type" : "KeyChainObject"
                    },
                    "target" : {
                      "name" : "10.10.9.20",
                      "id" : "deviceUUID",
                      "type" : "Device"
                    }
                  },
                  "overridable" : true
                },
                "Request example 5 : POST /api/fmc_config/v1/domain/DomainUUID/object/keychain ( POST method for Key Chain Object override with domain )" : {
                  "name" : "KeyChainObjectName1",
                  "type" : "KeyChainObject",
                  "description" : "description for keychain object",
                  "keys" : [ {
                    "keyId" : 2,
                    "authString" : {
                      "cryptoEncryptionType" : "PLAINTEXT",
                      "cryptoKeyString" : "keyString"
                    },
                    "acceptLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DATETIME",
                      "endLifeTimeValue" : "2018-08-27T12:14:23"
                    },
                    "sendLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DURATION",
                      "endLifeTimeValue" : "234"
                    },
                    "authAlgorithm" : "md5"
                  }, {
                    "keyId" : 24,
                    "authString" : {
                      "cryptoEncryptionType" : "PLAINTEXT",
                      "cryptoKeyString" : "keyString"
                    },
                    "acceptLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DATETIME",
                      "endLifeTimeValue" : "2018-08-27T12:14:23"
                    },
                    "sendLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "INFINITE"
                    },
                    "authAlgorithm" : "md5"
                  } ],
                  "overrides" : {
                    "parent" : {
                      "id" : "KeyChainUUID",
                      "type" : "KeyChainObject"
                    },
                    "target" : {
                      "name" : "Global \\ ASIA \\ INDIA",
                      "id" : "domainUUID",
                      "type" : "Domain"
                    }
                  },
                  "overridable" : true
                },
                "Response Example 1 :POST /api/fmc_config/v1/domain/DomainUUID/object/keychain ( POST method for Key Chain Object )" : {
                  "links" : {
                    "self" : "/api/fmc_config/v1/domain/DomainUUID/object/keychain/KeyChainUUID"
                  },
                  "timeout" : 3,
                  "name" : "KeyChainObjectName1",
                  "type" : "KeyChainObject",
                  "description" : "description for keychain object",
                  "keys" : [ {
                    "keyId" : 2,
                    "authString" : {
                      "cryptoEncryptionType" : "PLAINTEXT",
                      "cryptoKeyString" : "keyString"
                    },
                    "acceptLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DATETIME",
                      "endLifeTimeValue" : "2018-08-27T12:14:23"
                    },
                    "sendLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DURATION",
                      "endLifeTimeValue" : "234"
                    },
                    "authAlgorithm" : "md5"
                  }, {
                    "keyId" : 24,
                    "authString" : {
                      "cryptoEncryptionType" : "PLAINTEXT",
                      "cryptoKeyString" : "keyString"
                    },
                    "acceptLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "INFINITE",
                      "endLifeTimeValue" : "2018-08-27T12:14:23"
                    },
                    "sendLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "INFINITE"
                    },
                    "authAlgorithm" : "md5"
                  }, {
                    "keyId" : 3,
                    "authString" : {
                      "cryptoEncryptionType" : "PLAINTEXT",
                      "cryptoKeyString" : "keyString"
                    },
                    "acceptLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DATETIME",
                      "endLifeTimeValue" : "2018-08-27T12:14:23"
                    },
                    "sendLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DATETIME",
                      "endLifeTimeValue" : "2018-08-27T12:14:23"
                    },
                    "authAlgorithm" : "md5"
                  }, {
                    "keyId" : 34,
                    "authString" : {
                      "cryptoEncryptionType" : "PLAINTEXT",
                      "cryptoKeyString" : "keyString"
                    },
                    "acceptLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DATETIME",
                      "endLifeTimeValue" : "2018-08-27T12:14:23"
                    },
                    "sendLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DATETIME",
                      "endLifeTimeValue" : "2018-08-27T12:14:23"
                    },
                    "authAlgorithm" : "md5"
                  }, {
                    "keyId" : 4,
                    "authString" : {
                      "cryptoEncryptionType" : "PLAINTEXT",
                      "cryptoKeyString" : "keyString"
                    },
                    "acceptLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DATETIME",
                      "endLifeTimeValue" : "2018-08-27T12:14:23"
                    },
                    "sendLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DATETIME",
                      "endLifeTimeValue" : "2018-08-27T12:14:23"
                    },
                    "authAlgorithm" : "md5"
                  }, {
                    "keyId" : 5,
                    "authString" : {
                      "cryptoEncryptionType" : "PLAINTEXT",
                      "cryptoKeyString" : "keyString"
                    },
                    "acceptLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DATETIME",
                      "endLifeTimeValue" : "2018-08-27T12:14:23"
                    },
                    "sendLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DATETIME",
                      "endLifeTimeValue" : "2018-08-27T12:14:23"
                    },
                    "authAlgorithm" : "md5"
                  } ],
                  "id" : "KeyChainUUID",
                  "overridable" : false,
                  "metadata" : {
                    "timestamp" : 0,
                    "lastUser" : {
                      "name" : "rest"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "DomainUUID"
                    }
                  }
                },
                "Response Example 2 :POST /api/fmc_config/v1/domain/DomainUUID/object/keychain?bulk=true ( POST method for Key Chain Bulk Object )" : {
                  "links" : {
                    "self" : "/api/fmc_config/v1/domain/DomainUUID/object/keychains?bulk=true"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "/api/fmc_config/v1/domain/DomainUUID/object/keychains/KeyChainUUID"
                    },
                    "keys" : [ {
                      "keyId" : 1,
                      "acceptLifeTime" : {
                        "startLifeTimeValue" : "2018-08-15T15:53:00",
                        "endLifetimeType" : "DATETIME",
                        "endLifeTimeValue" : "2018-09-15T15:53:00"
                      },
                      "sendLifeTime" : {
                        "startLifeTimeValue" : "2018-08-15T15:53:00",
                        "endLifetimeType" : "DATETIME",
                        "endLifeTimeValue" : "2018-09-15T15:53:00"
                      },
                      "authAlgorithm" : "md5",
                      "authString" : {
                        "cryptoKeyString" : "plaintext",
                        "cryptoEncryptionType" : "PLAINTEXT"
                      }
                    } ],
                    "type" : "KeyChainObject",
                    "name" : "KeyChain1",
                    "description" : "desciption",
                    "id" : "KeyChainUUID",
                    "overridable" : false,
                    "metadata" : {
                      "timestamp" : 0,
                      "lastUser" : {
                        "name" : "admin"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "DomainUUID"
                      }
                    }
                  }, {
                    "links" : {
                      "self" : "/api/fmc_config/v1/domain/DomainUUID/object/keychains/KeyChainUUID"
                    },
                    "keys" : [ {
                      "keyId" : 1,
                      "acceptLifeTime" : {
                        "startLifeTimeValue" : "2018-08-15T15:53:00",
                        "endLifetimeType" : "DATETIME",
                        "endLifeTimeValue" : "2018-09-15T15:53:00"
                      },
                      "sendLifeTime" : {
                        "startLifeTimeValue" : "2018-08-15T15:53:00",
                        "endLifetimeType" : "DATETIME",
                        "endLifeTimeValue" : "2018-09-15T15:53:00"
                      },
                      "authAlgorithm" : "md5",
                      "authString" : {
                        "cryptoKeyString" : "plaintext",
                        "cryptoEncryptionType" : "PLAINTEXT"
                      }
                    } ],
                    "type" : "KeyChainObject",
                    "name" : "keychain2",
                    "description" : "desciption",
                    "id" : "KeyChainUUID",
                    "overridable" : false,
                    "metadata" : {
                      "timestamp" : 0,
                      "lastUser" : {
                        "name" : "admin"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "DomainUUID"
                      }
                    }
                  } ]
                },
                "Response Example 3 :POST /api/fmc_config/v1/domain/DomainUUID/object/keychain?bulk=true ( POST method for Key Chain Object with Bulk Override )" : {
                  "links" : {
                    "self" : "/api/fmc_config/v1/domain/DomainUUID/object/keychains?bulk=true"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "/api/fmc_config/v1/domain/DomainUUID/object/keychains/KeyChainUUID?overrideTargetId=DeviceUUID"
                    },
                    "keys" : [ {
                      "keyId" : 1,
                      "acceptLifeTime" : {
                        "startLifeTimeValue" : "2018-08-15T15:53:00",
                        "endLifetimeType" : "DATETIME",
                        "endLifeTimeValue" : "2018-09-15T15:53:00"
                      },
                      "sendLifeTime" : {
                        "startLifeTimeValue" : "2018-08-15T15:53:00",
                        "endLifetimeType" : "DATETIME",
                        "endLifeTimeValue" : "2018-09-15T15:53:00"
                      },
                      "authAlgorithm" : "md5",
                      "authString" : {
                        "cryptoKeyString" : "plaintext",
                        "cryptoEncryptionType" : "PLAINTEXT"
                      }
                    }, {
                      "keyId" : 2,
                      "acceptLifeTime" : {
                        "startLifeTimeValue" : "2018-08-15T15:53:00",
                        "endLifetimeType" : "DATETIME",
                        "endLifeTimeValue" : "2018-09-15T15:53:00"
                      },
                      "sendLifeTime" : {
                        "startLifeTimeValue" : "2018-08-15T15:53:00",
                        "endLifetimeType" : "DATETIME",
                        "endLifeTimeValue" : "2018-09-15T15:53:00"
                      },
                      "authAlgorithm" : "md5",
                      "authString" : {
                        "cryptoKeyString" : "plaintext",
                        "cryptoEncryptionType" : "PLAINTEXT"
                      }
                    }, {
                      "keyId" : 3,
                      "acceptLifeTime" : {
                        "startLifeTimeValue" : "2018-08-15T15:53:00",
                        "endLifetimeType" : "DATETIME",
                        "endLifeTimeValue" : "2018-09-15T15:53:00"
                      },
                      "sendLifeTime" : {
                        "startLifeTimeValue" : "2018-08-15T15:53:00",
                        "endLifetimeType" : "DATETIME",
                        "endLifeTimeValue" : "2018-09-15T15:53:00"
                      },
                      "authAlgorithm" : "md5",
                      "authString" : {
                        "cryptoKeyString" : "plaintext",
                        "cryptoEncryptionType" : "PLAINTEXT"
                      }
                    } ],
                    "type" : "KeyChainObject",
                    "name" : "parent_keychain_rest_6",
                    "description" : "override_keychain_rest_5",
                    "id" : "KeyChainUUID",
                    "overrides" : {
                      "parent" : {
                        "id" : "ParentKeyChainUUID",
                        "type" : "KeyChainObject"
                      },
                      "target" : {
                        "name" : "DeviceName",
                        "id" : "DeviceUUID",
                        "type" : "Device"
                      }
                    },
                    "overridable" : true,
                    "metadata" : {
                      "timestamp" : 0,
                      "lastUser" : {
                        "name" : "admin"
                      },
                      "domain" : {
                        "name" : "Global \\ Domain_Network",
                        "id" : "DomainUUID"
                      }
                    }
                  }, {
                    "links" : {
                      "self" : "/api/fmc_config/v1/domain/DomainUUID/object/keychains/KeyChainUUID?overrideTargetId=DeviceUUID"
                    },
                    "keys" : [ {
                      "keyId" : 1,
                      "acceptLifeTime" : {
                        "startLifeTimeValue" : "2018-08-15T15:53:00",
                        "endLifetimeType" : "DATETIME",
                        "endLifeTimeValue" : "2018-09-15T15:53:00"
                      },
                      "sendLifeTime" : {
                        "startLifeTimeValue" : "2018-08-15T15:53:00",
                        "endLifetimeType" : "DATETIME",
                        "endLifeTimeValue" : "2018-09-15T15:53:00"
                      },
                      "authAlgorithm" : "md5",
                      "authString" : {
                        "cryptoKeyString" : "plaintext",
                        "cryptoEncryptionType" : "PLAINTEXT"
                      }
                    }, {
                      "keyId" : 2,
                      "acceptLifeTime" : {
                        "startLifeTimeValue" : "2018-08-15T15:53:00",
                        "endLifetimeType" : "DATETIME",
                        "endLifeTimeValue" : "2018-09-15T15:53:00"
                      },
                      "sendLifeTime" : {
                        "startLifeTimeValue" : "2018-08-15T15:53:00",
                        "endLifetimeType" : "DATETIME",
                        "endLifeTimeValue" : "2018-09-15T15:53:00"
                      },
                      "authAlgorithm" : "md5",
                      "authString" : {
                        "cryptoKeyString" : "plaintext",
                        "cryptoEncryptionType" : "PLAINTEXT"
                      }
                    }, {
                      "keyId" : 3,
                      "acceptLifeTime" : {
                        "startLifeTimeValue" : "2018-08-15T15:53:00",
                        "endLifetimeType" : "DATETIME",
                        "endLifeTimeValue" : "2018-09-15T15:53:00"
                      },
                      "sendLifeTime" : {
                        "startLifeTimeValue" : "2018-08-15T15:53:00",
                        "endLifetimeType" : "DATETIME",
                        "endLifeTimeValue" : "2018-09-15T15:53:00"
                      },
                      "authAlgorithm" : "md5",
                      "authString" : {
                        "cryptoKeyString" : "plaintext",
                        "cryptoEncryptionType" : "PLAINTEXT"
                      }
                    } ],
                    "type" : "KeyChainObject",
                    "name" : "parent_keychain_rest_6",
                    "description" : "override_keychain_rest_6",
                    "id" : "KeyChainUUID",
                    "overrides" : {
                      "parent" : {
                        "id" : "ParentKeyChainUUID",
                        "type" : "KeyChainObject"
                      },
                      "target" : {
                        "name" : "DomainName",
                        "id" : "DomainUUID",
                        "type" : "Domain"
                      }
                    },
                    "overridable" : true,
                    "metadata" : {
                      "timestamp" : 0,
                      "lastUser" : {
                        "name" : "admin"
                      },
                      "domain" : {
                        "name" : "Global \\ Domain_Network",
                        "id" : "DomainUUID"
                      }
                    }
                  } ]
                },
                "Response Example 4 :POST /api/fmc_config/v1/domain/DomainUUID/object/keychain ( POST method for Key Chain override Object with device )" : {
                  "links" : {
                    "self" : "/api/fmc_config/v1/domain/DomainUUID/object/keychain/KeyChainUUID?overrideTargetId=deviceUUID"
                  },
                  "timeout" : 3,
                  "name" : "KeyChainObjectName1",
                  "type" : "KeyChainObject",
                  "description" : "description for keychain object",
                  "keys" : [ {
                    "keyId" : 2,
                    "authString" : {
                      "cryptoEncryptionType" : "PLAINTEXT",
                      "cryptoKeyString" : "keyString"
                    },
                    "acceptLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DATETIME",
                      "endLifeTimeValue" : "2018-08-27T12:14:23"
                    },
                    "sendLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DURATION",
                      "endLifeTimeValue" : "234"
                    },
                    "authAlgorithm" : "md5"
                  }, {
                    "keyId" : 24,
                    "authString" : {
                      "cryptoEncryptionType" : "PLAINTEXT",
                      "cryptoKeyString" : "keyString"
                    },
                    "acceptLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "INFINITE",
                      "endLifeTimeValue" : "2018-08-27T12:14:23"
                    },
                    "sendLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "INFINITE"
                    },
                    "authAlgorithm" : "md5"
                  } ],
                  "id" : "KeyChainUUID",
                  "overrides" : {
                    "parent" : {
                      "id" : "KeyChainUUID",
                      "type" : "KeyChainObject"
                    },
                    "target" : {
                      "name" : "10.10.9.20",
                      "id" : "deviceUUID",
                      "type" : "Device"
                    }
                  },
                  "overridable" : true,
                  "metadata" : {
                    "timestamp" : 0,
                    "lastUser" : {
                      "name" : "rest"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "DomainUUID"
                    }
                  }
                },
                "Response Example 5 :POST /api/fmc_config/v1/domain/DomainUUID/object/keychain ( POST method for Key Chain Object override with domain )" : {
                  "links" : {
                    "self" : "/api/fmc_config/v1/domain/DomainUUID/object/keychain/KeyChainUUID?overrideTargetId=deviceUUID"
                  },
                  "timeout" : 3,
                  "name" : "KeyChainObjectName1",
                  "type" : "KeyChainObject",
                  "description" : "description for keychain object",
                  "keys" : [ {
                    "keyId" : 2,
                    "authString" : {
                      "cryptoEncryptionType" : "PLAINTEXT",
                      "cryptoKeyString" : "keyString"
                    },
                    "acceptLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DATETIME",
                      "endLifeTimeValue" : "2018-08-27T12:14:23"
                    },
                    "sendLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DURATION",
                      "endLifeTimeValue" : "234"
                    },
                    "authAlgorithm" : "md5"
                  }, {
                    "keyId" : 24,
                    "authString" : {
                      "cryptoEncryptionType" : "PLAINTEXT",
                      "cryptoKeyString" : "keyString"
                    },
                    "acceptLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "INFINITE",
                      "endLifeTimeValue" : "2018-08-27T12:14:23"
                    },
                    "sendLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "INFINITE"
                    },
                    "authAlgorithm" : "md5"
                  } ],
                  "id" : "KeyChainUUID",
                  "overrides" : {
                    "parent" : {
                      "id" : "KeyChainUUID",
                      "type" : "KeyChainObject"
                    },
                    "target" : {
                      "name" : "Global \\ ASIA \\ INDIA",
                      "id" : "domainUUID",
                      "type" : "Domain"
                    }
                  },
                  "overridable" : true,
                  "metadata" : {
                    "timestamp" : 0,
                    "lastUser" : {
                      "name" : "rest"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "DomainUUID"
                    }
                  }
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/KeyChainObject"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/keychains/{containerUUID}/overrides" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves all(Domain and Device) overrides on a KeyChain object.Response will always be in expanded form. If passed, the \"expanded\" query parameter will be ignored.**",
        "operationId" : "getAllKeyChainObjectOverride",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/KeyChainObjectOverrideListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/domainUUID/object/keychain/keyChainUUID/overrides ( Get all overrides on given Key Chain objects )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/object/keychain/keyChainUUID/overrides?offset=0&limit=1"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/object/keychain/keyChainUUID?overrideTargetId=targetUUID"
                    },
                    "keys" : [ {
                      "keyId" : 1,
                      "authString" : {
                        "cryptoEncryptionType" : "PLAINTEXT",
                        "cryptoKeyString" : "keyString"
                      },
                      "acceptLifeTime" : {
                        "startLifeTimeValue" : "2018-08-25T12:14:23",
                        "endLifetimeType" : "DATETIME",
                        "endLifeTimeValue" : "2018-08-27T12:14:23"
                      },
                      "sendLifeTime" : {
                        "startLifeTimeValue" : "2018-08-25T12:14:23",
                        "endLifetimeType" : "DATETIME",
                        "endLifeTimeValue" : "2018-08-27T12:14:23"
                      },
                      "authAlgorithm" : "md5"
                    }, {
                      "keyId" : 2,
                      "authString" : {
                        "cryptoEncryptionType" : "PLAINTEXT",
                        "cryptoKeyString" : "keyString"
                      },
                      "acceptLifeTime" : {
                        "startLifeTimeValue" : "2018-08-25T12:14:23",
                        "endLifetimeType" : "DATETIME",
                        "endLifeTimeValue" : "2018-08-27T12:14:23"
                      },
                      "sendLifeTime" : {
                        "startLifeTimeValue" : "2018-08-25T12:14:23",
                        "endLifetimeType" : "DURATION",
                        "endLifeTimeValue" : "234"
                      },
                      "authAlgorithm" : "md5"
                    } ],
                    "type" : "KeyChainObject",
                    "name" : "KeyChainObjectName1",
                    "id" : "KeyChainUUID",
                    "description" : "description for keychain object",
                    "overrides" : {
                      "parent" : {
                        "id" : "KeyChainUUID",
                        "type" : "KeyChainObject"
                      },
                      "target" : {
                        "name" : "10.10.9.20",
                        "id" : "deviceUUID",
                        "type" : "Device"
                      }
                    },
                    "overridable" : true,
                    "metadata" : {
                      "timestamp" : 1520419867090,
                      "lastUser" : {
                        "name" : "user1"
                      },
                      "domain" : {
                        "name" : "Global \\ INDIA \\ BENGALURU",
                        "id" : "domainUUID"
                      }
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/keychains/{containerUUID}/overrides/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves all(Domain and Device) overrides on a KeyChain object.Response will always be in expanded form. If passed, the \"expanded\" query parameter will be ignored.**",
        "operationId" : "getKeyChainObjectOverride",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Input NOT Expected here",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/KeyChainObjectOverride"
            },
            "examples" : { }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/keychains/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the Keychain object associated with the specified ID. If no ID is specified for a GET, retrieves list of all Keychain objects.**",
        "operationId" : "getKeyChainObject",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for KeyChain object.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "overrideTargetId",
          "in" : "query",
          "description" : "Retrieves the override(s) associated with the KeyChain object on given target ID.",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/KeyChainObject"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /api/fmc_config/v1/domain/DomainUUID/object/keychain/KeyChainUUID ( Get KeyChain object by id )" : {
                  "links" : {
                    "self" : "/api/fmc_config/v1/domain/DomainUUID/object/keychain/KeyChainUUID"
                  },
                  "keys" : [ {
                    "keyId" : 1,
                    "authString" : {
                      "cryptoEncryptionType" : "PLAINTEXT",
                      "cryptoKeyString" : "keyString"
                    },
                    "acceptLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DATETIME",
                      "endLifeTimeValue" : "2018-08-27T12:14:23"
                    },
                    "sendLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DATETIME",
                      "endLifeTimeValue" : "2018-08-27T12:14:23"
                    },
                    "authAlgorithm" : "md5"
                  }, {
                    "keyId" : 2,
                    "authString" : {
                      "cryptoEncryptionType" : "PLAINTEXT",
                      "cryptoKeyString" : "keyString"
                    },
                    "acceptLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DATETIME",
                      "endLifeTimeValue" : "2018-08-27T12:14:23"
                    },
                    "sendLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DURATION",
                      "endLifeTimeValue" : "234"
                    },
                    "authAlgorithm" : "md5"
                  } ],
                  "type" : "KeyChainObject",
                  "name" : "KeyChainObjectName1",
                  "id" : "KeyChainUUID",
                  "description" : "description for keychain object",
                  "overridable" : false,
                  "metadata" : {
                    "timestamp" : 1523597066886,
                    "lastUser" : {
                      "name" : "rest"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "DomainUUID"
                    }
                  }
                },
                "Response Example 2 :GET /api/fmc_config/v1/domain/DomainUUID/object/keychain/KeyChainUUID ( Get KeyChain object overrides by device id )" : {
                  "links" : {
                    "self" : "/api/fmc_config/v1/domain/DomainUUID/object/keychain/KeyChainUUID?overrideTargetId=deviceUUID"
                  },
                  "keys" : [ {
                    "keyId" : 1,
                    "authString" : {
                      "cryptoEncryptionType" : "PLAINTEXT",
                      "cryptoKeyString" : "keyString"
                    },
                    "acceptLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DATETIME",
                      "endLifeTimeValue" : "2018-08-27T12:14:23"
                    },
                    "sendLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DATETIME",
                      "endLifeTimeValue" : "2018-08-27T12:14:23"
                    },
                    "authAlgorithm" : "md5"
                  }, {
                    "keyId" : 2,
                    "authString" : {
                      "cryptoEncryptionType" : "PLAINTEXT",
                      "cryptoKeyString" : "keyString"
                    },
                    "acceptLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DATETIME",
                      "endLifeTimeValue" : "2018-08-27T12:14:23"
                    },
                    "sendLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DURATION",
                      "endLifeTimeValue" : "234"
                    },
                    "authAlgorithm" : "md5"
                  } ],
                  "type" : "KeyChainObject",
                  "name" : "KeyChainObjectName1",
                  "id" : "KeyChainUUID",
                  "description" : "description for keychain object",
                  "overrides" : {
                    "parent" : {
                      "id" : "KeyChainUUID",
                      "type" : "KeyChainObject"
                    },
                    "target" : {
                      "name" : "10.10.9.20",
                      "id" : "deviceUUID",
                      "type" : "Device"
                    }
                  },
                  "overridable" : true,
                  "metadata" : {
                    "timestamp" : 1523597066886,
                    "lastUser" : {
                      "name" : "rest"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "DomainUUID"
                    }
                  }
                },
                "Response Example 3 :GET /api/fmc_config/v1/domain/DomainUUID/object/keychain/KeyChainUUID ( Get KeyChain object overrides by domain id )" : {
                  "links" : {
                    "self" : "/api/fmc_config/v1/domain/DomainUUID/object/keychain/KeyChainUUID?overrideTargetId=domainUUID"
                  },
                  "keys" : [ {
                    "keyId" : 1,
                    "authString" : {
                      "cryptoEncryptionType" : "PLAINTEXT",
                      "cryptoKeyString" : "keyString"
                    },
                    "acceptLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DATETIME",
                      "endLifeTimeValue" : "2018-08-27T12:14:23"
                    },
                    "sendLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DATETIME",
                      "endLifeTimeValue" : "2018-08-27T12:14:23"
                    },
                    "authAlgorithm" : "md5"
                  }, {
                    "keyId" : 2,
                    "authString" : {
                      "cryptoEncryptionType" : "PLAINTEXT",
                      "cryptoKeyString" : "keyString"
                    },
                    "acceptLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DATETIME",
                      "endLifeTimeValue" : "2018-08-27T12:14:23"
                    },
                    "sendLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DURATION",
                      "endLifeTimeValue" : "234"
                    },
                    "authAlgorithm" : "md5"
                  } ],
                  "type" : "KeyChainObject",
                  "name" : "KeyChainObjectName1",
                  "id" : "KeyChainUUID",
                  "description" : "description for keychain object",
                  "overrides" : {
                    "parent" : {
                      "id" : "KeyChainUUID",
                      "type" : "KeyChainObject"
                    },
                    "target" : {
                      "name" : "Global \\ ASIA \\ INDIA",
                      "id" : "domainUUID",
                      "type" : "Domain"
                    }
                  },
                  "overridable" : true,
                  "metadata" : {
                    "timestamp" : 1523597066886,
                    "lastUser" : {
                      "name" : "rest"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "DomainUUID"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the Keychain object associated with the specified ID. If no ID is specified for a GET, retrieves list of all Keychain objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateKeyChainObject",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for KeyChain object.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of KeyChain object.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/KeyChainObject"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/KeyChainObject"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /api/fmc_config/v1/domain/DomainUUID/object/keychain/KeyChainUUID ( PUT method for Key Chain Object )" : {
                  "keys" : [ {
                    "keyId" : 1,
                    "authString" : {
                      "cryptoEncryptionType" : "PLAINTEXT",
                      "cryptoKeyString" : "keyString"
                    },
                    "acceptLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DATETIME",
                      "endLifeTimeValue" : "2018-08-27T12:14:23"
                    },
                    "sendLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DATETIME",
                      "endLifeTimeValue" : "2018-08-27T12:14:23"
                    },
                    "authAlgorithm" : "md5"
                  }, {
                    "keyId" : 2,
                    "authString" : {
                      "cryptoEncryptionType" : "PLAINTEXT",
                      "cryptoKeyString" : "keyString"
                    },
                    "acceptLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DATETIME",
                      "endLifeTimeValue" : "2018-08-27T12:14:23"
                    },
                    "sendLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DURATION",
                      "endLifeTimeValue" : "234"
                    },
                    "authAlgorithm" : "md5"
                  } ],
                  "type" : "KeyChainObject",
                  "name" : "KeyChainObjectName1",
                  "description" : "description for keychain object",
                  "overridable" : false,
                  "id" : "KeyChainUUID"
                },
                "Request example 2 : PUT /api/fmc_config/v1/domain/DomainUUID/object/keychain/KeyChainUUID ( PUT method for Key Chain Object with override on domain )" : {
                  "keys" : [ {
                    "keyId" : 1,
                    "authString" : {
                      "cryptoEncryptionType" : "PLAINTEXT",
                      "cryptoKeyString" : "keyString"
                    },
                    "acceptLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DATETIME",
                      "endLifeTimeValue" : "2018-08-27T12:14:23"
                    },
                    "sendLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DATETIME",
                      "endLifeTimeValue" : "2018-08-27T12:14:23"
                    },
                    "authAlgorithm" : "md5"
                  }, {
                    "keyId" : 2,
                    "authString" : {
                      "cryptoEncryptionType" : "PLAINTEXT",
                      "cryptoKeyString" : "keyString"
                    },
                    "acceptLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DATETIME",
                      "endLifeTimeValue" : "2018-08-27T12:14:23"
                    },
                    "sendLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DURATION",
                      "endLifeTimeValue" : "234"
                    },
                    "authAlgorithm" : "md5"
                  } ],
                  "overrides" : {
                    "parent" : {
                      "id" : "KeyChainUUID",
                      "type" : "KeyChainObject"
                    },
                    "target" : {
                      "name" : "Global \\ ASIA \\ INDIA",
                      "id" : "domainUUID",
                      "type" : "Domain"
                    }
                  },
                  "overridable" : true,
                  "type" : "KeyChainObject",
                  "name" : "KeyChainObjectName1",
                  "id" : "KeyChainUUID",
                  "description" : "description for keychain object"
                },
                "Request example 3 : PUT /api/fmc_config/v1/domain/DomainUUID/object/keychain/KeyChainUUID ( PUT method for Key Chain Object with override on device )" : {
                  "keys" : [ {
                    "keyId" : 1,
                    "authString" : {
                      "cryptoEncryptionType" : "PLAINTEXT",
                      "cryptoKeyString" : "keyString"
                    },
                    "acceptLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DATETIME",
                      "endLifeTimeValue" : "2018-08-27T12:14:23"
                    },
                    "sendLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DATETIME",
                      "endLifeTimeValue" : "2018-08-27T12:14:23"
                    },
                    "authAlgorithm" : "md5"
                  }, {
                    "keyId" : 2,
                    "authString" : {
                      "cryptoEncryptionType" : "PLAINTEXT",
                      "cryptoKeyString" : "keyString"
                    },
                    "acceptLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DATETIME",
                      "endLifeTimeValue" : "2018-08-27T12:14:23"
                    },
                    "sendLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DURATION",
                      "endLifeTimeValue" : "234"
                    },
                    "authAlgorithm" : "md5"
                  } ],
                  "overrides" : {
                    "parent" : {
                      "id" : "KeyChainUUID",
                      "type" : "KeyChainObject"
                    },
                    "target" : {
                      "name" : "10.10.9.20",
                      "id" : "deviceUUID",
                      "type" : "Device"
                    }
                  },
                  "overridable" : true,
                  "type" : "KeyChainObject",
                  "name" : "KeyChainObjectName1",
                  "id" : "KeyChainUUID",
                  "description" : "description for keychain object"
                },
                "Response Example 1 :PUT /api/fmc_config/v1/domain/DomainUUID/object/keychain/KeyChainUUID ( PUT method for Key Chain Object )" : {
                  "links" : {
                    "self" : "/api/fmc_config/v1/domain/DomainUUID/object/keychain/KeyChainUUID"
                  },
                  "keys" : [ {
                    "keyId" : 1,
                    "authString" : {
                      "cryptoEncryptionType" : "PLAINTEXT",
                      "cryptoKeyString" : "keyString"
                    },
                    "acceptLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DATETIME",
                      "endLifeTimeValue" : "2018-08-27T12:14:23"
                    },
                    "sendLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DATETIME",
                      "endLifeTimeValue" : "2018-08-27T12:14:23"
                    },
                    "authAlgorithm" : "md5"
                  }, {
                    "keyId" : 2,
                    "authString" : {
                      "cryptoEncryptionType" : "PLAINTEXT",
                      "cryptoKeyString" : "keyString"
                    },
                    "acceptLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DATETIME",
                      "endLifeTimeValue" : "2018-08-27T12:14:23"
                    },
                    "sendLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DURATION",
                      "endLifeTimeValue" : "234"
                    },
                    "authAlgorithm" : "md5"
                  } ],
                  "type" : "KeyChainObject",
                  "name" : "KeyChainObjectName1",
                  "id" : "KeyChainUUID",
                  "description" : "description for keychain object",
                  "overridable" : false,
                  "metadata" : {
                    "timestamp" : 0,
                    "lastUser" : {
                      "name" : "rest"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "DomainUUID"
                    }
                  }
                },
                "Response Example 2 :PUT /api/fmc_config/v1/domain/DomainUUID/object/keychain/KeyChainUUID ( PUT method for Key Chain Object with override on domain )" : {
                  "links" : {
                    "self" : "/api/fmc_config/v1/domain/DomainUUID/object/keychain/KeyChainUUID"
                  },
                  "keys" : [ {
                    "keyId" : 1,
                    "authString" : {
                      "cryptoEncryptionType" : "PLAINTEXT",
                      "cryptoKeyString" : "keyString"
                    },
                    "acceptLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DATETIME",
                      "endLifeTimeValue" : "2018-08-27T12:14:23"
                    },
                    "sendLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DATETIME",
                      "endLifeTimeValue" : "2018-08-27T12:14:23"
                    },
                    "authAlgorithm" : "md5"
                  }, {
                    "keyId" : 2,
                    "authString" : {
                      "cryptoEncryptionType" : "PLAINTEXT",
                      "cryptoKeyString" : "keyString"
                    },
                    "acceptLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DATETIME",
                      "endLifeTimeValue" : "2018-08-27T12:14:23"
                    },
                    "sendLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DURATION",
                      "endLifeTimeValue" : "234"
                    },
                    "authAlgorithm" : "md5"
                  } ],
                  "type" : "KeyChainObject",
                  "name" : "KeyChainObjectName1",
                  "id" : "KeyChainUUID",
                  "description" : "description for keychain object",
                  "overrides" : {
                    "parent" : {
                      "id" : "KeyChainUUID",
                      "type" : "KeyChainObject"
                    },
                    "target" : {
                      "name" : "Global \\ ASIA \\ INDIA",
                      "id" : "domainUUID",
                      "type" : "Domain"
                    }
                  },
                  "overridable" : true,
                  "metadata" : {
                    "timestamp" : 0,
                    "lastUser" : {
                      "name" : "rest"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "DomainUUID"
                    }
                  }
                },
                "Response Example 3 :PUT /api/fmc_config/v1/domain/DomainUUID/object/keychain/KeyChainUUID ( PUT method for Key Chain Object with override on device )" : {
                  "links" : {
                    "self" : "/api/fmc_config/v1/domain/DomainUUID/object/keychain/KeyChainUUID"
                  },
                  "keys" : [ {
                    "keyId" : 1,
                    "authString" : {
                      "cryptoEncryptionType" : "PLAINTEXT",
                      "cryptoKeyString" : "keyString"
                    },
                    "acceptLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DATETIME",
                      "endLifeTimeValue" : "2018-08-27T12:14:23"
                    },
                    "sendLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DATETIME",
                      "endLifeTimeValue" : "2018-08-27T12:14:23"
                    },
                    "authAlgorithm" : "md5"
                  }, {
                    "keyId" : 2,
                    "authString" : {
                      "cryptoEncryptionType" : "PLAINTEXT",
                      "cryptoKeyString" : "keyString"
                    },
                    "acceptLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DATETIME",
                      "endLifeTimeValue" : "2018-08-27T12:14:23"
                    },
                    "sendLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DURATION",
                      "endLifeTimeValue" : "234"
                    },
                    "authAlgorithm" : "md5"
                  } ],
                  "type" : "KeyChainObject",
                  "name" : "KeyChainObjectName1",
                  "id" : "KeyChainUUID",
                  "description" : "description for keychain object",
                  "overrides" : {
                    "parent" : {
                      "id" : "KeyChainUUID",
                      "type" : "KeyChainObject"
                    },
                    "target" : {
                      "name" : "10.10.9.20",
                      "id" : "deviceUUID",
                      "type" : "Device"
                    }
                  },
                  "overridable" : true,
                  "metadata" : {
                    "timestamp" : 0,
                    "lastUser" : {
                      "name" : "rest"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "DomainUUID"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/KeyChainObject"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the Keychain object associated with the specified ID. If no ID is specified for a GET, retrieves list of all Keychain objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteKeyChainObject",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for KeyChain object.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/KeyChainObject"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /api/fmc_config/v1/domain/DomainUUID/object/keychain/KeyChainUUID ( DELETE method for Key Chain Object )" : {
                  "links" : {
                    "self" : "/api/fmc_config/v1/domain/DomainUUID/object/keychain/KeyChainUUID"
                  },
                  "keys" : [ {
                    "keyId" : 1,
                    "authString" : {
                      "cryptoEncryptionType" : "PLAINTEXT",
                      "cryptoKeyString" : "keyString"
                    },
                    "acceptLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DATETIME",
                      "endLifeTimeValue" : "2018-08-27T12:14:23"
                    },
                    "sendLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DATETIME",
                      "endLifeTimeValue" : "2018-08-27T12:14:23"
                    },
                    "authAlgorithm" : "md5"
                  }, {
                    "keyId" : 2,
                    "authString" : {
                      "cryptoEncryptionType" : "PLAINTEXT",
                      "cryptoKeyString" : "keyString"
                    },
                    "acceptLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DATETIME",
                      "endLifeTimeValue" : "2018-08-27T12:14:23"
                    },
                    "sendLifeTime" : {
                      "startLifeTimeValue" : "2018-08-25T12:14:23",
                      "endLifetimeType" : "DURATION",
                      "endLifeTimeValue" : "234"
                    },
                    "authAlgorithm" : "md5"
                  } ],
                  "type" : "KeyChainObject",
                  "name" : "KeyChainObjectName1",
                  "id" : "KeyChainUUID",
                  "description" : "description for keychain object",
                  "metadata" : {
                    "timestamp" : 1524129145233,
                    "lastUser" : {
                      "name" : "rest"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "DomainUUID"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/localrealmusers" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the local realm user object associated with the specified ID. If no ID is specified, retrieves list of all local realm user objects.**",
        "operationId" : "getAllLocalRealmUser",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "To filter users by realm, use <code>realm:{realmUUID}</code><br/><br/>To filter users by name, use <code>name:{name}</code>",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/LocalRealmUserListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/domainUUID/object/localrealmusers?limit=2 ( Get all paginated LocalRealmUsers with limit set 2 )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/object/localrealmusers?offset=0&limit=2"
                  },
                  "items" : [ {
                    "id" : "Local-Realm-User-UUID-1",
                    "type" : "LocalRealmUser",
                    "name" : "Test1",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/default/object/localrealmusers/Local-Realm-User-UUID-1"
                    }
                  }, {
                    "id" : "Local-Realm-User-UUID-2",
                    "type" : "LocalRealmUser",
                    "name" : "Test2",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/default/object/localrealmusers/Local-Realm-User-UUID-2"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 5,
                    "next" : [ "/fmc_config/v1/domain/domainUUID/object/localrealmusers?offset=2&limit=2", "/fmc_config/v1/domain/domainUUID/object/localrealmusers?offset=4&limit=1" ],
                    "pages" : 3
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/domainUUID/object/localrealmusers?limit=2&expanded=true ( Get all paginated LocalRealmUser with expanded=true )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/object/localrealmusers?offset=0&limit=2&expanded=true"
                  },
                  "items" : [ {
                    "id" : "Local-Realm-User-UUID-1",
                    "type" : "LocalRealmUser",
                    "name" : "Test1",
                    "password" : "**********",
                    "realm" : {
                      "id" : "realmUUID",
                      "type" : "Realm",
                      "name" : "ntd-test.cisco.com"
                    },
                    "links" : {
                      "self" : "/fmc_config/v1/domain/default/object/localrealmusers/Local-Realm-User-UUID-1"
                    },
                    "metadata" : {
                      "readOnly" : {
                        "state" : true
                      },
                      "timestamp" : 1459973987,
                      "lastUser" : {
                        "name" : "admin",
                        "id" : "User-UUID",
                        "type" : "user"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUUID",
                        "type" : "domain"
                      }
                    }
                  }, {
                    "id" : "Local-Realm-User-UUID-2",
                    "type" : "LocalRealmUser",
                    "name" : "Test2",
                    "password" : "**********",
                    "realm" : {
                      "id" : "realmUUID",
                      "type" : "Realm",
                      "name" : "ntd-test.cisco.com"
                    },
                    "links" : {
                      "self" : "/fmc_config/v1/domain/default/object/localrealmusers/Local-Realm-User-UUID-2"
                    },
                    "metadata" : {
                      "readOnly" : {
                        "state" : true
                      },
                      "timestamp" : 1459973987,
                      "lastUser" : {
                        "name" : "admin",
                        "id" : "User-UUID",
                        "type" : "user"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUUID",
                        "type" : "domain"
                      }
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 5,
                    "next" : [ "/fmc_config/v1/domain/domainUUID/object/localrealmusers?offset=2&limit=2", "/fmc_config/v1/domain/domainUUID/object/localrealmusers?offset=4&limit=1" ],
                    "pages" : 3
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the local realm user object associated with the specified ID. If no ID is specified, retrieves list of all local realm user objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createMultipleLocalRealmUser",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of Local Realm User Object.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LocalRealmUser"
          }
        }, {
          "name" : "bulk",
          "in" : "query",
          "description" : "Enables bulk create for Local Realm Users.",
          "required" : false,
          "type" : "boolean"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/LocalRealmUser"
            },
            "examples" : { }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/LocalRealmUser"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/localrealmusers/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the local realm user object associated with the specified ID. If no ID is specified, retrieves list of all local realm user objects.**",
        "operationId" : "getLocalRealmUser",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of local realm user.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/LocalRealmUser"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/domainUUID/object/localrealmusers/Local-Realm-User-UUID-1 ( Get LocalRealmUser by id )" : {
                  "id" : "Local-Realm-User-UUID-1",
                  "type" : "LocalRealmUser",
                  "name" : "Test1",
                  "password" : "**********",
                  "realm" : {
                    "id" : "realmUUID",
                    "type" : "Realm",
                    "name" : "ntd-test.cisco.com"
                  },
                  "metadata" : {
                    "timestamp" : 1459973987,
                    "readOnly" : {
                      "state" : false
                    },
                    "domain" : {
                      "id" : "domainUUID",
                      "type" : "Domain",
                      "name" : "Global"
                    },
                    "lastUser" : {
                      "name" : "admin",
                      "id" : "User-UUID",
                      "type" : "User"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the local realm user object associated with the specified ID. If no ID is specified, retrieves list of all local realm user objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateLocalRealmUser",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of local realm user.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of Local Realm User Object.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LocalRealmUser"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/LocalRealmUser"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/DomainUUID/object/localrealmusers/Local-Realm-User-UUID-1 ( Test PUT of LocalRealmUser )" : {
                  "name" : "Test1",
                  "id" : "Local-Realm-User-UUID-1",
                  "type" : "LocalRealmUser",
                  "password" : "TESTPASSWORD_UPDATE",
                  "realm" : {
                    "id" : "realmUUID",
                    "type" : "Realm",
                    "name" : "ntd-test.cisco.com"
                  }
                },
                "Response Example 1 :PUT /fmc_config/v1/domain/DomainUUID/object/localrealmusers/Local-Realm-User-UUID-1 ( Test PUT of LocalRealmUser )" : {
                  "id" : "Local-Realm-User-UUID-1",
                  "type" : "LocalRealmUser",
                  "name" : "Test1",
                  "password" : "**********",
                  "realm" : {
                    "id" : "realmUUID",
                    "type" : "Realm",
                    "name" : "ntd-test.cisco.com"
                  },
                  "metadata" : {
                    "timestamp" : 1459975244,
                    "readOnly" : {
                      "state" : false
                    },
                    "domain" : {
                      "id" : "domainUUID",
                      "type" : "Domain",
                      "name" : "Global"
                    },
                    "lastUser" : {
                      "name" : "admin",
                      "id" : "User-UUID",
                      "type" : "User"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/LocalRealmUser"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the local realm user object associated with the specified ID. If no ID is specified, retrieves list of all local realm user objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteLocalRealmUser",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of local realm user.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/LocalRealmUser"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/networkaddresses" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves list of all  network and host objects.**",
        "operationId" : "getNetworkAddress",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "To be used in conjunction with <code>\"unusedOnly:true\"</code> to search for unused objects and <code>\"nameOrValue:{nameOrValue}\"</code> to search for both name and value.",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/NetworkAddressListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/domainUUID/object/networkaddresses ( GET ALL NetworkAddresses )" : {
                  "links" : {
                    "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/networkaddresses?offset=0&limit=19"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/networkaddresses/Network-UUID-1"
                    },
                    "type" : "Network",
                    "name" : "any",
                    "id" : "Network-UUID-1"
                  }, {
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/networkaddresses/Network-UUID-2"
                    },
                    "type" : "Network",
                    "name" : "any-ipv4",
                    "id" : "Network-UUID-2"
                  }, {
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/networkaddresses/Host-UUID-1"
                    },
                    "type" : "Host",
                    "name" : "any-ipv6",
                    "id" : "Host-UUID-1"
                  }, {
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/networkaddresses//Network-UUID-3"
                    },
                    "type" : "Network",
                    "name" : "IPv4-Benchmark-Tests",
                    "id" : "Network-UUID-3"
                  }, {
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/networkaddresses/Network-UUID-4"
                    },
                    "type" : "Network",
                    "name" : "IPv4-Link-Local",
                    "id" : "Network-UUID-4"
                  }, {
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/networkaddresses/Network-UUID-5"
                    },
                    "type" : "Network",
                    "name" : "IPv4-Multicast",
                    "id" : "Network-UUID-5"
                  }, {
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/networkaddresses/Network-UUID-6"
                    },
                    "type" : "Network",
                    "name" : "IPv4-Private-10.0.0.0-8",
                    "id" : "Network-UUID-6"
                  }, {
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/networkaddresses/Network-UUID-7"
                    },
                    "type" : "Network",
                    "name" : "IPv4-Private-172.16.0.0-12",
                    "id" : "Network-UUID-7"
                  }, {
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/networkaddresses/Network-UUID-8"
                    },
                    "type" : "Network",
                    "name" : "IPv4-Private-192.168.0.0-16",
                    "id" : "Network-UUID-8"
                  }, {
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/networkaddresses/Network-UUID-9"
                    },
                    "type" : "Network",
                    "name" : "IPv6-IPv4-Mapped",
                    "id" : "Network-UUID-9"
                  }, {
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/networkaddresses/Network-UUID-10"
                    },
                    "type" : "Network",
                    "name" : "IPv6-Link-Local",
                    "id" : "Network-UUID-10"
                  }, {
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/networkaddresses/Network-UUID-11"
                    },
                    "type" : "Network",
                    "name" : "IPv6-Private-Unique-Local-Addresses",
                    "id" : "Network-UUID-11"
                  }, {
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/networkaddresses/Network-UUID-12"
                    },
                    "type" : "Network",
                    "name" : "IPv6-to-IPv4-Relay-Anycast",
                    "id" : "Network-UUID-12"
                  }, {
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/networkaddresses/Network-UUID-13"
                    },
                    "type" : "Network",
                    "name" : "NewTest",
                    "id" : "Network-UUID-13"
                  }, {
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/networkaddresses/Network-UUID-14"
                    },
                    "type" : "Network",
                    "name" : "TestGlobal",
                    "id" : "Network-UUID-14"
                  }, {
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/networkaddresses/Host-UUID-2"
                    },
                    "type" : "Host",
                    "name" : "TestHost",
                    "id" : "Host-UUID-2"
                  }, {
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/networkaddresses/Host-UUID-3"
                    },
                    "type" : "Host",
                    "name" : "TestHost1",
                    "id" : "Host-UUID-3"
                  }, {
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/networkaddresses/Host-UUID-4"
                    },
                    "type" : "Host",
                    "name" : "TestHostTestDomain",
                    "id" : "Host-UUID-4"
                  }, {
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/networkaddresses/Host-UUID-5"
                    },
                    "type" : "Network",
                    "name" : "TestTestDomain",
                    "id" : "Host-UUID-5"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 19,
                    "count" : 19,
                    "pages" : 1
                  }
                },
                "Response Example 2 :GET /fmc_config/v1/domain/domainUUID/object/networkaddresses?expanded=true ( GET ALL NetworkAddresses )" : {
                  "links" : {
                    "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/networkaddresses?offset=0&limit=19"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/networkaddresses/Network-UUID-1"
                    },
                    "type" : "Network",
                    "overridable" : false,
                    "description" : " ",
                    "name" : "any",
                    "id" : "Network-UUID-1",
                    "metadata" : {
                      "readOnly" : {
                        "state" : true,
                        "reason" : "SYSTEM"
                      },
                      "lastUser" : {
                        "name" : "testuser"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "Global-domain-UUID"
                      }
                    }
                  }, {
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/networkaddresses/Network-UUID-2"
                    },
                    "type" : "Network",
                    "overridable" : false,
                    "description" : " ",
                    "name" : "any-ipv4",
                    "id" : "Network-UUID-2",
                    "metadata" : {
                      "readOnly" : {
                        "state" : true,
                        "reason" : "SYSTEM"
                      },
                      "lastUser" : {
                        "name" : "testuser"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "Global-domain-UUID"
                      }
                    }
                  }, {
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/networkaddresses/Host-UUID-1"
                    },
                    "type" : "Host",
                    "overridable" : false,
                    "description" : " ",
                    "name" : "any-ipv6",
                    "id" : "Host-UUID-1",
                    "metadata" : {
                      "readOnly" : {
                        "state" : true,
                        "reason" : "SYSTEM"
                      },
                      "lastUser" : {
                        "name" : "testuser"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "Global-domain-UUID"
                      }
                    }
                  }, {
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/networkaddresses/Network-UUID-3"
                    },
                    "type" : "Network",
                    "overridable" : false,
                    "description" : " ",
                    "name" : "IPv4-Benchmark-Tests",
                    "id" : "Network-UUID-3",
                    "metadata" : {
                      "readOnly" : {
                        "state" : true,
                        "reason" : "SYSTEM"
                      },
                      "lastUser" : {
                        "name" : "testuser"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "Global-domain-UUID"
                      }
                    }
                  }, {
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/networkaddresses/Network-UUID-4"
                    },
                    "type" : "Network",
                    "overridable" : false,
                    "description" : " ",
                    "name" : "IPv4-Link-Local",
                    "id" : "Network-UUID-4",
                    "metadata" : {
                      "readOnly" : {
                        "state" : true,
                        "reason" : "SYSTEM"
                      },
                      "lastUser" : {
                        "name" : "testuser"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "Global-domain-UUID"
                      }
                    }
                  }, {
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/networkaddresses/Network-UUID-5"
                    },
                    "type" : "Network",
                    "overridable" : false,
                    "description" : " ",
                    "name" : "IPv4-Multicast",
                    "id" : "Network-UUID-5",
                    "metadata" : {
                      "readOnly" : {
                        "state" : true,
                        "reason" : "SYSTEM"
                      },
                      "lastUser" : {
                        "name" : "testuser"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "Global-domain-UUID"
                      }
                    }
                  }, {
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/networkaddresses/Network-UUID-6"
                    },
                    "type" : "Network",
                    "overridable" : false,
                    "description" : " ",
                    "name" : "IPv4-Private-10.0.0.0-8",
                    "id" : "Network-UUID-6",
                    "metadata" : {
                      "readOnly" : {
                        "state" : true,
                        "reason" : "SYSTEM"
                      },
                      "lastUser" : {
                        "name" : "testuser"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "Global-domain-UUID"
                      }
                    }
                  }, {
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/networkaddresses/Network-UUID-7"
                    },
                    "type" : "Network",
                    "overridable" : false,
                    "description" : " ",
                    "name" : "IPv4-Private-172.16.0.0-12",
                    "id" : "Network-UUID-7",
                    "metadata" : {
                      "readOnly" : {
                        "state" : true,
                        "reason" : "SYSTEM"
                      },
                      "lastUser" : {
                        "name" : "testuser"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "Global-domain-UUID"
                      }
                    }
                  }, {
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/networkaddresses/Network-UUID-8"
                    },
                    "type" : "Network",
                    "overridable" : false,
                    "description" : " ",
                    "name" : "IPv4-Private-192.168.0.0-16",
                    "id" : "Network-UUID-8",
                    "metadata" : {
                      "readOnly" : {
                        "state" : true,
                        "reason" : "SYSTEM"
                      },
                      "lastUser" : {
                        "name" : "testuser"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "Global-domain-UUID"
                      }
                    }
                  }, {
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/networkaddresses/Network-UUID-9"
                    },
                    "type" : "Network",
                    "overridable" : false,
                    "description" : " ",
                    "name" : "IPv6-IPv4-Mapped",
                    "id" : "Network-UUID-9",
                    "metadata" : {
                      "readOnly" : {
                        "state" : true,
                        "reason" : "SYSTEM"
                      },
                      "lastUser" : {
                        "name" : "testuser"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "Global-domain-UUID"
                      }
                    }
                  }, {
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/networkaddresses/Network-UUID-10"
                    },
                    "type" : "Network",
                    "overridable" : false,
                    "description" : " ",
                    "name" : "IPv6-Link-Local",
                    "id" : "Network-UUID-10",
                    "metadata" : {
                      "readOnly" : {
                        "state" : true,
                        "reason" : "SYSTEM"
                      },
                      "lastUser" : {
                        "name" : "testuser"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "Global-domain-UUID"
                      }
                    }
                  }, {
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/networkaddresses/Network-UUID-11"
                    },
                    "type" : "Network",
                    "overridable" : false,
                    "description" : " ",
                    "name" : "IPv6-Private-Unique-Local-Addresses",
                    "id" : "Network-UUID-11",
                    "metadata" : {
                      "readOnly" : {
                        "state" : true,
                        "reason" : "SYSTEM"
                      },
                      "lastUser" : {
                        "name" : "testuser"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "Global-domain-UUID"
                      }
                    }
                  }, {
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/networkaddresses/Network-UUID-12"
                    },
                    "type" : "Network",
                    "overridable" : false,
                    "description" : " ",
                    "name" : "IPv6-to-IPv4-Relay-Anycast",
                    "id" : "Network-UUID-12",
                    "metadata" : {
                      "readOnly" : {
                        "state" : true,
                        "reason" : "SYSTEM"
                      },
                      "lastUser" : {
                        "name" : "testuser"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "Global-domain-UUID"
                      }
                    }
                  }, {
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/networkaddresses/Network-UUID-13"
                    },
                    "type" : "Network",
                    "overridable" : false,
                    "description" : "Test New",
                    "name" : "NewTest",
                    "id" : "Network-UUID-13",
                    "metadata" : {
                      "lastUser" : {
                        "name" : "testuser"
                      },
                      "domain" : {
                        "name" : "Global \\ TestDomain",
                        "id" : "domainUUID"
                      }
                    }
                  }, {
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/networkaddresses/Network-UUID-14"
                    },
                    "type" : "Network",
                    "overridable" : false,
                    "description" : "TestGlobal",
                    "name" : "TestGlobal",
                    "id" : "Network-UUID-14",
                    "metadata" : {
                      "lastUser" : {
                        "name" : "testuser"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "Global-domain-UUID"
                      }
                    }
                  }, {
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/networkaddresses/Host-UUID-2"
                    },
                    "type" : "Host",
                    "overridable" : false,
                    "description" : " ",
                    "name" : "TestHost",
                    "id" : "Host-UUID-2",
                    "metadata" : {
                      "lastUser" : {
                        "name" : "testuser"
                      },
                      "domain" : {
                        "name" : "Global \\ TestDomain",
                        "id" : "domainUUID"
                      }
                    }
                  }, {
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/networkaddresses/Host-UUID-3"
                    },
                    "type" : "Host",
                    "overridable" : false,
                    "description" : " ",
                    "name" : "TestHost1",
                    "id" : "Host-UUID-3",
                    "metadata" : {
                      "lastUser" : {
                        "name" : "testuser"
                      },
                      "domain" : {
                        "name" : "Global \\ TestDomain",
                        "id" : "domainUUID"
                      }
                    }
                  }, {
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/networkaddresses/Host-UUID-4"
                    },
                    "type" : "Host",
                    "overridable" : false,
                    "description" : " ",
                    "name" : "TestHostTestDomain",
                    "id" : "Host-UUID-4",
                    "metadata" : {
                      "lastUser" : {
                        "name" : "testuser"
                      },
                      "domain" : {
                        "name" : "Global \\ TestDomain",
                        "id" : "domainUUID"
                      }
                    }
                  }, {
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/networkaddresses/Host-UUID-5"
                    },
                    "type" : "Network",
                    "overridable" : false,
                    "description" : "TestTestDomain",
                    "name" : "TestTestDomain",
                    "id" : "Host-UUID-5",
                    "metadata" : {
                      "lastUser" : {
                        "name" : "testuser"
                      },
                      "domain" : {
                        "name" : "Global \\ TestDomain",
                        "id" : "domainUUID"
                      }
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 19,
                    "count" : 19,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/networkgroups" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the network group object associated with the specified ID. If no ID is specified for a GET, retrieves list of all network group objects.**",
        "operationId" : "getAllNetworkGroup",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "To be used in conjunction with <code>\"unusedOnly:true\"</code> to search for unused objects and <code>\"nameOrValue:{nameOrValue}\"</code> to search for both name and value.",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/NetworkGroupListContainer"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the network group object associated with the specified ID. If no ID is specified for a GET, retrieves list of all network group objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createMultipleNetworkGroup",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of network group.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/NetworkGroup"
          }
        }, {
          "name" : "bulk",
          "in" : "query",
          "description" : "Enables bulk create for network group objects.",
          "required" : false,
          "type" : "boolean"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/NetworkGroup"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /fmc_config/v1/domain/DomainUUID/object/networkgroups ( Test registration of NetworkGroup to create a new record )" : {
                  "name" : "networkgroup_obj1",
                  "objects" : [ {
                    "type" : "Network",
                    "id" : "NetworkObjectUUID"
                  }, {
                    "type" : "Host",
                    "id" : "HostObjectUUID"
                  }, {
                    "type" : "Range",
                    "id" : "RangeObjectUUID"
                  } ],
                  "literals" : [ {
                    "type" : "Network",
                    "value" : "1.2.3.0/24"
                  }, {
                    "type" : "Host",
                    "value" : "1.2.3.4"
                  } ],
                  "type" : "NetworkGroup"
                },
                "Request example 2 : POST /fmc_config/v1/domain/DomainUUID/object/networkgroups?bulk=true ( Bulk POST operation for network groups )" : [ {
                  "name" : "ng1",
                  "objects" : [ {
                    "type" : "Network",
                    "name" : "IPv4-Link-Local",
                    "id" : "f0ce41ae-6ee9-4e00-8762-da9370c4fee5"
                  } ],
                  "literals" : [ {
                    "type" : "Host",
                    "value" : "1.2.3.4"
                  } ],
                  "type" : "NetworkGroup"
                }, {
                  "name" : "ng2",
                  "objects" : [ {
                    "type" : "Range",
                    "name" : "Range1",
                    "id" : "00000000-0000-0ed3-0000-103079215282"
                  } ],
                  "literals" : [ {
                    "type" : "Network",
                    "value" : "1.2.3.0/24"
                  } ],
                  "type" : "NetworkGroup"
                } ],
                "Request example 3 : POST /fmc_config/v1/domain/DomainUUID/object/networkgroups?bulk=true ( Bulk POST operation for network groups with overrides )" : [ {
                  "type" : "NetworkGroup",
                  "literals" : [ {
                    "type" : "Host",
                    "value" : "1.2.3.10"
                  } ],
                  "objects" : [ {
                    "type" : "FQDN",
                    "name" : "fqdn_obj",
                    "id" : "fqdn_obj_uuid"
                  }, {
                    "type" : "Network",
                    "name" : "net_1",
                    "id" : "net_1_uuid"
                  } ],
                  "overrides" : {
                    "parent" : {
                      "id" : "netgrp_uuid",
                      "type" : "NetworkGroup"
                    },
                    "target" : {
                      "name" : "Global \\ EUROPE",
                      "id" : "domain_uuid",
                      "type" : "Domain"
                    }
                  },
                  "overridable" : true,
                  "description" : " ",
                  "name" : "netgrp",
                  "id" : "netgrp_uuid"
                }, {
                  "type" : "NetworkGroup",
                  "literals" : [ {
                    "type" : "Host",
                    "value" : "1.2.3.20"
                  } ],
                  "objects" : [ {
                    "type" : "Host",
                    "name" : "host_10",
                    "id" : "host_10_uuid"
                  }, {
                    "type" : "Network",
                    "name" : "net_1",
                    "id" : "net_1_uuid"
                  } ],
                  "overrides" : {
                    "parent" : {
                      "id" : "netgrp_uuid",
                      "type" : "NetworkGroup"
                    },
                    "target" : {
                      "name" : "FTDv_R1",
                      "id" : "device_uuid",
                      "type" : "Device"
                    }
                  },
                  "overridable" : true,
                  "description" : " ",
                  "name" : "netgrp",
                  "id" : "netgrp_uuid"
                } ],
                "Request example 4 : POST /fmc_config/v1/domain/domainUuid/object/networkgroups ( POST request to create an override on network group )" : {
                  "objects" : [ {
                    "type" : "FQDN",
                    "id" : "fqdn1_uuid",
                    "name" : "fqdn1"
                  }, {
                    "type" : "Network",
                    "id" : "net1_uuid",
                    "name" : "net1"
                  } ],
                  "type" : "NetworkGroup",
                  "overridable" : true,
                  "overrides" : {
                    "parent" : {
                      "id" : "netgrp2_uuid",
                      "type" : "NetworkGroup"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "target_uuid",
                      "type" : "Device"
                    }
                  },
                  "description" : " ",
                  "id" : "netgrp2_uuid",
                  "name" : "netgrp2"
                },
                "Request example 5 : POST /fmc_config/v1/domain/DomainUUID/object/networkgroups ( Test POST of network group object to create a new record )" : {
                  "type" : "Network",
                  "objects" : [ {
                    "type" : "Network",
                    "name" : "network_group_object_4",
                    "id" : "networkGroupUUID"
                  }, {
                    "type" : "Network",
                    "name" : "network_group_object_3",
                    "id" : "networkGroupUUID"
                  } ],
                  "literals" : [ {
                    "type" : "Network",
                    "value" : "10.0.0.0/8"
                  }, {
                    "type" : "Host",
                    "value" : "10.0.0.25"
                  } ],
                  "name" : "network_group_1"
                },
                "Response Example 2 :POST /fmc_config/v1/domain/DomainUUID/object/networkgroups?bulk=true ( Bulk POST operation for network groups )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/networkgroups?bulk=true"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/networkgroups/ng1Uuid"
                    },
                    "type" : "NetworkGroup",
                    "objects" : [ {
                      "type" : "Network",
                      "name" : "net1",
                      "id" : "net1Uuid"
                    } ],
                    "literals" : [ {
                      "type" : "Host",
                      "value" : "1.2.3.4"
                    } ],
                    "overridable" : false,
                    "description" : " ",
                    "name" : "ng1",
                    "id" : "ng1Uuid",
                    "metadata" : {
                      "timestamp" : 0,
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUuid"
                      }
                    }
                  }, {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/networkgroups/ng2Uuid"
                    },
                    "type" : "NetworkGroup",
                    "objects" : [ {
                      "type" : "Range",
                      "name" : "Range1",
                      "id" : "range1Uuid"
                    } ],
                    "literals" : [ {
                      "type" : "Network",
                      "value" : "1.2.3.0/24"
                    } ],
                    "overridable" : false,
                    "description" : " ",
                    "name" : "ng2",
                    "id" : "ng2Uuid",
                    "metadata" : {
                      "timestamp" : 0,
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUuid"
                      }
                    }
                  } ]
                },
                "Response Example 3 :POST /fmc_config/v1/domain/DomainUUID/object/networkgroups?bulk=true ( Bulk POST operation for network groups with overrides )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/networkgroups?bulk=true"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/networkgroups/netgrp_uuid"
                    },
                    "type" : "NetworkGroup",
                    "literals" : [ {
                      "type" : "Host",
                      "value" : "1.2.3.10"
                    } ],
                    "objects" : [ {
                      "type" : "FQDN",
                      "name" : "fqdn_obj",
                      "id" : "fqdn_obj_uuid"
                    }, {
                      "type" : "Network",
                      "name" : "net_1",
                      "id" : "net_1_uuid"
                    } ],
                    "overrides" : {
                      "parent" : {
                        "id" : "netgrp_uuid",
                        "type" : "NetworkGroup"
                      },
                      "target" : {
                        "name" : "Global \\ EUROPE",
                        "id" : "domain_uuid",
                        "type" : "Domain"
                      }
                    },
                    "overridable" : true,
                    "name" : "netgrp",
                    "id" : "netgrp_uuid",
                    "metadata" : {
                      "timestamp" : 0,
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global \\ EUROPE",
                        "id" : "domain_uuid"
                      }
                    }
                  }, {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/networkgroups/netgrp_uuid"
                    },
                    "type" : "NetworkGroup",
                    "literals" : [ {
                      "type" : "Host",
                      "value" : "1.2.3.20"
                    } ],
                    "objects" : [ {
                      "type" : "Host",
                      "name" : "host_10",
                      "id" : "host_10_uuid"
                    }, {
                      "type" : "Network",
                      "name" : "net_1",
                      "id" : "net_1_uuid"
                    } ],
                    "overrides" : {
                      "parent" : {
                        "id" : "netgrp_uuid",
                        "type" : "NetworkGroup"
                      },
                      "target" : {
                        "name" : "FTDv_R1",
                        "id" : "device_uuid",
                        "type" : "Device"
                      }
                    },
                    "overridable" : true,
                    "name" : "netgrp",
                    "id" : "netgrp_uuid",
                    "metadata" : {
                      "timestamp" : 0,
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global \\ ASIA",
                        "id" : "domain_uuid"
                      }
                    }
                  } ]
                },
                "Response Example 4 :POST /fmc_config/v1/domain/domainUuid/object/networkgroups ( POST request to create an override on network group )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/networkgroups/netgrp2_uuid?overrideTargetId=target_uuid"
                  },
                  "objects" : [ {
                    "type" : "FQDN",
                    "id" : "fqdn1_uuid",
                    "name" : "fqdn1"
                  }, {
                    "type" : "Network",
                    "id" : "net1_uuid",
                    "name" : "net1"
                  } ],
                  "type" : "NetworkGroup",
                  "overrides" : {
                    "parent" : {
                      "id" : "netgrp2_uuid",
                      "type" : "NetworkGroup"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "target_uuid",
                      "type" : "Device"
                    }
                  },
                  "overridable" : true,
                  "id" : "netgrp2_uuid",
                  "name" : "netgrp2",
                  "metadata" : {
                    "timestamp" : 0,
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUuid"
                    }
                  }
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/NetworkGroup"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/networkgroups/{containerUUID}/overrides" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves all(Domain and Device) overrides on a NetworkGroup object.Response will always be in expanded form. If passed, the \"expanded\" query parameter will be ignored.**",
        "operationId" : "getAllNetworkGroupOverride",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/NetworkGroupOverrideListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/domainUUID/object/networkgroups/networkGroupUUID/overrides ( Get all overrides on Given NetworkGroup object )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/object/networkgroups/networkGroupUUID/overrides?offset=0&limit=1"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/object/networkgroups/networkGroupUUID?overrideTargetId=targetUUID"
                    },
                    "type" : "NetworkGroup",
                    "objects" : [ {
                      "type" : "Network",
                      "name" : "IPv4-Link-Local",
                      "id" : "networkUUID"
                    } ],
                    "overrides" : {
                      "parent" : {
                        "id" : "networkGroupUUID",
                        "type" : "NetworkGroup"
                      },
                      "target" : {
                        "name" : "Global \\ INDIA \\ BENGALURU",
                        "id" : "targetUUID",
                        "type" : "Domain"
                      }
                    },
                    "overridable" : true,
                    "description" : " ",
                    "name" : "NW_Group",
                    "id" : "networkGroupUUID",
                    "metadata" : {
                      "timestamp" : 1520419016850,
                      "lastUser" : {
                        "name" : "user1"
                      },
                      "domain" : {
                        "name" : "Global \\ INDIA \\ BENGALURU",
                        "id" : "targetUUID"
                      }
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/networkgroups/{containerUUID}/overrides/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves all(Domain and Device) overrides on a NetworkGroup object.Response will always be in expanded form. If passed, the \"expanded\" query parameter will be ignored.**",
        "operationId" : "getNetworkGroupOverride",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Input NOT Expected here",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/NetworkGroupOverride"
            },
            "examples" : { }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/networkgroups/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the network group object associated with the specified ID. If no ID is specified for a GET, retrieves list of all network group objects.**",
        "operationId" : "getNetworkGroup",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for a network group.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "overrideTargetId",
          "in" : "query",
          "description" : "Retrieves the override(s) associated with the network group object on given target ID.",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/NetworkGroup"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/object/networkgroups/networkGroup1UUID ( Test GET of NetworkGroup Object for a uuid )" : {
                  "id" : "networkGroup1UUID",
                  "name" : "networkgroup_obj1",
                  "type" : "NetworkGroup",
                  "objects" : [ {
                    "type" : "Network",
                    "id" : "NetworkObjectUUID",
                    "name" : "network_obj_name",
                    "links" : {
                      "self" : "link_to_network_obj"
                    }
                  }, {
                    "type" : "Host",
                    "id" : "HostObjectUUID",
                    "name" : "host_obj_name",
                    "links" : {
                      "self" : "link_to_host_obj"
                    }
                  }, {
                    "type" : "Range",
                    "id" : "RangeObjectUUID",
                    "name" : "range_obj_name",
                    "links" : {
                      "self" : "link_to_range_obj"
                    }
                  } ],
                  "literals" : [ {
                    "type" : "Network",
                    "value" : "1.2.3.0/24"
                  }, {
                    "type" : "Host",
                    "value" : "1.2.3.4"
                  } ],
                  "metadata" : {
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "GlobalDomainUUID"
                    }
                  },
                  "links" : {
                    "self" : "/fmc_config/v1/domain/global/object/networkgroups/networkGroupUUID"
                  }
                },
                "Response Example 2 :GET /fmc_config/v1/domain/DomainUUID/object/networkgroups ( Test GET listing of NetworkGroups )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/global/object/networkgroups?offset=0&limit=3"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/global/object/networkgroups/networkGroup1UUID"
                    },
                    "type" : "NetworkGroup",
                    "name" : "networkgroup_obj1_name",
                    "id" : "networkGroup1UUID"
                  }, {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/global/object/networkgroups/networkGroup2UUID"
                    },
                    "type" : "NetworkGroup",
                    "name" : "networkgroup_obj2_name",
                    "id" : "networkGroup2UUID"
                  }, {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/global/object/networkgroups/networkGroup3UUID"
                    },
                    "type" : "NetworkGroup",
                    "name" : "networkgroup_obj3_name",
                    "id" : "networkGroup3UUID"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 3,
                    "count" : 3,
                    "pages" : 1
                  }
                },
                "Response Example 3 :GET /fmc_config/v1/domain/DomainUUID/object/networkgroups?overrideTargetId=target_uuid&expanded=true ( GET operation for network groups with overrides )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/networkgroups?offset=0&limit=1&overrideTargetId=target_uuid&expanded=true"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/networkgroups/grp2_uuid?overrideTargetId=target_uuid"
                    },
                    "objects" : [ {
                      "type" : "FQDN",
                      "id" : "fqdn1_uuid",
                      "name" : "fqdn1"
                    } ],
                    "type" : "NetworkGroup",
                    "overrides" : {
                      "parent" : {
                        "id" : "grp2_uuid",
                        "type" : "NetworkGroup"
                      },
                      "target" : {
                        "name" : "10.10.16.29",
                        "id" : "target_uuid",
                        "type" : "Device"
                      }
                    },
                    "overridable" : true,
                    "description" : " ",
                    "id" : "grp2_uuid",
                    "name" : "grp2",
                    "metadata" : {
                      "timestamp" : 1528178460773,
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global \\ ASIA \\ INDIA",
                        "id" : "domain_uuid"
                      }
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the network group object associated with the specified ID. If no ID is specified for a GET, retrieves list of all network group objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateNetworkGroup",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for a network group.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of network group.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/NetworkGroup"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/NetworkGroup"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/DomainUUID/object/networkgroups/networkGroup1UUID ( Test PUT of NetworkGroup object to update record )" : {
                  "id" : "networkGroup1UUID",
                  "name" : "networkgroup_obj1_updated",
                  "type" : "NetworkGroup",
                  "objects" : [ {
                    "type" : "Network",
                    "id" : "NetworkObjectUUID"
                  }, {
                    "type" : "Host",
                    "id" : "HostObjectUUID"
                  }, {
                    "type" : "Range",
                    "id" : "RangeObjectUUID"
                  } ],
                  "literals" : [ {
                    "type" : "Network",
                    "value" : "1.2.3.0/24"
                  }, {
                    "type" : "Host",
                    "value" : "1.2.3.4"
                  } ]
                },
                "Request example 2 : PUT /fmc_config/v1/domain/DomainUUID/object/networkgroups/netgrp2_uuid ( PUT request to update an override on a network group )" : {
                  "objects" : [ {
                    "type" : "FQDN",
                    "id" : "fqdn1_uuid",
                    "name" : "fqdn1"
                  }, {
                    "type" : "Network",
                    "id" : "net1_uuid",
                    "name" : "net1"
                  } ],
                  "literals" : [ {
                    "type" : "Network",
                    "value" : "1.2.3.0/24"
                  }, {
                    "type" : "Host",
                    "value" : "1.2.3.4"
                  } ],
                  "type" : "NetworkGroup",
                  "overridable" : true,
                  "overrides" : {
                    "parent" : {
                      "id" : "netgrp2_uuid",
                      "type" : "NetworkGroup"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "target_uuid",
                      "type" : "Device"
                    }
                  },
                  "description" : " ",
                  "id" : "netgrp2_uuid",
                  "name" : "netgrp2"
                },
                "Response Example 1 :PUT /fmc_config/v1/domain/DomainUUID/object/networkgroups/networkGroup1UUID ( Test PUT of NetworkGroup object to update record )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/global/object/networkgroups/networkGroup1UUID"
                  },
                  "type" : "NetworkGroup",
                  "objects" : [ {
                    "type" : "Host",
                    "overridable" : false,
                    "name" : "host_obj_name",
                    "id" : "host_obj_id"
                  }, {
                    "type" : "Range",
                    "overridable" : false,
                    "name" : "range_obj_name",
                    "id" : "range_obj_id"
                  }, {
                    "type" : "Network",
                    "overridable" : false,
                    "name" : "net_obj_name",
                    "id" : "net_obj_id"
                  } ],
                  "literals" : [ {
                    "type" : "Host",
                    "value" : "1.2.3.4"
                  }, {
                    "type" : "Network",
                    "value" : "1.2.3.0/24"
                  } ],
                  "overridable" : false,
                  "description" : " ",
                  "name" : "networkgroup_obj1_updated",
                  "id" : "networkGroup1UUID",
                  "metadata" : {
                    "lastUser" : {
                      "name" : "pvs"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "global_uuid"
                    }
                  }
                },
                "Response Example 2 :PUT /fmc_config/v1/domain/DomainUUID/object/networkgroups/netgrp2_uuid ( PUT request to update an override on a network group )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/networkgroups/netgrp2_uuid?overrideTargetId=target_uuid"
                  },
                  "objects" : [ {
                    "type" : "FQDN",
                    "id" : "fqdn1_uuid",
                    "name" : "fqdn1"
                  }, {
                    "type" : "Network",
                    "id" : "net1_uuid",
                    "name" : "net1"
                  } ],
                  "literals" : [ {
                    "type" : "Network",
                    "value" : "1.2.3.0/24"
                  }, {
                    "type" : "Host",
                    "value" : "1.2.3.4"
                  } ],
                  "type" : "NetworkGroup",
                  "overrides" : {
                    "parent" : {
                      "id" : "netgrp2_uuid",
                      "type" : "NetworkGroup"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "target_uuid",
                      "type" : "Device"
                    }
                  },
                  "overridable" : true,
                  "id" : "netgrp2_uuid",
                  "name" : "netgrp2",
                  "metadata" : {
                    "timestamp" : 0,
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUuid"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/NetworkGroup"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the network group object associated with the specified ID. If no ID is specified for a GET, retrieves list of all network group objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteNetworkGroup",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for a network group.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/NetworkGroup"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /fmc_config/v1/domain/DomainUUID/object/networkgroups/networkGroupUUID ( Test DELETE of NetworkGroup Object )" : {
                  "id" : "networkGroup1UUID",
                  "name" : "networkgroup_obj1",
                  "type" : "NetworkGroup",
                  "objects" : [ {
                    "type" : "Network",
                    "id" : "NetworkObjectUUID",
                    "name" : "network_obj_name",
                    "links" : {
                      "self" : "link_to_network_obj"
                    }
                  }, {
                    "type" : "Host",
                    "id" : "HostObjectUUID",
                    "name" : "host_obj_name",
                    "links" : {
                      "self" : "link_to_host_obj"
                    }
                  }, {
                    "type" : "Range",
                    "id" : "RangeObjectUUID",
                    "name" : "range_obj_name",
                    "links" : {
                      "self" : "link_to_range_obj"
                    }
                  } ],
                  "literals" : [ {
                    "type" : "Network",
                    "value" : "1.2.3.0/24"
                  }, {
                    "type" : "Host",
                    "value" : "1.2.3.4"
                  } ],
                  "metadata" : {
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "GlobalDomainUUID"
                    }
                  },
                  "links" : {
                    "self" : "/fmc_config/v1/domain/global/object/networkgroups/networkGroupUUID"
                  }
                },
                "Response Example 2 :DELETE /fmc_config/v1/domain/DomainUUID/object/networkgroups/netgrp2_uuid?overrideTargetId=target_uuid ( DELETE request to remove an override on network group )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/networkgroups/netgrp2_uuid?overrideTargetId=target_uuid"
                  },
                  "objects" : [ {
                    "type" : "FQDN",
                    "id" : "fqdn1_uuid",
                    "name" : "fqdn1"
                  }, {
                    "type" : "Network",
                    "id" : "net1_uuid",
                    "name" : "net1"
                  } ],
                  "literals" : [ {
                    "type" : "Network",
                    "value" : "1.2.3.0/24"
                  } ],
                  "type" : "NetworkGroup",
                  "overrides" : {
                    "parent" : {
                      "id" : "netgrp2_uuid",
                      "type" : "NetworkGroup"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "target_uuid",
                      "type" : "Device"
                    }
                  },
                  "overridable" : true,
                  "description" : " ",
                  "id" : "netgrp2_uuid",
                  "name" : "netgrp2",
                  "metadata" : {
                    "timestamp" : 1527349890836,
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUuid"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/networks" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the network objects associated with the specified ID. If no ID is specified for a GET, retrieves list of all network objects.**",
        "operationId" : "getAllNetworkObject",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "To be used in conjunction with <code>\"unusedOnly:true\"</code> to search for unused objects and <code>\"nameOrValue:{nameOrValue}\"</code> to search for both name and value.",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/NetworkObjectListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/GlobalDomainUUID/object/networks?expanded=true&overrideTargetId=childDomainUUID ( Success: Test GET ALL method from global domain for NetworkObject when overrides are assigned to child domain )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/global/object/networks?offset=0&limit=1"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/global/object/networks/networkObjectUUID",
                      "parent" : "/fmc_config/v1/domain/global/object/networkaddresses"
                    },
                    "type" : "Network",
                    "value" : "1.2.3.0/24",
                    "overrides" : {
                      "parent" : {
                        "id" : "networkObjectUUID",
                        "type" : "Network"
                      },
                      "target" : {
                        "name" : "Global \\ Asia",
                        "id" : "subDomainUUID",
                        "type" : "Domain"
                      }
                    },
                    "overridable" : true,
                    "description" : " ",
                    "name" : "pvs_network",
                    "id" : "networkObjectUUID",
                    "metadata" : {
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global \\ Asia",
                        "id" : "subDomainUUID"
                      },
                      "ipType" : "V_4",
                      "parentType" : "NetworkAddress"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/childDomainUUID/object/networks?expanded=true&overrideTargetId=childDomainUUID ( Success: Test GET ALL method from child domain for NetworkObject when overrides are assigned to child domain )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/subDomainUUID/object/networks?offset=0&limit=1"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/subDomainUUID/object/networks/networkObjectUUID",
                      "parent" : "/fmc_config/v1/domain/subDomainUUID/object/networkaddresses"
                    },
                    "type" : "Network",
                    "value" : "1.2.3.0/24",
                    "overrides" : {
                      "parent" : {
                        "id" : "networkObjectUUID",
                        "type" : "Network"
                      },
                      "target" : {
                        "name" : "Global \\ Asia",
                        "id" : "subDomainUUID",
                        "type" : "Domain"
                      }
                    },
                    "overridable" : true,
                    "description" : " ",
                    "name" : "pvs_network",
                    "id" : "networkObjectUUID",
                    "metadata" : {
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global \\ Asia",
                        "id" : "subDomainUUID"
                      },
                      "ipType" : "V_4",
                      "parentType" : "NetworkAddress"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                },
                "Response Example 3 : GET /fmc_config/v1/domain/DomainUUID/object/networks?limit=5 ( Get all paginated network objects with limit=5 )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/networks?offset=0&limit=5"
                  },
                  "items" : [ {
                    "name" : "network_0",
                    "type" : "Network",
                    "id" : "networkObjectUUID",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/global/object/networks/networkObjectUUID",
                      "parent" : "/fmc_config/v1/domain/global/object/networkaddresses"
                    }
                  }, {
                    "name" : "network_1",
                    "type" : "Network",
                    "id" : "networkObjectUUID",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/global/object/networks/networkObjectUUID",
                      "parent" : "/fmc_config/v1/domain/global/object/networkaddresses"
                    }
                  }, {
                    "name" : "network_2",
                    "type" : "Network",
                    "id" : "networkObjectUUID",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/global/object/networks/networkObjectUUID",
                      "parent" : "/fmc_config/v1/domain/global/object/networkaddresses"
                    }
                  }, {
                    "name" : "network_3",
                    "type" : "Network",
                    "id" : "networkObjectUUID",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/global/object/networks/networkObjectUUID",
                      "parent" : "/fmc_config/v1/domain/global/object/networkaddresses"
                    }
                  }, {
                    "name" : "network_4",
                    "type" : "Network",
                    "id" : "networkObjectUUID",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/global/object/networks/networkObjectUUID",
                      "parent" : "/fmc_config/v1/domain/global/object/networkaddresses"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 5,
                    "count" : 10,
                    "pages" : 2,
                    "next" : [ "/fmc_config/v1/domain/DomainUUID/object/networks?offset=5&limit=5" ]
                  }
                },
                "Response Example 4 : GET /fmc_config/v1/domain/DomainUUID/object/networks?expanded=false&limit=5 ( Get all paginated network objects with limit=5 and expanded=false )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/networks?offset=0&limit=5"
                  },
                  "items" : [ {
                    "name" : "network_0",
                    "type" : "Network",
                    "id" : "networkObjectUUID",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/global/object/networks/networkObjectUUID",
                      "parent" : "/fmc_config/v1/domain/global/object/networkaddresses"
                    }
                  }, {
                    "name" : "network_1",
                    "type" : "Network",
                    "id" : "networkObjectUUID",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/global/object/networks/networkObjectUUID",
                      "parent" : "/fmc_config/v1/domain/global/object/networkaddresses"
                    }
                  }, {
                    "name" : "network_2",
                    "type" : "Network",
                    "id" : "networkObjectUUID",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/global/object/networks/networkObjectUUID",
                      "parent" : "/fmc_config/v1/domain/global/object/networkaddresses"
                    }
                  }, {
                    "name" : "network_3",
                    "type" : "Network",
                    "id" : "networkObjectUUID",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/global/object/networks/networkObjectUUID",
                      "parent" : "/fmc_config/v1/domain/global/object/networkaddresses"
                    }
                  }, {
                    "name" : "network_4",
                    "type" : "Network",
                    "id" : "networkObjectUUID",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/global/object/networks/networkObjectUUID",
                      "parent" : "/fmc_config/v1/domain/global/object/networkaddresses"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 5,
                    "count" : 10,
                    "pages" : 2,
                    "next" : [ "/fmc_config/v1/domain/DomainUUID/object/networks?offset=5&limit=5" ]
                  }
                },
                "Response Example 5 : GET /fmc_config/v1/domain/DomainUUID/object/networks?expanded=true&limit=5 ( Get all paginated network objects with expanded=true and limit=5 )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/networks?offset=0&limit=5"
                  },
                  "items" : [ {
                    "name" : "network_0",
                    "type" : "Network",
                    "overridable" : false
                  }, {
                    "name" : "network_1",
                    "type" : "Network",
                    "overridable" : false
                  }, {
                    "name" : "network_2",
                    "type" : "Network",
                    "overridable" : false
                  }, {
                    "name" : "network_3",
                    "type" : "Network",
                    "overridable" : false
                  }, {
                    "name" : "network_4",
                    "type" : "Network",
                    "overridable" : false
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 5,
                    "count" : 10,
                    "pages" : 2,
                    "next" : [ "/fmc_config/v1/domain/DomainUUID/object/networks?offset=5&limit=5" ]
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the network objects associated with the specified ID. If no ID is specified for a GET, retrieves list of all network objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createMultipleNetworkObject",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The input network object model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/NetworkObject"
          }
        }, {
          "name" : "bulk",
          "in" : "query",
          "description" : "Enables bulk create for network objects.",
          "required" : false,
          "type" : "boolean"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/NetworkObject"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /fmc_config/v1/domain/DomainUUID/object/networks?bulk=true ( Bulk POST operation on network objects. )" : [ {
                  "name" : "net1",
                  "value" : "1.0.0.0/24",
                  "overridable" : false,
                  "description" : "Network obj 1",
                  "type" : "Network"
                }, {
                  "name" : "net2",
                  "value" : "1.1.0.0/24",
                  "overridable" : false,
                  "description" : "Network obj 2",
                  "type" : "Network"
                } ],
                "Request example 2 : POST /fmc_config/v1/domain/DomainUUID/object/networks?bulk=true ( Bulk POST operation on network objects with overrides )" : [ {
                  "type" : "Network",
                  "value" : "10.10.10.0/25",
                  "overrides" : {
                    "parent" : {
                      "id" : "net_1_uuid",
                      "type" : "Network"
                    },
                    "target" : {
                      "name" : "Global \\ EUROPE",
                      "id" : "domain_uuid",
                      "type" : "Domain"
                    }
                  },
                  "overridable" : true,
                  "description" : " ",
                  "name" : "net_1",
                  "id" : "net_1_uuid"
                }, {
                  "type" : "Network",
                  "value" : "20.20.20.0/25",
                  "overrides" : {
                    "parent" : {
                      "id" : "net_1_uuid",
                      "type" : "Network"
                    },
                    "target" : {
                      "name" : "FTDv_R1",
                      "id" : "device_uuid",
                      "type" : "Device"
                    }
                  },
                  "overridable" : true,
                  "description" : " ",
                  "name" : "net_1",
                  "id" : "net_1_uuid"
                } ],
                "Request example 3 : POST /fmc_config/v1/domain/domainUUID/object/networks ( POST request to create a network object override )" : {
                  "type" : "Network",
                  "value" : "1.2.3.0/25",
                  "overridable" : true,
                  "description" : " ",
                  "overrides" : {
                    "parent" : {
                      "id" : "net2_uuid",
                      "type" : "Host"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "device_uuid",
                      "type" : "Device"
                    }
                  },
                  "id" : "net2_uuid",
                  "name" : "net2"
                },
                "Request example 4 : POST /fmc_config/v1/domain/DomainUUID/object/networks ( Test POST of network object to create a new record )" : {
                  "name" : "test1",
                  "value" : "1.0.0.0/24",
                  "overridable" : false,
                  "description" : "Test REST API Object",
                  "type" : "Network"
                },
                "Response Example 1 :POST /fmc_config/v1/domain/DomainUUID/object/networks?bulk=true ( Bulk POST operation on network objects. )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/networks?bulk=true"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/networks/net1Uuid",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/networkaddresses"
                    },
                    "type" : "Network",
                    "value" : "1.0.0.0/24",
                    "overridable" : false,
                    "description" : "Network obj 1",
                    "name" : "net1",
                    "id" : "net1Uuid",
                    "metadata" : {
                      "timestamp" : 0,
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUuid"
                      },
                      "ipType" : "V_4",
                      "parentType" : "NetworkAddress"
                    }
                  }, {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/networks/net2Uuid",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/networkaddresses"
                    },
                    "type" : "Network",
                    "value" : "1.1.0.0/24",
                    "overridable" : false,
                    "description" : "Network obj 2",
                    "name" : "net2",
                    "id" : "net2Uuid",
                    "metadata" : {
                      "timestamp" : 0,
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUuid"
                      },
                      "ipType" : "V_4",
                      "parentType" : "NetworkAddress"
                    }
                  } ]
                },
                "Response Example 2 :POST /fmc_config/v1/domain/DomainUUID/object/networks?bulk=true ( Bulk POST operation on network objects with overrides )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/networks?bulk=true"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/networks/net_1_uuid",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/networkaddresses"
                    },
                    "type" : "Network",
                    "value" : "10.10.10.0/25",
                    "overrides" : {
                      "parent" : {
                        "id" : "net_1_uuid",
                        "type" : "Network"
                      },
                      "target" : {
                        "name" : "Global \\ EUROPE",
                        "id" : "domain_uuid",
                        "type" : "Domain"
                      }
                    },
                    "overridable" : true,
                    "name" : "net_1",
                    "id" : "net_1_uuid",
                    "metadata" : {
                      "timestamp" : 0,
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global \\ EUROPE",
                        "id" : "domain_uuid"
                      },
                      "ipType" : "V_4",
                      "parentType" : "NetworkAddress"
                    }
                  }, {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/networks/net_1_uuid",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/networkaddresses"
                    },
                    "type" : "Network",
                    "value" : "20.20.20.0/25",
                    "overrides" : {
                      "parent" : {
                        "id" : "net_1_uuid",
                        "type" : "Network"
                      },
                      "target" : {
                        "name" : "FTDv_R1",
                        "id" : "device_uuid",
                        "type" : "Device"
                      }
                    },
                    "overridable" : true,
                    "name" : "net_1",
                    "id" : "net_1_uuid",
                    "metadata" : {
                      "timestamp" : 0,
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global \\ ASIA",
                        "id" : "domainUuid"
                      },
                      "ipType" : "V_4",
                      "parentType" : "NetworkAddress"
                    }
                  } ]
                },
                "Response Example 3 :POST /fmc_config/v1/domain/domainUUID/object/networks ( POST request to create a network object override )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/networks/net2_uuid?overrideTargetId=device_uuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/networkaddresses"
                  },
                  "type" : "Network",
                  "value" : "1.2.3.0/25",
                  "overrides" : {
                    "parent" : {
                      "id" : "net2_uuid",
                      "type" : "Network"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "device_uuid",
                      "type" : "Device"
                    }
                  },
                  "overridable" : true,
                  "id" : "net2_uuid",
                  "name" : "net2",
                  "metadata" : {
                    "timestamp" : 0,
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUuid"
                    },
                    "ipType" : "V_4",
                    "parentType" : "NetworkAddress"
                  }
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/NetworkObject"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/networks/{containerUUID}/overrides" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves all(Domain and Device) overrides on a Network object.Response will always be in expanded form. If passed, the \"expanded\" query parameter will be ignored.**",
        "operationId" : "getAllNetworkOverride",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/NetworkOverrideListContainer"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/networks/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the network objects associated with the specified ID. If no ID is specified for a GET, retrieves list of all network objects.**",
        "operationId" : "getNetworkObject",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the object.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "overrideTargetId",
          "in" : "query",
          "description" : "Retrieves the override(s) associated with the network object on given target ID.",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/NetworkObject"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/GlobalDomainUUID/object/networks/networkObjectUUID?expanded=true&overrideTargetId=childDomainUUID ( Success: Test GET method from global domain on a specific NetworkObject which has override assigned as child domain )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/global/object/hosts/networkObjectUUID",
                    "parent" : "/fmc_config/v1/domain/global/object/networkaddresses"
                  },
                  "type" : "Host",
                  "value" : "1.2.3.4",
                  "overrides" : {
                    "parent" : {
                      "id" : "networkObjectUUID",
                      "type" : "Host"
                    },
                    "target" : {
                      "name" : "Global \\ Asia",
                      "id" : "subDomainUUID",
                      "type" : "Domain"
                    }
                  },
                  "overridable" : true,
                  "description" : " ",
                  "name" : "pvs_global",
                  "id" : "networkObjectUUID",
                  "metadata" : {
                    "lastUser" : {
                      "name" : "pvs"
                    },
                    "domain" : {
                      "name" : "Global \\ Asia",
                      "id" : "subDomainUUID"
                    },
                    "ipType" : "V_4",
                    "parentType" : "NetworkAddress"
                  }
                },
                "Response Example 2 :GET /fmc_config/v1/domain/childDomainUUID/object/networks/networkObjectUUID?expanded=true&overrideTargetId=childDomainUUID ( Success: Test GET method from child domain on a NetworkObject which has child domain assigned as override )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/global/object/networks/networkObjectUUID",
                    "parent" : "/fmc_config/v1/domain/global/object/networkaddresses"
                  },
                  "type" : "Network",
                  "value" : "1.2.3.0/24",
                  "overrides" : {
                    "parent" : {
                      "id" : "networkObjectUUID",
                      "type" : "Network"
                    },
                    "target" : {
                      "name" : "Global \\ Asia",
                      "id" : "subDomainUUID",
                      "type" : "Domain"
                    }
                  },
                  "overridable" : true,
                  "description" : " ",
                  "name" : "pvs_network",
                  "id" : "networkObjectUUID",
                  "metadata" : {
                    "lastUser" : {
                      "name" : "pvs"
                    },
                    "domain" : {
                      "name" : "Global \\ Asia",
                      "id" : "subDomainUUID"
                    },
                    "ipType" : "V_4",
                    "parentType" : "NetworkAddress"
                  }
                },
                "Response Example 3 :GET /fmc_config/v1/domain/childDomainUUID/object/networks/networkObjectUUID?expanded=true&overrideTargetId=deviceUUID ( Success: Test GET method from child domain on a NetworkObject which has device assigned as override )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/global/object/networks/networkObjectUUID",
                    "parent" : "/fmc_config/v1/domain/global/object/networkaddresses"
                  },
                  "type" : "Network",
                  "value" : "1.2.3.0/24",
                  "overrides" : {
                    "parent" : {
                      "id" : "networkObjectUUID",
                      "type" : "Network"
                    },
                    "target" : {
                      "name" : "device_name",
                      "id" : "deviceUUID",
                      "type" : "Device"
                    }
                  },
                  "overridable" : true,
                  "description" : " ",
                  "name" : "pvs_network",
                  "id" : "networkObjectUUID",
                  "metadata" : {
                    "lastUser" : {
                      "name" : "api"
                    },
                    "domain" : {
                      "name" : "Global \\ Asia",
                      "id" : "subDomainUUID"
                    },
                    "ipType" : "V_4",
                    "parentType" : "NetworkAddress"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the network objects associated with the specified ID. If no ID is specified for a GET, retrieves list of all network objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateNetworkObject",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the object.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The input network object model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/NetworkObject"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/NetworkObject"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/domainUUID/object/networks/networkObjectUUID ( PUT to update a network object )" : {
                  "type" : "Network",
                  "value" : "1.2.3.0/24",
                  "overridable" : false,
                  "description" : "Test Description",
                  "id" : "networkObjectUUID",
                  "name" : "network_obj_name"
                },
                "Request example 2 : PUT /fmc_config/v1/domain/domainUUID/object/networks/net2_uuid ( PUT to update override value on a given network override object )" : {
                  "type" : "Network",
                  "value" : "1.2.3.0/25",
                  "overridable" : true,
                  "description" : " ",
                  "overrides" : {
                    "parent" : {
                      "id" : "net2_uuid",
                      "type" : "Host"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "device_uuid",
                      "type" : "Device"
                    }
                  },
                  "id" : "net2_uuid",
                  "name" : "net2"
                },
                "Response Example 1 :PUT /fmc_config/v1/domain/domainUUID/object/networks/networkObjectUUID ( PUT to update a network object )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/global/object/networks/networkObjectUUID",
                    "parent" : "/fmc_config/v1/domain/global/object/networkaddresses"
                  },
                  "type" : "Network",
                  "value" : "1.2.3.0/24",
                  "overridable" : false,
                  "id" : "networkObjectUUID",
                  "name" : "network_obj_name",
                  "metadata" : {
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "GlobalDomainUUID"
                    },
                    "ipType" : "V_4",
                    "parentType" : "NetworkAddress"
                  }
                },
                "Response Example 2 :PUT /fmc_config/v1/domain/domainUUID/object/networks/net2_uuid ( PUT to update override value on a given network override object )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/networks/net2_uuid?overrideTargetId=device_uuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/networkaddresses"
                  },
                  "type" : "Network",
                  "value" : "1.2.3.0/25",
                  "overrides" : {
                    "parent" : {
                      "id" : "net2_uuid",
                      "type" : "Network"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "device_uuid",
                      "type" : "Device"
                    }
                  },
                  "overridable" : true,
                  "id" : "net2_uuid",
                  "name" : "net2",
                  "metadata" : {
                    "timestamp" : 0,
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUuid"
                    },
                    "ipType" : "V_4",
                    "parentType" : "NetworkAddress"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/NetworkObject"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the network objects associated with the specified ID. If no ID is specified for a GET, retrieves list of all network objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteNetworkObject",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the object.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/NetworkObject"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /fmc_config/v1/domain/domainUUID/object/networks/networkObjectUUID ( DELETE a network object for the given UUID )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/global/object/networks/networkObjectUUID",
                    "parent" : "/fmc_config/v1/domain/global/object/networkaddresses"
                  },
                  "type" : "Network",
                  "value" : "1.2.3.0/24",
                  "overridable" : false,
                  "description" : "Test Description",
                  "id" : "networkObjectUUID",
                  "name" : "network_obj_name",
                  "metadata" : {
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "GlobalDomainUUID"
                    },
                    "ipType" : "V_4",
                    "parentType" : "NetworkAddress"
                  }
                },
                "Response Example 2 :DELETE /fmc_config/v1/domain/domainUUID/object/networks/net2_uuid?overrideTargetId=device_uuid ( DELETE a specific network override object )" : {
                  "links" : {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/networks/net2_uuid?overrideTargetId=device_uuid",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/networkaddresses"
                    },
                    "type" : "Network",
                    "value" : "1.2.4.0/25",
                    "overrides" : {
                      "parent" : {
                        "id" : "net2_uuid",
                        "type" : "Network"
                      },
                      "target" : {
                        "name" : "10.10.16.29",
                        "id" : "device_uuid",
                        "type" : "Device"
                      }
                    },
                    "overridable" : true,
                    "description" : " ",
                    "id" : "net2_uuid",
                    "name" : "net2",
                    "metadata" : {
                      "timestamp" : 1527150593963,
                      "lastUser" : {
                        "name" : "admin"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUuid"
                      },
                      "ipType" : "V_4",
                      "parentType" : "NetworkAddress"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/operational/usage" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Find usage of specified object uuid and type across objects and policies.<br><br>Supported object types:<ul><li>Network: NetworkAddress, Host, Network, Range, FQDN, NetworkGroup</li><li>Port: Port, ProtocolPortObject, PortObjectGroup, ICMPV4Object, ICMPV6Object, AnyProtocolPortObject</li><li>VLAN tag: VlanTag, VlanGroupTag</li><li>URL: Url, UrlGroup</li></ul>**",
        "operationId" : "getObjectUsage",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "Specify uuid <code>\"uuid:object-uuid\"</code> and <code>\"type:object-type\"</code> and type of object",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ObjectUsageListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/object/operational/usage?filter=type:Network;uuid:005056A9-4E43-0ed3-0000-047244640278&offset=0&limit=100 ( GET list of usages for specified object type and uuid )" : {
                  "links" : {
                    "self" : "/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/object/operational/usage?offset=0&limit=100&filter=type:Network;uuid:005056A9-4E43-0ed3-0000-047244640278"
                  },
                  "items" : [ {
                    "name" : "Group01",
                    "id" : "005056A9-4E43-0ed3-0000-124554051587",
                    "type" : "Network"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 100,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/policylists" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Policy List Object CRUD**",
        "operationId" : "getAllPolicyList",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PolicyListListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/domainUUID/object/policylists ( Get all paginated policy list objects )" : {
                  "links" : {
                    "self" : "https://host:port/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/object/policylists?offset=0&limit=2"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "https:///host:port/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/object/policylists/policylist-UUID"
                    },
                    "name" : "GlobalPL",
                    "id" : "00505686-A281-0ed3-0000-068719476739",
                    "type" : "PolicyList"
                  }, {
                    "links" : {
                      "self" : "https:///host:port/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/object/policylists/policylist-UUID1"
                    },
                    "name" : "GlobalPL123",
                    "id" : "policylist1-UUID",
                    "type" : "PolicyListObject"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/policylists/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Policy List Object CRUD**",
        "operationId" : "getPolicyList",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "UUID of the Policy List",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PolicyList"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/domainUUID/object/policylists/policyListUUID ( GET a policy list object for the given UUID )" : {
                  "links" : {
                    "self" : "https://host:port/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/object/policylists/policyListUUID"
                  },
                  "interfaces" : [ {
                    "name" : "secZone",
                    "id" : "security-zone-uuid",
                    "type" : "SecurityZone"
                  } ],
                  "interfaceNames" : [ "inside" ],
                  "tag" : 2211,
                  "matchCommunityExactly" : false,
                  "metric" : 111,
                  "name" : "GlobalPL123",
                  "action" : "PERMIT",
                  "overridable" : false,
                  "description" : " ",
                  "id" : "policyListUUID",
                  "type" : "PolicyList",
                  "metadata" : {
                    "timestamp" : 1540549081226,
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "e276abec-e0f2-11e3-8169-6d9ed49b625f"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/portobjectgroups" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the port object group object associated with the specified ID. If no ID is specified for a GET, retrieves list of all port object group objects.**",
        "operationId" : "getAllPortObjectGroup",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "To be used in conjunction with <code>\"unusedOnly:true\"</code> to search for unused objects and <code>\"nameOrValue:{nameOrValue}\"</code> to search for both name and value.",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PortObjectGroupListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/DomainUUID/object/portobjectgroups ( Get all paginated portgroup objects without offset and limit )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domain_uuid/object/portobjectgroups?offset=0&limit=1&expanded=true"
                  },
                  "items" : [ {
                    "metadata" : {
                      "timestamp" : 1528178431690,
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "domain_uuid"
                      },
                      "parentType" : "Port"
                    },
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domain_uuid/object/portobjectgroups/ppgrp1_uuid",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/domain_uuid/object/ports"
                    },
                    "type" : "PortObjectGroup",
                    "objects" : [ {
                      "type" : "ICMPV6Object",
                      "code" : 0,
                      "icmpType" : "3",
                      "overridable" : false,
                      "id" : "icmpv6_obj1_uuid",
                      "name" : "icmpv6_obj1"
                    }, {
                      "type" : "ProtocolPortObject",
                      "protocol" : "TCP",
                      "port" : "123",
                      "overridable" : false,
                      "id" : "ppobj1_uuid",
                      "name" : "ppobj1"
                    }, {
                      "type" : "ICMPV4Object",
                      "code" : 0,
                      "icmpType" : "3",
                      "overridable" : false,
                      "id" : "icmpv4_obj1_uuid",
                      "name" : "icmpv4_obj1"
                    } ],
                    "overridable" : true,
                    "description" : " ",
                    "id" : "ppgrp1_uuid",
                    "name" : "ppgrp1"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/DomainUUID/object/portobjectgroups?overrideTargetId=target_uuid&expanded=true ( Get all objects with given override target )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domain_uuid/object/portobjectgroups?offset=0&limit=1&overrideTargetId=device_uuid&expanded=true"
                  },
                  "items" : [ {
                    "metadata" : {
                      "timestamp" : 1528178429136,
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global \\ ASIA \\ INDIA",
                        "id" : "domain_uuid"
                      },
                      "parentType" : "Port"
                    },
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domain_uuid/object/portobjectgroups/ppgrp1_uuid?overrideTargetId=device_uuid",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/domain_uuid/object/ports"
                    },
                    "type" : "PortObjectGroup",
                    "objects" : [ {
                      "type" : "ICMPV6Object",
                      "code" : 0,
                      "icmpType" : "3",
                      "overridable" : false,
                      "id" : "icmpv6_obj1_uuid",
                      "name" : "icmpv6_obj1"
                    }, {
                      "type" : "ProtocolPortObject",
                      "protocol" : "TCP",
                      "port" : "123",
                      "overridable" : false,
                      "id" : "ppobj1_uuid",
                      "name" : "ppobj1"
                    }, {
                      "type" : "ICMPV4Object",
                      "code" : 0,
                      "icmpType" : "3",
                      "overridable" : false,
                      "id" : "icmpv4_obj1_uuid",
                      "name" : "icmpv4_obj1"
                    } ],
                    "overrides" : {
                      "parent" : {
                        "id" : "ppgrp1_uuid",
                        "type" : "PortObjectGroup"
                      },
                      "target" : {
                        "name" : "10.10.16.29",
                        "id" : "device_uuid",
                        "type" : "Device"
                      }
                    },
                    "overridable" : true,
                    "description" : " ",
                    "id" : "ppgrp1_uuid",
                    "name" : "ppgrp1"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the port object group object associated with the specified ID. If no ID is specified for a GET, retrieves list of all port object group objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createMultiplePortObjectGroup",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The input port object group model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PortObjectGroup"
          }
        }, {
          "name" : "bulk",
          "in" : "query",
          "description" : "Enables bulk create for port group objects.",
          "required" : false,
          "type" : "boolean"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/PortObjectGroup"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /fmc_config/v1/domain/DomainUUID/object/portobjectgroups ( Test registration of PortObjectGroup to create a new record )" : {
                  "name" : "portgroup_obj1",
                  "objects" : [ {
                    "type" : "ICMPV4Object",
                    "id" : "ICMPV4ObjectUUID"
                  }, {
                    "id" : "ICMPV6ObjectUUID",
                    "type" : "ICMPV6Object"
                  }, {
                    "id" : "ProtocolPortObjectUUID",
                    "type" : "ProtocolPortObject"
                  } ],
                  "type" : "PortObjectGroup"
                },
                "Request example 2 : POST /fmc_config/v1/domain/DomainUUID/object/portobjectgroups?bulk=true ( Bulk POST operation on port object groups. )" : [ {
                  "name" : "portgroup_obj1",
                  "objects" : [ {
                    "type" : "ICMPV4Object",
                    "id" : "icmpv4_objUuid"
                  }, {
                    "id" : "icmpv6_objUuid",
                    "type" : "ICMPV6Object"
                  } ],
                  "type" : "PortObjectGroup"
                }, {
                  "name" : "portgroup_obj2",
                  "objects" : [ {
                    "type" : "ICMPV4Object",
                    "id" : "icmpv4_objUuid"
                  }, {
                    "id" : "protocol_port_obj_uuid",
                    "type" : "ProtocolPortObject"
                  } ],
                  "type" : "PortObjectGroup"
                } ],
                "Request example 3 : POST /fmc_config/v1/domain/DomainUUID/object/portobjectgroups?bulk=true ( Bulk POST operation on port object group with overrides )" : [ {
                  "type" : "PortObjectGroup",
                  "objects" : [ {
                    "type" : "ICMPV6Object",
                    "name" : "icmp6_obj",
                    "id" : "icmp6_obj_uuid"
                  }, {
                    "type" : "ProtocolPortObject",
                    "name" : "ppobj",
                    "id" : "ppobj_uuid"
                  } ],
                  "overridable" : true,
                  "description" : "abc",
                  "overrides" : {
                    "parent" : {
                      "id" : "ppgrp_uuid",
                      "type" : "PortObjectGroup"
                    },
                    "target" : {
                      "name" : "Global \\ EUROPE",
                      "id" : "domain_uuid",
                      "type" : "Domain"
                    }
                  },
                  "name" : "ppgrp",
                  "id" : "ppgrp_uuid"
                }, {
                  "type" : "PortObjectGroup",
                  "objects" : [ {
                    "type" : "ICMPV4Object",
                    "name" : "icmp4_obj",
                    "id" : "icmp4_obj_uuid"
                  }, {
                    "type" : "ICMPV6Object",
                    "name" : "icmp6_obj",
                    "id" : "icmp6_obj_uuid"
                  } ],
                  "overridable" : true,
                  "description" : "abc",
                  "overrides" : {
                    "parent" : {
                      "id" : "ppgrp_uuid",
                      "type" : "PortObjectGroup"
                    },
                    "target" : {
                      "name" : "FTDv_R1",
                      "id" : "device_uuid",
                      "type" : "Device"
                    }
                  },
                  "name" : "ppgrp",
                  "id" : "ppgrp_uuid"
                } ],
                "Request example 4 : POST /fmc_config/v1/domain/DomainUUID/object/portobjectgroups ( POST request to create an override on port group )" : {
                  "type" : "PortObjectGroup",
                  "objects" : [ {
                    "type" : "ICMPV4Object",
                    "code" : 0,
                    "icmpType" : "3",
                    "overridable" : false,
                    "id" : "icmpv4_obj1_uuid",
                    "name" : "icmpv4_obj1"
                  }, {
                    "type" : "ICMPV6Object",
                    "code" : 0,
                    "icmpType" : "3",
                    "overridable" : false,
                    "id" : "icmpv6_obj1_uuid",
                    "name" : "icmpv6_obj1"
                  }, {
                    "type" : "ProtocolPortObject",
                    "protocol" : "TCP",
                    "port" : "123",
                    "overridable" : false,
                    "id" : "ppobj1_uuid",
                    "name" : "ppobj1"
                  } ],
                  "overrides" : {
                    "parent" : {
                      "id" : "ppgrp1_uuid",
                      "type" : "PortObjectGroup"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "target_uuid",
                      "type" : "Device"
                    }
                  },
                  "overridable" : true,
                  "description" : " ",
                  "id" : "ppgrp1_uuid",
                  "name" : "ppgrp1"
                },
                "Response Example 2 :POST /fmc_config/v1/domain/DomainUUID/object/portobjectgroups?bulk=true ( Bulk POST operation on port object groups. )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domainUuid/object/portobjectgroups?bulk=true"
                  },
                  "items" : [ {
                    "metadata" : {
                      "timestamp" : 0,
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUuid"
                      },
                      "parentType" : "Port"
                    },
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domainUuid/object/portobjectgroups/portgroup_obj1Uuid",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domainUuid/object/ports"
                    },
                    "type" : "PortObjectGroup",
                    "objects" : [ {
                      "type" : "ICMPV4Object",
                      "name" : "icmpv4_obj1",
                      "id" : "icmpv4_obj1Uuid"
                    }, {
                      "type" : "ICMPV6Object",
                      "name" : "icmpv6_obj1",
                      "id" : "icmpv6_obj1Uuid"
                    } ],
                    "overridable" : false,
                    "description" : " ",
                    "name" : "portgroup_obj1",
                    "id" : "portgroup_obj1Uuid"
                  }, {
                    "metadata" : {
                      "timestamp" : 0,
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUuid"
                      },
                      "parentType" : "Port"
                    },
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domainUuid/object/portobjectgroups/portgroup_obj2Uuid",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domainUuid/object/ports"
                    },
                    "type" : "PortObjectGroup",
                    "objects" : [ {
                      "type" : "ICMPV4Object",
                      "name" : "icmpv4_obj1",
                      "id" : "icmpv4_obj1Uuid"
                    }, {
                      "type" : "ProtocolPortObject",
                      "name" : "pp1",
                      "id" : "pp1Uuid"
                    } ],
                    "overridable" : false,
                    "description" : " ",
                    "name" : "portgroup_obj2",
                    "id" : "portgroup_obj2Uuid"
                  } ]
                },
                "Response Example 3 :POST /fmc_config/v1/domain/DomainUUID/object/portobjectgroups?bulk=true ( Bulk POST operation on port object group with overrides )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/portobjectgroups?bulk=true"
                  },
                  "items" : [ {
                    "metadata" : {
                      "timestamp" : 0,
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global \\ EUROPE",
                        "id" : "domain_uuid"
                      },
                      "parentType" : "Port"
                    },
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/portobjectgroups/ppgrp_uuid",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/ports"
                    },
                    "type" : "PortObjectGroup",
                    "objects" : [ {
                      "type" : "ICMPV6Object",
                      "code" : 1,
                      "icmpType" : "1",
                      "overridable" : false,
                      "name" : "icmp6_obj",
                      "id" : "icmp6_obj_uuid"
                    }, {
                      "type" : "ProtocolPortObject",
                      "port" : "12",
                      "protocol" : "TCP",
                      "overridable" : false,
                      "name" : "ppobj",
                      "id" : "ppobj_uuid"
                    } ],
                    "overrides" : {
                      "parent" : {
                        "id" : "ppgrp_uuid",
                        "type" : "PortObjectGroup"
                      },
                      "target" : {
                        "name" : "Global \\ EUROPE",
                        "id" : "domain_uuid",
                        "type" : "Domain"
                      }
                    },
                    "overridable" : true,
                    "description" : "abc",
                    "name" : "ppgrp",
                    "id" : "ppgrp_uuid"
                  }, {
                    "metadata" : {
                      "timestamp" : 0,
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global \\ ASIA",
                        "id" : "domain_uuid"
                      },
                      "parentType" : "Port"
                    },
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/portobjectgroups/ppgrp_uuid",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/ports"
                    },
                    "type" : "PortObjectGroup",
                    "objects" : [ {
                      "type" : "ICMPV4Object",
                      "code" : 4,
                      "icmpType" : "3",
                      "overridable" : false,
                      "name" : "icmp4_obj",
                      "id" : "icmp4_obj_uuid"
                    }, {
                      "type" : "ICMPV6Object",
                      "code" : 1,
                      "icmpType" : "1",
                      "overridable" : false,
                      "name" : "icmp6_obj",
                      "id" : "icmp6_obj_uuid"
                    } ],
                    "overrides" : {
                      "parent" : {
                        "id" : "ppgrp_uuid",
                        "type" : "PortObjectGroup"
                      },
                      "target" : {
                        "name" : "FTDv_R1",
                        "id" : "device_uuid",
                        "type" : "Device"
                      }
                    },
                    "overridable" : true,
                    "description" : "abc",
                    "name" : "ppgrp",
                    "id" : "ppgrp_uuid"
                  } ]
                },
                "Response Example 4 :POST /fmc_config/v1/domain/DomainUUID/object/portobjectgroups ( POST request to create an override on port group )" : {
                  "metadata" : {
                    "timestamp" : 0,
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUuid"
                    },
                    "parentType" : "Port"
                  },
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/portobjectgroups/ppgrp1_uuid?overrideTargetId=target_uuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/ports"
                  },
                  "type" : "PortObjectGroup",
                  "objects" : [ {
                    "type" : "ICMPV4Object",
                    "code" : 0,
                    "icmpType" : "3",
                    "overridable" : false,
                    "id" : "icmpv4_obj1_uuid",
                    "name" : "icmpv4_obj1"
                  }, {
                    "type" : "ICMPV6Object",
                    "code" : 0,
                    "icmpType" : "3",
                    "overridable" : false,
                    "id" : "icmpv6_obj1_uuid",
                    "name" : "icmpv6_obj1"
                  }, {
                    "type" : "ProtocolPortObject",
                    "protocol" : "TCP",
                    "port" : "123",
                    "overridable" : false,
                    "id" : "ppobj1_uuid",
                    "name" : "ppobj1"
                  } ],
                  "overrides" : {
                    "parent" : {
                      "id" : "ppgrp1_uuid",
                      "type" : "PortObjectGroup"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "target_uuid",
                      "type" : "Device"
                    }
                  },
                  "overridable" : true,
                  "id" : "ppgrp1_uuid",
                  "name" : "ppgrp1"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/PortObjectGroup"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/portobjectgroups/{containerUUID}/overrides" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves all(Domain and Device) overrides on a PortObjectGroup.Response will always be in expanded form. If passed, the \"expanded\" query parameter will be ignored.**",
        "operationId" : "getAllPortObjectGroupOverride",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PortObjectGroupOverrideListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/domainUUID/object/hosts ( Get all overrides(device and deomain) on Given PORTObjectGroup  )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/object/portobjectgroups/portObjectGroupUUID/overrides?offset=0&limit=1"
                  },
                  "items" : [ {
                    "metadata" : {
                      "timestamp" : 1520419055913,
                      "lastUser" : {
                        "name" : "user1"
                      },
                      "domain" : {
                        "name" : "Global \\ INDIA \\ PUNE",
                        "id" : "targetUUID"
                      },
                      "parentType" : "PortObject"
                    },
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/object/portobjectgroups/portObjectGroupUUID?overrideTargetId=targetUUID"
                    },
                    "type" : "PortObjectGroup",
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "port" : "6881-6889",
                      "protocol" : "TCP",
                      "overridable" : false,
                      "name" : "Bittorrent",
                      "id" : "ProtocolPortObjectUUID"
                    } ],
                    "overrides" : {
                      "parent" : {
                        "id" : "portObjectGroupUUID",
                        "type" : "PortObjectGroup"
                      },
                      "target" : {
                        "name" : "Global \\ INDIA \\ PUNE",
                        "id" : "targetUUID",
                        "type" : "Domain"
                      }
                    },
                    "overridable" : true,
                    "description" : " ",
                    "name" : "PortGRP",
                    "id" : "portObjectGroupUUID"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/portobjectgroups/{containerUUID}/overrides/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves all(Domain and Device) overrides on a PortObjectGroup.Response will always be in expanded form. If passed, the \"expanded\" query parameter will be ignored.**",
        "operationId" : "getPortObjectGroupOverride",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Input NOT Expected here",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PortObjectGroupOverride"
            },
            "examples" : { }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/portobjectgroups/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the port object group object associated with the specified ID. If no ID is specified for a GET, retrieves list of all port object group objects.**",
        "operationId" : "getPortObjectGroup",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the port object group.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "overrideTargetId",
          "in" : "query",
          "description" : "Retrieves the override(s) associated with the port group object on given target ID.",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PortObjectGroup"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/object/portobjectgroups/PortGroupObjUUID ( Test GET of PortGroup Object for a uuid )" : {
                  "id" : "PortGroupObjUUID",
                  "name" : "portgroup_obj1",
                  "type" : "PortObjectGroup",
                  "objects" : [ {
                    "type" : "ICMPV4Object",
                    "id" : "ICMPV4ObjectUUID"
                  }, {
                    "id" : "ICMPV6ObjectUUID",
                    "type" : "ICMPV6Object"
                  }, {
                    "id" : "ProtocolPortObjectUUID",
                    "type" : "ProtocolPortObject"
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the port object group object associated with the specified ID. If no ID is specified for a GET, retrieves list of all port object group objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updatePortObjectGroup",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the port object group.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The input port object group model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PortObjectGroup"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PortObjectGroup"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/DomainUUID/object/portobjectgroups/PortGroupObjUUID ( Test PUT of PortGroup object to update record )" : {
                  "id" : "PortGroupObjUUID",
                  "name" : "portgroup_obj1_updated",
                  "type" : "PortObjectGroup",
                  "objects" : [ {
                    "type" : "ICMPV4Object",
                    "id" : "ICMPV4ObjectUUID"
                  }, {
                    "id" : "ICMPV6ObjectUUID",
                    "type" : "ICMPV6Object"
                  }, {
                    "id" : "ProtocolPortObjectUUID",
                    "type" : "ProtocolPortObject"
                  } ]
                },
                "Request example 2 : PUT /fmc_config/v1/domain/DomainUUID/object/portobjectgroups ( Test PUT of network object to create record )" : {
                  "name" : "portgroup_obj2",
                  "type" : "Device",
                  "objects" : [ {
                    "type" : "ICMPV4Object",
                    "id" : "ICMPV4ObjectUUID"
                  }, {
                    "id" : "ICMPV6ObjectUUID",
                    "type" : "ICMPV6Object"
                  }, {
                    "id" : "ProtocolPortObjectUUID",
                    "type" : "ProtocolPortObject"
                  } ]
                },
                "Request example 3 : PUT /fmc_config/v1/domain/DomainUUID/object/portobjectgroups/ppgrp1_uuid ( PUT request to update an override on port object )" : {
                  "type" : "PortObjectGroup",
                  "objects" : [ {
                    "type" : "ICMPV4Object",
                    "code" : 0,
                    "icmpType" : "3",
                    "overridable" : false,
                    "id" : "icmpv4_obj1_uuid",
                    "name" : "icmpv4_obj1"
                  }, {
                    "type" : "ICMPV6Object",
                    "code" : 0,
                    "icmpType" : "3",
                    "overridable" : false,
                    "id" : "icmpv6_obj1_uuid",
                    "name" : "icmpv6_obj1"
                  }, {
                    "type" : "ProtocolPortObject",
                    "protocol" : "TCP",
                    "port" : "123",
                    "overridable" : false,
                    "id" : "ppobj1_uuid",
                    "name" : "ppobj1"
                  } ],
                  "overrides" : {
                    "parent" : {
                      "id" : "ppgrp1_uuid",
                      "type" : "PortObjectGroup"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "target_uuid",
                      "type" : "Device"
                    }
                  },
                  "overridable" : true,
                  "description" : " ",
                  "id" : "ppgrp1_uuid",
                  "name" : "ppgrp1"
                },
                "Response Example 3 :PUT /fmc_config/v1/domain/DomainUUID/object/portobjectgroups/ppgrp1_uuid ( PUT request to update an override on port object )" : {
                  "metadata" : {
                    "timestamp" : 0,
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUuid"
                    },
                    "parentType" : "Port"
                  },
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/portobjectgroups/ppgrp1_uuid?overrideTargetId=target_uuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/ports"
                  },
                  "type" : "PortObjectGroup",
                  "objects" : [ {
                    "type" : "ICMPV4Object",
                    "code" : 0,
                    "icmpType" : "3",
                    "overridable" : false,
                    "id" : "icmpv4_obj1_uuid",
                    "name" : "icmpv4_obj1"
                  }, {
                    "type" : "ICMPV6Object",
                    "code" : 0,
                    "icmpType" : "3",
                    "overridable" : false,
                    "id" : "icmpv6_obj1_uuid",
                    "name" : "icmpv6_obj1"
                  }, {
                    "type" : "ProtocolPortObject",
                    "protocol" : "TCP",
                    "port" : "123",
                    "overridable" : false,
                    "id" : "ppobj1_uuid",
                    "name" : "ppobj1"
                  } ],
                  "overrides" : {
                    "parent" : {
                      "id" : "ppgrp1_uuid",
                      "type" : "PortObjectGroup"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "target_uuid",
                      "type" : "Device"
                    }
                  },
                  "overridable" : true,
                  "id" : "ppgrp1_uuid",
                  "name" : "ppgrp1"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/PortObjectGroup"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the port object group object associated with the specified ID. If no ID is specified for a GET, retrieves list of all port object group objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deletePortObjectGroup",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the port object group.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PortObjectGroup"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /fmc_config/v1/domain/DomainUUID/object/portobjectgroups/PortGroupObj2UUID ( Test DELETE of PortGroup Object )" : {
                  "id" : "PortGroupObj2UUID",
                  "name" : "portgroup_obj2",
                  "type" : "PortObjectGroup",
                  "objects" : [ {
                    "type" : "ICMPV4Object",
                    "id" : "ICMPV4ObjectUUID"
                  }, {
                    "id" : "ICMPV6ObjectUUID",
                    "type" : "ICMPV6Object"
                  }, {
                    "id" : "ProtocolPortObjectUUID",
                    "type" : "ProtocolPortObject"
                  } ]
                },
                "Response Example 2 :DELETE /fmc_config/v1/domain/DomainUUID/object/portobjectgroups/ppgrp1_uuid?overrideTargetId=target_uuid ( Delete request to remove an override on port group )" : {
                  "metadata" : {
                    "timestamp" : 1527357918940,
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUuid"
                    },
                    "parentType" : "Port"
                  },
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/portobjectgroups/ppgrp1_uuid?overrideTargetId=target_uuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/ports"
                  },
                  "type" : "PortObjectGroup",
                  "objects" : [ {
                    "type" : "ICMPV4Object",
                    "code" : 0,
                    "icmpType" : "3",
                    "overridable" : false,
                    "id" : "icmpv4_obj1_uuid",
                    "name" : "icmpv4_obj1"
                  }, {
                    "type" : "ICMPV6Object",
                    "code" : 0,
                    "icmpType" : "3",
                    "overridable" : false,
                    "id" : "icmpv6_obj1_uuid",
                    "name" : "icmpv6_obj1"
                  }, {
                    "type" : "ProtocolPortObject",
                    "protocol" : "TCP",
                    "port" : "123",
                    "overridable" : false,
                    "id" : "ppobj1_uuid",
                    "name" : "ppobj1"
                  } ],
                  "overrides" : {
                    "parent" : {
                      "id" : "ppgrp1_uuid",
                      "type" : "PortObjectGroup"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "target_uuid",
                      "type" : "Device"
                    }
                  },
                  "overridable" : true,
                  "description" : " ",
                  "id" : "ppgrp1_uuid",
                  "name" : "ppgrp1"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/ports" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves list of all port objects.**",
        "operationId" : "getPortObject",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "To be used in conjunction with <code>\"unusedOnly:true\"</code> to search for unused objects and <code>\"nameOrValue:{nameOrValue}\"</code> to search for both name and value.",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PortObjectListContainer"
            },
            "examples" : { }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/protocolportobjects" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the protocol(tcp/udp) port object associated with the specified ID. If no ID is specified for a GET, retrieves list of all protocol(tcp/udp) port objects.**",
        "operationId" : "getAllProtocolPortObject",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "To be used in conjunction with <code>\"unusedOnly:true\"</code> to search for unused objects and <code>\"nameOrValue:{nameOrValue}\"</code> to search for both name and value.",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ProtocolPortObjectListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/GlobalDomainUUID/object/protocolportobjects?expanded=true&overrideTargetId=childDomainUUID ( Success: Test GET ALL method from global domain for ProtocolPortObject when overrides are assigned to child domain )" : {
                  "links" : {
                    "self" : "https://fmc_host_ip/api/fmc_config/v1/domain/global/object/protocolportobjects?offset=0&limit=1"
                  },
                  "items" : [ {
                    "metadata" : {
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global \\ Asia",
                        "id" : "childDomainUUID"
                      },
                      "parentType" : "PortObject"
                    },
                    "links" : {
                      "self" : "https://fmc_host_ip/api/fmc_config/v1/domain/global/object/protocolportobjects/protocoPortObjUUID",
                      "parent" : "https://fmc_host_ip/api/fmc_config/v1/domain/global/object/ports"
                    },
                    "type" : "ProtocolPortObject",
                    "protocol" : "TCP",
                    "port" : "123",
                    "overrides" : {
                      "parent" : {
                        "id" : "protocoPortObjUUID",
                        "type" : "ProtocolPortObject"
                      },
                      "target" : {
                        "name" : "Global \\ Asia",
                        "id" : "childDomainUUID",
                        "type" : "Domain"
                      }
                    },
                    "overridable" : true,
                    "description" : " ",
                    "name" : "pvs_protocol",
                    "id" : "protocoPortObjUUID"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/childDomainUUID/object/protocolportobjects?expanded=true&overrideTargetId=childDomainUUID ( Success: Test GET ALL method from child domain for ProtocolPortObject when overrides are assigned to child domain )" : {
                  "links" : {
                    "self" : "https://fmc_host_ip/api/fmc_config/v1/domain/childDomainUUID/object/protocolportobjects?offset=0&limit=1"
                  },
                  "items" : [ {
                    "metadata" : {
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global \\ Asia",
                        "id" : "childDomainUUID"
                      },
                      "parentType" : "PortObject"
                    },
                    "links" : {
                      "self" : "https://fmc_host_ip/api/fmc_config/v1/domain/childDomainUUID/object/protocolportobjects/protocoPortObjUUID",
                      "parent" : "https://fmc_host_ip/api/fmc_config/v1/domain/childDomainUUID/object/ports"
                    },
                    "type" : "ProtocolPortObject",
                    "protocol" : "TCP",
                    "port" : "123",
                    "overrides" : {
                      "parent" : {
                        "id" : "protocoPortObjUUID",
                        "type" : "ProtocolPortObject"
                      },
                      "target" : {
                        "name" : "Global \\ Asia",
                        "id" : "childDomainUUID",
                        "type" : "Domain"
                      }
                    },
                    "overridable" : true,
                    "description" : " ",
                    "name" : "pvs_protocol",
                    "id" : "protocoPortObjUUID"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the protocol(tcp/udp) port object associated with the specified ID. If no ID is specified for a GET, retrieves list of all protocol(tcp/udp) port objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createMultipleProtocolPortObject",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The input protocol port object model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProtocolPortObject"
          }
        }, {
          "name" : "bulk",
          "in" : "query",
          "description" : "Enables bulk create for protocol port objects.",
          "required" : false,
          "type" : "boolean"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/ProtocolPortObject"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /fmc_config/v1/domain/DomainUUID/object/protocolportobjects ( Test registration of ProtocolPortObject to create a new record )" : {
                  "name" : "protocolport_obj1",
                  "protocol" : "TCP",
                  "port" : 123,
                  "type" : "ProtocolPortObject"
                },
                "Request example 2 : POST /fmc_config/v1/domain/DomainUUID/object/protocolportobjects?bulk=true ( Bulk POST operation on protocol port objects )" : [ {
                  "name" : "pp1",
                  "protocol" : "TCP",
                  "port" : 123,
                  "type" : "ProtocolPortObject"
                }, {
                  "name" : "pp2",
                  "protocol" : "UDP",
                  "port" : 456,
                  "type" : "ProtocolPortObject"
                } ],
                "Request example 3 : POST /fmc_config/v1/domain/DomainUUID/object/protocolportobjects?bulk=true ( Bulk POST operation on protocol port objects with overrides )" : [ {
                  "type" : "ProtocolPortObject",
                  "port" : "15",
                  "protocol" : "TCP",
                  "overridable" : true,
                  "description" : " ",
                  "name" : "ppobj",
                  "overrides" : {
                    "parent" : {
                      "id" : "ppobj_uuid",
                      "type" : "ProtocolPortObject"
                    },
                    "target" : {
                      "name" : "Global \\ EUROPE",
                      "id" : "domain_uuid",
                      "type" : "Domain"
                    }
                  },
                  "id" : "ppobj_uuid"
                }, {
                  "type" : "ProtocolPortObject",
                  "port" : "15",
                  "protocol" : "UDP",
                  "overridable" : true,
                  "description" : " ",
                  "name" : "ppobj",
                  "overrides" : {
                    "parent" : {
                      "id" : "ppobj_uuid",
                      "type" : "ProtocolPortObject"
                    },
                    "target" : {
                      "name" : "FTDv_R1",
                      "id" : "device_uuid",
                      "type" : "Device"
                    }
                  },
                  "id" : "ppobj_uuid"
                } ],
                "Request example 4 : POST /fmc_config/v1/domain/DomainUUID/object/protocolportobjects ( POST request to create an override on protocol port object )" : {
                  "type" : "ProtocolPortObject",
                  "protocol" : "TCP",
                  "port" : "123",
                  "overridable" : true,
                  "overrides" : {
                    "parent" : {
                      "id" : "ppobj1_uuid",
                      "type" : "ProtocolPortObject"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "target_uuid",
                      "type" : "Device"
                    }
                  },
                  "id" : "ppobj1_uuid",
                  "name" : "ppobj1"
                },
                "Request example 5 : POST /fmc_config/v1/domain/DomainUUID/object/protocolportobjects ( Test POST of ProtocolPort object to create a new record )" : {
                  "name" : "Shanghai",
                  "protocol" : "TCP",
                  "port" : "25",
                  "type" : "ProtocolPortObject",
                  "description" : "Testing Protocol port object"
                },
                "Response Example 2 :POST /fmc_config/v1/domain/DomainUUID/object/protocolportobjects?bulk=true ( Bulk POST operation on protocol port objects )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/protocolportobjects?bulk=true"
                  },
                  "items" : [ {
                    "metadata" : {
                      "timestamp" : 0,
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUuid"
                      },
                      "parentType" : "Port"
                    },
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/protocolportobjects/pp1Uuid",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/ports"
                    },
                    "type" : "ProtocolPortObject",
                    "protocol" : "TCP",
                    "port" : "123",
                    "overridable" : false,
                    "description" : " ",
                    "name" : "pp1",
                    "id" : "pp1Uuid"
                  }, {
                    "metadata" : {
                      "timestamp" : 0,
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUuid"
                      },
                      "parentType" : "Port"
                    },
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/protocolportobjects/pp2Uuid",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/ports"
                    },
                    "type" : "ProtocolPortObject",
                    "protocol" : "UDP",
                    "port" : "456",
                    "overridable" : false,
                    "description" : " ",
                    "name" : "pp2",
                    "id" : "pp2Uuid"
                  } ]
                },
                "Response Example 3 :POST /fmc_config/v1/domain/DomainUUID/object/protocolportobjects?bulk=true ( Bulk POST operation on protocol port objects with overrides )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/protocolportobjects?bulk=true"
                  },
                  "items" : [ {
                    "metadata" : {
                      "timestamp" : 0,
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global \\ EUROPE",
                        "id" : "domain_uuid"
                      },
                      "parentType" : "Port"
                    },
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/protocolportobjects/ppobj_uuid",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/ports"
                    },
                    "type" : "ProtocolPortObject",
                    "port" : "15",
                    "protocol" : "TCP",
                    "overrides" : {
                      "parent" : {
                        "id" : "ppobj_uuid",
                        "type" : "ProtocolPortObject"
                      },
                      "target" : {
                        "name" : "Global \\ EUROPE",
                        "id" : "domain_uuid",
                        "type" : "Domain"
                      }
                    },
                    "overridable" : true,
                    "name" : "ppobj",
                    "id" : "ppobj_uuid"
                  }, {
                    "metadata" : {
                      "timestamp" : 0,
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global \\ ASIA",
                        "id" : "domain_uuid"
                      },
                      "parentType" : "Port"
                    },
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/protocolportobjects/ppobj_uuid",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/ports"
                    },
                    "type" : "ProtocolPortObject",
                    "port" : "15",
                    "protocol" : "UDP",
                    "overrides" : {
                      "parent" : {
                        "id" : "ppobj_uuid",
                        "type" : "ProtocolPortObject"
                      },
                      "target" : {
                        "name" : "FTDv_R1",
                        "id" : "device_uuid",
                        "type" : "Device"
                      }
                    },
                    "overridable" : true,
                    "name" : "ppobj",
                    "id" : "ppobj_uuid"
                  } ]
                },
                "Response Example 4 :POST /fmc_config/v1/domain/DomainUUID/object/protocolportobjects ( POST request to create an override on protocol port object )" : {
                  "metadata" : {
                    "timestamp" : 0,
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUuid"
                    },
                    "parentType" : "Port"
                  },
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/protocolportobjects/ppobj1_uuid?overrideTargetId=target_uuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/ports"
                  },
                  "type" : "ProtocolPortObject",
                  "protocol" : "TCP",
                  "port" : "123",
                  "overrides" : {
                    "parent" : {
                      "id" : "ppobj1_uuid",
                      "type" : "ProtocolPortObject"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "target_uuid",
                      "type" : "Device"
                    }
                  },
                  "overridable" : true,
                  "id" : "ppobj1_uuid",
                  "name" : "ppobj1"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/ProtocolPortObject"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/protocolportobjects/{containerUUID}/overrides" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves all(Domain and Device) overrides on a ProtocolPort object.Response will always be in expanded form. If passed, the \"expanded\" query parameter will be ignored.**",
        "operationId" : "getAllProtocolPortObjectOverride",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ProtocolPortObjectOverrideListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/domainUUID/object/protocolportobjects/portUUID/overrides ( Get all (domain and device) overrides on gievn ProtocolPort Object )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/object/protocolportobjects/portUUID/overrides?offset=0&limit=2"
                  },
                  "items" : [ {
                    "metadata" : {
                      "timestamp" : 1520343176850,
                      "lastUser" : {
                        "name" : "user"
                      },
                      "domain" : {
                        "name" : "Global \\ INDIA",
                        "id" : "domainUUID"
                      },
                      "parentType" : "PortObject"
                    },
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/object/protocolportobjects/portUUID?overrideTargetId=targetUUID"
                    },
                    "type" : "ProtocolPortObject",
                    "port" : "5555",
                    "protocol" : "TCP",
                    "overrides" : {
                      "parent" : {
                        "id" : "portUUID",
                        "type" : "ProtocolPortObject"
                      },
                      "target" : {
                        "name" : "10.10.19.25",
                        "id" : "targetUUID",
                        "type" : "Device"
                      }
                    },
                    "overridable" : true,
                    "description" : " ",
                    "name" : "protocol_port_1",
                    "id" : "portUUID"
                  }, {
                    "metadata" : {
                      "timestamp" : 1520343161346,
                      "lastUser" : {
                        "name" : "user"
                      },
                      "domain" : {
                        "name" : "Global \\ BENGALURU",
                        "id" : "domainUUID"
                      },
                      "parentType" : "PortObject"
                    },
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/object/protocolportobjects/portUUID?overrideTargetId=targetUUID",
                      "parent" : "/fmc_config/v1/domain/domainUUID/object/protocolportobjects/portUUID/ports"
                    },
                    "type" : "ProtocolPortObject",
                    "port" : "2222",
                    "protocol" : "TCP",
                    "overrides" : {
                      "parent" : {
                        "id" : "portUUID",
                        "type" : "ProtocolPortObject"
                      },
                      "target" : {
                        "name" : "Global \\ BENGALURU",
                        "id" : "targetUUID",
                        "type" : "Domain"
                      }
                    },
                    "overridable" : true,
                    "description" : " ",
                    "name" : "protocol_port_1",
                    "id" : "portUUID"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/protocolportobjects/{containerUUID}/overrides/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves all(Domain and Device) overrides on a ProtocolPort object.Response will always be in expanded form. If passed, the \"expanded\" query parameter will be ignored.**",
        "operationId" : "getProtocolPortObjectOverride",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Input NOT Expected here",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ProtocolPortObjectOverride"
            },
            "examples" : { }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/protocolportobjects/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the protocol(tcp/udp) port object associated with the specified ID. If no ID is specified for a GET, retrieves list of all protocol(tcp/udp) port objects.**",
        "operationId" : "getProtocolPortObject",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the object.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "overrideTargetId",
          "in" : "query",
          "description" : "Retrieves the override(s) associated with the protocol port object on given target ID.",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ProtocolPortObject"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/object/protocolportobjects/protocoPortObj1UUID ( Test GET of ProtocolPort Object for a uuid )" : {
                  "id" : "protocoPortObj1UUID",
                  "name" : "protocolport_obj1",
                  "type" : "ProtocolPortObject",
                  "protocol" : "TCP",
                  "port" : 123
                },
                "Response Example 2 :GET /fmc_config/v1/domain/GlobalDomainUUID/object/protocolportobjects/protocolPortObjUUID?expanded=true&overrideTargetId=childDomainUUID ( Success: Test GET method from global domain on a specific ProtocolPortObject which has override assigned as child domain )" : {
                  "metadata" : {
                    "lastUser" : {
                      "name" : "pvs"
                    },
                    "domain" : {
                      "name" : "Global \\ Asia",
                      "id" : "childDomainUUID"
                    },
                    "parentType" : "PortObject"
                  },
                  "links" : {
                    "self" : "https://fmc_host_ip/api/fmc_config/v1/domain/global/object/protocolportobjects/protocoPortObjUUID",
                    "parent" : "https://fmc_host_ip/api/fmc_config/v1/domain/global/object/ports"
                  },
                  "type" : "ProtocolPortObject",
                  "protocol" : "TCP",
                  "port" : "123",
                  "overrides" : {
                    "parent" : {
                      "id" : "protocoPortObjUUID",
                      "type" : "ProtocolPortObject"
                    },
                    "target" : {
                      "name" : "Global \\ Asia",
                      "id" : "childDomainUUID",
                      "type" : "Domain"
                    }
                  },
                  "overridable" : true,
                  "description" : " ",
                  "name" : "pvs_protocol",
                  "id" : "protocoPortObjUUID"
                },
                "Response Example 3 :GET /fmc_config/v1/domain/childDomainUUID/object/protocolportobjects/protocolPortObjUUID?expanded=true&overrideTargetId=childDomainUUID ( Success: Test GET method from child domain on a ProtocolPortObject which has child domain assigned as override )" : {
                  "metadata" : {
                    "lastUser" : {
                      "name" : "pvs"
                    },
                    "domain" : {
                      "name" : "Global \\ Asia",
                      "id" : "childDomainUUID"
                    },
                    "parentType" : "PortObject"
                  },
                  "links" : {
                    "self" : "https://fmc_host_ip/api/fmc_config/v1/domain/childDomainUUID/object/protocolportobjects/protocoPortObjUUID",
                    "parent" : "https://fmc_host_ip/api/fmc_config/v1/domain/childDomainUUID/object/ports"
                  },
                  "type" : "ProtocolPortObject",
                  "protocol" : "TCP",
                  "port" : "123",
                  "overrides" : {
                    "parent" : {
                      "id" : "protocoPortObjUUID",
                      "type" : "ProtocolPortObject"
                    },
                    "target" : {
                      "name" : "Global \\ Asia",
                      "id" : "childDomainUUID",
                      "type" : "Domain"
                    }
                  },
                  "overridable" : true,
                  "description" : " ",
                  "name" : "pvs_protocol",
                  "id" : "protocoPortObjUUID"
                },
                "Response Example 4 :GET /fmc_config/v1/domain/childDomainUUID/object/protocolportobjects/protocolPortObjUUID?expanded=true&overrideTargetId=deviceUUID ( Success: Test GET method from child domain on a ProtocolPortObject which has device assigned as override )" : {
                  "metadata" : {
                    "lastUser" : {
                      "name" : "api"
                    },
                    "domain" : {
                      "name" : "Global \\ Asia",
                      "id" : "childDomainUUID"
                    },
                    "parentType" : "PortObject"
                  },
                  "links" : {
                    "self" : "https://fmc_host_ip/api/fmc_config/v1/domain/global/object/protocolportobjects/protocoPortObjUUID",
                    "parent" : "https://fmc_host_ip/api/fmc_config/v1/domain/global/object/ports"
                  },
                  "type" : "ProtocolPortObject",
                  "protocol" : "TCP",
                  "port" : "123",
                  "overrides" : {
                    "parent" : {
                      "id" : "protocoPortObjUUID",
                      "type" : "ProtocolPortObject"
                    },
                    "target" : {
                      "name" : "device_name",
                      "id" : "deviceUUID",
                      "type" : "Device"
                    }
                  },
                  "overridable" : true,
                  "description" : " ",
                  "name" : "pvs_protocol",
                  "id" : "protocoPortObjUUID"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the protocol(tcp/udp) port object associated with the specified ID. If no ID is specified for a GET, retrieves list of all protocol(tcp/udp) port objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateProtocolPortObject",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the object.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The input protocol port object model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProtocolPortObject"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ProtocolPortObject"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/DomainUUID/object/protocolportobjects/protocoPortObj1UUID ( Test PUT of ProtocolPort object to update record )" : {
                  "id" : "protocoPortObj1UUID",
                  "name" : "protocolport_obj1_updated",
                  "type" : "ProtocolPortObject",
                  "protocol" : "TCP",
                  "port" : 1
                },
                "Request example 2 : PUT /fmc_config/v1/domain/DomainUUID/object/protocolportobjects/ppobj1_uuid ( PUT request to update an override on protocol port object )" : {
                  "type" : "ProtocolPortObject",
                  "protocol" : "TCP",
                  "port" : "125",
                  "overridable" : true,
                  "overrides" : {
                    "parent" : {
                      "id" : "ppobj1_uuid",
                      "type" : "ProtocolPortObject"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "target_uuid",
                      "type" : "Device"
                    }
                  },
                  "id" : "ppobj1_uuid",
                  "name" : "ppobj1"
                },
                "Response Example 2 :PUT /fmc_config/v1/domain/DomainUUID/object/protocolportobjects/ppobj1_uuid ( PUT request to update an override on protocol port object )" : {
                  "metadata" : {
                    "timestamp" : 0,
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUuid"
                    },
                    "parentType" : "Port"
                  },
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/protocolportobjects/ppobj1_uuid?overrideTargetId=target_uuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/ports"
                  },
                  "type" : "ProtocolPortObject",
                  "protocol" : "TCP",
                  "port" : "125",
                  "overrides" : {
                    "parent" : {
                      "id" : "ppobj1_uuid",
                      "type" : "ProtocolPortObject"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "target_uuid",
                      "type" : "Device"
                    }
                  },
                  "overridable" : true,
                  "id" : "ppobj1_uuid",
                  "name" : "ppobj1"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/ProtocolPortObject"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the protocol(tcp/udp) port object associated with the specified ID. If no ID is specified for a GET, retrieves list of all protocol(tcp/udp) port objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteProtocolPortObject",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the object.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ProtocolPortObject"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /fmc_config/v1/domain/DomainUUID/object/protocolportobjects/protocoPortObj2UUID ( Test DELETE of ProtocolPort Object )" : {
                  "id" : "protocoPortObj2UUID",
                  "name" : "protocolport_obj2",
                  "type" : "ProtocolPortObject",
                  "protocol" : "TCP",
                  "port" : 123
                },
                "Response Example 2 :DELETE /fmc_config/v1/domain/DomainUUID/object/protocolportobjects/ppobj1_uuid?overrideTargetId=target_uuid ( DELETE request to remove an override on protocol port object )" : {
                  "metadata" : {
                    "timestamp" : 1527350496236,
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUuid"
                    },
                    "parentType" : "Port"
                  },
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/protocolportobjects/ppobj1_uuid?overrideTargetId=target_uuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/ports"
                  },
                  "type" : "ProtocolPortObject",
                  "protocol" : "TCP",
                  "port" : "125",
                  "overrides" : {
                    "parent" : {
                      "id" : "ppobj1_uuid",
                      "type" : "ProtocolPortObject"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "target_uuid",
                      "type" : "Device"
                    }
                  },
                  "overridable" : true,
                  "description" : " ",
                  "id" : "ppobj1_uuid",
                  "name" : "ppobj1"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/radiusservergroups" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the Radius Server Group associated with the specified ID. If no ID is specified for a GET, retrieves list of all Radius Server Group objects.**",
        "operationId" : "getAllRadiusServerGroupModel",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "To be used in conjunction with <code>\"unusedOnly:true\"</code> to search for unused objects and <code>\"nameOrValue:{nameOrValue}\"</code> to search for both name and value.",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/RadiusServerGroupModelListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/DomainUUID/object/radiusservergroups ( Test GET ALL Success of Radius Server Group )" : {
                  "items" : [ {
                    "name" : "Radius-Server-1",
                    "description" : "Radius-Server-1 desc",
                    "id" : "RadiusServerGroupUUID",
                    "type" : "RadiusServerGroup",
                    "retryInterval" : 4,
                    "dynamicAuthorizationPort" : 1800,
                    "interimAccountUpdateInterval" : 110,
                    "groupAccountingMode" : "MULTIPLE",
                    "realm" : {
                      "name" : "Realm",
                      "id" : "RealmUUID",
                      "type" : "IdentityRealm"
                    },
                    "enableAuthorizeOnly" : true,
                    "enableInterimAccountUpdate" : true,
                    "enableDynamicAuthorization" : true,
                    "radiusServers" : [ {
                      "timeout" : 110,
                      "host" : "string",
                      "interface" : {
                        "name" : "String",
                        "id" : "InterfaceUUID",
                        "type" : "SecurityZone"
                      },
                      "serverSecretKey" : "****",
                      "serverAuthenticationPort" : 1812,
                      "serverAccountingPort" : 1813,
                      "useRoutingToSelectInterface" : true,
                      "redirectACL" : {
                        "name" : "string",
                        "id" : "ExtendedAccessListUUID",
                        "type" : "ExtendedAccessList"
                      }
                    } ],
                    "metadata" : {
                      "domain" : {
                        "name" : "Global",
                        "id" : "DomainUUID",
                        "type" : "Domain"
                      }
                    }
                  }, {
                    "name" : "Radius-Server-2",
                    "description" : "Radius-Server-2 desc",
                    "id" : "RadiusServerGroupUUID",
                    "type" : "RadiusServerGroup",
                    "retryInterval" : 4,
                    "dynamicAuthorizationPort" : 1800,
                    "interimAccountUpdateInterval" : 110,
                    "groupAccountingMode" : "MULTIPLE",
                    "realm" : {
                      "name" : "Realm",
                      "id" : "RealmUUID",
                      "type" : "IdentityRealm"
                    },
                    "enableAuthorizeOnly" : true,
                    "enableInterimAccountUpdate" : true,
                    "enableDynamicAuthorization" : true,
                    "radiusServers" : [ {
                      "timeout" : 110,
                      "host" : "string",
                      "interface" : {
                        "name" : "String",
                        "id" : "InterfaceUUID",
                        "type" : "SecurityZone"
                      },
                      "serverSecretKey" : "****",
                      "serverAuthenticationPort" : 1812,
                      "serverAccountingPort" : 1813,
                      "useRoutingToSelectInterface" : true,
                      "redirectACL" : {
                        "name" : "string",
                        "id" : "ExtendedAccessListUUID",
                        "type" : "ExtendedAccessList"
                      }
                    } ],
                    "metadata" : {
                      "domain" : {
                        "name" : "Global",
                        "id" : "DomainUUID",
                        "type" : "Domain"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/radiusservergroups/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the Radius Server Group associated with the specified ID. If no ID is specified for a GET, retrieves list of all Radius Server Group objects.**",
        "operationId" : "getRadiusServerGroupModel",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for Radius Server Group object.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/RadiusServerGroupModel"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/object/Radiusservergroups/objectId ( Get paginated Radius Server Group objects with limit=1 )" : {
                  "name" : "Radius-Server",
                  "description" : "Radius-Server-3 desc",
                  "id" : "RadiusServerGroupUUID",
                  "type" : "RadiusServerGroup",
                  "retryInterval" : 4,
                  "dynamicAuthorizationPort" : 1800,
                  "interimAccountUpdateInterval" : 110,
                  "groupAccountingMode" : "MULTIPLE",
                  "realm" : {
                    "name" : "Realm",
                    "id" : "RealmUUID",
                    "type" : "IdentityRealm"
                  },
                  "enableAuthorizeOnly" : true,
                  "enableInterimAccountUpdate" : true,
                  "enableDynamicAuthorization" : true,
                  "radiusServers" : [ {
                    "timeout" : 110,
                    "host" : "string",
                    "interface" : {
                      "name" : "String",
                      "id" : "InterfaceUUID",
                      "type" : "SecurityZone"
                    },
                    "serverSecretKey" : "****",
                    "serverAuthenticationPort" : 1812,
                    "serverAccountingPort" : 1813,
                    "useRoutingToSelectInterface" : true,
                    "redirectACL" : {
                      "name" : "string",
                      "id" : "ExtendedAccessListUUID",
                      "type" : "ExtendedAccessList"
                    }
                  } ],
                  "metadata" : {
                    "domain" : {
                      "name" : "Global",
                      "id" : "DomainUUID",
                      "type" : "Domain"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/ranges" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the address range object associated with the specified ID. If no ID is specified for a GET, retrieves list of all address range objects.**",
        "operationId" : "getAllRangeObject",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "To be used in conjunction with <code>\"unusedOnly:true\"</code> to search for unused objects and <code>\"nameOrValue:{nameOrValue}\"</code> to search for both name and value.",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/RangeObjectListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/domainUUID/object/ranges ( Get all paginated Range objects )" : {
                  "links" : {
                    "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/ranges?offset=0&limit=2"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/ranges/00505690-1DF7-0ed3-0000-236223201462",
                      "parent" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/networkaddresses"
                    },
                    "type" : "Range",
                    "name" : "Test1",
                    "id" : "00505690-1DF7-0ed3-0000-236223201462"
                  }, {
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/ranges/Range-obj-UUID-2",
                      "parent" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/networkaddresses"
                    },
                    "type" : "Range",
                    "name" : "TestRange",
                    "id" : "Range-obj-UUID-2"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/domainUUID/object/ranges?expanded=true ( Get all paginated Range objects with expanded set to true )" : {
                  "links" : {
                    "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/ranges?offset=0&limit=2"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/ranges/00505690-1DF7-0ed3-0000-236223201462",
                      "parent" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/networkaddresses"
                    },
                    "type" : "Range",
                    "value" : "10.20.40.50-10.20.40.60",
                    "overridable" : false,
                    "description" : "Test1",
                    "name" : "Test1",
                    "id" : "00505690-1DF7-0ed3-0000-236223201462",
                    "metadata" : {
                      "lastUser" : {
                        "name" : "testuser"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "Global-domain-UUID"
                      },
                      "ipType" : "V_4",
                      "parentType" : "NetworkAddress"
                    }
                  }, {
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/ranges/Range-obj-UUID-2",
                      "parent" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/networkaddresses"
                    },
                    "type" : "Range",
                    "value" : "10.20.30.4-10.20.30.128",
                    "overridable" : false,
                    "description" : " ",
                    "name" : "TestRange",
                    "id" : "Range-obj-UUID-2",
                    "metadata" : {
                      "lastUser" : {
                        "name" : "testuser"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "Global-domain-UUID"
                      },
                      "ipType" : "V_4",
                      "parentType" : "NetworkAddress"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                },
                "Response Example 3 : GET /fmc_config/v1/domain/domainUUID/object/ranges?overrideTargetId=target_uuid&expanded=true ( Get all range objects with overrides )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/ranges?offset=0&limit=1&overrideTargetId=device_uuid&expanded=true"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/ranges/range_uuid?overrideTargetId=device_uuid",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/networkaddresses"
                    },
                    "type" : "Range",
                    "value" : "1.1.1.1-1.1.1.20",
                    "overrides" : {
                      "parent" : {
                        "id" : "range_uuid",
                        "type" : "Range"
                      },
                      "target" : {
                        "name" : "10.10.16.29",
                        "id" : "device_uuid",
                        "type" : "Device"
                      }
                    },
                    "overridable" : true,
                    "description" : " ",
                    "id" : "range_uuid",
                    "name" : "range1",
                    "metadata" : {
                      "timestamp" : 1528118458516,
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global \\ ASIA \\ INDIA",
                        "id" : "domain_Uuid"
                      },
                      "ipType" : "V_4",
                      "parentType" : "NetworkAddress"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the address range object associated with the specified ID. If no ID is specified for a GET, retrieves list of all address range objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createMultipleRangeObject",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of address range.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RangeObject"
          }
        }, {
          "name" : "bulk",
          "in" : "query",
          "description" : "Enables bulk create for range objects.",
          "required" : false,
          "type" : "boolean"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/RangeObject"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /fmc_config/v1/domain/domainUUID/object/ranges ( POST to create a range object )" : {
                  "name" : "TestRange2",
                  "value" : "10.4.30.40-10.4.30.50",
                  "type" : "Range",
                  "description" : "Test Description"
                },
                "Request example 2 : POST /fmc_config/v1/domain/domainUUID/object/ranges?bulk=true ( POST to create a range object )" : [ {
                  "name" : "Range1",
                  "value" : "10.4.30.40-10.4.30.50",
                  "type" : "Range",
                  "description" : "Range obj 1"
                }, {
                  "name" : "Range2",
                  "value" : "1.2.3.4-1.2.3.10",
                  "type" : "Range",
                  "description" : "Range obj2"
                } ],
                "Request example 3 : POST /fmc_config/v1/domain/domainUUID/object/ranges?bulk=true ( Bulk POST to create a range objects with overrides )" : [ {
                  "type" : "Range",
                  "value" : "10.10.10.1-10.10.10.10",
                  "overrides" : {
                    "parent" : {
                      "id" : "range_obj_uuid",
                      "type" : "Range"
                    },
                    "target" : {
                      "name" : "Global \\ EUROPE",
                      "id" : "domain_uuid",
                      "type" : "Domain"
                    }
                  },
                  "overridable" : true,
                  "description" : " ",
                  "name" : "range_obj",
                  "id" : "range_obj_uuid"
                }, {
                  "type" : "Range",
                  "value" : "20.20.20.1-20.20.20.10",
                  "overrides" : {
                    "parent" : {
                      "id" : "range_obj_uuid",
                      "type" : "Range"
                    },
                    "target" : {
                      "name" : "FTDv_R1",
                      "id" : "device_uuid",
                      "type" : "Device"
                    }
                  },
                  "overridable" : true,
                  "description" : " ",
                  "name" : "range_obj",
                  "id" : "range_obj_uuid"
                } ],
                "Request example 4 : POST /fmc_config/v1/domain/domainUUID/object/ranges ( POST request to create override on a range object. )" : {
                  "type" : "Range",
                  "value" : "1.1.1.1-1.1.1.10",
                  "overridable" : true,
                  "description" : " ",
                  "overrides" : {
                    "parent" : {
                      "id" : "range2_uuid",
                      "type" : "Host"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "target_uuid",
                      "type" : "Device"
                    }
                  },
                  "id" : "range2_uuid",
                  "name" : "range2"
                },
                "Response Example 1 :POST /fmc_config/v1/domain/domainUUID/object/ranges ( POST to create a range object )" : {
                  "links" : {
                    "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/ranges/Range-obj-UUID-1",
                    "parent" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/networkaddresses"
                  },
                  "type" : "Range",
                  "value" : "10.4.30.40-10.4.30.50",
                  "overridable" : false,
                  "name" : "TestRange2",
                  "id" : "Range-obj-UUID-1",
                  "metadata" : {
                    "lastUser" : {
                      "name" : "testuser"
                    },
                    "domain" : {
                      "name" : "Global \\ TestDomain",
                      "id" : "domainUUID"
                    },
                    "ipType" : "V_4",
                    "parentType" : "NetworkAddress"
                  }
                },
                "Response Example 2 :POST /fmc_config/v1/domain/domainUUID/object/ranges?bulk=true ( POST to create a range object )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/ranges?bulk=true"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/ranges/range1Uuid",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/networkaddresses"
                    },
                    "type" : "Range",
                    "value" : "10.4.30.40-10.4.30.50",
                    "overridable" : false,
                    "description" : "Range obj 1",
                    "name" : "Range1",
                    "id" : "range1Uuid",
                    "metadata" : {
                      "timestamp" : 0,
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUuid"
                      },
                      "ipType" : "V_4",
                      "parentType" : "NetworkAddress"
                    }
                  }, {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/ranges/range2Uuid",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/networkaddresses"
                    },
                    "type" : "Range",
                    "value" : "1.2.3.4-1.2.3.10",
                    "overridable" : false,
                    "description" : "Range obj2",
                    "name" : "Range2",
                    "id" : "range2Uuid",
                    "metadata" : {
                      "timestamp" : 0,
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUuid"
                      },
                      "ipType" : "V_4",
                      "parentType" : "NetworkAddress"
                    }
                  } ]
                },
                "Response Example 3 :POST /fmc_config/v1/domain/domainUUID/object/ranges?bulk=true ( Bulk POST to create a range objects with overrides )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/ranges?bulk=true"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/ranges/range_obj_uuid",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/networkaddresses"
                    },
                    "type" : "Range",
                    "value" : "10.10.10.1-10.10.10.10",
                    "overrides" : {
                      "parent" : {
                        "id" : "range_obj_uuid",
                        "type" : "Range"
                      },
                      "target" : {
                        "name" : "Global \\ EUROPE",
                        "id" : "domain_uuid",
                        "type" : "Domain"
                      }
                    },
                    "overridable" : true,
                    "name" : "range_obj",
                    "id" : "range_obj_uuid",
                    "metadata" : {
                      "timestamp" : 0,
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global \\ EUROPE",
                        "id" : "domain_uuid"
                      },
                      "ipType" : "V_4",
                      "parentType" : "NetworkAddress"
                    }
                  }, {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/ranges/range_obj_uuid",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/networkaddresses"
                    },
                    "type" : "Range",
                    "value" : "20.20.20.1-20.20.20.10",
                    "overrides" : {
                      "parent" : {
                        "id" : "range_obj_uuid",
                        "type" : "Range"
                      },
                      "target" : {
                        "name" : "FTDv_R1",
                        "id" : "device_uuid",
                        "type" : "Device"
                      }
                    },
                    "overridable" : true,
                    "name" : "range_obj",
                    "id" : "range_obj_uuid",
                    "metadata" : {
                      "timestamp" : 0,
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global \\ ASIA",
                        "id" : "domain_uuid"
                      },
                      "ipType" : "V_4",
                      "parentType" : "NetworkAddress"
                    }
                  } ]
                },
                "Response Example 4 :POST /fmc_config/v1/domain/domainUUID/object/ranges ( POST request to create override on a range object. )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/ranges/range2_uuid?overrideTargetId=target_uuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/networkaddresses"
                  },
                  "type" : "Range",
                  "value" : "1.1.1.1-1.1.1.10",
                  "overrides" : {
                    "parent" : {
                      "id" : "range2_uuid",
                      "type" : "Range"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "target_uuid",
                      "type" : "Device"
                    }
                  },
                  "overridable" : true,
                  "id" : "range2_uuid",
                  "name" : "range2",
                  "metadata" : {
                    "timestamp" : 0,
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUuid"
                    },
                    "ipType" : "V_4",
                    "parentType" : "NetworkAddress"
                  }
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/RangeObject"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/ranges/{containerUUID}/overrides" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves all(Domain and Device) overrides on a Range object.Response will always be in expanded form. If passed, the \"expanded\" query parameter will be ignored.**",
        "operationId" : "getAllRangeOverride",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/RangeOverrideListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/domainUUID/object/ranges/rangeUUID/overrides ( Get all overrides on Given range object )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/object/ranges/rangeUUID/overrides?offset=0&limit=1"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/object/ranges/rangeUUID?overrideTargetId=targetUUID"
                    },
                    "type" : "Range",
                    "value" : "1.2.3.7-1.2.3.9",
                    "overrides" : {
                      "parent" : {
                        "id" : "rangeUUID",
                        "type" : "Range"
                      },
                      "target" : {
                        "name" : "Global \\ BENGALURU",
                        "id" : "targetUUID",
                        "type" : "Domain"
                      }
                    },
                    "overridable" : true,
                    "description" : " ",
                    "name" : "Range_1",
                    "id" : "rangeUUID",
                    "metadata" : {
                      "timestamp" : 1520336790963,
                      "lastUser" : {
                        "name" : "user1"
                      },
                      "domain" : {
                        "name" : "Global \\ BENGALURU",
                        "id" : "domainUUID"
                      }
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/ranges/{containerUUID}/overrides/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves all(Domain and Device) overrides on a Range object.Response will always be in expanded form. If passed, the \"expanded\" query parameter will be ignored.**",
        "operationId" : "getRangeOverride",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Input NOT Expected here",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/RangeOverride"
            },
            "examples" : { }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/ranges/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the address range object associated with the specified ID. If no ID is specified for a GET, retrieves list of all address range objects.**",
        "operationId" : "getRangeObject",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for address range.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "overrideTargetId",
          "in" : "query",
          "description" : "Retrieves the override(s) associated with the range object on given target ID.",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/RangeObject"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/domainUUID/object/ranges/Range-obj-UUID-1 ( GET a range object for the given UUID )" : {
                  "links" : {
                    "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/ranges/Range-obj-UUID-1",
                    "parent" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/networkaddresses"
                  },
                  "type" : "Range",
                  "value" : "2003::3-2003::4",
                  "overridable" : false,
                  "description" : "Test Description",
                  "name" : "TestRange2",
                  "id" : "Range-obj-UUID-1",
                  "metadata" : {
                    "lastUser" : {
                      "name" : "testuser"
                    },
                    "domain" : {
                      "name" : "Global \\ TestDomain",
                      "id" : "domainUUID"
                    },
                    "ipType" : "V_6",
                    "parentType" : "NetworkAddress"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the address range object associated with the specified ID. If no ID is specified for a GET, retrieves list of all address range objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateRangeObject",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for address range.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of address range.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RangeObject"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/RangeObject"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/domainUUID/object/ranges/Range-obj-UUID-1 ( PUT to update a range object )" : {
                  "name" : "TestRange2",
                  "value" : "2003::3-2003::4",
                  "type" : "Range",
                  "description" : "Test Description",
                  "id" : "Range-obj-UUID-1"
                },
                "Request example 2 : PUT /fmc_config/v1/domain/domainUUID/object/ranges/range2_uuid ( PUT request to update an override on a Range object )" : {
                  "type" : "Range",
                  "value" : "1.1.1.1-1.1.1.10",
                  "overridable" : true,
                  "description" : " ",
                  "overrides" : {
                    "parent" : {
                      "id" : "range2_uuid",
                      "type" : "Host"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "target_uuid",
                      "type" : "Device"
                    }
                  },
                  "id" : "range2_uuid",
                  "name" : "range2"
                },
                "Response Example 1 :PUT /fmc_config/v1/domain/domainUUID/object/ranges/Range-obj-UUID-1 ( PUT to update a range object )" : {
                  "links" : {
                    "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/ranges/Range-obj-UUID-1",
                    "parent" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/networkaddresses"
                  },
                  "type" : "Range",
                  "value" : "2003::3-2003::4",
                  "overridable" : false,
                  "name" : "TestRange2",
                  "id" : "Range-obj-UUID-1",
                  "metadata" : {
                    "lastUser" : {
                      "name" : "testuser"
                    },
                    "domain" : {
                      "name" : "Global \\ TestDomain",
                      "id" : "domainUUID"
                    },
                    "ipType" : "V_6",
                    "parentType" : "NetworkAddress"
                  }
                },
                "Response Example 2 :PUT /fmc_config/v1/domain/domainUUID/object/ranges/range2_uuid ( PUT request to update an override on a Range object )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/ranges/range2_uuid?overrideTargetId=target_uuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/networkaddresses"
                  },
                  "type" : "Range",
                  "value" : "1.1.1.1-1.1.1.10",
                  "overrides" : {
                    "parent" : {
                      "id" : "range2_uuid",
                      "type" : "Range"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "target_uuid",
                      "type" : "Device"
                    }
                  },
                  "overridable" : true,
                  "id" : "range2_uuid",
                  "name" : "range2",
                  "metadata" : {
                    "timestamp" : 0,
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUuid"
                    },
                    "ipType" : "V_4",
                    "parentType" : "NetworkAddress"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/RangeObject"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the address range object associated with the specified ID. If no ID is specified for a GET, retrieves list of all address range objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteRangeObject",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for address range.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/RangeObject"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /fmc_config/v1/domain/domainUUID/object/ranges/Range-obj-UUID-1 ( DELETE a range object for the given UUID )" : {
                  "links" : {
                    "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/ranges/Range-obj-UUID-1",
                    "parent" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/networkaddresses"
                  },
                  "type" : "Range",
                  "value" : "2003::3-2003::4",
                  "overridable" : false,
                  "description" : "Test Description",
                  "name" : "TestRange2",
                  "id" : "Range-obj-UUID-1",
                  "metadata" : {
                    "lastUser" : {
                      "name" : "testuser"
                    },
                    "domain" : {
                      "name" : "Global \\ TestDomain",
                      "id" : "domainUUID"
                    },
                    "ipType" : "V_6",
                    "parentType" : "NetworkAddress"
                  }
                },
                "Response Example 2 :DELETE /fmc_config/v1/domain/domainUUID/object/ranges/range2_uuid?overrideTargetId=target_uuid ( DELETE request to delete an override on given range object )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/ranges/range2_uuid?overrideTargetId=target_uuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/networkaddresses"
                  },
                  "type" : "Range",
                  "value" : "1.1.1.1-1.1.1.10",
                  "overrides" : {
                    "parent" : {
                      "id" : "range2_uuid",
                      "type" : "Range"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "target_uuid",
                      "type" : "Device"
                    }
                  },
                  "overridable" : true,
                  "description" : " ",
                  "id" : "range2_uuid",
                  "name" : "range2",
                  "metadata" : {
                    "timestamp" : 1527243122526,
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUuid"
                    },
                    "ipType" : "V_4",
                    "parentType" : "NetworkAddress"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/realms" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the realm object associated with the specified ID. If no ID is specified, retrieves list of all realm objects.**",
        "operationId" : "getAllRealm",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "Filter criteria can be specified using the format <code>name:name;realmType:realmType;enabled:enabled</code><br/><br/><code>name</code> -- Name of the realm to be queried. May start with ^ to indicate filtering by names starting with, rather than containing.<br/><code>realmType</code> -- Type of the realm to be queried. A comma seperated list of realm types.<br/><code>enabled</code> -- Either <code>true</code> or <code>false</code>.<br/>",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/RealmListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/domainUUID/object/realms?limit=2 ( Get all paginated Realm with limit set 2 )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/object/realms?offset=0&limit=2"
                  },
                  "items" : [ {
                    "type" : "Realm",
                    "id" : "RealmUUID",
                    "name" : "Realm_2",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/object/realms/RealmUUID"
                    }
                  }, {
                    "type" : "Realm",
                    "id" : "RealmUUID",
                    "name" : "Realm_3",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/object/realms/RealmUUID"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 5,
                    "next" : [ "/fmc_config/v1/domain/domainUUID/object/realms?offset=2&limit=2", "/fmc_config/v1/domain/domainUUID/object/realms?offset=4&limit=1" ],
                    "pages" : 3
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/domainUUID/object/realms?limit=2&expanded=true ( Get all paginated application with limit set 2 )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/object/realms?offset=0&limit=5"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/object/realms/RealmUUID"
                    },
                    "name" : "ntd-test.cisco.com",
                    "id" : "625d610e-961c-11ea-83e4-8edad9fcf62e",
                    "version" : "1",
                    "type" : "Realm",
                    "realmType" : "AD",
                    "description" : "ntd-test domain",
                    "adPrimaryDomain" : "ntd-test.cisco.com",
                    "baseDn" : "dc=ntd-test,dc=cisco,dc=com",
                    "groupDn" : "dc=ntd-test,dc=cisco,dc=com",
                    "groupAttribute" : "member",
                    "dirUsername" : "administrator@ntd-test.cisco.com",
                    "dirPassword" : "*******",
                    "adJoinUsername" : "administrator@ntd-test.cisco.com",
                    "adJoinPassword" : "********",
                    "updateHour" : 0,
                    "updateInterval" : 24,
                    "activeAuthSessionTimeout" : 5,
                    "failedAuthSessionTimeout" : 1440,
                    "guestSessionTimeout" : 1440,
                    "tsAgentSessionTimeout" : 1440,
                    "directoryConfigurations" : [ {
                      "id" : 1,
                      "hostname" : "WIN2012-AD1.ntd-test.cisco.com",
                      "port" : 636,
                      "encryptionProtocol" : "LDAPS",
                      "useRoutingToSelectInterface" : false,
                      "encryptionCert" : {
                        "id" : "fd01c1ca-9700-11ea-9f57-f3f11d78105e",
                        "type" : "PKI_ExternalCA",
                        "name" : "WIN2012-AD1.ntd-test.cisco.com_cert"
                      },
                      "interface" : {
                        "id" : "bf9be468-9620-11ea-8b38-f1d4b3e2e3ba",
                        "type" : "InterfaceGroup",
                        "name" : "myIntZone"
                      }
                    } ],
                    "includedUsers" : [ ],
                    "includedGroups" : [ "G3K_1", "G3K_2" ],
                    "excludedUsers" : [ "u64k_1" ],
                    "excludedGroups" : [ ],
                    "realm_id" : 2,
                    "enabled" : true,
                    "metadata" : {
                      "readOnly" : {
                        "state" : true,
                        "reason" : "SYSTEM"
                      },
                      "systemDefined" : true,
                      "isDownloading" : false,
                      "duplicatedDomain" : false,
                      "hasUnresolvedReferences" : false,
                      "domain" : {
                        "name" : "Global",
                        "id" : "e276abec-e0f2-11e3-8169-6d9ed49b625f",
                        "type" : "Domain"
                      }
                    }
                  }, {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/object/realms/RealmUUID"
                    },
                    "name" : "ntd-test2.cisco.com",
                    "id" : "759d610e-961c-11ea-83e4-8edad9fcf62e",
                    "version" : "1",
                    "type" : "Realm",
                    "realmType" : "AD",
                    "description" : "ntd-test2 domain",
                    "adPrimaryDomain" : "ntd-test2.cisco.com",
                    "baseDn" : "dc=ntd-test2,dc=cisco,dc=com",
                    "groupDn" : "dc=ntd-test2,dc=cisco,dc=com",
                    "groupAttribute" : "member",
                    "dirUsername" : "administrator@ntd-test2.cisco.com",
                    "dirPassword" : "*******",
                    "adJoinUsername" : "administrator@ntd2-test.cisco.com",
                    "adJoinPassword" : "********",
                    "updateHour" : 0,
                    "updateInterval" : 24,
                    "activeAuthSessionTimeout" : 5,
                    "failedAuthSessionTimeout" : 1440,
                    "guestSessionTimeout" : 1440,
                    "tsAgentSessionTimeout" : 1440,
                    "directoryConfigurations" : [ {
                      "id" : 1,
                      "hostname" : "WIN2012-AD1.ntd-test2.cisco.com",
                      "port" : 636,
                      "encryptionProtocol" : "LDAPS",
                      "useRoutingToSelectInterface" : false,
                      "encryptionCert" : {
                        "id" : "abc1c1ca-9700-11ea-9f57-f3f11d78105e",
                        "type" : "PKI_ExternalCA",
                        "name" : "WIN2012-AD1.ntd-test2.cisco.com_cert"
                      },
                      "interface" : {
                        "id" : "abcbe468-9620-11ea-8b38-f1d4b3e2e3ba",
                        "type" : "InterfaceGroup",
                        "name" : "myIntZone2"
                      }
                    } ],
                    "includedUsers" : [ ],
                    "includedGroups" : [ "G3K_5", "G3K_7" ],
                    "excludedUsers" : [ "u64k_11" ],
                    "excludedGroups" : [ ],
                    "realm_id" : 2,
                    "enabled" : true,
                    "metadata" : {
                      "readOnly" : {
                        "state" : true,
                        "reason" : "SYSTEM"
                      },
                      "systemDefined" : true,
                      "isDownloading" : false,
                      "duplicatedDomain" : false,
                      "hasUnresolvedReferences" : false,
                      "domain" : {
                        "name" : "Global",
                        "id" : "e276abec-e0f2-11e3-8169-6d9ed49b625f",
                        "type" : "Domain"
                      }
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 5,
                    "next" : [ "/fmc_config/v1/domain/domainUUID/object/realms?offset=2&limit=2", "/fmc_config/v1/domain/domainUUID/object/realms?offset=4&limit=1" ],
                    "pages" : 3
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the realm object associated with the specified ID. If no ID is specified, retrieves list of all realm objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createRealm",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of user realm.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Realm"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/Realm"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/Realm"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/realms/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the realm object associated with the specified ID. If no ID is specified, retrieves list of all realm objects.**",
        "operationId" : "getRealm",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of user realm.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Realm"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/domainUUID/object/realms/RealmUUID ( Get Realm by id )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/object/realms/RealmUUID"
                  },
                  "name" : "ntd-test.cisco.com",
                  "id" : "625d610e-961c-11ea-83e4-8edad9fcf62e",
                  "version" : "1",
                  "type" : "Realm",
                  "realmType" : "AD",
                  "description" : "ntd-test domain",
                  "adPrimaryDomain" : "ntd-test.cisco.com",
                  "baseDn" : "dc=ntd-test,dc=cisco,dc=com",
                  "groupDn" : "dc=ntd-test,dc=cisco,dc=com",
                  "groupAttribute" : "member",
                  "dirUsername" : "administrator@ntd-test.cisco.com",
                  "dirPassword" : "*******",
                  "adJoinUsername" : "administrator@ntd-test.cisco.com",
                  "adJoinPassword" : "********",
                  "updateHour" : 0,
                  "updateInterval" : 24,
                  "activeAuthSessionTimeout" : 5,
                  "failedAuthSessionTimeout" : 1440,
                  "guestSessionTimeout" : 1440,
                  "tsAgentSessionTimeout" : 1440,
                  "directoryConfigurations" : [ {
                    "id" : 1,
                    "hostname" : "WIN2012-AD1.ntd-test.cisco.com",
                    "port" : 636,
                    "encryptionProtocol" : "LDAPS",
                    "useRoutingToSelectInterface" : false,
                    "encryptionCert" : {
                      "id" : "fd01c1ca-9700-11ea-9f57-f3f11d78105e",
                      "type" : "PKI_ExternalCA",
                      "name" : "WIN2012-AD1.ntd-test.cisco.com_cert"
                    },
                    "interface" : {
                      "id" : "bf9be468-9620-11ea-8b38-f1d4b3e2e3ba",
                      "type" : "InterfaceGroup",
                      "name" : "myIntZone"
                    }
                  } ],
                  "includedUsers" : [ ],
                  "includedGroups" : [ "G3K_1", "G3K_2" ],
                  "excludedUsers" : [ "u64k_1" ],
                  "excludedGroups" : [ ],
                  "realm_id" : 2,
                  "enabled" : true,
                  "metadata" : {
                    "readOnly" : {
                      "state" : true,
                      "reason" : "SYSTEM"
                    },
                    "systemDefined" : true,
                    "isDownloading" : false,
                    "duplicatedDomain" : false,
                    "hasUnresolvedReferences" : false,
                    "domain" : {
                      "name" : "Global",
                      "id" : "e276abec-e0f2-11e3-8169-6d9ed49b625f",
                      "type" : "Domain"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the realm object associated with the specified ID. If no ID is specified, retrieves list of all realm objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateRealm",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of user realm.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of user realm.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Realm"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Realm"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/Realm"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the realm object associated with the specified ID. If no ID is specified, retrieves list of all realm objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteRealm",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of user realm.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Realm"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/realmusergroups" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the realm user group object associated with the specified ID. If no ID is specified, retrieves list of all realm user group objects.**",
        "operationId" : "getAllRealmUserGroup",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "Filter criteria can be specified using the format <code>name:name;realm:realm;userId:userId</code><br/><br/><code>name</code> -- Name of the group to be queried starting with....<br/><code>realm</code> -- Realm uuid for the group.<br/><code>userId</code> -- Groups with the user id. <br/>",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/RealmUserGroupListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/domainUUID/object/realmusergroups?limit=2 ( Get all paginated RealmUserGroup with limit set 2 )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/object/realmusergroups?offset=0&limit=2"
                  },
                  "items" : [ {
                    "id" : "73",
                    "type" : "RealmUserGroup",
                    "name" : "G3K_1"
                  }, {
                    "id" : "62",
                    "type" : "RealmUserGroup",
                    "name" : "G3K_10"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 5,
                    "next" : [ "/fmc_config/v1/domain/domainUUID/object/realmusergroups?offset=2&limit=2", "/fmc_config/v1/domain/domainUUID/object/realmusergroups?offset=4&limit=1" ],
                    "pages" : 3
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/domainUUID/object/realmusergroups?limit=2&expanded=true ( Get all paginated application with limit set 2 )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/object/realmusergroups?offset=0&limit=5"
                  },
                  "items" : [ {
                    "id" : "73",
                    "type" : "RealmUserGroup",
                    "name" : "G3K_1",
                    "metadata" : {
                      "lastUpdated" : 1597708969,
                      "hasUnresolvedReferences" : false
                    },
                    "realm" : {
                      "id" : "3a0c2c20-dc18-11ea-87dc-a4f73ca0df49",
                      "type" : "Realm",
                      "name" : "ntd-test.cisco.com"
                    }
                  }, {
                    "id" : "62",
                    "type" : "RealmUserGroup",
                    "name" : "G3K_10",
                    "metadata" : {
                      "lastUpdated" : 1597708969,
                      "hasUnresolvedReferences" : false
                    },
                    "realm" : {
                      "id" : "3a0c2c20-dc18-11ea-87dc-a4f73ca0df49",
                      "type" : "Realm",
                      "name" : "ntd-test.cisco.com"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 5,
                    "next" : [ "/fmc_config/v1/domain/domainUUID/object/realmusergroups?offset=2&limit=2", "/fmc_config/v1/domain/domainUUID/object/realmusergroups?offset=4&limit=1" ],
                    "pages" : 3
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/realmusergroups/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the realm user group object associated with the specified ID. If no ID is specified, retrieves list of all realm user group objects.**",
        "operationId" : "getRealmUserGroup",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of user groups.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/RealmUserGroup"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/domainUUID/object/realmusergroups/4 ( Get RealmUserGroup by id )" : {
                  "id" : "73",
                  "type" : "RealmUserGroup",
                  "name" : "G3K_1",
                  "metadata" : {
                    "lastUpdated" : 1597708969,
                    "hasUnresolvedReferences" : false
                  },
                  "realm" : {
                    "id" : "3a0c2c20-dc18-11ea-87dc-a4f73ca0df49",
                    "type" : "Realm",
                    "name" : "ntd-test.cisco.com"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/realmusers" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the realm user object associated with the specified ID. If no ID is specified, retrieves list of all realm user objects.**",
        "operationId" : "getAllRealmUser",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "Filter criteria can be specified using the format <code>name:name;realm:realm;groupId:groupId;resolved:resolved</code><br/><br/><code>name</code> -- Name of the user to be queried starting with...<br/><code>realm</code> -- Realm uuid for the user.<br/><code>groupId</code> -- Users with the group id. <br/><code>resolved</code> -- Either <code>true</code> or <code>false</code>.<br/>",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/RealmUserListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/domainUUID/object/realmusers?limit=2 ( Get all paginated Realm with limit set 2 )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/object/realmusers?offset=0&limit=2"
                  },
                  "items" : [ {
                    "id" : "4",
                    "type" : "RealmUser",
                    "name" : "u64k_11"
                  }, {
                    "id" : "5",
                    "type" : "RealmUser",
                    "name" : "u64k_12"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 5,
                    "next" : [ "/fmc_config/v1/domain/domainUUID/object/realmusers?offset=2&limit=2", "/fmc_config/v1/domain/domainUUID/object/realmusers?offset=4&limit=1" ],
                    "pages" : 3
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/domainUUID/object/realmusers?limit=2&expanded=true ( Get all paginated application with limit set 2 )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/object/realmusers?offset=0&limit=5"
                  },
                  "items" : [ {
                    "id" : "4",
                    "type" : "RealmUser",
                    "name" : "u64k_11",
                    "realm" : {
                      "id" : "3a0c2c20-dc18-11ea-87dc-a4f73ca0df49",
                      "type" : "Realm",
                      "name" : "ntd-test.cisco.com"
                    },
                    "metadata" : {
                      "resolved" : true,
                      "lastSeen" : 0,
                      "lastUpdated" : 1597708969
                    }
                  }, {
                    "id" : "5",
                    "type" : "RealmUser",
                    "name" : "u64k_12",
                    "realm" : {
                      "id" : "3a0c2c20-dc18-11ea-87dc-a4f73ca0df49",
                      "type" : "Realm",
                      "name" : "ntd-test.cisco.com"
                    },
                    "metadata" : {
                      "resolved" : true,
                      "lastSeen" : 0,
                      "lastUpdated" : 1597708969
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 5,
                    "next" : [ "/fmc_config/v1/domain/domainUUID/object/realmusers?offset=2&limit=2", "/fmc_config/v1/domain/domainUUID/object/realmusers?offset=4&limit=1" ],
                    "pages" : 3
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/realmusers/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the realm user object associated with the specified ID. If no ID is specified, retrieves list of all realm user objects.**",
        "operationId" : "getRealmUser",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of user.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/RealmUser"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/domainUUID/object/realmusers/4 ( Get RealmUser by id )" : {
                  "id" : "4",
                  "type" : "RealmUser",
                  "name" : "u64k_11",
                  "realm" : {
                    "id" : "3a0c2c20-dc18-11ea-87dc-a4f73ca0df49",
                    "type" : "Realm",
                    "name" : "ntd-test.cisco.com"
                  },
                  "metadata" : {
                    "resolved" : true,
                    "lastSeen" : 0,
                    "lastUpdated" : 1597708969
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/routemaps" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**RouteMap Object CRUD**",
        "operationId" : "getAllRouteMap",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/RouteMapListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/domainUUID/object/routemaps ( Get all paginated route map objects )" : {
                  "links" : {
                    "self" : "https://fmc-host:port/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/object/routemaps?offset=0&limit=2"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "https://fmc-host:port/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/object/routemaps/routemap-UUID1"
                    },
                    "type" : "RouteMap",
                    "name" : "test",
                    "id" : "routemap-UUID1"
                  }, {
                    "links" : {
                      "self" : "https://fmc-host:port/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/object/routemaps/routemap-UUID2"
                    },
                    "type" : "RouteMap",
                    "name" : "testRMO",
                    "id" : "routemap-UUID2"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/routemaps/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**RouteMap Object CRUD**",
        "operationId" : "getRouteMap",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "UUID of the RouteMap",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/RouteMap"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/domainUUID/object/routemaps/RouteMapUUID ( GET a route map object for the given UUID )" : {
                  "links" : {
                    "self" : "https://fmc-host:port/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/object/routemaps/routemap-UUID"
                  },
                  "entries" : [ {
                    "interfaces" : [ {
                      "name" : "outside",
                      "id" : "a01a5116-d8fc-11e8-80ae-af460801fbe6",
                      "type" : "SecurityZone"
                    } ],
                    "ipv4AccessListNextHops" : [ {
                      "name" : "testSACL",
                      "id" : "00505686-A281-0ed3-0000-094489280517",
                      "type" : "StandardAccessList"
                    } ],
                    "tagValues" : [ 345 ],
                    "policyLists" : [ {
                      "name" : "PL1",
                      "id" : "00505686-A281-0ed3-0000-154618822876",
                      "type" : "PolicyList"
                    } ],
                    "ipv4AccessListRouteSources" : [ {
                      "name" : "testSACL",
                      "id" : "00505686-A281-0ed3-0000-094489280517",
                      "type" : "StandardAccessList"
                    } ],
                    "ipv6AccessListAddresses" : [ {
                      "name" : "extACL",
                      "id" : "00505686-A281-0ed3-0000-094489280558",
                      "type" : "ExtendedAccessList"
                    } ],
                    "ipv6AccessListNextHops" : [ {
                      "name" : "extACL",
                      "id" : "00505686-A281-0ed3-0000-094489280558",
                      "type" : "ExtendedAccessList"
                    } ],
                    "ipv6AccessListRouteSources" : [ {
                      "name" : "extACL",
                      "id" : "00505686-A281-0ed3-0000-094489280558",
                      "type" : "ExtendedAccessList"
                    } ],
                    "metricRouteValues" : [ 123 ],
                    "routeTypeExternal1" : true,
                    "routeTypeExternal2" : true,
                    "routeTypeLocal" : true,
                    "routeTypeNSSAExternal1" : true,
                    "routeTypeNSSAExternal2" : true,
                    "ipv4AccessListAddresses" : [ {
                      "name" : "testSACL",
                      "id" : "00505686-A281-0ed3-0000-094489280517",
                      "type" : "StandardAccessList"
                    }, {
                      "name" : "testACL1",
                      "id" : "00505686-A281-0ed3-0000-154618823115",
                      "type" : "StandardAccessList"
                    } ],
                    "prefixListIPV4Setting" : {
                      "name" : "ipv4PL",
                      "id" : "00505686-A281-0ed3-0000-094489280576",
                      "type" : "PrefixListObject"
                    },
                    "nextHopIPV6Setting" : "USE_PEER_ADDRESS",
                    "sequence" : 1,
                    "interfaceNames" : [ "inside" ],
                    "asPathLists" : [ {
                      "name" : "3",
                      "id" : "00505686-A281-0ed3-0000-154618823076",
                      "type" : "ASPathList"
                    }, {
                      "name" : "2",
                      "id" : "00505686-A281-0ed3-0000-154618823057",
                      "type" : "ASPathList"
                    }, {
                      "name" : "1",
                      "id" : "00505686-A281-0ed3-0000-103079215107",
                      "type" : "ASPathList"
                    } ],
                    "communityLists" : [ {
                      "name" : "community123",
                      "id" : "00505686-A281-0ed3-0000-103079215145",
                      "type" : "ExpandedCommunityList"
                    } ],
                    "action" : "PERMIT"
                  }, {
                    "interfaces" : [ {
                      "name" : "abcd",
                      "id" : "a01a5116-d8fc-11e8-80ae-af460801fbe6",
                      "type" : "SecurityZone"
                    } ],
                    "ipv6PrefixListAddresses" : [ {
                      "name" : "prefIPV6",
                      "id" : "00505686-A281-0ed3-0000-188978561027",
                      "type" : "IPV6PrefixList"
                    } ],
                    "ipv6PrefixListNexthops" : [ {
                      "name" : "prefIPV6",
                      "id" : "00505686-A281-0ed3-0000-188978561027",
                      "type" : "IPV6PrefixList"
                    } ],
                    "ipv6PrefixListRouteSources" : [ {
                      "name" : "prefIPV6",
                      "id" : "00505686-A281-0ed3-0000-188978561027",
                      "type" : "IPV6PrefixList"
                    } ],
                    "sequence" : 2,
                    "action" : "DENY"
                  } ],
                  "type" : "RouteMap",
                  "name" : "testRMO",
                  "overridable" : false,
                  "description" : " ",
                  "id" : "routemap-UUID",
                  "metadata" : {
                    "timestamp" : 1541648122323,
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "e276abec-e0f2-11e3-8169-6d9ed49b625f"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/securitygrouptags" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the custom security group tag object associated with the specified ID. If no ID is specified, retrieves list of all custom security group tag objects.**",
        "operationId" : "getAllSecurityGroupTag",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/SecurityGroupTagListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/exampledomainuuid/object/securitygrouptags ( Success: Test GET ALL success of all Security Group Tags )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/exampledomainuuid/object/securitygrouptags?offset=0&limit=2"
                  },
                  "items" : [ {
                    "name" : "ExampleSGTname",
                    "id" : "examplesgtuuid",
                    "type" : "SecurityGroupTag",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/exampledomainuuid/object/securitygrouptags/examplesgtuuid"
                    }
                  }, {
                    "name" : "ExampleSGTname2",
                    "id" : "examplesgtuuid2",
                    "type" : "SecurityGroupTag",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/exampledomainuuid/object/securitygrouptags/examplesgtuuid2"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/exampledomainuuid/object/securitygrouptags?expanded=true ( Success: Test GET ALL success with expanded=true )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/exampledomainuuid/object/securitygrouptags?expanded=true"
                  },
                  "items" : [ {
                    "name" : "ExampleSGTname",
                    "id" : "examplesgtuuid",
                    "type" : "SecurityGroupTag",
                    "description" : "example description.",
                    "tag" : 0,
                    "links" : {
                      "self" : "/fmc_config/v1/domain/exampledomainuuid/object/securitygrouptags/examplesgtuuid"
                    }
                  }, {
                    "name" : "ExampleSGTname2",
                    "id" : "examplesgtuuid2",
                    "type" : "SecurityGroupTag",
                    "description" : "example description.2",
                    "tag" : 0,
                    "links" : {
                      "self" : "/fmc_config/v1/domain/exampledomainuuid/object/securitygrouptags/examplesgtuuid2"
                    },
                    "metadata" : {
                      "readOnly" : {
                        "state" : true
                      },
                      "timestamp" : "Sat Jan 17 20:30:39 UTC 1970",
                      "lastUser" : {
                        "name" : "testuser2",
                        "id" : "testuseruuid2",
                        "type" : "User"
                      },
                      "domain" : {
                        "name" : "TestDomain2",
                        "id" : "testdomainuuid2",
                        "type" : "Domain"
                      }
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/securitygrouptags/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the custom security group tag object associated with the specified ID. If no ID is specified, retrieves list of all custom security group tag objects.**",
        "operationId" : "getSecurityGroupTag",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the security group tag object.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/SecurityGroupTag"
            },
            "examples" : { }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/securityzones" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the security zone objects associated with the specified ID. If no ID is specified for a GET, retrieves list of all security zone objects.**",
        "operationId" : "getAllSecurityZoneObject",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/SecurityZoneObjectListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/domainUUID/object/securityzones ( Get all paginated securityzone  objects )" : {
                  "links" : {
                    "self" : "https://example.cisco.com/api/fmc_config/v1/domain/default/object/securityzones?offset=0&limit=2"
                  },
                  "items" : [ {
                    "name" : "Test2",
                    "id" : "Sec-zone-UUID-2",
                    "type" : "SecurityZone",
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/default/object/securityzones/Sec-zone-UUID-2",
                      "parent" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/interfaceobjects/"
                    }
                  }, {
                    "name" : "Test1",
                    "id" : "Sec-zone-UUID-3",
                    "type" : "SecurityZone",
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/default/object/securityzones/Sec-zone-UUID-3",
                      "parent" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/interfaceobjects/"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/domainUUID/object/securityzones?expanded=true ( Get all paginated securityzone  objects expanded=true )" : {
                  "links" : {
                    "self" : "https://example.cisco.com/api/fmc_config/v1/domain/default/object/securityzones?offset=0&limit=2"
                  },
                  "items" : [ {
                    "name" : "Test2",
                    "id" : "Sec-zone-UUID-2",
                    "type" : "SecurityZone",
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/default/object/securityzones/Sec-zone-UUID-2",
                      "parent" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/interfaceobjects/"
                    },
                    "metadata" : {
                      "readOnly" : {
                        "state" : true
                      },
                      "timestamp" : 1459973987,
                      "lastUser" : {
                        "name" : "admin",
                        "id" : "User-UUID",
                        "type" : "user"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUUID",
                        "type" : "domain"
                      },
                      "parentType" : "InterfaceObject"
                    },
                    "interfaceMode" : "ASA",
                    "interfaces" : [ {
                      "type" : "FPPhysicalInterface",
                      "id" : "Intf-UUID-3",
                      "name" : "outside"
                    }, {
                      "type" : "FPPhysicalInterface",
                      "id" : "Intf-UUID-4",
                      "name" : "inside"
                    } ]
                  }, {
                    "name" : "Test1",
                    "id" : "Sec-zone-UUID-3",
                    "type" : "SecurityZone",
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/default/object/securityzones/Sec-zone-UUID-3",
                      "parent" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/interfaceobjects/"
                    },
                    "metadata" : {
                      "readOnly" : {
                        "state" : true
                      },
                      "timestamp" : 1459973857,
                      "lastUser" : {
                        "name" : "admin",
                        "id" : "User-UUID",
                        "type" : "user"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUUID",
                        "type" : "domain"
                      },
                      "parentType" : "InterfaceObject"
                    },
                    "interfaceMode" : "INLINE",
                    "interfaces" : [ {
                      "type" : "FPPhysicalInterface",
                      "id" : "Intf-UUID-5",
                      "name" : "s1p2"
                    }, {
                      "type" : "FPPhysicalInterface",
                      "id" : "Intf-UUID-6",
                      "name" : "s1p1"
                    } ]
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the security zone objects associated with the specified ID. If no ID is specified for a GET, retrieves list of all security zone objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createMultipleSecurityZoneObject",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The input security zone object model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SecurityZoneObject"
          }
        }, {
          "name" : "bulk",
          "in" : "query",
          "description" : "Enables bulk create for security zone objects.",
          "required" : false,
          "type" : "boolean"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/SecurityZoneObject"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /fmc_config/v1/domain/domainUUID/object/securityzones ( POST method for security zone object )" : {
                  "type" : "SecurityZone",
                  "name" : "SecurityZoneObject5",
                  "interfaceMode" : "INLINE",
                  "interfaces" : [ {
                    "type" : "PhysicalInterface",
                    "id" : "Intf-UUID-1",
                    "name" : "eth1"
                  }, {
                    "type" : "PhysicalInterface",
                    "id" : "Intf-UUID-2",
                    "name" : "eth2"
                  } ]
                },
                "Request example 2 : POST /fmc_config/v1/domain/domainUUID/object/securityzones?bulk=true ( bulk POST method for security zones )" : [ {
                  "type" : "SecurityZone",
                  "name" : "SZ1",
                  "interfaceMode" : "ROUTED",
                  "interfaces" : [ {
                    "type" : "PhysicalInterface",
                    "id" : "Intf-UUID-1",
                    "name" : "eth1"
                  }, {
                    "type" : "PhysicalInterface",
                    "id" : "Intf-UUID-2",
                    "name" : "eth2"
                  } ]
                }, {
                  "type" : "SecurityZone",
                  "name" : "SZ2",
                  "interfaceMode" : "ROUTED",
                  "interfaces" : [ {
                    "type" : "PhysicalInterface",
                    "id" : "Intf-UUID-3",
                    "name" : "eth3"
                  }, {
                    "type" : "PhysicalInterface",
                    "id" : "Intf-UUID-4",
                    "name" : "eth4"
                  } ]
                } ],
                "Response Example 1 :POST /fmc_config/v1/domain/domainUUID/object/securityzones ( POST method for security zone object )" : {
                  "name" : "SecurityZoneObject5",
                  "id" : "Sec-zone-UUID-1",
                  "type" : "SecurityZone",
                  "links" : {
                    "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/securityzones/Sec-zone-UUID-1",
                    "parent" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/interfaceobjects/"
                  },
                  "metadata" : {
                    "timestamp" : 1459973987,
                    "readOnly" : {
                      "state" : true
                    },
                    "domain" : {
                      "id" : "domainUUID",
                      "type" : "Domain",
                      "name" : "Global"
                    },
                    "lastUser" : {
                      "name" : "admin",
                      "id" : "User-UUID",
                      "type" : "User"
                    },
                    "parentType" : "InterfaceObject"
                  },
                  "interfaceMode" : "INLINE",
                  "interfaces" : [ {
                    "type" : "PhysicalInterface",
                    "id" : "Intf-UUID-1",
                    "name" : "eth1"
                  }, {
                    "type" : "PhysicalInterface",
                    "id" : "Intf-UUID-2",
                    "name" : "eth2"
                  } ]
                },
                "Response Example 2 :POST /fmc_config/v1/domain/domainUUID/object/securityzones?bulk=true ( bulk POST method for security zones )" : {
                  "links" : {
                    "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/securityzones?bulk=true"
                  },
                  "items" : [ {
                    "name" : "SZ1",
                    "id" : "SZ1_UUID",
                    "type" : "SecurityZone",
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/securityzones/SZ1_UUID",
                      "parent" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/interfaceobjects"
                    },
                    "metadata" : {
                      "readOnly" : {
                        "state" : true
                      },
                      "parentType" : "InterfaceObject",
                      "timestamp" : 1518506949,
                      "lastUser" : {
                        "name" : "admin",
                        "id" : "User-UUID",
                        "type" : "user"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUUID",
                        "type" : "domain"
                      }
                    },
                    "interfaces" : [ {
                      "type" : "PhysicalInterface",
                      "id" : "Intf-UUID-1",
                      "name" : "eth1"
                    }, {
                      "type" : "PhysicalInterface",
                      "id" : "Intf-UUID-2",
                      "name" : "eth2"
                    } ],
                    "interfaceMode" : "ROUTED"
                  }, {
                    "name" : "SZ2",
                    "id" : "SZ2_UUID",
                    "type" : "SecurityZone",
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/securityzones/SZ2_UUID",
                      "parent" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/interfaceobjects"
                    },
                    "metadata" : {
                      "readOnly" : {
                        "state" : true
                      },
                      "parentType" : "InterfaceObject",
                      "timestamp" : 1518506949,
                      "lastUser" : {
                        "name" : "admin",
                        "id" : "User-UUID",
                        "type" : "user"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUUID",
                        "type" : "domain"
                      }
                    },
                    "interfaces" : [ {
                      "type" : "PhysicalInterface",
                      "id" : "Intf-UUID-3",
                      "name" : "eth3"
                    }, {
                      "type" : "PhysicalInterface",
                      "id" : "Intf-UUID-4",
                      "name" : "eth4"
                    } ],
                    "interfaceMode" : "ROUTED"
                  } ]
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/SecurityZoneObject"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/securityzones/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the security zone objects associated with the specified ID. If no ID is specified for a GET, retrieves list of all security zone objects.**",
        "operationId" : "getSecurityZoneObject",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the object.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "groupByDevice",
          "in" : "query",
          "description" : "Set true to group interfaces by device and return as <code>devices</code> attribute, instead of <code>interfaces</code>.",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/SecurityZoneObject"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/domainUUID/object/securityzones/Sec-zone-UUID-1 ( GET method for security zone object by UUID )" : {
                  "name" : "SecurityZoneObject5",
                  "id" : "Sec-zone-UUID-1",
                  "type" : "SecurityZone",
                  "links" : {
                    "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/securityzones/Sec-zone-UUID-1",
                    "parent" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/interfaceobjects/"
                  },
                  "metadata" : {
                    "timestamp" : 1459973987,
                    "readOnly" : {
                      "state" : true
                    },
                    "domain" : {
                      "id" : "domainUUID",
                      "type" : "Domain",
                      "name" : "Global"
                    },
                    "lastUser" : {
                      "name" : "admin",
                      "id" : "User-UUID",
                      "type" : "User"
                    },
                    "parentType" : "InterfaceObject"
                  },
                  "interfaceMode" : "INLINE",
                  "interfaces" : [ {
                    "type" : "FPPhysicalInterface",
                    "id" : "Intf-UUID-1",
                    "name" : "eth1"
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the security zone objects associated with the specified ID. If no ID is specified for a GET, retrieves list of all security zone objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateSecurityZoneObject",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the object.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The input security zone object model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SecurityZoneObject"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/SecurityZoneObject"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/domainUUID/object/securityzones/Sec-zone-UUID-1 ( PUT method for security zone object )" : {
                  "type" : "SecurityZone",
                  "name" : "SecurityZoneObject5",
                  "id" : "Sec-zone-UUID-1",
                  "interfaceMode" : "INLINE",
                  "interfaces" : [ {
                    "type" : "FPPhysicalInterface",
                    "id" : "Intf-UUID-1",
                    "name" : "eth1"
                  } ]
                },
                "Response Example 1 :PUT /fmc_config/v1/domain/domainUUID/object/securityzones/Sec-zone-UUID-1 ( PUT method for security zone object )" : {
                  "name" : "SecurityZoneObject5",
                  "id" : "Sec-zone-UUID-1",
                  "type" : "SecurityZone",
                  "links" : {
                    "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/securityzones/Sec-zone-UUID-1",
                    "parent" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/interfaceobjects/"
                  },
                  "metadata" : {
                    "timestamp" : 1459973987,
                    "readOnly" : {
                      "state" : true
                    },
                    "domain" : {
                      "id" : "domainUUID",
                      "type" : "Domain",
                      "name" : "Global"
                    },
                    "lastUser" : {
                      "name" : "admin",
                      "id" : "User-UUID",
                      "type" : "User"
                    },
                    "parentType" : "InterfaceObject"
                  },
                  "interfaceMode" : "INLINE",
                  "interfaces" : [ {
                    "type" : "FPPhysicalInterface",
                    "id" : "Intf-UUID-1",
                    "name" : "eth1",
                    "deviceId" : "6aea9a46-d256-11e5-9f49-a0e56e5a9137"
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/SecurityZoneObject"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the security zone objects associated with the specified ID. If no ID is specified for a GET, retrieves list of all security zone objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteSecurityZoneObject",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the object.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/SecurityZoneObject"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /fmc_config/v1/domain/domainUUID/object/securityzones/Sec-zone-UUID-1 ( DELETE method for security zone object )" : {
                  "name" : "SecurityZoneObject5",
                  "id" : "Sec-zone-UUID-1",
                  "type" : "SecurityZone",
                  "links" : {
                    "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/securityzones/Sec-zone-UUID-1",
                    "parent" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/interfaceobjects/"
                  },
                  "metadata" : {
                    "timestamp" : 1459973987,
                    "readOnly" : {
                      "state" : true
                    },
                    "domain" : {
                      "id" : "domainUUID",
                      "type" : "Domain",
                      "name" : "Global"
                    },
                    "lastUser" : {
                      "name" : "admin",
                      "id" : "User-UUID",
                      "type" : "User"
                    },
                    "parentType" : "InterfaceObject"
                  },
                  "interfaceMode" : "INLINE",
                  "interfaces" : [ {
                    "type" : "FPPhysicalInterface",
                    "id" : "Intf-UUID-1",
                    "name" : "eth1"
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/sidnsfeeds" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the Security Intelligence DNS feed objects associated with the specified ID. If no ID is specified for a GET, retrieves list of all Security Intelligence DNS feed objects.**",
        "operationId" : "getAllSIDNSFeed",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/SIDNSFeedListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/DomainUUID/object/sidnsfeeds?expanded=false&limit=2 ( Get all paginated SIDNSFeeds with expanded set to false and limit set to 2 )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/sidnsfeeds?expanded=false&offset=0&limit=2"
                  },
                  "items" : [ {
                    "name" : "testing",
                    "type" : "SIDNSFeed",
                    "id" : "SIDNSFeedId",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/object/sidnsfeeds/SIDNSFeedId"
                    }
                  }, {
                    "name" : "testing2",
                    "type" : "SIDNSFeed",
                    "id" : "SIDNSFeedId",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/object/sidnsfeeds/SIDNSFeedId"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 27,
                    "next" : [ "/fmc_config/v1/domain/DomainUUID/object/sidnsfeeds?expanded=false&offset=2&limit=2", "/fmc_config/v1/domain/DomainUUID/object/sidnsfeeds?expanded=false&offset=4&limit=2", "/fmc_config/v1/domain/DomainUUID/object/sidnsfeeds?expanded=false&offset=6&limit=2", "/fmc_config/v1/domain/DomainUUID/object/sidnsfeeds?expanded=false&offset=8&limit=2" ],
                    "pages" : 14
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/DomainUUID/object/sidnsfeeds?expanded=true&limit=2 ( Get all paginated SIDNSFeeds with expanded set to true and limit set to 2 )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/sidnsfeeds?expanded=true&offset=0&limit=2"
                  },
                  "items" : [ {
                    "name" : "testing",
                    "type" : "SIDNSFeed",
                    "id" : "SIDNSFeedId",
                    "feedURL" : "example1.com",
                    "checksumURL" : "example1.com",
                    "updateFrequency" : 60,
                    "metadata" : {
                      "readOnly" : {
                        "state" : false
                      },
                      "entryCount" : 4,
                      "timestamp" : 1605518859,
                      "lastUser" : {
                        "name" : "admin",
                        "id" : "adminUUID",
                        "type" : "user"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUUID",
                        "type" : "Domain"
                      }
                    },
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/object/sidnsfeeds/SIDNSFeedId"
                    }
                  }, {
                    "name" : "testing2",
                    "type" : "SIDNSFeed",
                    "id" : "SIDNSFeedId",
                    "feedURL" : "example2.com",
                    "checksumURL" : "example2.com",
                    "updateFrequency" : 120,
                    "metadata" : {
                      "readOnly" : {
                        "state" : false
                      },
                      "entryCount" : 7,
                      "timestamp" : 1605518859,
                      "lastUser" : {
                        "name" : "admin",
                        "id" : "adminUUID",
                        "type" : "user"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUUID",
                        "type" : "Domain"
                      }
                    },
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/object/sidnsfeeds/SIDNSFeedId"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 27,
                    "next" : [ "/fmc_config/v1/domain/DomainUUID/object/sidnsfeeds?expanded=true&offset=2&limit=2", "/fmc_config/v1/domain/DomainUUID/object/sidnsfeeds?expanded=true&offset=4&limit=2", "/fmc_config/v1/domain/DomainUUID/object/sidnsfeeds?expanded=true&offset=6&limit=2", "/fmc_config/v1/domain/DomainUUID/object/sidnsfeeds?expanded=true&offset=8&limit=2" ],
                    "pages" : 14
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/sidnsfeeds/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the Security Intelligence DNS feed objects associated with the specified ID. If no ID is specified for a GET, retrieves list of all Security Intelligence DNS feed objects.**",
        "operationId" : "getSIDNSFeed",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for Security Intelligence DNS feed object.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/SIDNSFeed"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/object/sidnsfeeds/SIDNSFeedId ( Get SIDNSFeed by id )" : {
                  "name" : "DNSFeed",
                  "type" : "SIDNSFeed",
                  "id" : "SIDNSFeedId",
                  "feedURL" : "example.com",
                  "checksumURL" : "example.com",
                  "updateFrequency" : 60,
                  "metadata" : {
                    "readOnly" : {
                      "state" : false
                    },
                    "entryCount" : 4,
                    "timestamp" : 1605518859,
                    "lastUser" : {
                      "name" : "admin",
                      "id" : "adminUUID",
                      "type" : "user"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUUID",
                      "type" : "Domain"
                    }
                  },
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/sidnsfeeds/SIDNSFeedId"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/sidnslists" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the Security Intelligence DNS list objects associated with the specified ID. If no ID is specified for a GET, retrieves list of all Security Intelligence DNS list objects.**",
        "operationId" : "getAllSIDNSList",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/SIDNSListListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/DomainUUID/object/sidnslists?expanded=false&limit=2 ( Get all paginated SIDNSLists with expanded set to false and limit set to 2 )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/sidnslists?expanded=false&limit=2"
                  },
                  "items" : [ {
                    "name" : "testing",
                    "type" : "SIDNSList",
                    "id" : "SIDNSListId",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/object/sidnslists/SIDNSListId"
                    }
                  }, {
                    "name" : "testing2",
                    "type" : "SIDNSList",
                    "id" : "SIDNSListId",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/object/sidnslists/SIDNSListId"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 27,
                    "next" : [ "/fmc_config/v1/domain/DomainUUID/object/sidnslists?expanded=false&offset=2&limit=2", "/fmc_config/v1/domain/DomainUUID/object/sidnslists?expanded=false&offset=4&limit=2", "/fmc_config/v1/domain/DomainUUID/object/sidnslists?expanded=false&offset=6&limit=2", "/fmc_config/v1/domain/DomainUUID/object/sidnslists?expanded=false&offset=8&limit=2" ],
                    "pages" : 14
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/DomainUUID/object/sidnslists?expanded=true&limit=2 ( Get all paginated SIDNSLists with expanded set to true and limit set to 2 )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/sidnslists?expanded=true&limit=2"
                  },
                  "items" : [ {
                    "name" : "testing",
                    "type" : "SIDNSList",
                    "id" : "SIDNSListId",
                    "fileName" : "fmc_ip_list1.txt",
                    "metadata" : {
                      "readOnly" : {
                        "state" : false
                      },
                      "entryCount" : 4,
                      "listUpdateTime" : 1605518859,
                      "timestamp" : 1605518859,
                      "lastUser" : {
                        "name" : "admin",
                        "id" : "adminUUID",
                        "type" : "user"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUUID",
                        "type" : "Domain"
                      }
                    },
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/object/sidnslists/SIDNSListId"
                    }
                  }, {
                    "name" : "testing2",
                    "type" : "SIDNSList",
                    "id" : "SIDNSListId",
                    "fileName" : "fmc_ip_list2.txt",
                    "metadata" : {
                      "readOnly" : {
                        "state" : false
                      },
                      "entryCount" : 7,
                      "listUpdateTime" : 1605518859,
                      "timestamp" : 1605518859,
                      "lastUser" : {
                        "name" : "admin",
                        "id" : "adminUUID",
                        "type" : "user"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUUID",
                        "type" : "Domain"
                      }
                    },
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/object/sidnslists/SIDNSListId"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 27,
                    "next" : [ "/fmc_config/v1/domain/DomainUUID/object/sidnslists?expanded=true&offset=2&limit=2", "/fmc_config/v1/domain/DomainUUID/object/sidnslists?expanded=true&offset=4&limit=2", "/fmc_config/v1/domain/DomainUUID/object/sidnslists?expanded=true&offset=6&limit=2", "/fmc_config/v1/domain/DomainUUID/object/sidnslists?expanded=true&offset=8&limit=2" ],
                    "pages" : 14
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/sidnslists/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the Security Intelligence DNS list objects associated with the specified ID. If no ID is specified for a GET, retrieves list of all Security Intelligence DNS list objects.**",
        "operationId" : "getSIDNSList",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for Security Intelligence DNS list object.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/SIDNSList"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/object/sidnslists/SIDNSListId ( Get SIDNSList by id )" : {
                  "name" : "DNSList",
                  "type" : "SIDNSList",
                  "id" : "SIDNSListId",
                  "fileName" : "fmc_ip_list.txt",
                  "metadata" : {
                    "readOnly" : {
                      "state" : false
                    },
                    "entryCount" : 10,
                    "lastUpdateTime" : 1605518890,
                    "timestamp" : 1605518890,
                    "lastUser" : {
                      "name" : "admin",
                      "id" : "adminUUID",
                      "type" : "user"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUUID",
                      "type" : "Domain"
                    }
                  },
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/sidnslists/SIDNSListId"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/sinetworkfeeds" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**APIs for Security Intelligence network feed.**",
        "operationId" : "getAllSINetworkFeed",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/SINetworkFeedListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/DomainUUID/object/sinetworkfeeds?expanded=false&limit=2 ( Get all paginated SINetworkFeed with expanded set to false and limit set to 2 )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/sinetworkfeeds?expanded=false&offset=0&limit=2"
                  },
                  "items" : [ {
                    "name" : "NetworkFeed1",
                    "type" : "SINetworkFeed",
                    "id" : "SINetworkFeedId",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/object/sinetworkfeeds/SINetworkFeedId"
                    }
                  }, {
                    "name" : "NetworkFeed2",
                    "type" : "SINetworkFeed",
                    "id" : "SINetworkFeedId",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/object/sinetworkfeeds/SINetworkFeedId"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 27,
                    "next" : [ "/fmc_config/v1/domain/DomainUUID/object/sinetworkfeeds?expanded=false&offset=2&limit=2", "/fmc_config/v1/domain/DomainUUID/object/sinetworkfeeds?expanded=false&offset=4&limit=2", "/fmc_config/v1/domain/DomainUUID/object/sinetworkfeeds?expanded=false&offset=6&limit=2", "/fmc_config/v1/domain/DomainUUID/object/sinetworkfeeds?expanded=false&offset=8&limit=2" ],
                    "pages" : 14
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/DomainUUID/object/sinetworkfeeds?expanded=true&limit=2 ( Get all paginated SINetworkFeed with expanded set to true and limit set to 2 )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/sinetworkfeeds?expanded=true&offset=0&limit=2"
                  },
                  "items" : [ {
                    "name" : "NetworkFeed1",
                    "type" : "SINetworkFeed",
                    "id" : "SINetworkFeedId",
                    "feedURL" : "example1.com",
                    "checksumURL" : "example1.com",
                    "updateFrequency" : 60,
                    "metadata" : {
                      "readOnly" : {
                        "state" : false
                      },
                      "entryCount" : 4,
                      "timestamp" : 1605518859,
                      "lastUser" : {
                        "name" : "admin",
                        "id" : "adminUUID",
                        "type" : "user"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUUID",
                        "type" : "Domain"
                      }
                    },
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/object/sinetworkfeeds/SINetworkFeedId"
                    }
                  }, {
                    "name" : "NetworkFeed2",
                    "type" : "SINetworkFeed",
                    "id" : "SINetworkFeedId",
                    "feedURL" : "example2.com",
                    "checksumURL" : "example2.com",
                    "updateFrequency" : 120,
                    "metadata" : {
                      "readOnly" : {
                        "state" : false
                      },
                      "entryCount" : 7,
                      "timestamp" : 1605518859,
                      "lastUser" : {
                        "name" : "admin",
                        "id" : "adminUUID",
                        "type" : "user"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUUID",
                        "type" : "Domain"
                      }
                    },
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/object/sinetworkfeeds/SINetworkFeedId"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 27,
                    "next" : [ "/fmc_config/v1/domain/DomainUUID/object/sinetworkfeeds?expanded=true&offset=2&limit=2", "/fmc_config/v1/domain/DomainUUID/object/sinetworkfeeds?expanded=true&offset=4&limit=2", "/fmc_config/v1/domain/DomainUUID/object/sinetworkfeeds?expanded=true&offset=6&limit=2", "/fmc_config/v1/domain/DomainUUID/object/sinetworkfeeds?expanded=true&offset=8&limit=2" ],
                    "pages" : 14
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/sinetworkfeeds/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**APIs for Security Intelligence network feed.**",
        "operationId" : "getSINetworkFeed",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier of Security Intelligence network feed.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/SINetworkFeed"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/object/sinetworkfeeds/SINetworkFeedId ( Get SINetworkFeed by id )" : {
                  "name" : "NetworkFeed",
                  "type" : "SINetworkFeed",
                  "id" : "SINetworkFeedId",
                  "feedURL" : "example1.com",
                  "checksumURL" : "example1.com",
                  "updateFrequency" : 60,
                  "metadata" : {
                    "readOnly" : {
                      "state" : false
                    },
                    "entryCount" : 4,
                    "timestamp" : 1605518859,
                    "lastUser" : {
                      "name" : "admin",
                      "id" : "adminUUID",
                      "type" : "user"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUUID",
                      "type" : "Domain"
                    }
                  },
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/sinetworkfeeds/SINetworkFeedId"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/sinetworklists" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**APIs for Security Intelligence network list.**",
        "operationId" : "getAllSINetworkList",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/SINetworkListListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/DomainUUID/object/sinetworkfeeds?expanded=false&limit=2 ( Get all paginated SINetworkFeed with expanded set to false and limit set to 2 )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/sinetworkfeeds?expanded=false&offset=0&limit=2"
                  },
                  "items" : [ {
                    "name" : "NetworkFeed1",
                    "type" : "SINetworkFeed",
                    "id" : "SINetworkFeedId",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/object/sinetworkfeeds/SINetworkFeedId"
                    }
                  }, {
                    "name" : "NetworkFeed2",
                    "type" : "SINetworkFeed",
                    "id" : "SINetworkFeedId",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/object/sinetworkfeeds/SINetworkFeedId"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 27,
                    "next" : [ "/fmc_config/v1/domain/DomainUUID/object/sinetworkfeeds?expanded=false&offset=2&limit=2", "/fmc_config/v1/domain/DomainUUID/object/sinetworkfeeds?expanded=false&offset=4&limit=2", "/fmc_config/v1/domain/DomainUUID/object/sinetworkfeeds?expanded=false&offset=6&limit=2", "/fmc_config/v1/domain/DomainUUID/object/sinetworkfeeds?expanded=false&offset=8&limit=2" ],
                    "pages" : 14
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/DomainUUID/object/sinetworkfeeds?expanded=true&limit=2 ( Get all paginated SINetworkFeed with expanded set to true and limit set to 2 )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/sinetworkfeeds?expanded=true&offset=0&limit=2"
                  },
                  "items" : [ {
                    "name" : "NetworkFeed1",
                    "type" : "SINetworkFeed",
                    "id" : "SINetworkFeedId",
                    "feedURL" : "example1.com",
                    "checksumURL" : "example1.com",
                    "updateFrequency" : 60,
                    "metadata" : {
                      "readOnly" : {
                        "state" : false
                      },
                      "entryCount" : 4,
                      "timestamp" : 1605518859,
                      "lastUser" : {
                        "name" : "admin",
                        "id" : "adminUUID",
                        "type" : "user"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUUID",
                        "type" : "Domain"
                      }
                    },
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/object/sinetworkfeeds/SINetworkFeedId"
                    }
                  }, {
                    "name" : "NetworkFeed2",
                    "type" : "SINetworkFeed",
                    "id" : "SINetworkFeedId",
                    "feedURL" : "example2.com",
                    "checksumURL" : "example2.com",
                    "updateFrequency" : 120,
                    "metadata" : {
                      "readOnly" : {
                        "state" : false
                      },
                      "entryCount" : 7,
                      "timestamp" : 1605518859,
                      "lastUser" : {
                        "name" : "admin",
                        "id" : "adminUUID",
                        "type" : "user"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUUID",
                        "type" : "Domain"
                      }
                    },
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/object/sinetworkfeeds/SINetworkFeedId"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 27,
                    "next" : [ "/fmc_config/v1/domain/DomainUUID/object/sinetworkfeeds?expanded=true&offset=2&limit=2", "/fmc_config/v1/domain/DomainUUID/object/sinetworkfeeds?expanded=true&offset=4&limit=2", "/fmc_config/v1/domain/DomainUUID/object/sinetworkfeeds?expanded=true&offset=6&limit=2", "/fmc_config/v1/domain/DomainUUID/object/sinetworkfeeds?expanded=true&offset=8&limit=2" ],
                    "pages" : 14
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/sinetworklists/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**APIs for Security Intelligence network list.**",
        "operationId" : "getSINetworkList",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier of Security Intelligence network list.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/SINetworkList"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/object/sinetworkfeeds/SINetworkFeedId ( Get SINetworkFeed by id )" : {
                  "name" : "NetworkFeed",
                  "type" : "SINetworkFeed",
                  "id" : "SINetworkFeedId",
                  "feedURL" : "example1.com",
                  "checksumURL" : "example1.com",
                  "updateFrequency" : 60,
                  "metadata" : {
                    "readOnly" : {
                      "state" : false
                    },
                    "entryCount" : 4,
                    "timestamp" : 1605518859,
                    "lastUser" : {
                      "name" : "admin",
                      "id" : "adminUUID",
                      "type" : "user"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUUID",
                      "type" : "Domain"
                    }
                  },
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/sinetworkfeeds/SINetworkFeedId"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/sinkholes" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**APIs for Sinkhole.**",
        "operationId" : "getAllSinkhole",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/SinkholeListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/DomainUUID/object/sinkholes?limit=2&expanded=true ( Get all paginated Sinkhole objects with limit set to 2 )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/sinkholes?offset=0&limit=2"
                  },
                  "items" : [ {
                    "name" : "testing",
                    "type" : "Sinkhole",
                    "ipv4" : "127.0.0.1",
                    "ipv6" : "::1",
                    "action" : "MONITOR",
                    "sinkholeType" : "SINKHOLE_MALWARE",
                    "id" : "SinkholeId",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/object/sinkholes/SinkholeId"
                    }
                  }, {
                    "name" : "testing2",
                    "type" : "Sinkhole",
                    "ipv4" : "127.0.0.1",
                    "ipv6" : "::1",
                    "action" : "BLOCK",
                    "id" : "SinkholeId",
                    "sinkholeType" : "SINKHOLE_PHISHING",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/object/sinkholes/SinkholeId"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 27,
                    "next" : [ "/fmc_config/v1/domain/DomainUUID/object/sinkholes?offset=2&limit=2", "/fmc_config/v1/domain/DomainUUID/object/sinkholes?offset=4&limit=2", "/fmc_config/v1/domain/DomainUUID/object/sinkholes?offset=6&limit=2", "/fmc_config/v1/domain/DomainUUID/object/sinkholes?offset=8&limit=2" ],
                    "pages" : 14
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/sinkholes/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**APIs for Sinkhole.**",
        "operationId" : "getSinkhole",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for Sinkhole.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Sinkhole"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/object/sinkholes/SinkholeId ( Get Sinkhole by id )" : {
                  "type" : "Sinkhole",
                  "id" : "SinkholeId",
                  "ipv4" : "127.0.0.1",
                  "ipv6" : "::1",
                  "action" : "MONITOR",
                  "name" : "Sinkhole1",
                  "sinkholeType" : "SINKHOLE_CN_C",
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/sinkholes/SinkholeId"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/siurlfeeds" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the Security Intelligence url feed object associated with the specified ID. If no ID is specified, retrieves list of all Security Intelligence url feed objects.**",
        "operationId" : "getAllSIURLFeed",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/SIURLFeedListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/DomainUUID/object/siurlfeeds?expanded=false&limit=2 ( Get all paginated SIURLFeed with expanded set to false and limit set to 2 )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/siurlfeeds?expanded=false&offset=0&limit=2"
                  },
                  "items" : [ {
                    "name" : "testing",
                    "type" : "SIURLFeed",
                    "id" : "SIURLFeedId",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/object/siurlfeeds/SIURLFeedId"
                    }
                  }, {
                    "name" : "testing2",
                    "type" : "SIURLFeed",
                    "id" : "SIURLFeedId",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/object/siurlfeeds/SIURLFeedId"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 27,
                    "next" : [ "/fmc_config/v1/domain/DomainUUID/object/siurlfeeds?expanded=false&offset=2&limit=2", "/fmc_config/v1/domain/DomainUUID/object/siurlfeeds?expanded=false&offset=4&limit=2", "/fmc_config/v1/domain/DomainUUID/object/siurlfeeds?expanded=false&offset=6&limit=2", "/fmc_config/v1/domain/DomainUUID/object/siurlfeeds?expanded=false&offset=8&limit=2" ],
                    "pages" : 14
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/DomainUUID/object/siurlfeeds?limit=2 ( Get all paginated SIURLFeed with expanded set to true and limit set to 2 )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/siurlfeeds?expanded=true&offset=0&limit=2"
                  },
                  "items" : [ {
                    "name" : "testing",
                    "type" : "SIURLFeed",
                    "id" : "SIURLFeedId",
                    "feedURL" : "example1.com",
                    "checksumURL" : "example1.com",
                    "updateFrequency" : 60,
                    "metadata" : {
                      "readOnly" : {
                        "state" : false
                      },
                      "entryCount" : 4,
                      "timestamp" : 1605518859,
                      "lastUser" : {
                        "name" : "admin",
                        "id" : "adminUUID",
                        "type" : "user"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUUID",
                        "type" : "Domain"
                      }
                    },
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/object/siurlfeeds/SIURLFeedId"
                    }
                  }, {
                    "name" : "testing2",
                    "type" : "SIURLFeed",
                    "id" : "SIURLFeedId",
                    "feedURL" : "example2.com",
                    "checksumURL" : "example2.com",
                    "updateFrequency" : 120,
                    "metadata" : {
                      "readOnly" : {
                        "state" : false
                      },
                      "entryCount" : 4,
                      "timestamp" : 1605518859,
                      "lastUser" : {
                        "name" : "admin",
                        "id" : "adminUUID",
                        "type" : "user"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUUID",
                        "type" : "Domain"
                      }
                    },
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/object/siurlfeeds/SIURLFeedId"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 27,
                    "next" : [ "/fmc_config/v1/domain/DomainUUID/object/siurlfeeds?expanded=true&offset=2&limit=2", "/fmc_config/v1/domain/DomainUUID/object/siurlfeeds?expanded=true&offset=4&limit=2", "/fmc_config/v1/domain/DomainUUID/object/siurlfeeds?expanded=true&offset=6&limit=2", "/fmc_config/v1/domain/DomainUUID/object/siurlfeeds?expanded=true&offset=8&limit=2" ],
                    "pages" : 14
                  },
                  "expectJSONTypes" : {
                    "links" : {
                      "self" : "string"
                    },
                    "items" : [ {
                      "name" : "string",
                      "id" : "string",
                      "type" : "string",
                      "feedURL" : "string",
                      "checksumURL" : "string",
                      "updateFrequency" : "integer",
                      "metadata" : "object",
                      "links" : {
                        "self" : "string"
                      }
                    } ],
                    "paging" : {
                      "offset" : "number",
                      "limit" : "number",
                      "count" : "number",
                      "pages" : "number"
                    }
                  },
                  "expectStatus" : 200,
                  "expectHeaderContains" : [ {
                    "content-type" : "application/json"
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/siurlfeeds/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the Security Intelligence url feed object associated with the specified ID. If no ID is specified, retrieves list of all Security Intelligence url feed objects.**",
        "operationId" : "getSIURLFeed",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier of Security Intelligence url feed object.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/SIURLFeed"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/object/siurlfeeds/SIURLFeedId ( Get SIURLFeed by id )" : {
                  "type" : "SIURLFeed",
                  "id" : "SIURLFeedId",
                  "name" : "URLFeed1",
                  "feedURL" : "example1.com",
                  "checksumURL" : "example1.com",
                  "updateFrequency" : 60,
                  "metadata" : {
                    "readOnly" : {
                      "state" : false
                    },
                    "entryCount" : 4,
                    "timestamp" : 1605518859,
                    "lastUser" : {
                      "name" : "admin",
                      "id" : "adminUUID",
                      "type" : "user"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUUID",
                      "type" : "Domain"
                    }
                  },
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/siurlfeeds/SIURLFeedId"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/siurllists" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the Security Intelligence url list object associated with the specified ID. If no ID is specified, retrieves list of all Security Intelligence url list objects.**",
        "operationId" : "getAllSIURLList",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/SIURLListListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/DomainUUID/object/siurllists?expanded=false&limit=2 ( Get all paginated SIURLList with expanded set to false and limit set to 2 )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/siurllists?expanded=false&offset=0&limit=2"
                  },
                  "items" : [ {
                    "name" : "Descendant-Blacklists-for-URL - Global",
                    "type" : "SIURLList",
                    "id" : "SIURLListId",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/object/siurllists/SIURLListId"
                    }
                  }, {
                    "name" : "Descendant-Whitelists-for-URL - Global",
                    "type" : "SIURLList",
                    "id" : "SIURLListId",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/object/siurllists/SIURLListId"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 27,
                    "next" : [ "/fmc_config/v1/domain/DomainUUID/object/siurllists?expanded=false&offset=2&limit=2", "/fmc_config/v1/domain/DomainUUID/object/siurllists?expanded=false&offset=4&limit=2", "/fmc_config/v1/domain/DomainUUID/object/siurllists?expanded=false&offset=6&limit=2", "/fmc_config/v1/domain/DomainUUID/object/siurllists?expanded=false&offset=8&limit=2" ],
                    "pages" : 14
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/DomainUUID/object/siurllists?limit=2&expanded=true ( Get all paginated URL category with limit set to 2 )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/siurllists?expanded=true&offset=0&limit=2"
                  },
                  "items" : [ {
                    "name" : "Descendant-Blacklists-for-URL - Global",
                    "type" : "SIURLList",
                    "id" : "SIURLListId",
                    "fileName" : "fmc_ip_list1.txt",
                    "metadata" : {
                      "readOnly" : {
                        "state" : false
                      },
                      "entryCount" : 4,
                      "listUpdateTime" : 1605518859,
                      "timestamp" : 1605518859,
                      "lastUser" : {
                        "name" : "admin",
                        "id" : "adminUUID",
                        "type" : "user"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUUID",
                        "type" : "Domain"
                      }
                    },
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/object/siurllists/SIURLListId"
                    }
                  }, {
                    "name" : "Descendant-Whitelists-for-URL - Global",
                    "type" : "SIURLList",
                    "id" : "SIURLListId",
                    "fileName" : "fmc_ip_list2.txt",
                    "metadata" : {
                      "readOnly" : {
                        "state" : false
                      },
                      "entryCount" : 12,
                      "listUpdateTime" : 1605518859,
                      "timestamp" : 1605518859,
                      "lastUser" : {
                        "name" : "admin",
                        "id" : "adminUUID",
                        "type" : "user"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUUID",
                        "type" : "Domain"
                      }
                    },
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/object/siurllists/SIURLListId"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 27,
                    "next" : [ "/fmc_config/v1/domain/DomainUUID/object/siurllists?expanded=true&offset=2&limit=2", "/fmc_config/v1/domain/DomainUUID/object/siurllists?expanded=true&offset=4&limit=2", "/fmc_config/v1/domain/DomainUUID/object/siurllists?expanded=true&offset=6&limit=2", "/fmc_config/v1/domain/DomainUUID/object/siurllists?expanded=true&offset=8&limit=2" ],
                    "pages" : 14
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/siurllists/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the Security Intelligence url list object associated with the specified ID. If no ID is specified, retrieves list of all Security Intelligence url list objects.**",
        "operationId" : "getSIURLList",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier of Security Intelligence url list object.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/SIURLList"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/object/siurllists/SIURLListId ( Get SIURLList by id )" : {
                  "type" : "SIURLList",
                  "id" : "SIURLListId",
                  "name" : "URL",
                  "fileName" : "fmc_ip_list1.txt",
                  "metadata" : {
                    "readOnly" : {
                      "state" : false
                    },
                    "entryCount" : 4,
                    "listUpdateTime" : 1605518859,
                    "timestamp" : 1605518859,
                    "lastUser" : {
                      "name" : "admin",
                      "id" : "adminUUID",
                      "type" : "user"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUUID",
                      "type" : "Domain"
                    }
                  },
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/siurllists/SIURLListId"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/slamonitors" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the sla monitor object associated with the specified ID. If no ID is specified for a GET, retrieves list of all sla monitor objects.**",
        "operationId" : "getAllSLAMonitorObjectModel",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/SLAMonitorObjectModelListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/DomainUUID/object/slamonitors?limit=2 ( Get all paginated slamonitors objects with limit set 2 )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/slamonitors?offset=0&limit=2"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/object/slamonitors/slaMonitorObjectUUID"
                    },
                    "name" : "SLA1",
                    "id" : "slaMonitorObjectUUID"
                  }, {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/object/slamonitors/slaMonitorObject2UUID"
                    },
                    "name" : "SLA2",
                    "id" : "slaMonitorObject2UUID"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/DomainUUID/object/slamonitors?limit=2&expanded=true ( Get all paginated sla monitor objects with limit set 2 )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/slamonitors?offset=0&limit=2"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/object/slamonitors/slaMonitorObjectUUID"
                    },
                    "interfaceNames" : [ "Interface1" ],
                    "timeout" : 5000,
                    "type" : "SLAMonitor",
                    "threshold" : 2,
                    "frequency" : 60,
                    "slaId" : 1,
                    "dataSize" : 28,
                    "tos" : 1,
                    "noOfPackets" : 1,
                    "monitorAddress" : "1.1.1.1",
                    "interfaceObjects" : [ {
                      "name" : "SecZone1",
                      "id" : "securityZoneUUID",
                      "type" : "SecurityZone"
                    }, {
                      "name" : "InterfaceGroup1",
                      "id" : "interfaceGroupUUID",
                      "type" : "InterfaceGroup"
                    } ],
                    "description" : "Sla monitor description",
                    "name" : "SLA1",
                    "id" : "slaMonitorObjectUUID"
                  }, {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/object/countries/slaMonitorObject2UUID"
                    },
                    "interfaceNames" : [ "Interface2" ],
                    "timeout" : 5000,
                    "type" : "SLAMonitor",
                    "threshold" : 5,
                    "frequency" : 90,
                    "slaId" : 2,
                    "dataSize" : 50,
                    "tos" : 2,
                    "noOfPackets" : 1,
                    "monitorAddress" : "2.2.2.2",
                    "interfaceObjects" : [ {
                      "name" : "SecZone1",
                      "id" : "securityZoneUUID",
                      "type" : "SecurityZone"
                    }, {
                      "name" : "InterfaceGroup2",
                      "id" : "interfaceGroupUUID",
                      "type" : "InterfaceGroup"
                    } ],
                    "description" : "sla monitor description",
                    "name" : "SLA2",
                    "id" : "slaMonitorObject2UUID"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the sla monitor object associated with the specified ID. If no ID is specified for a GET, retrieves list of all sla monitor objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createMultipleSLAMonitorObjectModel",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of sla monitor object.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SLAMonitorObjectModel"
          }
        }, {
          "name" : "bulk",
          "in" : "query",
          "description" : "Enables bulk create for SLA monitor objects.",
          "required" : false,
          "type" : "boolean"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/SLAMonitorObjectModel"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /fmc_config/v1/domain/DomainUUID/object/slamonitors ( POST method for SLA Monitor Object )" : {
                  "interfaceNames" : [ "comment : interfaceNames are not allowed in POST. New Inline Interface Names can not be added via POST." ],
                  "timeout" : 5000,
                  "type" : "SLAMonitor",
                  "threshold" : 2,
                  "frequency" : 60,
                  "slaId" : 1,
                  "dataSize" : 28,
                  "tos" : 1,
                  "noOfPackets" : 1,
                  "monitorAddress" : "1.1.1.1",
                  "interfaceObjects" : [ {
                    "name" : "SecZone1",
                    "id" : "securityZoneUUID",
                    "type" : "SecurityZone"
                  }, {
                    "name" : "InterfaceGroup1",
                    "id" : "interfaceGroupUUID",
                    "type" : "InterfaceGroup"
                  } ],
                  "description" : "Sla monitor description",
                  "name" : "SLA1"
                },
                "Request example 2 : POST /fmc_config/v1/domain/DomainUUID/object/slamonitors?bulk=true ( bulk POST example for SLA monitor object )" : [ {
                  "timeout" : 5000,
                  "type" : "SLAMonitor",
                  "threshold" : 2,
                  "frequency" : 60,
                  "slaId" : 1,
                  "dataSize" : 28,
                  "tos" : 1,
                  "noOfPackets" : 1,
                  "monitorAddress" : "1.1.1.1",
                  "interfaceObjects" : [ {
                    "name" : "SecZone1",
                    "id" : "securityZoneUUID",
                    "type" : "SecurityZone"
                  }, {
                    "name" : "InterfaceGroup1",
                    "id" : "interfaceGroupUUID",
                    "type" : "InterfaceGroup"
                  } ],
                  "description" : "Sla monitor description",
                  "name" : "SLA1"
                }, {
                  "timeout" : 5000,
                  "type" : "SLAMonitor",
                  "threshold" : 2,
                  "frequency" : 60,
                  "slaId" : 1,
                  "dataSize" : 28,
                  "tos" : 1,
                  "noOfPackets" : 1,
                  "monitorAddress" : "1.1.1.1",
                  "interfaceObjects" : [ {
                    "name" : "SecZone1",
                    "id" : "securityZoneUUID",
                    "type" : "SecurityZone"
                  }, {
                    "name" : "InterfaceGroup1",
                    "id" : "interfaceGroupUUID",
                    "type" : "InterfaceGroup"
                  } ],
                  "description" : "Sla monitor description",
                  "name" : "SLA2"
                } ],
                "Response Example 1 :POST /fmc_config/v1/domain/DomainUUID/object/slamonitors ( POST method for SLA Monitor Object )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/object/slamonitors/slaMonitorObjectUUID",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/object/slamonitors"
                  },
                  "timeout" : 5000,
                  "type" : "SLAMonitor",
                  "threshold" : 2,
                  "frequency" : 60,
                  "slaId" : 1,
                  "dataSize" : 28,
                  "tos" : 1,
                  "noOfPackets" : 1,
                  "monitorAddress" : "1.1.1.1",
                  "interfaceObjects" : [ {
                    "name" : "SecZone1",
                    "id" : "securityZoneUUID",
                    "type" : "SecurityZone"
                  }, {
                    "name" : "InterfaceGroup1",
                    "id" : "interfaceGroupUUID",
                    "type" : "InterfaceGroup"
                  } ],
                  "description" : "Sla monitor description",
                  "name" : "SLA1",
                  "id" : "slaMonitorObjectUUID"
                },
                "Response Example 2 :POST /fmc_config/v1/domain/DomainUUID/object/slamonitors?bulk=true ( bulk POST example for SLA monitor object )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/object/slamonitors?bulk=true"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/object/slamonitors/SLA1_UUID"
                    },
                    "type" : "SLAMonitor",
                    "threshold" : 5000,
                    "timeout" : 5000,
                    "frequency" : 60,
                    "slaId" : 12,
                    "dataSize" : 28,
                    "tos" : 0,
                    "monitorAddress" : "1.2.3.4",
                    "interfaceObjects" : [ {
                      "name" : "SecZone1",
                      "id" : "securityZoneUUID",
                      "type" : "SecurityZone"
                    }, {
                      "name" : "InterfaceGroup1",
                      "id" : "interfaceGroupUUID",
                      "type" : "InterfaceGroup"
                    } ],
                    "noOfPackets" : 1,
                    "description" : " ",
                    "name" : "SLA1",
                    "id" : "SLA1_UUID",
                    "metadata" : {
                      "timestamp" : 0,
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "DomainUUID"
                      }
                    }
                  }, {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/object/slamonitors/SLA2_UUID"
                    },
                    "type" : "SLAMonitor",
                    "threshold" : 5000,
                    "timeout" : 5000,
                    "frequency" : 60,
                    "slaId" : 12,
                    "dataSize" : 28,
                    "tos" : 0,
                    "monitorAddress" : "1.2.3.4",
                    "interfaceObjects" : [ {
                      "name" : "SecZone1",
                      "id" : "securityZoneUUID",
                      "type" : "SecurityZone"
                    }, {
                      "name" : "InterfaceGroup1",
                      "id" : "interfaceGroupUUID",
                      "type" : "InterfaceGroup"
                    } ],
                    "noOfPackets" : 1,
                    "description" : " ",
                    "name" : "SLA2",
                    "id" : "SLA2_UUID",
                    "metadata" : {
                      "timestamp" : 0,
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "DomainUUID"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/SLAMonitorObjectModel"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/slamonitors/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the sla monitor object associated with the specified ID. If no ID is specified for a GET, retrieves list of all sla monitor objects.**",
        "operationId" : "getSLAMonitorObjectModel",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for sla monitor object.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/SLAMonitorObjectModel"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/object/slamonitors/slaMonitorObjectUUID ( Get sla monitors object by id )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/slamonitors/slaMonitorObjectUUID"
                  },
                  "interfaceNames" : [ "Interface1" ],
                  "timeout" : 5000,
                  "type" : "SLAMonitor",
                  "threshold" : 2,
                  "frequency" : 60,
                  "slaId" : 1,
                  "dataSize" : 28,
                  "tos" : 1,
                  "noOfPackets" : 1,
                  "monitorAddress" : "1.1.1.1",
                  "interfaceObjects" : [ {
                    "name" : "SecZone1",
                    "id" : "securityZoneUUID",
                    "type" : "SecurityZone"
                  }, {
                    "name" : "InterfaceGroup1",
                    "id" : "interfaceGroupUUID",
                    "type" : "InterfaceGroup"
                  } ],
                  "description" : "Sla monitor description",
                  "name" : "SLA1",
                  "id" : "slaMonitorObjectUUID"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the sla monitor object associated with the specified ID. If no ID is specified for a GET, retrieves list of all sla monitor objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateSLAMonitorObjectModel",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for sla monitor object.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of sla monitor object.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SLAMonitorObjectModel"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/SLAMonitorObjectModel"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/DomainUUID/object/slamonitors/slaMonitorObjectUUID ( PUT method for SLA Monitor Object )" : {
                  "interfaceNames" : [ "Interface1", "comment : For interfaceNames the only option in PUT is to remove these, no new additions of inline interface names will be allowed." ],
                  "timeout" : 5000,
                  "type" : "SLAMonitor",
                  "threshold" : 2,
                  "frequency" : 60,
                  "slaId" : 1,
                  "dataSize" : 28,
                  "tos" : 1,
                  "noOfPackets" : 1,
                  "monitorAddress" : "1.1.1.2",
                  "interfaceObjects" : [ {
                    "name" : "SecZone1",
                    "id" : "securityZoneUUID",
                    "type" : "SecurityZone"
                  }, {
                    "name" : "InterfaceGroup1",
                    "id" : "interfaceGroupUUID",
                    "type" : "InterfaceGroup"
                  } ],
                  "description" : "Sla monitor description updated",
                  "name" : "SLA1-Updated",
                  "id" : "slaMonitorObjectUUID"
                },
                "Response Example 1 :PUT /fmc_config/v1/domain/DomainUUID/object/slamonitors/slaMonitorObjectUUID ( PUT method for SLA Monitor Object )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/object/slamonitors/slaMonitorObjectUUID",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/object/slamonitors"
                  },
                  "interfaceNames" : [ "Interface1" ],
                  "timeout" : 5000,
                  "type" : "SLAMonitor",
                  "threshold" : 2,
                  "frequency" : 60,
                  "slaId" : 1,
                  "dataSize" : 28,
                  "tos" : 1,
                  "noOfPackets" : 1,
                  "monitorAddress" : "1.1.1.2",
                  "interfaceObjects" : [ {
                    "name" : "SecZone1",
                    "id" : "securityZoneUUID",
                    "type" : "SecurityZone"
                  }, {
                    "name" : "InterfaceGroup1",
                    "id" : "interfaceGroupUUID",
                    "type" : "InterfaceGroup"
                  } ],
                  "description" : "Sla monitor description updated",
                  "name" : "SLA1-Updated",
                  "id" : "slaMonitorObjectUUID"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/SLAMonitorObjectModel"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the sla monitor object associated with the specified ID. If no ID is specified for a GET, retrieves list of all sla monitor objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteSLAMonitorObjectModel",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for sla monitor object.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/SLAMonitorObjectModel"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /fmc_config/v1/domain/DomainUUID/object/slamonitors/slaMonitorObjectUUID ( DELETE method for SLA Monitor Object )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/object/slamonitors/slaMonitorObjectUUID",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/object/slamonitors"
                  },
                  "interfaceNames" : [ "Interface1" ],
                  "timeout" : 5000,
                  "type" : "SLAMonitor",
                  "threshold" : 2,
                  "frequency" : 60,
                  "slaId" : 1,
                  "dataSize" : 28,
                  "tos" : 1,
                  "noOfPackets" : 1,
                  "monitorAddress" : "1.1.1.1",
                  "interfaceObjects" : [ {
                    "name" : "SecZone1",
                    "id" : "securityZoneUUID",
                    "type" : "SecurityZone"
                  }, {
                    "name" : "InterfaceGroup1",
                    "id" : "interfaceGroupUUID",
                    "type" : "InterfaceGroup"
                  } ],
                  "description" : "Sla monitor description",
                  "name" : "SLA1",
                  "id" : "slaMonitorObjectUUID"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/ssoservers" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the SSO Server Policy Object associated with the specified ID. If no ID is specified, retrieves list of all SSO Server Policy Objects.**",
        "operationId" : "getAllSSOServer",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "To be used in conjunction with <code>\"unusedOnly:true\"</code> to search for unused objects and <code>\"nameOrValue:{nameOrValue}\"</code> to search for both name and value.",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/SSOServerListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/DomainUUID/object/ssoserver?limit=2&expanded=false ( Get all paginated SSOServer objects with limit set 2 )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/ssoserver?offset=0&limit=2"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/object/ssoservers/ssoserverUUID"
                    },
                    "name" : "SSOServer-1",
                    "id" : "SSOServer-1UUID",
                    "type" : "SSOServer"
                  }, {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/object/ssoservers/ssoserverUUID"
                    },
                    "name" : "SSOServer-2",
                    "id" : "SSOServer-2UUID",
                    "type" : "SSOServer"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/DomainUUID/object/ssoserver?limit=2&expanded=true ( Get all paginated SSO objects with limit set 2 and expanded is set to true )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/ssoserver?offset=0&limit=2"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/object/ssoservers/ssoserverUUID"
                    },
                    "type" : "SSOServer",
                    "idpEntityId" : "salesforce_idp",
                    "baseUrl" : "https://172.33.34.222",
                    "ssoURL" : "https://asa-dev-ed.my.salesforce.com/idp/endpoint/HttpRedirect",
                    "logoutURL" : "https://asa-dev-ed.my.salesforce.com/idp/endpoint/HttpRedirect",
                    "serviceProviderCert" : {
                      "name" : "trustedcacert2",
                      "id" : "trustedcacert2UUID",
                      "type" : "CertEnrollment"
                    },
                    "identityProviderCert" : {
                      "name" : "cert55",
                      "id" : "cert55UUID",
                      "type" : "CertEnrollment"
                    },
                    "signatureType" : "RSA_SHA512",
                    "requestTimeout" : 7200,
                    "serverOnInternalNetwork" : true,
                    "overridable" : true,
                    "description" : "SSO object description",
                    "id" : "SSOServer-2UUID",
                    "name" : "SSOServer-2",
                    "metadata" : {
                      "timestamp" : 1999591947310,
                      "lastUser" : {
                        "name" : "admin"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "DomainUUID",
                        "type" : "Domain"
                      }
                    }
                  }, {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/object/ssoservers/ssoserverUUID"
                    },
                    "type" : "SSOServer",
                    "idpEntityId" : "salesforce_idp",
                    "baseUrl" : "https://172.22.33.202",
                    "ssoURL" : "https://asa-dev-ed.my.salesforce.com/idp/endpoint/HttpRedirect",
                    "logoutURL" : "https://asa-dev-ed.my.salesforce.com/idp/endpoint/HttpRedirect",
                    "serviceProviderCert" : {
                      "name" : "trustedcacert",
                      "id" : "trustedcacertUUID",
                      "type" : "CertEnrollment"
                    },
                    "identityProviderCert" : {
                      "name" : "cert-1",
                      "id" : "cert-1UUID",
                      "type" : "CertEnrollment"
                    },
                    "signatureType" : "RSA_SHA384",
                    "requestTimeout" : 7200,
                    "serverOnInternalNetwork" : true,
                    "overridable" : true,
                    "description" : "SSO object description",
                    "id" : "SSOServer-2UUID",
                    "name" : "SSOServer-2",
                    "metadata" : {
                      "timestamp" : 1679591947310,
                      "lastUser" : {
                        "name" : "admin"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "DomainUUID",
                        "type" : "Domain"
                      }
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/ssoservers/{containerUUID}/overrides" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves all(Domain and Device) overrides on a SSO Server Policy Object. Response will always be in expanded form. If passed, the \"expanded\" query parameter will be ignored.**",
        "operationId" : "getSSOServerOverride",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/SSOServerOverrideListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/domainUUID/object/ssoservers/ssoserverUUID/overrides ( Get all overrides for sso server object )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/object/ssoservers/ssoserverUUID/overrides?offset=0&limit=2"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/object/ssoservers/ssoserverUUID?overrideTargetId=targetUUID"
                    },
                    "type" : "ssoservers",
                    "idpEntityId" : "salesforce_idp",
                    "baseUrl" : "https://172.23.34.222",
                    "ssoURL" : "https://asa-dev-ed.my.salesforce.com/idp/endpoint/HttpRedirect",
                    "logoutURL" : "https://asa-dev-ed.my.salesforce.com/idp/endpoint/HttpRedirect",
                    "serviceProviderCert" : {
                      "name" : "trustedca1",
                      "id" : "trustedca1UUID",
                      "type" : "CertEnrollment"
                    },
                    "identityProviderCert" : {
                      "name" : "cert26",
                      "id" : "cert26UUID",
                      "type" : "CertEnrollment"
                    },
                    "signatureType" : "RSA_SHA256",
                    "requestTimeout" : 7200,
                    "serverOnInternalNetwork" : true,
                    "overrides" : {
                      "parent" : {
                        "id" : "ssoserverUUID",
                        "type" : "ssoservers"
                      },
                      "target" : {
                        "name" : "10.10.19.25",
                        "id" : "targetUUID",
                        "type" : "Device"
                      }
                    },
                    "overridable" : true,
                    "description" : " ",
                    "name" : "SSO_1",
                    "id" : "SSO_1UUID",
                    "metadata" : {
                      "timestamp" : "number",
                      "lastUser" : {
                        "name" : "user1"
                      },
                      "domain" : {
                        "name" : "Global \\ INDIA",
                        "id" : "domainUUID"
                      }
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/ssoservers/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the SSO Server Policy Object associated with the specified ID. If no ID is specified, retrieves list of all SSO Server Policy Objects.**",
        "operationId" : "getSSOServer",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the SSO Server Policy Object.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "overrideTargetId",
          "in" : "query",
          "description" : "Retrieves the override(s) associated with the host object on given target ID.",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/SSOServer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/object/ssoservers/ssoserverUUID ( SSO Server object description )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/object/ssoservers/ssoserverUUID"
                  },
                  "type" : "SSOServer",
                  "idpEntityId" : "salesforce_idp",
                  "baseUrl" : "https://172.23.34.222",
                  "ssoURL" : "https://asa-dev-ed.my.salesforce.com/idp/endpoint/HttpRedirect",
                  "logoutURL" : "https://asa-dev-ed.my.salesforce.com/idp/endpoint/HttpRedirect",
                  "serviceProviderCert" : {
                    "name" : "trustedcacert1",
                    "id" : "trustedcacert1UUID",
                    "type" : "CertEnrollment"
                  },
                  "identityProviderCert" : {
                    "name" : "cert56",
                    "id" : "cert56UUID",
                    "type" : "CertEnrollment"
                  },
                  "signatureType" : "RSA_SHA256",
                  "requestTimeout" : 7200,
                  "serverOnInternalNetwork" : true,
                  "overridable" : true,
                  "description" : "SSO object description",
                  "id" : "SSOServer-1UUID",
                  "name" : "SSOServer-1"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/standardaccesslists" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Standard AccessList CRUD**",
        "operationId" : "getAllStandardACL",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/StandardACLListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/domainUUID/object/standardaccesslists ( Get all paginated Standard ACL objects )" : {
                  "links" : {
                    "self" : "https://fmc-host:port/api/fmc_config/v1/domain/78f49497-11b7-1f06-9d27-000000000000/object/standardaccesslists?offset=0&limit=2"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "https://fmc-host:port/api/fmc_config/v1/domain/78f49497-11b7-1f06-9d27-000000000000/object/standardaccesslists/stdACL-UUID"
                    },
                    "type" : "StandardAccessList",
                    "name" : "stdACL",
                    "id" : "stdACL-UUID"
                  }, {
                    "links" : {
                      "self" : "https://fmc-host:port/api/fmc_config/v1/domain/78f49497-11b7-1f06-9d27-000000000000/object/standardaccesslists/stdACL-UUID-123"
                    },
                    "type" : "StandardAccessList",
                    "name" : "stdACL321",
                    "id" : "stdACL-UUID-123"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/standardaccesslists/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Standard AccessList CRUD**",
        "operationId" : "getStandardACL",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "UUID of the standard access list.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/StandardACL"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/domainUUID/object/standardaccesslists/stdACL-UUID ( GET a standard ACL object for the given UUID )" : {
                  "links" : {
                    "self" : "https://fmc-host:port/api/fmc_config/v1/domain/78f49497-11b7-1f06-9d27-000000000000/object/standardaccesslists/stdACL-UUID"
                  },
                  "entries" : [ {
                    "networks" : [ {
                      "type" : "Network",
                      "overridable" : false,
                      "id" : "cb7116e8-66a6-480b-8f9b-295191a0940a",
                      "name" : "any-ipv4"
                    }, {
                      "type" : "Network",
                      "overridable" : false,
                      "id" : "15b12b14-dace-4117-b9d9-a9a7dcfa356f",
                      "name" : "IPv4-Private-All-RFC1918"
                    }, {
                      "type" : "Network",
                      "overridable" : false,
                      "id" : "f0ce41ae-6ee9-4e00-8762-da9370c4fee5",
                      "name" : "IPv4-Link-Local"
                    } ],
                    "action" : "PERMIT"
                  } ],
                  "type" : "StandardAccessList",
                  "name" : "stdACL",
                  "overridable" : false,
                  "description" : " ",
                  "id" : "stdACL-UUID",
                  "metadata" : {
                    "readOnly" : {
                      "state" : true,
                      "reason" : "DOMAIN"
                    },
                    "timestamp" : 1542790157210,
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "e276abec-e0f2-11e3-8169-6d9ed49b625f"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/standardcommunitylists" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Standard community list object CRUD.**",
        "operationId" : "getAllStandardCommunityList",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/StandardCommunityListListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/domainUUID/object/standardcommunitylists ( Success: Test GET ALL success )" : {
                  "links" : {
                    "self" : "https://FMC-HOST/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/object/standardcommunitylists?offset=0&limit=2&expanded=true"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "https://FMC-HOST/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/object/standardcommunitylists/00505681-3A7E-0ed3-0000-021474836483"
                    },
                    "entries" : [ {
                      "seqnumber" : 1,
                      "action" : "PERMIT",
                      "type" : "Standard",
                      "internet" : true,
                      "noAdvertise" : true,
                      "communities" : "8098",
                      "noExport" : true
                    }, {
                      "seqnumber" : 2,
                      "action" : "DENY",
                      "type" : "Standard",
                      "internet" : false,
                      "noAdvertise" : false,
                      "communities" : "987",
                      "noExport" : false
                    } ],
                    "name" : "S1",
                    "overridable" : false,
                    "type" : "CommunityListObject",
                    "id" : "00505681-3A7E-0ed3-0000-021474836483"
                  }, {
                    "links" : {
                      "self" : "https://FMC-HOST/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/object/standardcommunitylists/00505681-3A7E-0ed3-0000-017179869216"
                    },
                    "entries" : [ {
                      "seqnumber" : 1,
                      "action" : "PERMIT",
                      "type" : "Standard",
                      "internet" : true,
                      "noAdvertise" : false,
                      "communities" : "345",
                      "noExport" : true
                    }, {
                      "seqnumber" : 2,
                      "action" : "DENY",
                      "type" : "Standard",
                      "internet" : false,
                      "noAdvertise" : true,
                      "communities" : "567",
                      "noExport" : false
                    } ],
                    "name" : "Standard",
                    "overridable" : false,
                    "type" : "CommunityListObject",
                    "id" : "00505681-3A7E-0ed3-0000-017179869216"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/standardcommunitylists/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Standard community list object CRUD.**",
        "operationId" : "getStandardCommunityList",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "UUID of the Standard community list object.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/StandardCommunityList"
            },
            "examples" : { }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/timeranges" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates and modifies the TimeRange object.**",
        "operationId" : "getAllTimeRange",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/TimeRangeListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/DomainUUID/object/timeranges?limit=2 ( Get all paginated TimeRange objects with limit=5 )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/timeranges?offset=0&limit=2"
                  },
                  "items" : [ {
                    "name" : "TimeRange_test1",
                    "type" : "TimeRange",
                    "id" : "0050568A-906F-0ed3-0000-343597383765",
                    "overridable" : false,
                    "description" : "sample description",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/policy/prefilterpolicies/containerUUID/object/timeranges/0050568A-906F-0ed3-0000-343597383765"
                    }
                  }, {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/policy/prefilterpolicies/containerUUID/object/timeranges/0050568A-906F-0ed3-0000-446676598787"
                    },
                    "name" : "TimeRange_test2",
                    "recurrenceList" : [ {
                      "recurrenceType" : "DAILY_INTERVAL",
                      "dailyStartTime" : "08:00",
                      "dailyEndTime" : "09:00",
                      "days" : [ "MON", "TUE" ]
                    } ],
                    "effectiveStartDateTime" : "2018-08-16T08:00:00",
                    "effectiveEndDateTime" : "2018-09-19T13:00:00",
                    "type" : "TimeRange",
                    "id" : "0050568A-906F-0ed3-0000-446676598787",
                    "overridable" : false,
                    "description" : "sample description"
                  }, {
                    "name" : "TimeRange_test3",
                    "recurrenceList" : [ {
                      "recurrenceType" : "DAILY_INTERVAL",
                      "dailyStartTime" : "10:00",
                      "dailyEndTime" : "16:00",
                      "days" : [ "WED", "SAT" ]
                    }, {
                      "recurrenceType" : "RANGE",
                      "rangeStartDay" : "MON",
                      "rangeEndDay" : "FRI"
                    } ],
                    "effectiveStartDateTime" : "2018-08-16T08:00:00",
                    "effectiveEndDateTime" : "2018-09-19T13:00:00",
                    "type" : "TimeRange",
                    "id" : "0050568A-906F-0ed3-0000-343597383683",
                    "overridable" : false,
                    "description" : "sample description",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/policy/prefilterpolicies/containerUUID/object/timeranges/0050568A-906F-0ed3-0000-343597383683"
                    }
                  }, {
                    "name" : "TimeRange_test4",
                    "type" : "TimeRange",
                    "id" : "0050568A-906F-0ed3-0000-575525617667",
                    "overridable" : false,
                    "description" : "sample description",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/policy/prefilterpolicies/containerUUID/object/timeranges/0050568A-906F-0ed3-0000-575525617667"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 5,
                    "count" : 10,
                    "pages" : 2,
                    "next" : [ "/fmc_config/v1/domain/DomainUUID/object/timeranges?offset=5&limit=5" ]
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates and modifies the TimeRange object. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createMultipleTimeRange",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The input TimeRange object model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TimeRange"
          }
        }, {
          "name" : "bulk",
          "in" : "query",
          "description" : "Enables bulk create for TimeRange objects.",
          "required" : false,
          "type" : "boolean"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/TimeRange"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /fmc_config/v1/domain/DomainUUID/object/timeranges ( Test POST of TimeRange object to create a new record )" : {
                  "name" : "TestTimeRange",
                  "effectiveStartDateTime" : "2019-09-19T15:53:00",
                  "effectiveEndDateTime" : "2019-09-21T17:53:00",
                  "recurrenceList" : [ {
                    "recurrenceType" : "DAILY_INTERVAL",
                    "days" : [ "MON", "TUE", "FRI" ],
                    "dailyStartTime" : "08:00",
                    "dailyEndTime" : "09:00"
                  }, {
                    "recurrenceType" : "RANGE",
                    "rangeStartTime" : "09:00",
                    "rangeStartDay" : "MON",
                    "rangeEndTime" : "11:00",
                    "rangeEndDay" : "FRI"
                  } ],
                  "type" : "TimeRange",
                  "description" : " "
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/TimeRange"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/timeranges/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates and modifies the TimeRange object.**",
        "operationId" : "getTimeRange",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a TimeRange object.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/TimeRange"
            },
            "examples" : { }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates and modifies the TimeRange object. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateTimeRange",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a TimeRange object.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The input TimeRange object model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TimeRange"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/TimeRange"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/DomainUUID/object/timeranges ( Test PUT of new TimeRange object )" : {
                  "effectiveEndDateTime" : "16/08/2018T08:00",
                  "name" : "test_updated",
                  "type" : "TimeRange",
                  "id" : "0050568A-906F-0ed3-0000-343597383765",
                  "overridable" : false,
                  "description" : "sample description"
                },
                "Response Example 1 :PUT /fmc_config/v1/domain/DomainUUID/object/timeranges ( Test PUT of new TimeRange object )" : {
                  "name" : "test_updated",
                  "type" : "TimeRange",
                  "id" : "0050568A-906F-0ed3-0000-343597383765",
                  "overridable" : false,
                  "description" : "sample description"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/TimeRange"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates and modifies the TimeRange object. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteTimeRange",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a TimeRange object.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/TimeRange"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /fmc_config/v1/domain/DomainUUID/object/timeranges ( Test DELETE of TimeRange object )" : {
                  "name" : "test1",
                  "value" : "102.102.102.0/24",
                  "overridable" : false,
                  "description" : "Test REST API Object updated",
                  "type" : "TimeRange"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/timezoneobjects" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates and modifies the Time Zone Object.**",
        "operationId" : "getAllTimeZoneObject",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/TimeZoneObjectListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/DomainUUID/object/timezoneobjects ( Get all paginated TimeZoneObject resources with limit=2 )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/timezoneobjects?offset=0&limit=2"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/object/timezoneobjects/timeZoneObjectId1"
                    },
                    "timeZoneId" : "Asia/Calcutta",
                    "timeZone" : "(UTC+05:30) Asia/Calcutta",
                    "type" : "TimeZoneObject",
                    "description" : " ",
                    "name" : "TestObj1",
                    "id" : "timeZoneObjectId1",
                    "overridable" : false,
                    "metadata" : {
                      "timestamp" : 0,
                      "lastUser" : {
                        "name" : "api"
                      },
                      "domain" : {
                        "name" : "Domain Name",
                        "id" : "DomainUUID",
                        "type" : "Domain"
                      }
                    }
                  }, {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/object/timezoneobjects/timeZoneObjectId2"
                    },
                    "timeZoneId" : "Asia/Calcutta",
                    "dstDayRecurrence" : {
                      "startMonth" : "JAN",
                      "startWeek" : "FIRST",
                      "startDayOfWeek" : "MON",
                      "startTime" : "11:00",
                      "offset" : 20,
                      "endWeek" : "SECOND",
                      "endMonth" : "FEB",
                      "endDayOfWeek" : "TUE",
                      "endTime" : "11:01"
                    },
                    "timeZone" : "(UTC+05:30) Asia/Calcutta",
                    "type" : "TimeZoneObject",
                    "description" : " ",
                    "name" : "TestObj2",
                    "id" : "timeZoneObjectId2",
                    "overridable" : false,
                    "metadata" : {
                      "timestamp" : 0,
                      "lastUser" : {
                        "name" : "api"
                      },
                      "domain" : {
                        "name" : "Domain Name",
                        "id" : "DomainUUID",
                        "type" : "Domain"
                      }
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 0,
                    "pages" : 1,
                    "next" : [ "/fmc_config/v1/domain/DomainUUID/object/timezoneobjects?offset=0&limit=2" ]
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/DomainUUID/object/timezoneobjects?overrideTargetId=target_uuid ( Get all paginated TimeZoneObject objects without offset and limit )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/timezoneobjects?overrideTargetId=target_uuid"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/object/timezoneobjects/objectId?overrideTargetId=target_uuid"
                    },
                    "type" : "TimeZoneObject",
                    "id" : "objectId",
                    "name" : "tz01"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates and modifies the Time Zone Object. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createMultipleTimeZoneObject",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The input Time Zone object model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TimeZoneObject"
          }
        }, {
          "name" : "bulk",
          "in" : "query",
          "description" : "Enables bulk create for Time Zone objects.",
          "required" : false,
          "type" : "boolean"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/TimeZoneObject"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /fmc_config/v1/domain/DomainUUID/object/timezoneobjects ( Test POST of TimeZoneObject resource to create a new record )" : {
                  "timeZoneId" : "Asia/Calcutta",
                  "dstDayRecurrence" : {
                    "startMonth" : "JAN",
                    "startWeek" : "FIRST",
                    "startDayOfWeek" : "MON",
                    "startTime" : "11:00",
                    "offset" : 20,
                    "endWeek" : "SECOND",
                    "endMonth" : "FEB",
                    "endDayOfWeek" : "TUE",
                    "endTime" : "11:01"
                  },
                  "type" : "TimeZoneObject",
                  "name" : "TestPOSTObject"
                },
                "Request example 2 : POST /fmc_config/v1/domain/DomainUUID/object/timezoneobjects ( POST request to create an override on TimeZoneObject )" : {
                  "timeZoneId" : "US/Samoa",
                  "type" : "TimeZoneObject",
                  "description" : " ",
                  "id" : "objectId",
                  "name" : "tz01",
                  "overrides" : {
                    "parent" : {
                      "id" : "objectId",
                      "type" : "TimeZoneObject"
                    },
                    "target" : {
                      "name" : "Global \\ test_domain",
                      "id" : "targetId",
                      "type" : "Domain"
                    }
                  },
                  "overridable" : true
                },
                "Response Example 1 :POST /fmc_config/v1/domain/DomainUUID/object/timezoneobjects ( Test POST of TimeZoneObject resource to create a new record )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/timezoneobjects/timeZoneObjectId"
                  },
                  "timeZoneId" : "Asia/Calcutta",
                  "timeZone" : "(UTC+05:30) Asia/Calcutta",
                  "dstDayRecurrence" : {
                    "startMonth" : "JAN",
                    "startWeek" : "FIRST",
                    "startDayOfWeek" : "MON",
                    "startTime" : "11:00",
                    "offset" : 20,
                    "endWeek" : "SECOND",
                    "endMonth" : "FEB",
                    "endDayOfWeek" : "TUE",
                    "endTime" : "11:01"
                  },
                  "type" : "TimeZoneObject",
                  "description" : " ",
                  "name" : "TestPOSTObject",
                  "id" : "timeZoneObjectId",
                  "overridable" : false,
                  "metadata" : {
                    "timestamp" : 0,
                    "lastUser" : {
                      "name" : "api"
                    },
                    "domain" : {
                      "name" : "Domain Name",
                      "id" : "DomainUUID",
                      "type" : "Domain"
                    }
                  }
                },
                "Response Example 2 :POST /fmc_config/v1/domain/DomainUUID/object/timezoneobjects ( POST request to create an override on TimeZoneObject )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/timezoneobjects/objectId?overrideTargetId=targetId"
                  },
                  "timeZoneId" : "US/Samoa",
                  "timeZone" : "(UTC-11:00) US/Samoa",
                  "type" : "TimeZoneObject",
                  "description" : " ",
                  "id" : "objectId",
                  "name" : "tz01",
                  "overrides" : {
                    "parent" : {
                      "id" : "objectId",
                      "type" : "TimeZoneObject"
                    },
                    "target" : {
                      "name" : "Global \\ test_domain",
                      "id" : "targetId",
                      "type" : "Domain"
                    }
                  },
                  "overridable" : true,
                  "metadata" : {
                    "timestamp" : 0,
                    "lastUser" : {
                      "name" : "api"
                    },
                    "domain" : {
                      "name" : "Global \\ test_domain",
                      "id" : "targetId",
                      "type" : "Domain"
                    }
                  }
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/TimeZoneObject"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/timezoneobjects/{containerUUID}/overrides" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves all (Domain and Device) overrides on a TimeZoneObject. Response will always be in expanded form. If passed, the \"expanded\" query parameter will be ignored.**",
        "operationId" : "getTimeZoneObjectOverride",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/TimeZoneObjectOverrideListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/object/timezoneobjects/overrides ( Get all overrides on TimeZoneObjects )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/globalDomainId/object/timezoneobjects/objectId/overrides?offset=0&limit=1"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/globalDomainId/object/timezoneobjects/objectId?overrideTargetId=targetId"
                    },
                    "timeZoneId" : "US/Samoa",
                    "timeZone" : "(UTC-11:00) US/Samoa",
                    "type" : "TimeZoneObject",
                    "description" : " ",
                    "id" : "objectId",
                    "name" : "TestObject",
                    "overrides" : {
                      "parent" : {
                        "id" : "objectId",
                        "type" : "TimeZoneObject"
                      },
                      "target" : {
                        "name" : "targetName",
                        "id" : "targetId",
                        "type" : "targetType"
                      }
                    },
                    "overridable" : true,
                    "metadata" : {
                      "timestamp" : 1234567890,
                      "lastUser" : {
                        "name" : "api"
                      },
                      "domain" : {
                        "name" : "TargetDomain",
                        "id" : "domainId",
                        "type" : "Domain"
                      }
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/timezoneobjects/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates and modifies the Time Zone Object.**",
        "operationId" : "getTimeZoneObject",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the Time Zone object.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "overrideTargetId",
          "in" : "query",
          "description" : "Retrieves the override(s) associated with the object on given target ID.",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/TimeZoneObject"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/object/timezoneobjects/timeZoneObjectId1 ( Get TimeZoneObject resource with specified identifier. )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/timezoneobjects/timeZoneObjectId1"
                  },
                  "timeZoneId" : "Asia/Calcutta",
                  "timeZone" : "(UTC+05:30) Asia/Calcutta",
                  "type" : "TimeZoneObject",
                  "description" : " ",
                  "name" : "TestObj1",
                  "id" : "timeZoneObjectId1",
                  "overridable" : false,
                  "metadata" : {
                    "timestamp" : 0,
                    "lastUser" : {
                      "name" : "api"
                    },
                    "domain" : {
                      "name" : "Domain Name",
                      "id" : "DomainUUID",
                      "type" : "Domain"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates and modifies the Time Zone Object. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateTimeZoneObject",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the Time Zone object.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The input Time Zone object model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TimeZoneObject"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/TimeZoneObject"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/DomainUUID/object/timezoneobjects/timeZoneObjectId ( Test PUT of new TimeZoneObject resource )" : {
                  "timeZoneId" : "Asia/Calcutta",
                  "type" : "TimeZoneObject",
                  "description" : "edited",
                  "name" : "TestPUTObject",
                  "id" : "timeZoneObjectId"
                },
                "Request example 2 : PUT /fmc_config/v1/domain/DomainUUID/object/timezoneobjects/objectId ( PUT request to update an override on TimeZoneObject )" : {
                  "timeZoneId" : "US/Samoa",
                  "type" : "TimeZoneObject",
                  "description" : " ",
                  "id" : "objectId",
                  "name" : "tz01",
                  "overrides" : {
                    "parent" : {
                      "id" : "objectId",
                      "type" : "TimeZoneObject"
                    },
                    "target" : {
                      "name" : "Global \\ test_domain",
                      "id" : "targetId",
                      "type" : "Domain"
                    }
                  },
                  "overridable" : true
                },
                "Response Example 1 :PUT /fmc_config/v1/domain/DomainUUID/object/timezoneobjects/timeZoneObjectId ( Test PUT of new TimeZoneObject resource )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/timezoneobjects/timeZoneObjectId"
                  },
                  "timeZoneId" : "Asia/Calcutta",
                  "dstDayRecurrence" : {
                    "startMonth" : "JAN",
                    "startWeek" : "FIRST",
                    "startDayOfWeek" : "MON",
                    "startTime" : "11:00",
                    "offset" : 20,
                    "endWeek" : "SECOND",
                    "endMonth" : "FEB",
                    "endDayOfWeek" : "TUE",
                    "endTime" : "11:01"
                  },
                  "timeZone" : "(UTC+05:30) Asia/Calcutta",
                  "type" : "TimeZoneObject",
                  "description" : " ",
                  "name" : "TestPUTObject",
                  "id" : "timeZoneObjectId",
                  "overridable" : false,
                  "metadata" : {
                    "timestamp" : 0,
                    "lastUser" : {
                      "name" : "api"
                    },
                    "domain" : {
                      "name" : "Domain Name",
                      "id" : "DomainUUID",
                      "type" : "Domain"
                    }
                  }
                },
                "Response Example 2 :PUT /fmc_config/v1/domain/DomainUUID/object/timezoneobjects/objectId ( PUT request to update an override on TimeZoneObject )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/timezoneobjects/objectId?overrideTargetId=targetId"
                  },
                  "timeZoneId" : "US/Samoa",
                  "timeZone" : "(UTC-11:00) US/Samoa",
                  "type" : "TimeZoneObject",
                  "description" : " ",
                  "id" : "objectId",
                  "name" : "tz01",
                  "overrides" : {
                    "parent" : {
                      "id" : "objectId",
                      "type" : "TimeZoneObject"
                    },
                    "target" : {
                      "name" : "Global \\ test_domain",
                      "id" : "targetId",
                      "type" : "Domain"
                    }
                  },
                  "overridable" : true,
                  "metadata" : {
                    "timestamp" : 0,
                    "lastUser" : {
                      "name" : "api"
                    },
                    "domain" : {
                      "name" : "Global \\ test_domain",
                      "id" : "targetId",
                      "type" : "Domain"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/TimeZoneObject"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates and modifies the Time Zone Object. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteTimeZoneObject",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the Time Zone object.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "overrideTargetId",
          "in" : "query",
          "description" : "Retrieves the override(s) associated with the object on given target ID.",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/TimeZoneObject"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /fmc_config/v1/domain/DomainUUID/object/timezoneobjects/timeZoneObjectId ( Test DELETE of TimeZoneObject resource )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/timezoneobjects/timeZoneObjectId"
                  },
                  "timeZoneId" : "Asia/Calcutta",
                  "timeZone" : "(UTC+05:30) Asia/Calcutta",
                  "type" : "TimeZoneObject",
                  "description" : " ",
                  "name" : "ExampleDELETEobject",
                  "id" : "timeZoneObjectId",
                  "overridable" : false,
                  "metadata" : {
                    "timestamp" : 0,
                    "lastUser" : {
                      "name" : "api"
                    },
                    "domain" : {
                      "name" : "Domain Name",
                      "id" : "DomainUUID",
                      "type" : "Domain"
                    }
                  }
                },
                "Response Example 2 :DELETE /fmc_config/v1/domain/DomainUUID/object/timezoneobjects/objectId?overrideTargetId=targetId ( DELETE request to remove an override on TimeZoneObject )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/timezoneobjects/objectId?overrideTargetId=targetId"
                  },
                  "timeZoneId" : "US/Samoa",
                  "timeZone" : "(UTC-11:00) US/Samoa",
                  "type" : "TimeZoneObject",
                  "description" : " ",
                  "id" : "objectId",
                  "name" : "tz01",
                  "overrides" : {
                    "parent" : {
                      "id" : "objectId",
                      "type" : "TimeZoneObject"
                    },
                    "target" : {
                      "name" : "Global \\ test_domain",
                      "id" : "targetId",
                      "type" : "Domain"
                    }
                  },
                  "overridable" : true,
                  "metadata" : {
                    "timestamp" : 0,
                    "lastUser" : {
                      "name" : "api"
                    },
                    "domain" : {
                      "name" : "Global \\ test_domain",
                      "id" : "targetId",
                      "type" : "Domain"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/tunneltags" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the tunnel tag object associated with the specified ID. If no ID is specified, retrieves list of all tunnel tag objects.**",
        "operationId" : "getAllTunnelTags",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/TunnelTagsListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/domainUUID/object/tunneltags ( Success: Test GET ALL success )" : {
                  "items" : [ {
                    "name" : "TT_obj1",
                    "id" : "tunnelTagObj1UUID",
                    "type" : "TunnelTag",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/object/tunneltags/tunnelTagObj1UUID"
                    }
                  }, {
                    "name" : "TT_obj2",
                    "id" : "tunnelTagObj2UUID",
                    "type" : "TunnelTag",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/object/tunneltags/tunnelTagObj2UUID"
                    }
                  }, {
                    "name" : "TT_obj3",
                    "id" : "tunnelTagObj3UUID",
                    "type" : "TunnelTag",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/object/tunneltags/tunnelTagObj3UUID"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 3,
                    "count" : 3,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the tunnel tag object associated with the specified ID. If no ID is specified, retrieves list of all tunnel tag objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createMultipleTunnelTags",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The input tunnel tags model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TunnelTags"
          }
        }, {
          "name" : "bulk",
          "in" : "query",
          "description" : "This parameter specifies that bulk operation is being used in the query. This parameter is required for bulk object operations. Only bulk POST is currently supported for tunnel tags. Allowed values are 'true' and 'false'.",
          "required" : false,
          "type" : "boolean"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/TunnelTags"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /fmc_config/v1/domain/{domainUUID}/object/tunneltags/{objectId} ( Success: Test POST method for TunnelTag )" : {
                  "type" : "TunnelTag",
                  "name" : "NewTunnelTag",
                  "description" : "Tunnel Tag description"
                },
                "Request example 2 : POST /fmc_config/v1/domain/{domainUUID}/object/tunneltags?bulk=true ( Bulk POST operation on Tunnel tag objects )" : [ {
                  "type" : "TunnelTag",
                  "name" : "NewTunnelTag1",
                  "description" : "Tunnel Tag description"
                }, {
                  "type" : "TunnelTag",
                  "name" : "NewTunnelTag2",
                  "description" : "Tunnel Tag description"
                } ]
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/TunnelTags"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/tunneltags/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the tunnel tag object associated with the specified ID. If no ID is specified, retrieves list of all tunnel tag objects.**",
        "operationId" : "getTunnelTags",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a tunnel tag.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/TunnelTags"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/object/tunneltags/tunnelTagObj1UUID ( Test GET of tunnel tag object for a uuid )" : {
                  "id" : "tunnelTagObj1UUID",
                  "name" : "TT_obj1",
                  "type" : "TunnelTag",
                  "description" : "some description"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the tunnel tag object associated with the specified ID. If no ID is specified, retrieves list of all tunnel tag objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateTunnelTags",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a tunnel tag.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The input tunnel tags model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TunnelTags"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/TunnelTags"
            },
            "examples" : { }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/TunnelTags"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the tunnel tag object associated with the specified ID. If no ID is specified, retrieves list of all tunnel tag objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteTunnelTags",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a tunnel tag.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/TunnelTags"
            },
            "examples" : { }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "204" : {
            "description" : "No Content",
            "schema" : {
              "$ref" : "#/definitions/TunnelTags"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /fmc_config/v1/domain/{domainUUID}/object/tunneltags/{objectId} ( Test DELETE of TunnelTag Object )" : {
                  "links" : {
                    "self" : "https://fmc_host_ip/api/fmc_config/v1/domain/global/object/tunneltags/{objectId}"
                  },
                  "id" : "TunnelTagObjectUUID",
                  "type" : "TunnelTag",
                  "name" : "NewTunnel",
                  "description" : "Tunnel Tag description",
                  "metadata" : {
                    "timestamp" : 1544094109706,
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "Object id"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/urlcategories" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the url category object associated with the specified ID. If no ID is specified, retrieves list of all url category objects.**",
        "operationId" : "getAllURLCategory",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/URLCategoryListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/DomainUUID/object/urlcategories?limit=2 ( Get all paginated URLCategory with limit set 2 )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/urlcategories?offset=0&limit=2"
                  },
                  "items" : [ {
                    "type" : "URLCategory",
                    "id" : "urlCategoryUUID",
                    "name" : "Auctions",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/object/urlcategories/urlCategoryUUID"
                    }
                  }, {
                    "type" : "URLCategory",
                    "id" : "urlCategoryUUID",
                    "name" : "Bot Nets",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/object/urlcategories/urlCategoryUUID"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 5,
                    "next" : [ "/fmc_config/v1/domain/DomainUUID/object/urlcategories?offset=2&limit=2", "/fmc_config/v1/domain/DomainUUID/object/urlcategories?offset=4&limit=29" ],
                    "pages" : 3
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/DomainUUID/object/urlcategories?limit=2&expanded=true ( Get all paginated URL category with limit set 2 )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/urlcategories?offset=0&limit=2"
                  },
                  "items" : [ {
                    "type" : "URLCategory",
                    "id" : "urlCategoryUUID",
                    "name" : "Auctions",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/object/urlcategories/urlCategoryUUID"
                    }
                  }, {
                    "type" : "URLCategory",
                    "id" : "urlCategoryUUID",
                    "name" : "Bot Nets",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/object/urlcategories/urlCategoryUUID"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 84,
                    "next" : [ "/fmc_config/v1/domain/DomainUUID/object/urlcategories?offset=2&limit=2", "/fmc_config/v1/domain/DomainUUID/object/urlcategories?offset=4&limit=2", "/fmc_config/v1/domain/DomainUUID/object/urlcategories?offset=6&limit=2", "/fmc_config/v1/domain/DomainUUID/object/urlcategories?offset=8&limit=2" ],
                    "pages" : 4
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/urlcategories/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the url category object associated with the specified ID. If no ID is specified, retrieves list of all url category objects.**",
        "operationId" : "getURLCategory",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the object.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/URLCategory"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/object/urlcategories/urlCategoryUUID ( Get url category by id )" : {
                  "type" : "URLCategory",
                  "id" : "urlCategoryUUID",
                  "name" : "Auctions",
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/object/urlcategories/urlCategoryUUID"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/urlgroups" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the url group objects associated with the specified ID. If no ID is specified for a GET, retrieves list of all url group objects.**",
        "operationId" : "getAllURLGroupObject",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "To be used in conjunction with <code>\"unusedOnly:true\"</code> to search for unused objects and <code>\"nameOrValue:{nameOrValue}\"</code> to search for both name and value.",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/URLGroupObjectListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/DomainUUID/object/urlgroups?expanded=true ( Get all paginated urlgroup objects without offset and limit )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/urlgroups?offset=0&limit=1&expanded=true"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/urlgroups/urlgrp1_uuid"
                    },
                    "objects" : [ {
                      "type" : "Url",
                      "overridable" : false,
                      "id" : "url1_uuid",
                      "name" : "url1"
                    } ],
                    "literals" : [ {
                      "url" : "www.google.com",
                      "type" : "Url"
                    } ],
                    "type" : "UrlGroup",
                    "overridable" : true,
                    "description" : " ",
                    "id" : "urlgrp1_uuid",
                    "name" : "urlgrp1",
                    "metadata" : {
                      "timestamp" : 1528178387150,
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUuid"
                      }
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/DomainUUID/object/urlgroups?overrideTargetId=target_uuid&expanded=true ( Get all paginated urlgroup objects without offset and limit )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/urlgroups?offset=0&limit=1&overrideTargetId=device_uuid&expanded=true"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/urlgroups/urlgrp1_uuid?overrideTargetId=device_uuid"
                    },
                    "objects" : [ {
                      "type" : "Url",
                      "overridable" : false,
                      "id" : "url1_uuid",
                      "name" : "url1"
                    } ],
                    "literals" : [ {
                      "url" : "www.google.com",
                      "type" : "Url"
                    } ],
                    "type" : "UrlGroup",
                    "overrides" : {
                      "parent" : {
                        "id" : "urlgrp1_uuid",
                        "type" : "UrlGroup"
                      },
                      "target" : {
                        "name" : "10.10.16.29",
                        "id" : "device_uuid",
                        "type" : "Device"
                      }
                    },
                    "overridable" : true,
                    "description" : " ",
                    "id" : "urlgrp1_uuid",
                    "name" : "urlgrp1",
                    "metadata" : {
                      "timestamp" : 1528178384030,
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global \\ ASIA \\ INDIA",
                        "id" : "domain_Uuid"
                      }
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the url group objects associated with the specified ID. If no ID is specified for a GET, retrieves list of all url group objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createMultipleURLGroupObject",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The input url group object model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/URLGroupObject"
          }
        }, {
          "name" : "bulk",
          "in" : "query",
          "description" : "Enables bulk create for url group objects.",
          "required" : false,
          "type" : "boolean"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/URLGroupObject"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /fmc_config/v1/domain/DomainUUID/object/urlgroups ( Test registration of UrlGroup to create a new record )" : {
                  "name" : "urlgroup_obj1",
                  "objects" : [ {
                    "type" : "Url",
                    "id" : "UrlObjectUUID"
                  } ],
                  "literals" : [ {
                    "type" : "Url",
                    "url" : "www.google.com"
                  } ],
                  "type" : "UrlGroup"
                },
                "Request example 2 : POST /fmc_config/v1/domain/DomainUUID/object/urlgroups?bulk=true ( Bulk POST operation on url groups. )" : [ {
                  "name" : "ug1",
                  "objects" : [ {
                    "type" : "Url",
                    "id" : "url_ObjUuid"
                  } ],
                  "literals" : [ {
                    "type" : "Url",
                    "url" : "www.google.com"
                  } ],
                  "type" : "UrlGroup"
                }, {
                  "name" : "ug2",
                  "literals" : [ {
                    "type" : "Url",
                    "url" : "www.cisco.com"
                  } ],
                  "type" : "UrlGroup"
                } ],
                "Request example 3 : POST /fmc_config/v1/domain/DomainUUID/object/urlgroups?bulk=true ( Bulk POST operation on url groups with overrides )" : [ {
                  "type" : "UrlGroup",
                  "literals" : [ {
                    "url" : "www.stackoverflow.com",
                    "type" : "Url"
                  }, {
                    "url" : "www.tutorialspoint.com",
                    "type" : "Url"
                  } ],
                  "objects" : [ {
                    "type" : "Url",
                    "overridable" : false,
                    "name" : "url_obj",
                    "id" : "url_obj_uuid"
                  } ],
                  "overridable" : true,
                  "description" : " ",
                  "overrides" : {
                    "parent" : {
                      "id" : "urlgrp_uuid",
                      "type" : "UrlGroup"
                    },
                    "target" : {
                      "name" : "Global \\ EUROPE",
                      "id" : "domain_uuid",
                      "type" : "Domain"
                    }
                  },
                  "name" : "urlgrp",
                  "id" : "urlgrp_uuid"
                }, {
                  "type" : "UrlGroup",
                  "literals" : [ {
                    "url" : "www.stackoverflow.com",
                    "type" : "Url"
                  }, {
                    "url" : "www.tutorialspoint.com",
                    "type" : "Url"
                  } ],
                  "overridable" : true,
                  "description" : " ",
                  "overrides" : {
                    "parent" : {
                      "id" : "urlgrp_uuid",
                      "type" : "UrlGroup"
                    },
                    "target" : {
                      "name" : "FTDv_R1",
                      "id" : "device_uuid",
                      "type" : "Device"
                    }
                  },
                  "name" : "urlgrp",
                  "id" : "urlgrp_uuid"
                } ],
                "Request example 4 : POST /fmc_config/v1/domain/DomainUUID/object/urlgroups ( POST request to create an override on url group )" : {
                  "objects" : [ {
                    "type" : "Url",
                    "overridable" : false,
                    "id" : "url1_uuid",
                    "name" : "url1"
                  } ],
                  "literals" : [ {
                    "url" : "www.google.com",
                    "type" : "Url"
                  } ],
                  "type" : "UrlGroup",
                  "overridable" : true,
                  "overrides" : {
                    "parent" : {
                      "id" : "urlgrp1_uuid",
                      "type" : "UrlGroup"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "target_uuid",
                      "type" : "Device"
                    }
                  },
                  "description" : " ",
                  "id" : "urlgrp1_uuid",
                  "name" : "urlgrp1"
                },
                "Response Example 2 :POST /fmc_config/v1/domain/DomainUUID/object/urlgroups?bulk=true ( Bulk POST operation on url groups. )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/urlgroups?bulk=true"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/urlgroups/ug1Uuid"
                    },
                    "type" : "UrlGroup",
                    "objects" : [ {
                      "type" : "Url",
                      "name" : "UrlObject1",
                      "id" : "url_ObjUuid"
                    } ],
                    "literals" : [ {
                      "url" : "www.google.com",
                      "type" : "Url"
                    } ],
                    "overridable" : false,
                    "description" : " ",
                    "name" : "ug1",
                    "id" : "ug1Uuid",
                    "metadata" : {
                      "timestamp" : 0,
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUuid"
                      }
                    }
                  }, {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/urlgroups/ug2Uuid"
                    },
                    "type" : "UrlGroup",
                    "literals" : [ {
                      "url" : "www.cisco.com",
                      "type" : "Url"
                    } ],
                    "overridable" : false,
                    "description" : " ",
                    "name" : "ug2",
                    "id" : "ug2Uuid",
                    "metadata" : {
                      "timestamp" : 0,
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUuid"
                      }
                    }
                  } ]
                },
                "Response Example 3 :POST /fmc_config/v1/domain/DomainUUID/object/urlgroups?bulk=true ( Bulk POST operation on url groups with overrides )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/urlgroups?bulk=true"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/urlgroups/urlgrp_uuid"
                    },
                    "type" : "UrlGroup",
                    "literals" : [ {
                      "url" : "www.stackoverflow.com",
                      "type" : "Url"
                    }, {
                      "url" : "www.tutorialspoint.com",
                      "type" : "Url"
                    } ],
                    "objects" : [ {
                      "type" : "Url",
                      "overridable" : false,
                      "name" : "url_obj",
                      "id" : "url_obj_uuid"
                    } ],
                    "overrides" : {
                      "parent" : {
                        "id" : "urlgrp_uuid",
                        "type" : "UrlGroup"
                      },
                      "target" : {
                        "name" : "Global \\ EUROPE",
                        "id" : "domain_uuid",
                        "type" : "Domain"
                      }
                    },
                    "overridable" : true,
                    "name" : "urlgrp",
                    "id" : "urlgrp_uuid",
                    "metadata" : {
                      "timestamp" : 0,
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global \\ EUROPE",
                        "id" : "domain_uuid"
                      }
                    }
                  }, {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/urlgroups/urlgrp_uuid"
                    },
                    "type" : "UrlGroup",
                    "literals" : [ {
                      "url" : "www.stackoverflow.com",
                      "type" : "Url"
                    }, {
                      "url" : "www.tutorialspoint.com",
                      "type" : "Url"
                    } ],
                    "objects" : [ {
                      "type" : "Url",
                      "overridable" : false,
                      "name" : "url_obj",
                      "id" : "url_obj_uuid"
                    } ],
                    "overrides" : {
                      "parent" : {
                        "id" : "urlgrp_uuid",
                        "type" : "UrlGroup"
                      },
                      "target" : {
                        "name" : "FTDv_R1",
                        "id" : "device_uuid",
                        "type" : "Device"
                      }
                    },
                    "overridable" : true,
                    "name" : "urlgrp",
                    "id" : "urlgrp_uuid",
                    "metadata" : {
                      "timestamp" : 0,
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global \\ ASIA",
                        "id" : "domain_uuid"
                      }
                    }
                  } ]
                },
                "Response Example 4 :POST /fmc_config/v1/domain/DomainUUID/object/urlgroups ( POST request to create an override on url group )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/urlgroups/urlgrp1_uuid?overrideTargetId=target_uuid"
                  },
                  "objects" : [ {
                    "type" : "Url",
                    "overridable" : false,
                    "id" : "url1_uuid",
                    "name" : "url1"
                  } ],
                  "literals" : [ {
                    "url" : "www.google.com",
                    "type" : "Url"
                  } ],
                  "type" : "UrlGroup",
                  "overrides" : {
                    "parent" : {
                      "id" : "urlgrp1_uuid",
                      "type" : "UrlGroup"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "target_uuid",
                      "type" : "Device"
                    }
                  },
                  "overridable" : true,
                  "id" : "urlgrp1_uuid",
                  "name" : "urlgrp1",
                  "metadata" : {
                    "timestamp" : 0,
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUuid"
                    }
                  }
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/URLGroupObject"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/urlgroups/{containerUUID}/overrides" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves all(Domain and Device) overrides on a URLGroup.Response will always be in expanded form. If passed, the \"expanded\" query parameter will be ignored.**",
        "operationId" : "getAllUrlGroupOverride",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/UrlGroupOverrideListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/domainUUID/object/urlgroups/urlGroupObjectUUID/overrides ( Get all overrides(device and deomain) on Given URLObjectGroup )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/object/urlgroups/urlGroupObjectUUID/overrides?offset=0&limit=1"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/object/urlgroups/urlGroupObjectUUID?overrideTargetId=793710a0-21cf-11e8-9b2b-c8519f5a7ccc"
                    },
                    "type" : "UrlGroup",
                    "objects" : [ {
                      "type" : "Url",
                      "overridable" : false,
                      "name" : "url_2",
                      "id" : "URLobjectUUID"
                    } ],
                    "overrides" : {
                      "parent" : {
                        "id" : "UrlGroupUUID",
                        "type" : "UrlGroup"
                      },
                      "target" : {
                        "name" : "10.10.19.27",
                        "id" : "targetUUID",
                        "type" : "Device"
                      }
                    },
                    "overridable" : true,
                    "description" : " ",
                    "name" : "device",
                    "id" : "deviceUUID",
                    "metadata" : {
                      "timestamp" : 1520419908146,
                      "lastUser" : {
                        "name" : "user1"
                      },
                      "domain" : {
                        "name" : "Global \\ INDIA \\ BENGALURU",
                        "id" : "domainUUID"
                      }
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/urlgroups/{containerUUID}/overrides/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves all(Domain and Device) overrides on a URLGroup.Response will always be in expanded form. If passed, the \"expanded\" query parameter will be ignored.**",
        "operationId" : "getUrlGroupOverride",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Input NOT Expected here",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/UrlGroupOverride"
            },
            "examples" : { }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/urlgroups/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the url group objects associated with the specified ID. If no ID is specified for a GET, retrieves list of all url group objects.**",
        "operationId" : "getURLGroupObject",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the object.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "overrideTargetId",
          "in" : "query",
          "description" : "Retrieves the override(s) associated with the url group object on given target ID.",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/URLGroupObject"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/object/urlgroups/UrlGroupUUID1 ( Test GET of UrlGroup Object for a uuid )" : {
                  "id" : "UrlGroupUUID1",
                  "name" : "urlgroup_obj1",
                  "type" : "UrlGroup",
                  "objects" : [ {
                    "type" : "Url",
                    "id" : "UrlObjectUUID"
                  } ],
                  "literals" : [ {
                    "type" : "Url",
                    "url" : "www.google.com"
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the url group objects associated with the specified ID. If no ID is specified for a GET, retrieves list of all url group objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateURLGroupObject",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the object.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The input url group object model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/URLGroupObject"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/URLGroupObject"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/DomainUUID/object/urlgroups/UrlGroupUUID1 ( Test PUT of UrlGroup object to update record )" : {
                  "id" : "UrlGroupUUID1",
                  "name" : "urlgroup_obj1_updated",
                  "type" : "UrlGroup",
                  "objects" : [ {
                    "type" : "Url",
                    "id" : "UrlObjectUUID"
                  } ],
                  "literals" : [ {
                    "type" : "Url",
                    "url" : "www.google.com"
                  } ]
                },
                "Request example 2 : PUT /fmc_config/v1/domain/DomainUUID/object/urlgroups/urlgrp1_uuid ( PUT request to update an override on url group )" : {
                  "objects" : [ {
                    "type" : "Url",
                    "overridable" : false,
                    "id" : "url1_uuid",
                    "name" : "url1"
                  } ],
                  "literals" : [ {
                    "url" : "www.google.com",
                    "type" : "Url"
                  } ],
                  "type" : "UrlGroup",
                  "overridable" : true,
                  "overrides" : {
                    "parent" : {
                      "id" : "urlgrp1_uuid",
                      "type" : "UrlGroup"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "target_uuid",
                      "type" : "Device"
                    }
                  },
                  "description" : " ",
                  "id" : "urlgrp1_uuid",
                  "name" : "urlgrp1"
                },
                "Response Example 2 :PUT /fmc_config/v1/domain/DomainUUID/object/urlgroups/urlgrp1_uuid ( PUT request to update an override on url group )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/urlgroups/urlgrp1_uuid?overrideTargetId=target_uuid"
                  },
                  "objects" : [ {
                    "type" : "Url",
                    "overridable" : false,
                    "id" : "url1_uuid",
                    "name" : "url1"
                  } ],
                  "literals" : [ {
                    "url" : "www.google.com",
                    "type" : "Url"
                  } ],
                  "type" : "UrlGroup",
                  "overrides" : {
                    "parent" : {
                      "id" : "urlgrp1_uuid",
                      "type" : "UrlGroup"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "target_uuid",
                      "type" : "Device"
                    }
                  },
                  "overridable" : true,
                  "id" : "urlgrp1_uuid",
                  "name" : "urlgrp1",
                  "metadata" : {
                    "timestamp" : 0,
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUuid"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/URLGroupObject"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the url group objects associated with the specified ID. If no ID is specified for a GET, retrieves list of all url group objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteURLGroupObject",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the object.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/URLGroupObject"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /fmc_config/v1/domain/DomainUUID/object/urlgroups/UrlGroupUUID2 ( Test DELETE of UrlGroup Object )" : {
                  "id" : "UrlGroupUUID2",
                  "name" : "urlgroup_obj2",
                  "type" : "UrlGroup",
                  "objects" : [ {
                    "type" : "Url",
                    "id" : "UrlObjectUUID"
                  } ],
                  "literals" : [ {
                    "type" : "Url",
                    "url" : "www.google.com"
                  } ]
                },
                "Response Example 2 :DELETE /fmc_config/v1/domain/DomainUUID/object/urlgroups/urlgrp1_uuid?overrideTargetId=target_uuid ( DELETE request to remove an override on url group )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/urlgroups/urlgrp1_uuid?overrideTargetId=target_uuid"
                  },
                  "objects" : [ {
                    "type" : "Url",
                    "overridable" : false,
                    "id" : "url1_uuid",
                    "name" : "url1"
                  } ],
                  "literals" : [ {
                    "url" : "www.google.com",
                    "type" : "Url"
                  } ],
                  "type" : "UrlGroup",
                  "overrides" : {
                    "parent" : {
                      "id" : "urlgrp1_uuid",
                      "type" : "UrlGroup"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "target_uuid",
                      "type" : "Device"
                    }
                  },
                  "overridable" : true,
                  "description" : " ",
                  "id" : "urlgrp1_uuid",
                  "name" : "urlgrp1",
                  "metadata" : {
                    "timestamp" : 1527360182370,
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUuid"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/urls" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the url objects associated with the specified ID. If no ID is specified, retrieves list of all url objects.**",
        "operationId" : "getAllURLObject",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "To be used in conjunction with <code>\"unusedOnly:true\"</code> to search for unused objects and <code>\"nameOrValue:{nameOrValue}\"</code> to search for both name and value.",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/URLObjectListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/GlobalDomainUUID/object/urls?expanded=true&overrideTargetId=childDomainUUID ( Success: Test GET ALL method from global domain for UrlObject when overrides are assigned to child domain )" : {
                  "links" : {
                    "self" : "https://fmc_host_ip/api/fmc_config/v1/domain/global/object/urls?offset=0&limit=1"
                  },
                  "items" : [ {
                    "metadata" : {
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global \\ Asia",
                        "id" : "subdomain_id"
                      }
                    },
                    "links" : {
                      "self" : "https://fmc_host_ip/api/fmc_config/v1/domain/global/object/urls/urlObjectUUID"
                    },
                    "type" : "Url",
                    "url" : "www.cisco.com",
                    "overridable" : true,
                    "overrides" : {
                      "parent" : {
                        "id" : "urlObjectUUID",
                        "type" : "Url"
                      },
                      "target" : {
                        "name" : "Global \\ Asia",
                        "id" : "subdomain_id",
                        "type" : "Domain"
                      }
                    },
                    "description" : " ",
                    "name" : "pvs_global_url",
                    "id" : "urlObjectUUID"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/childDomainUUID/object/urls?expanded=true&overrideTargetId=childDomainUUID ( Success: Test GET ALL method from child domain for UrlObject when overrides are assigned to child domain )" : {
                  "links" : {
                    "self" : "https://fmc_host_ip/api/fmc_config/v1/domain/subdomain_id/object/urls?offset=0&limit=1"
                  },
                  "items" : [ {
                    "metadata" : {
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global \\ Asia",
                        "id" : "subdomain_id"
                      }
                    },
                    "links" : {
                      "self" : "https://fmc_host_ip/api/fmc_config/v1/domain/subdomain_id/object/urls/urlObjectUUID"
                    },
                    "type" : "Url",
                    "url" : "www.cisco.com",
                    "overridable" : true,
                    "overrides" : {
                      "parent" : {
                        "id" : "urlObjectUUID",
                        "type" : "Url"
                      },
                      "target" : {
                        "name" : "Global \\ Asia",
                        "id" : "subdomain_id",
                        "type" : "Domain"
                      }
                    },
                    "description" : " ",
                    "name" : "pvs_global_url",
                    "id" : "urlObjectUUID"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the url objects associated with the specified ID. If no ID is specified, retrieves list of all url objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createMultipleURLObject",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The input url object model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/URLObject"
          }
        }, {
          "name" : "bulk",
          "in" : "query",
          "description" : "Enables bulk create for url objects.",
          "required" : false,
          "type" : "boolean"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/URLObject"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /fmc_config/v1/domain/DomainUUID/object/urls?bulk=true ( Bulk POST operation on Url objects. )" : [ {
                  "type" : "Url",
                  "name" : "UrlObject1",
                  "description" : "url object 1",
                  "url" : "http://wwwin.cisco.com"
                }, {
                  "type" : "Url",
                  "name" : "UrlObject2",
                  "description" : "url object 2",
                  "url" : "http://www.google.com"
                } ],
                "Request example 2 : POST /fmc_config/v1/domain/DomainUUID/object/urls?bulk=true ( Bulk POST operation on Url objects with overrides )" : [ {
                  "type" : "Url",
                  "url" : "www.cisco.com",
                  "overridable" : true,
                  "description" : " ",
                  "name" : "url_obj",
                  "overrides" : {
                    "parent" : {
                      "id" : "url_obj_uuid",
                      "type" : "Url"
                    },
                    "target" : {
                      "name" : "Global \\ EUROPE",
                      "id" : "domain_uuid",
                      "type" : "Domain"
                    }
                  },
                  "id" : "url_obj_uuid"
                }, {
                  "type" : "Url",
                  "url" : "www.facebook.com",
                  "overridable" : true,
                  "description" : " ",
                  "name" : "url_obj",
                  "overrides" : {
                    "parent" : {
                      "id" : "url_obj_uuid",
                      "type" : "Url"
                    },
                    "target" : {
                      "name" : "FTDv_R1",
                      "id" : "device_uuid",
                      "type" : "Device"
                    }
                  },
                  "id" : "url_obj_uuid"
                } ],
                "Request example 3 : POST /fmc_config/v1/domain/DomainUUID/object/urls ( POST request to create an override on url object )" : {
                  "type" : "Url",
                  "url" : "www.cisco.com",
                  "overridable" : true,
                  "overrides" : {
                    "parent" : {
                      "id" : "url1_uuid",
                      "type" : "Url"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "target_uuid",
                      "type" : "Device"
                    }
                  },
                  "description" : " ",
                  "id" : "url1_uuid",
                  "name" : "url1"
                },
                "Request example 4 : POST /fmc_config/v1/domain/DomainUUID/object/urls ( Success Test POST method for Url Obj )" : {
                  "type" : "Url",
                  "overridable" : false,
                  "name" : "UrlObject1",
                  "description" : "object to test FMC implementation",
                  "url" : "http://wwwin.cisco.com"
                },
                "Request example 6 : POST /fmc_config/v1/domain/DomainUUID/object/urls ( Success: Test POST method for Url Object with special characters. )" : {
                  "overridable" : false,
                  "url" : "http://%#%$",
                  "name" : "urlobj5",
                  "description" : "testing with special characters",
                  "type" : "Url"
                },
                "Response Example 1 :POST /fmc_config/v1/domain/DomainUUID/object/urls?bulk=true ( Bulk POST operation on Url objects. )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/urls?bulk=true"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/urls/urlObject1Uuid"
                    },
                    "type" : "Url",
                    "url" : "http://wwwin.cisco.com",
                    "overridable" : false,
                    "description" : "url object 1",
                    "name" : "UrlObject1",
                    "id" : "urlObject1Uuid",
                    "metadata" : {
                      "timestamp" : 0,
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUuid"
                      }
                    }
                  }, {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/urls/urlObject2Uuid"
                    },
                    "type" : "Url",
                    "url" : "http://www.google.com",
                    "overridable" : false,
                    "description" : "url object 2",
                    "name" : "UrlObject2",
                    "id" : "urlObject2Uuid",
                    "metadata" : {
                      "timestamp" : 0,
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUuid"
                      }
                    }
                  } ]
                },
                "Response Example 2 :POST /fmc_config/v1/domain/DomainUUID/object/urls?bulk=true ( Bulk POST operation on Url objects with overrides )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/urls?bulk=true"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/urls/url_obj_uuid"
                    },
                    "type" : "Url",
                    "url" : "www.cisco.com",
                    "overrides" : {
                      "parent" : {
                        "id" : "url_obj_uuid",
                        "type" : "Url"
                      },
                      "target" : {
                        "name" : "Global \\ EUROPE",
                        "id" : "domain_uuid",
                        "type" : "Domain"
                      }
                    },
                    "overridable" : true,
                    "name" : "url_obj",
                    "id" : "url_obj_uuid",
                    "metadata" : {
                      "timestamp" : 0,
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global \\ EUROPE",
                        "id" : "domain_uuid"
                      }
                    }
                  }, {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/urls/url_obj_uuid"
                    },
                    "type" : "Url",
                    "url" : "www.facebook.com",
                    "overrides" : {
                      "parent" : {
                        "id" : "url_obj_uuid",
                        "type" : "Url"
                      },
                      "target" : {
                        "name" : "FTDv_R1",
                        "id" : "device_uuid",
                        "type" : "Device"
                      }
                    },
                    "overridable" : true,
                    "name" : "url_obj",
                    "id" : "url_obj_uuid",
                    "metadata" : {
                      "timestamp" : 0,
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global \\ ASIA",
                        "id" : "domain_uuid"
                      }
                    }
                  } ]
                },
                "Response Example 3 :POST /fmc_config/v1/domain/DomainUUID/object/urls ( POST request to create an override on url object )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/urls/url1_uuid?overrideTargetId=target_uuid"
                  },
                  "type" : "Url",
                  "url" : "www.cisco.com",
                  "overrides" : {
                    "parent" : {
                      "id" : "url1_uuid",
                      "type" : "Url"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "target_uuid",
                      "type" : "Device"
                    }
                  },
                  "overridable" : true,
                  "id" : "url1_uuid",
                  "name" : "url1",
                  "metadata" : {
                    "timestamp" : 0,
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUuid"
                    }
                  }
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/URLObject"
            },
            "examples" : { }
          },
          "422" : {
            "description" : "Unprocessable Entity",
            "schema" : {
              "$ref" : "#/definitions/URLObject"
            },
            "examples" : {
              "application/json" : {
                "Request example 7 : POST /fmc_config/v1/domain/DomainUUID/object/urls ( Failure: Passing metadata as a parameter. )" : {
                  "overridable" : false,
                  "url" : "wwwin.cisco.com",
                  "name" : "urlobj6",
                  "description" : "testing with metadata",
                  "type" : "Url",
                  "metadata" : {
                    "readOnly" : false
                  }
                },
                "Response Example 7 :POST /fmc_config/v1/domain/DomainUUID/object/urls ( Failure: Passing metadata as a parameter. )" : {
                  "error" : {
                    "category" : "OTHER",
                    "messages" : [ {
                      "description" : "Unprocessable Entity"
                    } ],
                    "severity" : "ERROR"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/urls/{containerUUID}/overrides" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves all(Domain and Device) overrides on a URL object.Response will always be in expanded form. If passed, the \"expanded\" query parameter will be ignored.**",
        "operationId" : "getAllUrlOverride",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/UrlOverrideListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/domainUUID/object/urls/urlUUID/overrides ( Get all overrides on given URL objects )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/object/urls/urlUUID/overrides?offset=0&limit=1"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/object/urls/urlUUID?overrideTargetId=targetUUID"
                    },
                    "type" : "Url",
                    "url" : "abcDevice.com",
                    "overrides" : {
                      "parent" : {
                        "id" : "urlUUID",
                        "type" : "Url"
                      },
                      "target" : {
                        "name" : "10.10.19.27",
                        "id" : "targetUUID",
                        "type" : "Device"
                      }
                    },
                    "overridable" : true,
                    "description" : " ",
                    "name" : "url_2",
                    "id" : "urlUUID",
                    "metadata" : {
                      "timestamp" : 1520419867090,
                      "lastUser" : {
                        "name" : "user1"
                      },
                      "domain" : {
                        "name" : "Global \\ INDIA \\ BENGALURU",
                        "id" : "domainUUID"
                      }
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/urls/{containerUUID}/overrides/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves all(Domain and Device) overrides on a URL object.Response will always be in expanded form. If passed, the \"expanded\" query parameter will be ignored.**",
        "operationId" : "getUrlOverride",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Input NOT Expected here",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/UrlOverride"
            },
            "examples" : { }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/urls/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the url objects associated with the specified ID. If no ID is specified, retrieves list of all url objects.**",
        "operationId" : "getURLObject",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the object.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "overrideTargetId",
          "in" : "query",
          "description" : "Retrieves the override(s) associated with the url object on given target ID.",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/URLObject"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/GlobalDomainUUID/object/urls/urlObjectUUID?expanded=true&overrideTargetId=childDomainUUID ( Success: Test GET method from global domain on a specific UrlObject which has override assigned as child domain )" : {
                  "metadata" : {
                    "lastUser" : {
                      "name" : "pvs"
                    },
                    "domain" : {
                      "name" : "Global \\ Asia",
                      "id" : "subdomain_id"
                    }
                  },
                  "links" : {
                    "self" : "https://fmc_host_ip/api/fmc_config/v1/domain/global/object/urls/urlObjectUUID"
                  },
                  "type" : "Url",
                  "url" : "www.cisco.com",
                  "overridable" : true,
                  "overrides" : {
                    "parent" : {
                      "id" : "urlObjectUUID",
                      "type" : "Url"
                    },
                    "target" : {
                      "name" : "Global \\ Asia",
                      "id" : "subdomain_id",
                      "type" : "Domain"
                    }
                  },
                  "description" : " ",
                  "name" : "pvs_global_url",
                  "id" : "urlObjectUUID"
                },
                "Response Example 2 :GET /fmc_config/v1/domain/childDomainUUID/object/urls/urlObjectUUID?expanded=true&overrideTargetId=childDomainUUID ( Success: Test GET method from child domain on a UrlObject which has child domain assigned as override )" : {
                  "metadata" : {
                    "lastUser" : {
                      "name" : "pvs"
                    },
                    "domain" : {
                      "name" : "Global \\ Asia",
                      "id" : "subdomain_id"
                    }
                  },
                  "links" : {
                    "self" : "https://fmc_host_ip/api/fmc_config/v1/domain/subdomain_id/object/urls/urlObjectUUID"
                  },
                  "type" : "Url",
                  "url" : "www.cisco.com",
                  "overridable" : true,
                  "overrides" : {
                    "parent" : {
                      "id" : "urlObjectUUID",
                      "type" : "Url"
                    },
                    "target" : {
                      "name" : "Global \\ Asia",
                      "id" : "subdomain_id",
                      "type" : "Domain"
                    }
                  },
                  "description" : " ",
                  "name" : "pvs_global_url",
                  "id" : "urlObjectUUID"
                },
                "Response Example 3 :GET /fmc_config/v1/domain/childDomainUUID/object/urls/urlObjectUUID?expanded=true&overrideTargetId=deviceUUID ( Success: Test GET method from child domain on a UrlObject which has device assigned as override )" : {
                  "metadata" : {
                    "lastUser" : {
                      "name" : "api"
                    },
                    "domain" : {
                      "name" : "Global \\ Asia",
                      "id" : "subdomain_id"
                    }
                  },
                  "links" : {
                    "self" : "https://fmc_host_ip/api/fmc_config/v1/domain/global/object/urls/urlObjectUUID"
                  },
                  "type" : "Url",
                  "url" : "g-device-url1.com",
                  "overrides" : {
                    "parent" : {
                      "id" : "urlObjectUUID",
                      "type" : "Url"
                    },
                    "target" : {
                      "name" : "device_name",
                      "id" : "deviceUUID",
                      "type" : "Device"
                    }
                  },
                  "overridable" : true,
                  "description" : " ",
                  "name" : "G-Url1",
                  "id" : "urlObjectUUID"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the url objects associated with the specified ID. If no ID is specified, retrieves list of all url objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateURLObject",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the object.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The input url object model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/URLObject"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/URLObject"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/DomainUUID/object/urls/url1_uuid ( PUT request to update an override on url object )" : {
                  "type" : "Url",
                  "url" : "www.cisco.com",
                  "overridable" : true,
                  "overrides" : {
                    "parent" : {
                      "id" : "url1_uuid",
                      "type" : "Url"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "target_uuid",
                      "type" : "Device"
                    }
                  },
                  "description" : " ",
                  "id" : "url1_uuid",
                  "name" : "url1"
                },
                "Response Example 1 :PUT /fmc_config/v1/domain/DomainUUID/object/urls/url1_uuid ( PUT request to update an override on url object )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/urls/url1_uuid?overrideTargetId=target_uuid"
                  },
                  "type" : "Url",
                  "url" : "www.cisco.com",
                  "overrides" : {
                    "parent" : {
                      "id" : "url1_uuid",
                      "type" : "Url"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "target_uuid",
                      "type" : "Device"
                    }
                  },
                  "overridable" : true,
                  "id" : "url1_uuid",
                  "name" : "url1",
                  "metadata" : {
                    "timestamp" : 0,
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUuid"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/URLObject"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the url objects associated with the specified ID. If no ID is specified, retrieves list of all url objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteURLObject",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the object.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/URLObject"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /fmc_config/v1/domain/DomainUUID/object/urls/urlObjectUUID ( Test DELETE of Url Object )" : {
                  "metadata" : {
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "global_domain_id"
                    }
                  },
                  "links" : {
                    "self" : "https://fmc_host_ip/api/fmc_config/v1/domain/global/object/urls/urlObjectUUID"
                  },
                  "type" : "Url",
                  "url" : "www.cisco.com",
                  "overridable" : false,
                  "description" : " ",
                  "name" : "url_obj1",
                  "id" : "urlObjectUUID"
                },
                "Response Example 2 :DELETE /fmc_config/v1/domain/DomainUUID/object/urls/url1_uuid?overrideTargetId=target_uuid ( DELETE request to remove an override on url object )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/urls/url1_uuid?overrideTargetId=target_uuid"
                  },
                  "type" : "Url",
                  "url" : "www.cisco.com",
                  "overrides" : {
                    "parent" : {
                      "id" : "url1_uuid",
                      "type" : "Url"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "target_uuid",
                      "type" : "Device"
                    }
                  },
                  "overridable" : true,
                  "description" : " ",
                  "id" : "url1_uuid",
                  "name" : "url1",
                  "metadata" : {
                    "timestamp" : 1527359452310,
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUuid"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/variablesets" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the variable set object associated with the specified ID. If no ID is specified, retrieves list of all variable set objects.**",
        "operationId" : "getAllVariableSet",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/VariableSetListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/domainUUID/object/variablesets ( Success: Test GET ALL success of a variable set )" : {
                  "links" : {
                    "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/variablesets?offset=0&limit=2"
                  },
                  "items" : [ {
                    "name" : "Default-Set-TestDomain",
                    "id" : "Variable-Set-UUID-1",
                    "type" : "variableset",
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/variablesets/Variable-Set-UUID-1"
                    }
                  }, {
                    "name" : "Default-Set",
                    "id" : "Variable-Set-UUID-2",
                    "type" : "variableset",
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/variablesets/Variable-Set-UUID-2"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/domainUUID/object/variablesets?expanded=true ( Success: Test GET ALL success with expanded=true )" : {
                  "links" : {
                    "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/variablesets?offset=0&limit=2"
                  },
                  "items" : [ {
                    "name" : "Default-Set-TestDomain",
                    "id" : "Variable-Set-UUID-1",
                    "type" : "variableset",
                    "description" : "This Variable Set is system-provided.",
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/variablesets/Variable-Set-UUID-1"
                    },
                    "metadata" : {
                      "readOnly" : {
                        "state" : true
                      },
                      "timestamp" : 1460056664,
                      "lastUser" : {
                        "name" : "admin",
                        "id" : "User-UUID",
                        "type" : "user"
                      },
                      "domain" : {
                        "name" : "TestDomain",
                        "id" : "domainUUID",
                        "type" : "domain"
                      }
                    }
                  }, {
                    "name" : "Default-Set",
                    "id" : "Variable-Set-UUID-2",
                    "type" : "variableset",
                    "description" : "This Variable Set is system-provided.",
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/variablesets/Variable-Set-UUID-2"
                    },
                    "metadata" : {
                      "readOnly" : {
                        "state" : false
                      },
                      "timestamp" : 1460057664,
                      "lastUser" : {
                        "name" : "admin",
                        "id" : "User-UUID",
                        "type" : "user"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "Global-domain-UUID",
                        "type" : "domain"
                      }
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/variablesets/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves the variable set object associated with the specified ID. If no ID is specified, retrieves list of all variable set objects.**",
        "operationId" : "getVariableSet",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the variable set object.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/VariableSet"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/domainUUID/object/variablesets/Variable-Set-UUID-1 ( Success: Test GET success of a variable set )" : {
                  "name" : "Default-Set-TestDomain",
                  "id" : "Variable-Set-UUID-1",
                  "type" : "variableset",
                  "description" : "This Variable Set is system-provided.",
                  "links" : {
                    "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/object/variablesets/Variable-Set-UUID-1"
                  },
                  "metadata" : {
                    "readOnly" : {
                      "state" : true
                    },
                    "timestamp" : 1460056664,
                    "lastUser" : {
                      "name" : "admin",
                      "id" : "User-UUID",
                      "type" : "user"
                    },
                    "domain" : {
                      "name" : "TestDomain",
                      "id" : "domainUUID",
                      "type" : "domain"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/vlangrouptags" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the vlan group tag objects associated with the specified ID. If no ID is specified for a GET, retrieves list of all vlan group tag objects.**",
        "operationId" : "getAllVlanTagGroup",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "To be used in conjunction with <code>\"unusedOnly:true\"</code> to search for unused objects and <code>\"nameOrValue:{nameOrValue}\"</code> to search for both name and value.",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/VlanTagGroupListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/DomainUUID/object/vlangrouptags ( Get all paginated vlangroup objects without offset and limit )" : {
                  "links" : {
                    "self" : "https://fmc_host_ip/api/fmc_config/v1/domain/global/object/vlangrouptags?offset=0&limit=3"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "https://fmc_host_ip/api/fmc_config/v1/domain/global/object/vlangrouptags/vlanGroupObjUUID1"
                    },
                    "name" : "vlan_group1",
                    "id" : "vlanGroupObjUUID1",
                    "type" : "VlanTag"
                  }, {
                    "links" : {
                      "self" : "https://fmc_host_ip/api/fmc_config/v1/domain/global/object/vlangrouptags/vlanGroupObjUUID2"
                    },
                    "name" : "vlan_group23",
                    "id" : "vlanGroupObjUUID2",
                    "type" : "VlanTag"
                  }, {
                    "links" : {
                      "self" : "https://fmc_host_ip/api/fmc_config/v1/domain/global/object/vlangrouptags/vlanGroupObjUUID3"
                    },
                    "name" : "vlan_group24",
                    "id" : "vlanGroupObjUUID3",
                    "type" : "VlanTag"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 3,
                    "count" : 3,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/DomainUUID/object/vlangrouptags?overrideTargetId=target_uuid ( Get all objects with given override target )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domain_uuid/object/vlangrouptags?offset=0&limit=1&overrideTargetId=target_uuid&expanded=true"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domain_uuid/object/vlangrouptags/vlangrp1_uuid?overrideTargetId=target_uuid"
                    },
                    "objects" : [ {
                      "type" : "VlanTag",
                      "data" : {
                        "startTag" : 10,
                        "endTag" : 20,
                        "type" : "VlanTagLiteral"
                      },
                      "overridable" : false,
                      "id" : "vlan1_uuid",
                      "name" : "vlan1"
                    } ],
                    "literals" : [ {
                      "startTag" : 100,
                      "endTag" : 200,
                      "type" : "VlanTagLiteral"
                    } ],
                    "type" : "VlanGroupTag",
                    "overrides" : {
                      "parent" : {
                        "id" : "vlangrp1_uuid",
                        "type" : "VlanGroupTag"
                      },
                      "target" : {
                        "name" : "10.10.16.29",
                        "id" : "target_uuid",
                        "type" : "Device"
                      }
                    },
                    "overridable" : true,
                    "description" : " ",
                    "id" : "vlangrp1_uuid",
                    "name" : "vlangrp1",
                    "metadata" : {
                      "timestamp" : 1528267362103,
                      "lastUser" : {
                        "name" : "admin"
                      },
                      "domain" : {
                        "name" : "Global \\ ASIA \\ INDIA",
                        "id" : "domainUuid"
                      }
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the vlan group tag objects associated with the specified ID. If no ID is specified for a GET, retrieves list of all vlan group tag objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createMultipleVlanTagGroup",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The input vlan group tag object model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VlanTagGroup"
          }
        }, {
          "name" : "bulk",
          "in" : "query",
          "description" : "Enables bulk create for vlan group tags.",
          "required" : false,
          "type" : "boolean"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/VlanTagGroup"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /fmc_config/v1/domain/DomainUUID/object/vlangrouptags ( Example POST data for VlanGroupTag )" : {
                  "name" : "vlangroup_obj_1",
                  "objects" : [ {
                    "data" : {
                      "startTag" : "valid_tag",
                      "endTag" : "valid_tag",
                      "type" : "VlanTagLiteral"
                    },
                    "type" : "VlanTag",
                    "name" : "Tag1",
                    "id" : "vlantagObjectUUID"
                  } ],
                  "literals" : [ {
                    "type" : "VlanTagLiteral",
                    "startTag" : "valid_tag",
                    "endTag" : "valid_tag"
                  } ],
                  "type" : "VlanGroupTag",
                  "description" : "description_about_group",
                  "overridable" : "true/false"
                },
                "Request example 2 : POST /fmc_config/v1/domain/DomainUUID/object/vlangrouptags?bulk=true ( Bulk POST operation on vlan group tags )" : [ {
                  "name" : "vlangroup_obj_1",
                  "objects" : [ {
                    "type" : "VlanTag",
                    "id" : "vlan_obj1Uuid"
                  } ],
                  "literals" : [ {
                    "type" : "VlanTagLiteral",
                    "startTag" : 123,
                    "endTag" : 345
                  } ],
                  "type" : "VlanGroupTag",
                  "description" : "description_about_group"
                }, {
                  "name" : "vlangroup_obj_2",
                  "objects" : [ {
                    "type" : "VlanTag",
                    "id" : "vlan_obj1Uuid"
                  } ],
                  "literals" : [ {
                    "type" : "VlanTagLiteral",
                    "startTag" : 456,
                    "endTag" : 789
                  } ],
                  "type" : "VlanGroupTag",
                  "description" : "some description"
                } ],
                "Request example 3 : POST /fmc_config/v1/domain/DomainUUID/object/vlangrouptags?bulk=true ( Bulk POST operation on vlan group tags with overrides )" : [ {
                  "type" : "VlanGroupTag",
                  "objects" : [ {
                    "type" : "VlanTag",
                    "data" : {
                      "startTag" : 12,
                      "endTag" : 13,
                      "type" : "VlanTagLiteral"
                    },
                    "overridable" : false,
                    "name" : "vlantag_obj",
                    "id" : "vlantag_obj_uuid"
                  } ],
                  "overridable" : true,
                  "description" : " ",
                  "overrides" : {
                    "parent" : {
                      "id" : "vlan_grp_uuid",
                      "type" : "VlanGroupTag"
                    },
                    "target" : {
                      "name" : "Global \\ EUROPE",
                      "id" : "domain_uuid",
                      "type" : "Domain"
                    }
                  },
                  "name" : "vlan_grp",
                  "id" : "vlan_grp_uuid"
                }, {
                  "type" : "VlanGroupTag",
                  "literals" : [ {
                    "startTag" : 59,
                    "endTag" : 80,
                    "type" : "VlanTagLiteral"
                  } ],
                  "overridable" : true,
                  "description" : " ",
                  "overrides" : {
                    "parent" : {
                      "id" : "vlan_grp_uuid",
                      "type" : "VlanGroupTag"
                    },
                    "target" : {
                      "name" : "FTDv_R1",
                      "id" : "device_uuid",
                      "type" : "Device"
                    }
                  },
                  "name" : "vlan_grp",
                  "id" : "vlan_grp_uuid"
                } ],
                "Request example 4 : POST /fmc_config/v1/domain/DomainUUID/object/vlangrouptags ( POST request to create an override on vlan group tag )" : {
                  "objects" : [ {
                    "data" : {
                      "startTag" : 10,
                      "endTag" : 20,
                      "type" : "VlanTagLiteral"
                    },
                    "type" : "VlanTag",
                    "overridable" : false,
                    "id" : "vlan1_uuid",
                    "name" : "vlan1"
                  } ],
                  "literals" : [ {
                    "startTag" : 100,
                    "endTag" : 200,
                    "type" : "VlanTagLiteral"
                  } ],
                  "type" : "VlanGroupTag",
                  "overridable" : true,
                  "overrides" : {
                    "parent" : {
                      "id" : "vlangrp1_uuid",
                      "type" : "VlanGroupTag"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "target_uuid",
                      "type" : "Device"
                    }
                  },
                  "description" : " ",
                  "id" : "vlangrp1_uuid",
                  "name" : "vlangrp1"
                },
                "Request example 5 : POST /fmc_config/v1/domain/DomainUUID/object/vlangrouptags ( Test POST of Vlan group tag to create a new record )" : {
                  "type" : "VlanGroupTag",
                  "objects" : [ {
                    "type" : "VlanTag",
                    "name" : "VlanTag_1",
                    "id" : "vlantagUUID"
                  }, {
                    "type" : "VlanTag",
                    "name" : "VlanTag_2",
                    "id" : "vlantagUUID"
                  } ],
                  "literals" : [ {
                    "startTag" : 111,
                    "endTag" : 222
                  }, {
                    "startTag" : 222,
                    "endTag" : 333
                  } ],
                  "name" : "VlanGroupTag_1",
                  "description" : "first VlanGroupTag"
                },
                "Response Example 2 :POST /fmc_config/v1/domain/DomainUUID/object/vlangrouptags?bulk=true ( Bulk POST operation on vlan group tags )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/vlangrouptags?bulk=true"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/vlangrouptags/vlangroup_obj_1Uuid"
                    },
                    "type" : "VlanGroupTag",
                    "objects" : [ {
                      "type" : "VlanTag",
                      "name" : "vlanobj1",
                      "id" : "vlan_obj1Uuid"
                    } ],
                    "literals" : [ {
                      "startTag" : 123,
                      "endTag" : 345,
                      "type" : "VlanTagLiteral"
                    } ],
                    "overridable" : false,
                    "description" : "description_about_group",
                    "name" : "vlangroup_obj_1",
                    "id" : "vlangroup_obj_1Uuid",
                    "metadata" : {
                      "timestamp" : 0,
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUuid"
                      }
                    }
                  }, {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/vlangrouptags/vlangroup_obj_2Uuid"
                    },
                    "type" : "VlanGroupTag",
                    "objects" : [ {
                      "type" : "VlanTag",
                      "name" : "vlanobj1",
                      "id" : "vlan_obj1Uuid"
                    } ],
                    "literals" : [ {
                      "startTag" : 456,
                      "endTag" : 789,
                      "type" : "VlanTagLiteral"
                    } ],
                    "overridable" : false,
                    "description" : "some description",
                    "name" : "vlangroup_obj_2",
                    "id" : "vlangroup_obj_2Uuid",
                    "metadata" : {
                      "timestamp" : 0,
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUuid"
                      }
                    }
                  } ]
                },
                "Response Example 3 :POST /fmc_config/v1/domain/DomainUUID/object/vlangrouptags?bulk=true ( Bulk POST operation on vlan group tags with overrides )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/vlangrouptags?bulk=true"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/vlangrouptags/vlan_grp_uuid"
                    },
                    "type" : "VlanGroupTag",
                    "objects" : [ {
                      "type" : "VlanTag",
                      "data" : {
                        "startTag" : 12,
                        "endTag" : 13,
                        "type" : "VlanTagLiteral"
                      },
                      "overridable" : false,
                      "name" : "vlantag_obj",
                      "id" : "vlantag_obj_uuid"
                    } ],
                    "overrides" : {
                      "parent" : {
                        "id" : "vlan_grp_uuid",
                        "type" : "VlanGroupTag"
                      },
                      "target" : {
                        "name" : "Global \\ EUROPE",
                        "id" : "domain_uuid",
                        "type" : "Domain"
                      }
                    },
                    "overridable" : true,
                    "name" : "vlan_grp",
                    "id" : "vlan_grp_uuid",
                    "metadata" : {
                      "timestamp" : 0,
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global \\ EUROPE",
                        "id" : "domain_uuid"
                      }
                    }
                  }, {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/vlangrouptags/vlan_grp_uuid"
                    },
                    "type" : "VlanGroupTag",
                    "literals" : [ {
                      "startTag" : 59,
                      "endTag" : 80,
                      "type" : "VlanTagLiteral"
                    } ],
                    "objects" : [ {
                      "type" : "VlanTag",
                      "data" : {
                        "startTag" : 12,
                        "endTag" : 13,
                        "type" : "VlanTagLiteral"
                      },
                      "overridable" : false,
                      "name" : "vlantag_obj",
                      "id" : "vlantag_obj_uuid"
                    } ],
                    "overrides" : {
                      "parent" : {
                        "id" : "vlan_grp_uuid",
                        "type" : "VlanGroupTag"
                      },
                      "target" : {
                        "name" : "FTDv_R1",
                        "id" : "device_uuid",
                        "type" : "Device"
                      }
                    },
                    "overridable" : true,
                    "name" : "vlan_grp",
                    "id" : "vlan_grp_uuid",
                    "metadata" : {
                      "timestamp" : 0,
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global \\ ASIA",
                        "id" : "domain_uuid"
                      }
                    }
                  } ]
                },
                "Response Example 4 :POST /fmc_config/v1/domain/DomainUUID/object/vlangrouptags ( POST request to create an override on vlan group tag )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/vlangrouptags/vlangrp1_uuid?overrideTargetId=target_uuid"
                  },
                  "objects" : [ {
                    "data" : {
                      "startTag" : 10,
                      "endTag" : 20,
                      "type" : "VlanTagLiteral"
                    },
                    "type" : "VlanTag",
                    "overridable" : false,
                    "id" : "vlan1_uuid",
                    "name" : "vlan1"
                  } ],
                  "literals" : [ {
                    "startTag" : 100,
                    "endTag" : 200,
                    "type" : "VlanTagLiteral"
                  } ],
                  "type" : "VlanGroupTag",
                  "overrides" : {
                    "parent" : {
                      "id" : "vlangrp1_uuid",
                      "type" : "VlanGroupTag"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "target_uuid",
                      "type" : "Device"
                    }
                  },
                  "overridable" : true,
                  "id" : "vlangrp1_uuid",
                  "name" : "vlangrp1",
                  "metadata" : {
                    "timestamp" : 0,
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUuid"
                    }
                  }
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/VlanTagGroup"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/vlangrouptags/{containerUUID}/overrides" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves all(Domain and Device) overrides on a VlanGroupTag Object.Response will always be in expanded form. If passed, the \"expanded\" query parameter will be ignored.**",
        "operationId" : "getAllVlanTagGroupOverride",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/VlanTagGroupOverrideListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/domainUUID/object/vlangrouptags/valnGroupTagUUID/overrides ( Get all overrides(device and deomain) on Given VlanGroup tags )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/object/vlangrouptags/valnGroupTagUUID/overrides?offset=0&limit=1"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/object/vlangrouptags/valnGroupTagUUID?overrideTargetId=targetUUID"
                    },
                    "type" : "VlanGroupTag",
                    "objects" : [ {
                      "type" : "VlanTag",
                      "data" : {
                        "startTag" : 20,
                        "endTag" : 20,
                        "type" : "VlanTagLiteral"
                      },
                      "overridable" : false,
                      "name" : "Vlan_2",
                      "id" : "vlanObjectUUID"
                    } ],
                    "overrides" : {
                      "parent" : {
                        "id" : "valnGroupTagUUID1",
                        "type" : "VlanGroupTag"
                      },
                      "target" : {
                        "name" : "10.10.19.27",
                        "id" : "targetUUID",
                        "type" : "Device"
                      }
                    },
                    "overridable" : true,
                    "description" : " ",
                    "name" : "vlan_grp",
                    "id" : "valnGroupTagUUID1",
                    "metadata" : {
                      "timestamp" : 1520420232013,
                      "lastUser" : {
                        "name" : "user1"
                      },
                      "domain" : {
                        "name" : "Global \\ INDIA \\ BENGALURU",
                        "id" : "domainUUID"
                      }
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/vlangrouptags/{containerUUID}/overrides/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves all(Domain and Device) overrides on a VlanGroupTag Object.Response will always be in expanded form. If passed, the \"expanded\" query parameter will be ignored.**",
        "operationId" : "getVlanTagGroupOverride",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Input NOT Expected here",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/VlanTagGroupOverride"
            },
            "examples" : { }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/vlangrouptags/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the vlan group tag objects associated with the specified ID. If no ID is specified for a GET, retrieves list of all vlan group tag objects.**",
        "operationId" : "getVlanTagGroup",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the object.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "overrideTargetId",
          "in" : "query",
          "description" : "Retrieves the override(s) associated with the vlan group tag object on given target ID.",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/VlanTagGroup"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/object/vlangrouptags/vlanGroupObj1UUID ( Test GET of VlanGroupTag Object for a uuid )" : {
                  "id" : "vlanGroupObj1UUID",
                  "name" : "vlangroup_obj1",
                  "type" : "VlanGroupTag",
                  "description" : "description_about_group",
                  "objects" : [ {
                    "type" : "VlanTag",
                    "id" : "vlanObjectUUID"
                  } ],
                  "literals" : [ {
                    "type" : "Vlan",
                    "startTag" : "valid_tag",
                    "endTag" : "valid_tag"
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the vlan group tag objects associated with the specified ID. If no ID is specified for a GET, retrieves list of all vlan group tag objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateVlanTagGroup",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the object.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The input vlan group tag object model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VlanTagGroup"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/VlanTagGroup"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/DomainUUID/object/vlangrouptags/vlanGroupObj1UUID ( Test PUT of VlanGroupTag object to update record )" : {
                  "id" : "vlanGroupObj1UUID",
                  "name" : "vlangroup_obj1_updated",
                  "type" : "VlanGroupTag",
                  "objects" : [ {
                    "type" : "VlanTag",
                    "id" : "vlanObjectUUID"
                  } ],
                  "literals" : [ {
                    "type" : "Vlan",
                    "startTag" : "valid_tag",
                    "endTag" : "valid_tag"
                  } ]
                },
                "Request example 2 : PUT /fmc_config/v1/domain/DomainUUID/object/vlangrouptags/vlangrp1_uuid ( PUT request to update an override on vlan group tag )" : {
                  "objects" : [ {
                    "data" : {
                      "startTag" : 10,
                      "endTag" : 20,
                      "type" : "VlanTagLiteral"
                    },
                    "type" : "VlanTag",
                    "overridable" : false,
                    "id" : "vlan1_uuid",
                    "name" : "vlan1"
                  } ],
                  "literals" : [ {
                    "startTag" : 100,
                    "endTag" : 200,
                    "type" : "VlanTagLiteral"
                  } ],
                  "type" : "VlanGroupTag",
                  "overridable" : true,
                  "overrides" : {
                    "parent" : {
                      "id" : "vlangrp1_uuid",
                      "type" : "VlanGroupTag"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "target_uuid",
                      "type" : "Device"
                    }
                  },
                  "description" : " ",
                  "id" : "vlangrp1_uuid",
                  "name" : "vlangrp1"
                },
                "Response Example 2 :PUT /fmc_config/v1/domain/DomainUUID/object/vlangrouptags/vlangrp1_uuid ( PUT request to update an override on vlan group tag )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/vlangrouptags/vlangrp1_uuid?overrideTargetId=target_uuid"
                  },
                  "objects" : [ {
                    "data" : {
                      "startTag" : 10,
                      "endTag" : 20,
                      "type" : "VlanTagLiteral"
                    },
                    "type" : "VlanTag",
                    "overridable" : false,
                    "id" : "vlan1_uuid",
                    "name" : "vlan1"
                  } ],
                  "literals" : [ {
                    "startTag" : 100,
                    "endTag" : 200,
                    "type" : "VlanTagLiteral"
                  } ],
                  "type" : "VlanGroupTag",
                  "overrides" : {
                    "parent" : {
                      "id" : "vlangrp1_uuid",
                      "type" : "VlanGroupTag"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "target_uuid",
                      "type" : "Device"
                    }
                  },
                  "overridable" : true,
                  "id" : "vlangrp1_uuid",
                  "name" : "vlangrp1",
                  "metadata" : {
                    "timestamp" : 0,
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUuid"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/VlanTagGroup"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the vlan group tag objects associated with the specified ID. If no ID is specified for a GET, retrieves list of all vlan group tag objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteVlanTagGroup",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the object.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/VlanTagGroup"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /fmc_config/v1/domain/DomainUUID/object/vlangrouptags/vlanGroupObjectUUID ( Test DELETE of VlanGroup Object )" : {
                  "id" : "vlanGroupObjectUUID",
                  "name" : "vlangroup_obj",
                  "type" : "VlanGroupTag",
                  "objects" : [ {
                    "type" : "VlanTag",
                    "id" : "vlanObjectUUID"
                  } ],
                  "literals" : [ {
                    "type" : "Vlan",
                    "startTag" : "valid_tag",
                    "endTag" : "valid_tag"
                  } ]
                },
                "Response Example 2 :DELETE /fmc_config/v1/domain/DomainUUID/object/vlangrouptags/vlangrp1_uuid?overrideTargetId=target_uuid ( DELETE request to remove an override on vlan group )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/vlangrouptags/vlangrp1_uuid?overrideTargetId=target_uuid"
                  },
                  "objects" : [ {
                    "data" : {
                      "startTag" : 10,
                      "endTag" : 20,
                      "type" : "VlanTagLiteral"
                    },
                    "type" : "VlanTag",
                    "overridable" : false,
                    "id" : "vlan1_uuid",
                    "name" : "vlan1"
                  } ],
                  "literals" : [ {
                    "startTag" : 100,
                    "endTag" : 200,
                    "type" : "VlanTagLiteral"
                  } ],
                  "type" : "VlanGroupTag",
                  "overrides" : {
                    "parent" : {
                      "id" : "vlangrp1_uuid",
                      "type" : "VlanGroupTag"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "target_uuid",
                      "type" : "Device"
                    }
                  },
                  "overridable" : true,
                  "description" : " ",
                  "id" : "vlangrp1_uuid",
                  "name" : "vlangrp1",
                  "metadata" : {
                    "timestamp" : 1527362407546,
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUuid"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/vlantags" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the vlantag objects associated with the specified ID. If no ID is specified for a GET, retrieves list of all vlantag objects.**",
        "operationId" : "getAllVlanTag",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "To be used in conjunction with <code>\"unusedOnly:true\"</code> to search for unused objects and <code>\"nameOrValue:{nameOrValue}\"</code> to search for both name and value.",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/VlanTagListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/GlobalDomainUUID/object/vlantags?expanded=true&overrideTargetId=childDomainUUID ( Success: Test GET ALL method from global domain for VlanTagObject when overrides are assigned to child domain )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/global/object/vlantags?offset=0&limit=1"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/global/object/vlantags/vlanObjectUUID"
                    },
                    "data" : {
                      "startTag" : 13,
                      "endTag" : 13,
                      "type" : "VlanTagLiteral"
                    },
                    "type" : "VlanTag",
                    "overrides" : {
                      "parent" : {
                        "id" : "vlanObjectUUID",
                        "type" : "VlanTag"
                      },
                      "target" : {
                        "name" : "Global \\ Asia",
                        "id" : "subDomainUUID",
                        "type" : "Domain"
                      }
                    },
                    "overridable" : true,
                    "description" : " ",
                    "name" : "pvs_vlan",
                    "id" : "vlanObjectUUID",
                    "metadata" : {
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global \\ Asia",
                        "id" : "subDomainUUID"
                      }
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/childDomainUUID/object/vlantags?expanded=true&overrideTargetId=childDomainUUID ( Success: Test GET ALL method from child domain for VlanTagObject when overrides are assigned to child domain )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/subDomainUUID/object/vlantags?offset=0&limit=1"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/subDomainUUID/object/vlantags/vlanObjectUUID"
                    },
                    "data" : {
                      "startTag" : 13,
                      "endTag" : 13,
                      "type" : "VlanTagLiteral"
                    },
                    "type" : "VlanTag",
                    "overrides" : {
                      "parent" : {
                        "id" : "vlanObjectUUID",
                        "type" : "VlanTag"
                      },
                      "target" : {
                        "name" : "Global \\ Asia",
                        "id" : "subDomainUUID",
                        "type" : "Domain"
                      }
                    },
                    "overridable" : true,
                    "description" : " ",
                    "name" : "pvs_vlan",
                    "id" : "vlanObjectUUID",
                    "metadata" : {
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global \\ Asia",
                        "id" : "subDomainUUID"
                      }
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the vlantag objects associated with the specified ID. If no ID is specified for a GET, retrieves list of all vlantag objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createMultipleVlanTag",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The input vlantag object model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VlanTag"
          }
        }, {
          "name" : "bulk",
          "in" : "query",
          "description" : "Enables bulk create for vlan tag objects.",
          "required" : false,
          "type" : "boolean"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/VlanTag"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /fmc_config/v1/domain/DomainUUID/object/vlantags?bulk=true ( Bulk POST operation on vlan tag objects. )" : [ {
                  "type" : "VlanTag",
                  "name" : "vlanobj1",
                  "description" : "New VlanTag test",
                  "data" : {
                    "startTag" : 12,
                    "endTag" : 15
                  }
                }, {
                  "type" : "VlanTag",
                  "name" : "vlanobj2",
                  "description" : "New VlanTag test",
                  "data" : {
                    "startTag" : 112,
                    "endTag" : 151
                  }
                } ],
                "Request example 2 : POST /fmc_config/v1/domain/DomainUUID/object/vlantags?bulk=true ( Bulk POST operation on vlan tag objects with overrides )" : [ {
                  "type" : "VlanTag",
                  "data" : {
                    "startTag" : 25,
                    "endTag" : 30,
                    "type" : "VlanTagLiteral"
                  },
                  "overrides" : {
                    "parent" : {
                      "id" : "vlantag_obj_uuid",
                      "type" : "VlanTag"
                    },
                    "target" : {
                      "name" : "Global \\ EUROPE",
                      "id" : "domain_uuid",
                      "type" : "Domain"
                    }
                  },
                  "overridable" : true,
                  "description" : " ",
                  "name" : "vlantag_obj",
                  "id" : "vlantag_obj_uuid"
                }, {
                  "type" : "VlanTag",
                  "data" : {
                    "startTag" : 55,
                    "endTag" : 3000,
                    "type" : "VlanTagLiteral"
                  },
                  "overrides" : {
                    "parent" : {
                      "id" : "vlantag_obj_uuid",
                      "type" : "VlanTag"
                    },
                    "target" : {
                      "name" : "FTDv_R1",
                      "id" : "device_uuid",
                      "type" : "Device"
                    }
                  },
                  "overridable" : true,
                  "description" : " ",
                  "name" : "vlantag_obj",
                  "id" : "vlantag_obj_uuid"
                } ],
                "Request example 3 : POST /fmc_config/v1/domain/DomainUUID/object/vlantags ( POST request to create an override on vlan tag object )" : {
                  "data" : {
                    "startTag" : 10,
                    "endTag" : 20,
                    "type" : "VlanTagLiteral"
                  },
                  "type" : "VlanTag",
                  "overridable" : true,
                  "overrides" : {
                    "parent" : {
                      "id" : "vlan1_uuid",
                      "type" : "VlanTag"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "target_uuid",
                      "type" : "Device"
                    }
                  },
                  "description" : " ",
                  "id" : "vlan1_uuid",
                  "name" : "vlan1"
                },
                "Request example 4 : POST /fmc_config/v1/domain/DomainUUID/object/vlantags ( Success Test POST method for Vlan Tag )" : {
                  "type" : "VlanTag",
                  "overridable" : false,
                  "name" : "OnenewVlanTag1",
                  "description" : "New VlanTag test",
                  "data" : {
                    "startTag" : 12,
                    "endTag" : 15
                  }
                },
                "Response Example 1 :POST /fmc_config/v1/domain/DomainUUID/object/vlantags?bulk=true ( Bulk POST operation on vlan tag objects. )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/vlantags?bulk=true"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/vlantags/vlanObj1Uuid"
                    },
                    "type" : "VlanTag",
                    "data" : {
                      "startTag" : 12,
                      "endTag" : 15,
                      "type" : "VlanTagLiteral"
                    },
                    "overridable" : false,
                    "description" : "New VlanTag test",
                    "name" : "vlanobj1",
                    "id" : "vlanObj1Uuid",
                    "metadata" : {
                      "timestamp" : 0,
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUuid"
                      }
                    }
                  }, {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/vlantags/vlanobj2Uuid"
                    },
                    "type" : "VlanTag",
                    "data" : {
                      "startTag" : 112,
                      "endTag" : 151,
                      "type" : "VlanTagLiteral"
                    },
                    "overridable" : false,
                    "description" : "New VlanTag test",
                    "name" : "vlanobj2",
                    "id" : "vlanobj2Uuid",
                    "metadata" : {
                      "timestamp" : 0,
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUuid"
                      }
                    }
                  } ]
                },
                "Response Example 2 :POST /fmc_config/v1/domain/DomainUUID/object/vlantags?bulk=true ( Bulk POST operation on vlan tag objects with overrides )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/vlantags?bulk=true"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/vlantags/vlantag_obj_uuid"
                    },
                    "type" : "VlanTag",
                    "data" : {
                      "startTag" : 25,
                      "endTag" : 30,
                      "type" : "VlanTagLiteral"
                    },
                    "overrides" : {
                      "parent" : {
                        "id" : "vlantag_obj_uuid",
                        "type" : "VlanTag"
                      },
                      "target" : {
                        "name" : "Global \\ EUROPE",
                        "id" : "domain_uuid",
                        "type" : "Domain"
                      }
                    },
                    "overridable" : true,
                    "name" : "vlantag_obj",
                    "id" : "vlantag_obj_uuid",
                    "metadata" : {
                      "timestamp" : 0,
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global \\ EUROPE",
                        "id" : "domain_uuid"
                      }
                    }
                  }, {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/vlantags/vlantag_obj_uuid"
                    },
                    "type" : "VlanTag",
                    "data" : {
                      "startTag" : 55,
                      "endTag" : 3000,
                      "type" : "VlanTagLiteral"
                    },
                    "overrides" : {
                      "parent" : {
                        "id" : "vlantag_obj_uuid",
                        "type" : "VlanTag"
                      },
                      "target" : {
                        "name" : "FTDv_R1",
                        "id" : "device_uuid",
                        "type" : "Device"
                      }
                    },
                    "overridable" : true,
                    "name" : "vlantag_obj",
                    "id" : "vlantag_obj_uuid",
                    "metadata" : {
                      "timestamp" : 0,
                      "lastUser" : {
                        "name" : "pvs"
                      },
                      "domain" : {
                        "name" : "Global \\ ASIA",
                        "id" : "domain_uuid"
                      }
                    }
                  } ]
                },
                "Response Example 3 :POST /fmc_config/v1/domain/DomainUUID/object/vlantags ( POST request to create an override on vlan tag object )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/vlantags/vlan1_uuid?overrideTargetId=target_uuid"
                  },
                  "data" : {
                    "startTag" : 10,
                    "endTag" : 20,
                    "type" : "VlanTagLiteral"
                  },
                  "type" : "VlanTag",
                  "overrides" : {
                    "parent" : {
                      "id" : "vlan1_uuid",
                      "type" : "VlanTag"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "target_uuid",
                      "type" : "Device"
                    }
                  },
                  "overridable" : true,
                  "id" : "vlan1_uuid",
                  "name" : "vlan1",
                  "metadata" : {
                    "timestamp" : 0,
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUuid"
                    }
                  }
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/VlanTag"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/vlantags/{containerUUID}/overrides" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves all(Domain and Device) overrides on a VlanTag Object.Response will always be in expanded form. If passed, the \"expanded\" query parameter will be ignored.**",
        "operationId" : "getAllVlanOverride",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/VlanOverrideListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/domainUUID/object/vlantags/vlanTagUUID/overrides ( Get all overrides on given VlanTag objects )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/object/vlantags/vlanTagUUID/overrides?offset=0&limit=2"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/object/vlantags/vlanTagUUID?overrideTargetId=targetUUID"
                    },
                    "type" : "VlanTag",
                    "data" : {
                      "startTag" : 13,
                      "endTag" : 13,
                      "type" : "VlanTagLiteral"
                    },
                    "overrides" : {
                      "parent" : {
                        "id" : "vlanTagUUID",
                        "type" : "VlanTag"
                      },
                      "target" : {
                        "name" : "Global \\ INDIA \\ BENGALURU",
                        "id" : "targetUUID",
                        "type" : "Domain"
                      }
                    },
                    "overridable" : true,
                    "description" : " ",
                    "name" : "vlan_1",
                    "id" : "vlanTagUUID",
                    "metadata" : {
                      "timestamp" : 1520419179300,
                      "lastUser" : {
                        "name" : "user1"
                      },
                      "domain" : {
                        "name" : "Global \\ INDIA \\ BENGALURU",
                        "id" : "targetUUID"
                      }
                    }
                  }, {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/domainUUID/object/vlantags/vlanTagUUID?overrideTargetId=targetUUID"
                    },
                    "type" : "VlanTag",
                    "data" : {
                      "startTag" : 14,
                      "endTag" : 14,
                      "type" : "VlanTagLiteral"
                    },
                    "overrides" : {
                      "parent" : {
                        "id" : "vlanTagUUID",
                        "type" : "VlanTag"
                      },
                      "target" : {
                        "name" : "Global \\ INDIA \\ PUNE",
                        "id" : "targetUUID",
                        "type" : "Domain"
                      }
                    },
                    "overridable" : true,
                    "description" : " ",
                    "name" : "vlan_1",
                    "id" : "vlanTagUUID",
                    "metadata" : {
                      "timestamp" : 1520419189983,
                      "lastUser" : {
                        "name" : "user1"
                      },
                      "domain" : {
                        "name" : "Global \\ INDIA \\ PUNE",
                        "id" : "targetUUID"
                      }
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/vlantags/{containerUUID}/overrides/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves all(Domain and Device) overrides on a VlanTag Object.Response will always be in expanded form. If passed, the \"expanded\" query parameter will be ignored.**",
        "operationId" : "getVlanOverride",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Input NOT Expected here",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/VlanOverride"
            },
            "examples" : { }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/object/vlantags/{objectId}" : {
      "get" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the vlantag objects associated with the specified ID. If no ID is specified for a GET, retrieves list of all vlantag objects.**",
        "operationId" : "getVlanTag",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the object.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "overrideTargetId",
          "in" : "query",
          "description" : "Retrieves the override(s) associated with the vlantag object on given target ID.",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/VlanTag"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/GlobalDomainUUID/object/vlantags/vlan_object_uuid?expanded=true&overrideTargetId=childDomainUUID ( Success: Test GET method from global domain on a specific VlanTagObject which has override assigned as child domain )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/global/object/vlantags/vlanObjectUUID"
                  },
                  "data" : {
                    "startTag" : 13,
                    "endTag" : 13,
                    "type" : "VlanTagLiteral"
                  },
                  "type" : "VlanTag",
                  "overrides" : {
                    "parent" : {
                      "id" : "vlanObjectUUID",
                      "type" : "VlanTag"
                    },
                    "target" : {
                      "name" : "Global \\ Asia",
                      "id" : "subDomainUUID",
                      "type" : "Domain"
                    }
                  },
                  "overridable" : true,
                  "description" : " ",
                  "name" : "pvs_vlan",
                  "id" : "vlanObjectUUID",
                  "metadata" : {
                    "lastUser" : {
                      "name" : "pvs"
                    },
                    "domain" : {
                      "name" : "Global \\ Asia",
                      "id" : "subDomainUUID"
                    }
                  }
                },
                "Response Example 2 :GET /fmc_config/v1/domain/childDomainUUID/object/vlantags/vlan_object_uuid?expanded=true&overrideTargetId=childDomainUUID ( Success: Test GET method from child domain on a VlanTagObject which has child domain assigned as override )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/subDomainUUID/object/vlantags/vlanObjectUUID"
                  },
                  "data" : {
                    "startTag" : 13,
                    "endTag" : 13,
                    "type" : "VlanTagLiteral"
                  },
                  "type" : "VlanTag",
                  "overrides" : {
                    "parent" : {
                      "id" : "vlanObjectUUID",
                      "type" : "VlanTag"
                    },
                    "target" : {
                      "name" : "Global \\ Asia",
                      "id" : "subDomainUUID",
                      "type" : "Domain"
                    }
                  },
                  "overridable" : true,
                  "description" : " ",
                  "name" : "pvs_vlan",
                  "id" : "vlanObjectUUID",
                  "metadata" : {
                    "lastUser" : {
                      "name" : "pvs"
                    },
                    "domain" : {
                      "name" : "Global \\ Asia",
                      "id" : "subDomainUUID"
                    }
                  }
                },
                "Response Example 3 :GET /fmc_config/v1/domain/childDomainUUID/object/vlans/vlan_object_uuid?expanded=true&overrideTargetId=deviceUUID ( Success: Test GET method from child domain on a VlanTagObject which has device assigned as override )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/global/object/vlantags/vlanObjectUUID"
                  },
                  "data" : {
                    "startTag" : 13,
                    "endTag" : 13,
                    "type" : "VlanTagLiteral"
                  },
                  "type" : "VlanTag",
                  "overrides" : {
                    "parent" : {
                      "id" : "vlanObjectUUID",
                      "type" : "VlanTag"
                    },
                    "target" : {
                      "name" : "device_name",
                      "id" : "deviceUUID",
                      "type" : "Device"
                    }
                  },
                  "overridable" : true,
                  "description" : " ",
                  "name" : "pvs_vlan",
                  "id" : "vlanObjectUUID",
                  "metadata" : {
                    "lastUser" : {
                      "name" : "api"
                    },
                    "domain" : {
                      "name" : "Global \\ Asia",
                      "id" : "subDomainUUID"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the vlantag objects associated with the specified ID. If no ID is specified for a GET, retrieves list of all vlantag objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateVlanTag",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the object.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The input vlantag object model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VlanTag"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/VlanTag"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/DomainUUID/object/vlantags/vlan1_uuid ( PUT request to update an override on vlan tag object )" : {
                  "data" : {
                    "startTag" : 10,
                    "endTag" : 20,
                    "type" : "VlanTagLiteral"
                  },
                  "type" : "VlanTag",
                  "overridable" : true,
                  "overrides" : {
                    "parent" : {
                      "id" : "vlan1_uuid",
                      "type" : "VlanTag"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "target_uuid",
                      "type" : "Device"
                    }
                  },
                  "description" : " ",
                  "id" : "vlan1_uuid",
                  "name" : "vlan1"
                },
                "Response Example 1 :PUT /fmc_config/v1/domain/DomainUUID/object/vlantags/vlan1_uuid ( PUT request to update an override on vlan tag object )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/vlantags/vlan1_uuid?overrideTargetId=target_uuid"
                  },
                  "data" : {
                    "startTag" : 10,
                    "endTag" : 20,
                    "type" : "VlanTagLiteral"
                  },
                  "type" : "VlanTag",
                  "overrides" : {
                    "parent" : {
                      "id" : "vlan1_uuid",
                      "type" : "VlanTag"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "target_uuid",
                      "type" : "Device"
                    }
                  },
                  "overridable" : true,
                  "id" : "vlan1_uuid",
                  "name" : "vlan1",
                  "metadata" : {
                    "timestamp" : 0,
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUuid"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/VlanTag"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Object" ],
        "description" : "**Retrieves, deletes, creates, or modifies the vlantag objects associated with the specified ID. If no ID is specified for a GET, retrieves list of all vlantag objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteVlanTag",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the object.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/VlanTag"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /fmc_config/v1/domain/DomainUUID/object/vlantags/vlantagObjectUUID ( Test DELETE of VlanTag Object )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/global/object/vlantags/vlanObject1UUID"
                  },
                  "type" : "VlanTag",
                  "data" : {
                    "startTag" : 1,
                    "endTag" : 3,
                    "type" : "VlanTagLiteral"
                  },
                  "overridable" : false,
                  "description" : " ",
                  "name" : "vlan_obj1",
                  "id" : "vlanObject1UUID",
                  "metadata" : {
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "globalDomainUUID"
                    }
                  }
                },
                "Response Example 2 :DELETE /fmc_config/v1/domain/DomainUUID/object/vlantags/vlan1_uuid?overrideTargetId=target_uuid ( DELETE request to remove an override on vlan tag object )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/object/vlantags/vlan1_uuid?overrideTargetId=target_uuid"
                  },
                  "data" : {
                    "startTag" : 10,
                    "endTag" : 20,
                    "type" : "VlanTagLiteral"
                  },
                  "type" : "VlanTag",
                  "overrides" : {
                    "parent" : {
                      "id" : "vlan1_uuid",
                      "type" : "VlanTag"
                    },
                    "target" : {
                      "name" : "10.10.16.29",
                      "id" : "target_uuid",
                      "type" : "Device"
                    }
                  },
                  "overridable" : true,
                  "description" : " ",
                  "id" : "vlan1_uuid",
                  "name" : "vlan1",
                  "metadata" : {
                    "timestamp" : 1527361559670,
                    "lastUser" : {
                      "name" : "admin"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUuid"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the access control policy associated with the specified ID. Also, retrieves list of all access control policies.**",
        "operationId" : "getAllAccessPolicy",
        "parameters" : [ {
          "name" : "name",
          "in" : "query",
          "description" : "If parameter is specified, only the policy matching with the specified name will be displayed. Cannot be used if object ID is specified in path.",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AccessPolicyListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/DomainUUID/policy/accesspolicies ( Test GET ALL Success of AccessPolicy policy )" : {
                  "links" : "/fmc_config/v1/domain/DomainUUID/policy/accesspolicies?offset=0&limit=2",
                  "items" : [ {
                    "type" : "AccessPolicy",
                    "name" : "AccessPolicy1_updated",
                    "description" : "policy to test FMC implementation",
                    "defaultAction" : {
                      "id" : "id_of_default_action",
                      "type" : "AccessPolicyDefaultAction"
                    }
                  }, {
                    "type" : "AccessPolicy",
                    "name" : "AccessPolicy2_updated",
                    "description" : "policy to test FMC implementation",
                    "defaultAction" : {
                      "id" : "id_of_default_action",
                      "type" : "AccessPolicyDefaultAction"
                    }
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the access control policy associated with the specified ID. Also, retrieves list of all access control policies. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createAccessPolicy",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of access control policy.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AccessPolicy"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/AccessPolicy"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /fmc_config/v1/domain/DomainUUID/policy/accesspolicies ( Success: POST method for AccessPolicy with minimum required fields )" : {
                  "type" : "AccessPolicy",
                  "name" : "AccessPolicy1",
                  "defaultAction" : {
                    "action" : "BLOCK"
                  }
                },
                "Request example 2 : POST /fmc_config/v1/domain/DomainUUID/policy/accesspolicies ( Success: Test POST method for AccessPolicy )" : {
                  "type" : "AccessPolicy",
                  "name" : "AccessPolicy1",
                  "description" : "policy to test FMC implementation",
                  "defaultAction" : {
                    "intrusionPolicy" : {
                      "id" : "id_of_existing_or_new_intrusion_policy",
                      "type" : "IntrusionPolicy"
                    },
                    "variableSet" : {
                      "id" : "id_of_variableSet_to_be_added",
                      "type" : "VariableSet"
                    },
                    "snmpConfig" : {
                      "id" : "id_of_snmpConfig_object",
                      "type" : "SNMPAlert"
                    },
                    "syslogConfig" : {
                      "id" : "id_of_syslog_object",
                      "type" : "SyslogAlert"
                    },
                    "type" : "AccessPolicyDefaultAction",
                    "logBegin" : "true/false",
                    "logEnd" : "true/false",
                    "sendEventsToFMC" : "true/false",
                    "action" : "any_allowed_action_enum"
                  }
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/AccessPolicy"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/accessrules" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the access control rule associated with the specified policy ID and rule ID. If no ID is specified, retrieves list of all access rules associated with the specified policy ID.**",
        "operationId" : "getAllAccessRule",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AccessRuleListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/DomainUUID/policy/accesspolicies/containerUUID/accessrules ( Success: Test GET ALL success )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/policy/accesspolicies/containerUUID/accessrules?offset=0&limit=1"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/policy/accesspolicies/containerUUID/accessrules/accessRuleUUID1"
                    },
                    "type" : "AccessRule",
                    "name" : "Rule1",
                    "id" : "accessRuleUUID1"
                  }, {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/policy/accesspolicies/containerUUID/accessrules/accessRuleUUID2"
                    },
                    "type" : "AccessRule",
                    "name" : "Rule2",
                    "id" : "accessRuleUUID2"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/DomainUUID/policy/accesspolicies/containerUUID/accessrules?expanded=true ( Success: Test GET ALL success with expanded=true )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/policy/accesspolicies/containerUUID/accessrules?offset=0&limit=2"
                  },
                  "items" : [ {
                    "metadata" : {
                      "readOnly" : {
                        "state" : true,
                        "reason" : "SYSTEM"
                      }
                    },
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/policy/accesspolicies/containerUUID/accessrules/accessRuleUUID2"
                    },
                    "action" : "ALLOW",
                    "enabled" : true,
                    "type" : "AccessRule",
                    "name" : "Rule1",
                    "sendEventsToFMC" : false,
                    "originalSourceNetworks" : { },
                    "id" : "accessRuleUUID2",
                    "vlanTags" : {
                      "objects" : [ {
                        "type" : "VlanTag",
                        "name" : "vlan_tag_1",
                        "id" : "VlanTagUUID"
                      } ]
                    },
                    "sourceNetworks" : { },
                    "destinationNetworks" : { },
                    "logFiles" : false,
                    "logBegin" : false,
                    "logEnd" : false,
                    "variableSet" : {
                      "name" : "Default Set",
                      "id" : "VariableSetUUID",
                      "type" : "VariableSet"
                    },
                    "sourcePorts" : {
                      "objects" : [ {
                        "type" : "ProtocolPortObject",
                        "name" : "AOL",
                        "id" : "ProtocolPortObjectUUID"
                      } ]
                    },
                    "destinationPorts" : {
                      "objects" : [ {
                        "type" : "ProtocolPortObject",
                        "name" : "Bittorrent",
                        "id" : "ProtocolPortObjectUUID"
                      } ]
                    },
                    "sourceDynamicObjects" : {
                      "objects" : [ {
                        "name" : "SourceDynamicObject",
                        "id" : "dynamicObjectUUID",
                        "type" : "DynamicObject"
                      } ]
                    },
                    "destinationDynamicObjects" : {
                      "objects" : [ {
                        "name" : "destinationDynamicObject",
                        "id" : "dynamicObjectUUID",
                        "type" : "DynamicObject"
                      } ]
                    }
                  }, {
                    "metadata" : {
                      "readOnly" : {
                        "state" : true,
                        "reason" : "SYSTEM"
                      }
                    },
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/policy/accesspolicies/containerUUID/accessrules/accessRuleUUID1"
                    },
                    "action" : "ALLOW",
                    "enabled" : true,
                    "type" : "AccessRule",
                    "name" : "Rule2",
                    "sendEventsToFMC" : false,
                    "ipsPolicy" : {
                      "name" : "Connectivity Over Security",
                      "id" : "IntrusionPolicyUUID",
                      "type" : "IntrusionPolicy"
                    },
                    "originalSourceNetworks" : { },
                    "id" : "accessRuleUUID1",
                    "vlanTags" : {
                      "objects" : [ {
                        "type" : "VlanTag",
                        "name" : "vlan_tag_1",
                        "id" : "VlanTagUUID"
                      } ]
                    },
                    "urls" : {
                      "urlCategoriesWithReputation" : [ {
                        "type" : "UrlCategoryAndReputation",
                        "category" : {
                          "name" : "Weapons",
                          "id" : "URLCategoryUUID",
                          "type" : "URLCategory"
                        },
                        "reputation" : "BENIGN_SITES_WITH_SECURITY_RISKS"
                      } ]
                    },
                    "sourceZones" : {
                      "objects" : [ {
                        "name" : "External",
                        "id" : "SecurityZone",
                        "type" : "SecurityZone"
                      } ]
                    },
                    "destinationZones" : {
                      "objects" : [ {
                        "name" : "Internal",
                        "id" : "SecurityZone",
                        "type" : "SecurityZone"
                      } ]
                    },
                    "sourceDynamicObjects" : {
                      "objects" : [ {
                        "name" : "SourceDynamicObject",
                        "id" : "dynamicObjectUUID",
                        "type" : "DynamicObject"
                      } ]
                    },
                    "destinationDynamicObjects" : {
                      "objects" : [ {
                        "name" : "destinationDynamicObject",
                        "id" : "dynamicObjectUUID",
                        "type" : "DynamicObject"
                      } ]
                    },
                    "logFiles" : false,
                    "logBegin" : false,
                    "logEnd" : false,
                    "variableSet" : {
                      "name" : "Default Set",
                      "id" : "VariableSetUUID",
                      "type" : "VariableSet"
                    },
                    "sourcePorts" : {
                      "objects" : [ {
                        "type" : "ProtocolPortObject",
                        "name" : "AOL",
                        "id" : "ProtocolPortObjectUUID"
                      } ]
                    },
                    "destinationPorts" : {
                      "objects" : [ {
                        "type" : "ProtocolPortObject",
                        "name" : "Bittorrent",
                        "id" : "ProtocolPortObjectUUID"
                      } ]
                    },
                    "applications" : {
                      "applications" : [ {
                        "id" : "applictaionUUID",
                        "type" : "Application",
                        "name" : "1&1 Internet"
                      } ]
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the access control rule associated with the specified policy ID and rule ID. If no ID is specified, retrieves list of all access rules associated with the specified policy ID. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createMultipleAccessRule",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The input access control rule model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AccessRule"
          }
        }, {
          "name" : "bulk",
          "in" : "query",
          "description" : "This parameter specifies that bulk operation is being used in the query. This parameter is required for bulk rule operations.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "insertAfter",
          "in" : "query",
          "description" : "This parameter specifies that the rules will be inserted after the specified rule index. If no section or category is specified, the rules will be added to the section or category after the insertion point. insertBefore takes precedence over insertAfter - if both are specified, the insertBefore parameter will apply.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "insertBefore",
          "in" : "query",
          "description" : "This parameter specifies that the rules will be inserted before the specified rule index. If no section or category is specified, the rules will be added to the section or category before the insertion point. insertBefore takes precedence over insertAfter - if both are specified, the insertBefore parameter will apply.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "section",
          "in" : "query",
          "description" : "This parameter specifies the section into which the rules will be added. If this parameter is not used the section will be the default section. Only 'mandatory' and 'default' are allowed values. If a section is specified, a category cannot be specified.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "category",
          "in" : "query",
          "description" : "This parameter specifies the category into which the rules will be added. If a category is specified it must exist or the request will fail. If a section is specified, a category cannot be specified.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/AccessRule"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /fmc_config/v1/domain/DomainUUID/policy/accesspolicies/containerUUID/accessrules ( Test POST of Access rule )" : {
                  "action" : "ALLOW",
                  "enabled" : true,
                  "type" : "AccessRule",
                  "name" : "Rule1",
                  "sendEventsToFMC" : false,
                  "logFiles" : false,
                  "logBegin" : false,
                  "logEnd" : false,
                  "variableSet" : {
                    "name" : "Default Set",
                    "id" : "VariableSetUUID",
                    "type" : "VariableSet"
                  },
                  "vlanTags" : {
                    "objects" : [ {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_1",
                      "id" : "VlanTagUUID1"
                    }, {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_2",
                      "id" : "VlanTagUUID2"
                    } ]
                  },
                  "urls" : {
                    "urlCategoriesWithReputation" : [ {
                      "type" : "UrlCategoryAndReputation",
                      "category" : {
                        "name" : "Weapons",
                        "id" : "URLCategoryUUID",
                        "type" : "URLCategory"
                      },
                      "reputation" : "BENIGN_SITES_WITH_SECURITY_RISKS"
                    } ]
                  },
                  "sourceZones" : {
                    "objects" : [ {
                      "name" : "External",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "destinationZones" : {
                    "objects" : [ {
                      "name" : "Internal",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "sourcePorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "AOL",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "sourceDynamicObjects" : {
                    "objects" : [ {
                      "name" : "SourceDynamicObject",
                      "id" : "dynamicObjectUUID",
                      "type" : "DynamicObject"
                    } ]
                  },
                  "destinationDynamicObjects" : {
                    "objects" : [ {
                      "name" : "destinationDynamicObject",
                      "id" : "dynamicObjectUUID",
                      "type" : "DynamicObject"
                    } ]
                  },
                  "destinationPorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "Bittorrent",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "ipsPolicy" : {
                    "type" : "IntrusionPolicy",
                    "id" : "ipsPolicyUuid",
                    "name" : "ipsPlicyName"
                  },
                  "filePolicy" : {
                    "type" : "FilePolicy",
                    "id" : "filePolicyUuid",
                    "name" : "filePolicyName"
                  },
                  "snmpConfig" : {
                    "id" : "snmpConfigUuid",
                    "name" : "snmp_alert1",
                    "type" : "SNMPAlert"
                  },
                  "syslogConfig" : {
                    "id" : "syslogConfigUuid",
                    "name" : "syslog_alert1",
                    "type" : "SyslogAlert"
                  },
                  "newComments" : [ "comment1", "comment2" ]
                },
                "Request example 2 : POST /fmc_config/v1/domain/DomainUUID/policy/accesspolicies/containerUUID/accessrules?bulk=true ( POST Bulk insert of Access rules )" : [ {
                  "action" : "ALLOW",
                  "enabled" : true,
                  "type" : "AccessRule",
                  "name" : "Rule1",
                  "sendEventsToFMC" : false,
                  "logFiles" : false,
                  "logBegin" : false,
                  "logEnd" : false,
                  "variableSet" : {
                    "name" : "Default Set",
                    "id" : "VariableSetUUID",
                    "type" : "VariableSet"
                  },
                  "vlanTags" : {
                    "objects" : [ {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_1",
                      "id" : "VlanTagUUID1"
                    }, {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_2",
                      "id" : "VlanTagUUID2"
                    } ]
                  },
                  "urls" : {
                    "urlCategoriesWithReputation" : [ {
                      "type" : "UrlCategoryAndReputation",
                      "category" : {
                        "name" : "Weapons",
                        "id" : "URLCategoryUUID",
                        "type" : "URLCategory"
                      },
                      "reputation" : "BENIGN_SITES_WITH_SECURITY_RISKS"
                    } ]
                  },
                  "sourceZones" : {
                    "objects" : [ {
                      "name" : "External",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "destinationZones" : {
                    "objects" : [ {
                      "name" : "Internal",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "sourceDynamicObjects" : {
                    "objects" : [ {
                      "name" : "SourceDynamicObject",
                      "id" : "dynamicObjectUUID",
                      "type" : "DynamicObject"
                    } ]
                  },
                  "destinationDynamicObjects" : {
                    "objects" : [ {
                      "name" : "destinationDynamicObject",
                      "id" : "dynamicObjectUUID",
                      "type" : "DynamicObject"
                    } ]
                  },
                  "sourcePorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "AOL",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "destinationPorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "Bittorrent",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "ipsPolicy" : {
                    "type" : "IntrusionPolicy",
                    "id" : "ipsPolicyUuid",
                    "name" : "ipsPlicyName"
                  },
                  "filePolicy" : {
                    "type" : "FilePolicy",
                    "id" : "filePolicyUuid",
                    "name" : "filePolicyName"
                  },
                  "snmpConfig" : {
                    "id" : "snmpConfigUuid",
                    "name" : "snmp_alert1",
                    "type" : "SNMPAlert"
                  },
                  "syslogConfig" : {
                    "id" : "syslogConfigUuid",
                    "name" : "syslog_alert1",
                    "type" : "SyslogAlert"
                  },
                  "newComments" : [ "comment1", "comment2" ]
                }, {
                  "action" : "ALLOW",
                  "enabled" : true,
                  "type" : "AccessRule",
                  "name" : "Rule2",
                  "sendEventsToFMC" : false,
                  "logFiles" : false,
                  "logBegin" : false,
                  "logEnd" : false,
                  "variableSet" : {
                    "name" : "Default Set",
                    "id" : "VariableSetUUID",
                    "type" : "VariableSet"
                  },
                  "vlanTags" : {
                    "objects" : [ {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_1",
                      "id" : "VlanTagUUID1"
                    }, {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_2",
                      "id" : "VlanTagUUID2"
                    } ]
                  },
                  "urls" : {
                    "urlCategoriesWithReputation" : [ {
                      "type" : "UrlCategoryAndReputation",
                      "category" : {
                        "name" : "Weapons",
                        "id" : "URLCategoryUUID",
                        "type" : "URLCategory"
                      },
                      "reputation" : "BENIGN_SITES_WITH_SECURITY_RISKS"
                    } ]
                  },
                  "sourceZones" : {
                    "objects" : [ {
                      "name" : "External",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "destinationZones" : {
                    "objects" : [ {
                      "name" : "Internal",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "sourceDynamicObjects" : {
                    "objects" : [ {
                      "name" : "SourceDynamicObject",
                      "id" : "dynamicObjectUUID",
                      "type" : "DynamicObject"
                    } ]
                  },
                  "destinationDynamicObjects" : {
                    "objects" : [ {
                      "name" : "destinationDynamicObject",
                      "id" : "dynamicObjectUUID",
                      "type" : "DynamicObject"
                    } ]
                  },
                  "sourcePorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "AOL",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "destinationPorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "Bittorrent",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "ipsPolicy" : {
                    "type" : "IntrusionPolicy",
                    "id" : "ipsPolicyUuid",
                    "name" : "ipsPlicyName"
                  },
                  "filePolicy" : {
                    "type" : "FilePolicy",
                    "id" : "filePolicyUuid",
                    "name" : "filePolicyName"
                  },
                  "snmpConfig" : {
                    "id" : "snmpConfigUuid",
                    "name" : "snmp_alert1",
                    "type" : "SNMPAlert"
                  },
                  "syslogConfig" : {
                    "id" : "syslogConfigUuid",
                    "name" : "syslog_alert1",
                    "type" : "SyslogAlert"
                  },
                  "newComments" : [ "comment1", "comment2" ]
                } ],
                "Request example 3 : POST /fmc_config/v1/domain/DomainUUID/policy/accesspolicies/containerUUID/accessrules?bulk=true&amp;section={mandatory | default} ( POST Bulk insert of Access rules into mandatory or default section )" : [ {
                  "action" : "ALLOW",
                  "enabled" : true,
                  "type" : "AccessRule",
                  "name" : "Rule2",
                  "sendEventsToFMC" : false,
                  "logFiles" : false,
                  "logBegin" : false,
                  "logEnd" : false,
                  "variableSet" : {
                    "name" : "Default Set",
                    "id" : "VariableSetUUID",
                    "type" : "VariableSet"
                  },
                  "vlanTags" : {
                    "objects" : [ {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_1",
                      "id" : "VlanTagUUID1"
                    }, {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_2",
                      "id" : "VlanTagUUID2"
                    } ]
                  },
                  "urls" : {
                    "urlCategoriesWithReputation" : [ {
                      "type" : "UrlCategoryAndReputation",
                      "category" : {
                        "name" : "Weapons",
                        "id" : "URLCategoryUUID",
                        "type" : "URLCategory"
                      },
                      "reputation" : "BENIGN_SITES_WITH_SECURITY_RISKS"
                    } ]
                  },
                  "sourceZones" : {
                    "objects" : [ {
                      "name" : "External",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "destinationZones" : {
                    "objects" : [ {
                      "name" : "Internal",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "sourceDynamicObjects" : {
                    "objects" : [ {
                      "name" : "SourceDynamicObject",
                      "id" : "dynamicObjectUUID",
                      "type" : "DynamicObject"
                    } ]
                  },
                  "destinationDynamicObjects" : {
                    "objects" : [ {
                      "name" : "destinationDynamicObject",
                      "id" : "dynamicObjectUUID",
                      "type" : "DynamicObject"
                    } ]
                  },
                  "sourcePorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "AOL",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "destinationPorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "Bittorrent",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "ipsPolicy" : {
                    "type" : "IntrusionPolicy",
                    "id" : "ipsPolicyUuid",
                    "name" : "ipsPlicyName"
                  },
                  "filePolicy" : {
                    "type" : "FilePolicy",
                    "id" : "filePolicyUuid",
                    "name" : "filePolicyName"
                  },
                  "snmpConfig" : {
                    "id" : "snmpConfigUuid",
                    "name" : "snmp_alert1",
                    "type" : "SNMPAlert"
                  },
                  "syslogConfig" : {
                    "id" : "syslogConfigUuid",
                    "name" : "syslog_alert1",
                    "type" : "SyslogAlert"
                  },
                  "newComments" : [ "comment1", "comment2" ]
                }, {
                  "action" : "ALLOW",
                  "enabled" : true,
                  "type" : "AccessRule",
                  "name" : "Rule1",
                  "sendEventsToFMC" : false,
                  "logFiles" : false,
                  "logBegin" : false,
                  "logEnd" : false,
                  "variableSet" : {
                    "name" : "Default Set",
                    "id" : "VariableSetUUID",
                    "type" : "VariableSet"
                  },
                  "vlanTags" : {
                    "objects" : [ {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_1",
                      "id" : "VlanTagUUID1"
                    }, {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_2",
                      "id" : "VlanTagUUID2"
                    } ]
                  },
                  "urls" : {
                    "urlCategoriesWithReputation" : [ {
                      "type" : "UrlCategoryAndReputation",
                      "category" : {
                        "name" : "Weapons",
                        "id" : "URLCategoryUUID",
                        "type" : "URLCategory"
                      },
                      "reputation" : "BENIGN_SITES_WITH_SECURITY_RISKS"
                    } ]
                  },
                  "sourceZones" : {
                    "objects" : [ {
                      "name" : "External",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "destinationZones" : {
                    "objects" : [ {
                      "name" : "Internal",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "sourceDynamicObjects" : {
                    "objects" : [ {
                      "name" : "SourceDynamicObject",
                      "id" : "dynamicObjectUUID",
                      "type" : "DynamicObject"
                    } ]
                  },
                  "destinationDynamicObjects" : {
                    "objects" : [ {
                      "name" : "destinationDynamicObject",
                      "id" : "dynamicObjectUUID",
                      "type" : "DynamicObject"
                    } ]
                  },
                  "sourcePorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "AOL",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "destinationPorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "Bittorrent",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "ipsPolicy" : {
                    "type" : "IntrusionPolicy",
                    "id" : "ipsPolicyUuid",
                    "name" : "ipsPlicyName"
                  },
                  "filePolicy" : {
                    "type" : "FilePolicy",
                    "id" : "filePolicyUuid",
                    "name" : "filePolicyName"
                  },
                  "snmpConfig" : {
                    "id" : "snmpConfigUuid",
                    "name" : "snmp_alert1",
                    "type" : "SNMPAlert"
                  },
                  "syslogConfig" : {
                    "id" : "syslogConfigUuid",
                    "name" : "syslog_alert1",
                    "type" : "SyslogAlert"
                  },
                  "newComments" : [ "comment1", "comment2" ]
                } ],
                "Request example 4 : POST /fmc_config/v1/domain/DomainUUID/policy/accesspolicies/containerUUID/accessrules?bulk=true&amp;section={mandatory | default}&insertAfter=RuleIndex ( POST Bulk insert of Access rule into section after an index )" : [ {
                  "action" : "ALLOW",
                  "enabled" : true,
                  "type" : "AccessRule",
                  "name" : "Rule1",
                  "sendEventsToFMC" : false,
                  "logFiles" : false,
                  "logBegin" : false,
                  "logEnd" : false,
                  "variableSet" : {
                    "name" : "Default Set",
                    "id" : "VariableSetUUID",
                    "type" : "VariableSet"
                  },
                  "vlanTags" : {
                    "objects" : [ {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_1",
                      "id" : "VlanTagUUID1"
                    }, {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_2",
                      "id" : "VlanTagUUID2"
                    } ]
                  },
                  "urls" : {
                    "urlCategoriesWithReputation" : [ {
                      "type" : "UrlCategoryAndReputation",
                      "category" : {
                        "name" : "Weapons",
                        "id" : "URLCategoryUUID",
                        "type" : "URLCategory"
                      },
                      "reputation" : "BENIGN_SITES_WITH_SECURITY_RISKS"
                    } ]
                  },
                  "sourceZones" : {
                    "objects" : [ {
                      "name" : "External",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "destinationZones" : {
                    "objects" : [ {
                      "name" : "Internal",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "sourceDynamicObjects" : {
                    "objects" : [ {
                      "name" : "SourceDynamicObject",
                      "id" : "dynamicObjectUUID",
                      "type" : "DynamicObject"
                    } ]
                  },
                  "destinationDynamicObjects" : {
                    "objects" : [ {
                      "name" : "destinationDynamicObject",
                      "id" : "dynamicObjectUUID",
                      "type" : "DynamicObject"
                    } ]
                  },
                  "sourcePorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "AOL",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "destinationPorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "Bittorrent",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "ipsPolicy" : {
                    "type" : "IntrusionPolicy",
                    "id" : "ipsPolicyUuid",
                    "name" : "ipsPlicyName"
                  },
                  "filePolicy" : {
                    "type" : "FilePolicy",
                    "id" : "filePolicyUuid",
                    "name" : "filePolicyName"
                  },
                  "snmpConfig" : {
                    "id" : "snmpConfigUuid",
                    "name" : "snmp_alert1",
                    "type" : "SNMPAlert"
                  },
                  "syslogConfig" : {
                    "id" : "syslogConfigUuid",
                    "name" : "syslog_alert1",
                    "type" : "SyslogAlert"
                  },
                  "newComments" : [ "comment1", "comment2" ]
                }, {
                  "action" : "ALLOW",
                  "enabled" : true,
                  "type" : "AccessRule",
                  "name" : "Rule2",
                  "sendEventsToFMC" : false,
                  "logFiles" : false,
                  "logBegin" : false,
                  "logEnd" : false,
                  "variableSet" : {
                    "name" : "Default Set",
                    "id" : "VariableSetUUID",
                    "type" : "VariableSet"
                  },
                  "vlanTags" : {
                    "objects" : [ {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_1",
                      "id" : "VlanTagUUID1"
                    }, {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_2",
                      "id" : "VlanTagUUID2"
                    } ]
                  },
                  "urls" : {
                    "urlCategoriesWithReputation" : [ {
                      "type" : "UrlCategoryAndReputation",
                      "category" : {
                        "name" : "Weapons",
                        "id" : "URLCategoryUUID",
                        "type" : "URLCategory"
                      },
                      "reputation" : "BENIGN_SITES_WITH_SECURITY_RISKS"
                    } ]
                  },
                  "sourceZones" : {
                    "objects" : [ {
                      "name" : "External",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "destinationZones" : {
                    "objects" : [ {
                      "name" : "Internal",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "sourceDynamicObjects" : {
                    "objects" : [ {
                      "name" : "SourceDynamicObject",
                      "id" : "dynamicObjectUUID",
                      "type" : "DynamicObject"
                    } ]
                  },
                  "destinationDynamicObjects" : {
                    "objects" : [ {
                      "name" : "destinationDynamicObject",
                      "id" : "dynamicObjectUUID",
                      "type" : "DynamicObject"
                    } ]
                  },
                  "sourcePorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "AOL",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "destinationPorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "Bittorrent",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "ipsPolicy" : {
                    "type" : "IntrusionPolicy",
                    "id" : "ipsPolicyUuid",
                    "name" : "ipsPlicyName"
                  },
                  "filePolicy" : {
                    "type" : "FilePolicy",
                    "id" : "filePolicyUuid",
                    "name" : "filePolicyName"
                  },
                  "snmpConfig" : {
                    "id" : "snmpConfigUuid",
                    "name" : "snmp_alert1",
                    "type" : "SNMPAlert"
                  },
                  "syslogConfig" : {
                    "id" : "syslogConfigUuid",
                    "name" : "syslog_alert1",
                    "type" : "SyslogAlert"
                  },
                  "newComments" : [ "comment1", "comment2" ]
                } ],
                "Request example 5 : POST /fmc_config/v1/domain/DomainUUID/policy/accesspolicies/containerUUID/accessrules?bulk=true&amp;section={mandatory | default}&insertBefore=RuleIndex ( POST Bulk insert of Access rule into section before an index )" : [ {
                  "action" : "ALLOW",
                  "enabled" : true,
                  "type" : "AccessRule",
                  "name" : "Rule1",
                  "sendEventsToFMC" : false,
                  "logFiles" : false,
                  "logBegin" : false,
                  "logEnd" : false,
                  "variableSet" : {
                    "name" : "Default Set",
                    "id" : "VariableSetUUID",
                    "type" : "VariableSet"
                  },
                  "vlanTags" : {
                    "objects" : [ {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_1",
                      "id" : "VlanTagUUID1"
                    }, {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_2",
                      "id" : "VlanTagUUID2"
                    } ]
                  },
                  "urls" : {
                    "urlCategoriesWithReputation" : [ {
                      "type" : "UrlCategoryAndReputation",
                      "category" : {
                        "name" : "Weapons",
                        "id" : "URLCategoryUUID",
                        "type" : "URLCategory"
                      },
                      "reputation" : "BENIGN_SITES_WITH_SECURITY_RISKS"
                    } ]
                  },
                  "sourceZones" : {
                    "objects" : [ {
                      "name" : "External",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "destinationZones" : {
                    "objects" : [ {
                      "name" : "Internal",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "sourceDynamicObjects" : {
                    "objects" : [ {
                      "name" : "SourceDynamicObject",
                      "id" : "dynamicObjectUUID",
                      "type" : "DynamicObject"
                    } ]
                  },
                  "destinationDynamicObjects" : {
                    "objects" : [ {
                      "name" : "destinationDynamicObject",
                      "id" : "dynamicObjectUUID",
                      "type" : "DynamicObject"
                    } ]
                  },
                  "sourcePorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "AOL",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "destinationPorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "Bittorrent",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "ipsPolicy" : {
                    "type" : "IntrusionPolicy",
                    "id" : "ipsPolicyUuid",
                    "name" : "ipsPlicyName"
                  },
                  "filePolicy" : {
                    "type" : "FilePolicy",
                    "id" : "filePolicyUuid",
                    "name" : "filePolicyName"
                  },
                  "snmpConfig" : {
                    "id" : "snmpConfigUuid",
                    "name" : "snmp_alert1",
                    "type" : "SNMPAlert"
                  },
                  "syslogConfig" : {
                    "id" : "syslogConfigUuid",
                    "name" : "syslog_alert1",
                    "type" : "SyslogAlert"
                  },
                  "newComments" : [ "comment1", "comment2" ]
                }, {
                  "action" : "ALLOW",
                  "enabled" : true,
                  "type" : "AccessRule",
                  "name" : "Rule2",
                  "sendEventsToFMC" : false,
                  "logFiles" : false,
                  "logBegin" : false,
                  "logEnd" : false,
                  "variableSet" : {
                    "name" : "Default Set",
                    "id" : "VariableSetUUID",
                    "type" : "VariableSet"
                  },
                  "vlanTags" : {
                    "objects" : [ {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_1",
                      "id" : "VlanTagUUID1"
                    }, {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_2",
                      "id" : "VlanTagUUID2"
                    } ]
                  },
                  "urls" : {
                    "urlCategoriesWithReputation" : [ {
                      "type" : "UrlCategoryAndReputation",
                      "category" : {
                        "name" : "Weapons",
                        "id" : "URLCategoryUUID",
                        "type" : "URLCategory"
                      },
                      "reputation" : "BENIGN_SITES_WITH_SECURITY_RISKS"
                    } ]
                  },
                  "sourceZones" : {
                    "objects" : [ {
                      "name" : "External",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "destinationZones" : {
                    "objects" : [ {
                      "name" : "Internal",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "sourceDynamicObjects" : {
                    "objects" : [ {
                      "name" : "SourceDynamicObject",
                      "id" : "dynamicObjectUUID",
                      "type" : "DynamicObject"
                    } ]
                  },
                  "destinationDynamicObjects" : {
                    "objects" : [ {
                      "name" : "destinationDynamicObject",
                      "id" : "dynamicObjectUUID",
                      "type" : "DynamicObject"
                    } ]
                  },
                  "sourcePorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "AOL",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "destinationPorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "Bittorrent",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "ipsPolicy" : {
                    "type" : "IntrusionPolicy",
                    "id" : "ipsPolicyUuid",
                    "name" : "ipsPlicyName"
                  },
                  "filePolicy" : {
                    "type" : "FilePolicy",
                    "id" : "filePolicyUuid",
                    "name" : "filePolicyName"
                  },
                  "snmpConfig" : {
                    "id" : "snmpConfigUuid",
                    "name" : "snmp_alert1",
                    "type" : "SNMPAlert"
                  },
                  "syslogConfig" : {
                    "id" : "syslogConfigUuid",
                    "name" : "syslog_alert1",
                    "type" : "SyslogAlert"
                  },
                  "newComments" : [ "comment1", "comment2" ]
                } ],
                "Request example 6 : POST /fmc_config/v1/domain/DomainUUID/policy/accesspolicies/containerUUID/accessrules?bulk=true&category=NameOfCategory ( POST Bulk insert of Access rule into a category )" : [ {
                  "action" : "ALLOW",
                  "enabled" : true,
                  "type" : "AccessRule",
                  "name" : "Rule1",
                  "sendEventsToFMC" : false,
                  "logFiles" : false,
                  "logBegin" : false,
                  "logEnd" : false,
                  "variableSet" : {
                    "name" : "Default Set",
                    "id" : "VariableSetUUID",
                    "type" : "VariableSet"
                  },
                  "vlanTags" : {
                    "objects" : [ {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_1",
                      "id" : "VlanTagUUID1"
                    }, {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_2",
                      "id" : "VlanTagUUID2"
                    } ]
                  },
                  "urls" : {
                    "urlCategoriesWithReputation" : [ {
                      "type" : "UrlCategoryAndReputation",
                      "category" : {
                        "name" : "Weapons",
                        "id" : "URLCategoryUUID",
                        "type" : "URLCategory"
                      },
                      "reputation" : "BENIGN_SITES_WITH_SECURITY_RISKS"
                    } ]
                  },
                  "sourceZones" : {
                    "objects" : [ {
                      "name" : "External",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "destinationZones" : {
                    "objects" : [ {
                      "name" : "Internal",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "sourceDynamicObjects" : {
                    "objects" : [ {
                      "name" : "SourceDynamicObject",
                      "id" : "dynamicObjectUUID",
                      "type" : "DynamicObject"
                    } ]
                  },
                  "destinationDynamicObjects" : {
                    "objects" : [ {
                      "name" : "destinationDynamicObject",
                      "id" : "dynamicObjectUUID",
                      "type" : "DynamicObject"
                    } ]
                  },
                  "sourcePorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "AOL",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "destinationPorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "Bittorrent",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "ipsPolicy" : {
                    "type" : "IntrusionPolicy",
                    "id" : "ipsPolicyUuid",
                    "name" : "ipsPlicyName"
                  },
                  "filePolicy" : {
                    "type" : "FilePolicy",
                    "id" : "filePolicyUuid",
                    "name" : "filePolicyName"
                  },
                  "snmpConfig" : {
                    "id" : "snmpConfigUuid",
                    "name" : "snmp_alert1",
                    "type" : "SNMPAlert"
                  },
                  "syslogConfig" : {
                    "id" : "syslogConfigUuid",
                    "name" : "syslog_alert1",
                    "type" : "SyslogAlert"
                  },
                  "newComments" : [ "comment1", "comment2" ]
                }, {
                  "action" : "ALLOW",
                  "enabled" : true,
                  "type" : "AccessRule",
                  "name" : "Rule2",
                  "sendEventsToFMC" : false,
                  "logFiles" : false,
                  "logBegin" : false,
                  "logEnd" : false,
                  "variableSet" : {
                    "name" : "Default Set",
                    "id" : "VariableSetUUID",
                    "type" : "VariableSet"
                  },
                  "vlanTags" : {
                    "objects" : [ {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_1",
                      "id" : "VlanTagUUID1"
                    }, {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_2",
                      "id" : "VlanTagUUID2"
                    } ]
                  },
                  "urls" : {
                    "urlCategoriesWithReputation" : [ {
                      "type" : "UrlCategoryAndReputation",
                      "category" : {
                        "name" : "Weapons",
                        "id" : "URLCategoryUUID",
                        "type" : "URLCategory"
                      },
                      "reputation" : "BENIGN_SITES_WITH_SECURITY_RISKS"
                    } ]
                  },
                  "sourceZones" : {
                    "objects" : [ {
                      "name" : "External",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "destinationZones" : {
                    "objects" : [ {
                      "name" : "Internal",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "sourceDynamicObjects" : {
                    "objects" : [ {
                      "name" : "SourceDynamicObject",
                      "id" : "dynamicObjectUUID",
                      "type" : "DynamicObject"
                    } ]
                  },
                  "destinationDynamicObjects" : {
                    "objects" : [ {
                      "name" : "destinationDynamicObject",
                      "id" : "dynamicObjectUUID",
                      "type" : "DynamicObject"
                    } ]
                  },
                  "sourcePorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "AOL",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "destinationPorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "Bittorrent",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "ipsPolicy" : {
                    "type" : "IntrusionPolicy",
                    "id" : "ipsPolicyUuid",
                    "name" : "ipsPlicyName"
                  },
                  "filePolicy" : {
                    "type" : "FilePolicy",
                    "id" : "filePolicyUuid",
                    "name" : "filePolicyName"
                  },
                  "snmpConfig" : {
                    "id" : "snmpConfigUuid",
                    "name" : "snmp_alert1",
                    "type" : "SNMPAlert"
                  },
                  "syslogConfig" : {
                    "id" : "syslogConfigUuid",
                    "name" : "syslog_alert1",
                    "type" : "SyslogAlert"
                  },
                  "newComments" : [ "comment1", "comment2" ]
                } ],
                "Request example 7 : POST /fmc_config/v1/domain/DomainUUID/policy/accesspolicies/containerUUID/accessrules?bulk=true&category=NameOfCategory&insertAfter=RuleIndex ( POST Bulk insert of Access rule into category after an index )" : [ {
                  "action" : "ALLOW",
                  "enabled" : true,
                  "type" : "AccessRule",
                  "name" : "Rule1",
                  "sendEventsToFMC" : false,
                  "logFiles" : false,
                  "logBegin" : false,
                  "logEnd" : false,
                  "variableSet" : {
                    "name" : "Default Set",
                    "id" : "VariableSetUUID",
                    "type" : "VariableSet"
                  },
                  "vlanTags" : {
                    "objects" : [ {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_1",
                      "id" : "VlanTagUUID1"
                    }, {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_2",
                      "id" : "VlanTagUUID2"
                    } ]
                  },
                  "urls" : {
                    "urlCategoriesWithReputation" : [ {
                      "type" : "UrlCategoryAndReputation",
                      "category" : {
                        "name" : "Weapons",
                        "id" : "URLCategoryUUID",
                        "type" : "URLCategory"
                      },
                      "reputation" : "BENIGN_SITES_WITH_SECURITY_RISKS"
                    } ]
                  },
                  "sourceZones" : {
                    "objects" : [ {
                      "name" : "External",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "destinationZones" : {
                    "objects" : [ {
                      "name" : "Internal",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "sourceDynamicObjects" : {
                    "objects" : [ {
                      "name" : "SourceDynamicObject",
                      "id" : "dynamicObjectUUID",
                      "type" : "DynamicObject"
                    } ]
                  },
                  "destinationDynamicObjects" : {
                    "objects" : [ {
                      "name" : "destinationDynamicObject",
                      "id" : "dynamicObjectUUID",
                      "type" : "DynamicObject"
                    } ]
                  },
                  "sourcePorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "AOL",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "destinationPorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "Bittorrent",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "ipsPolicy" : {
                    "type" : "IntrusionPolicy",
                    "id" : "ipsPolicyUuid",
                    "name" : "ipsPlicyName"
                  },
                  "timeRangeObjects" : [ {
                    "type" : "TimeRange",
                    "name" : "TestTimeRange",
                    "id" : "TimeRangeUUID"
                  } ],
                  "filePolicy" : {
                    "type" : "FilePolicy",
                    "id" : "filePolicyUuid",
                    "name" : "filePolicyName"
                  },
                  "snmpConfig" : {
                    "id" : "snmpConfigUuid",
                    "name" : "snmp_alert1",
                    "type" : "SNMPAlert"
                  },
                  "syslogConfig" : {
                    "id" : "syslogConfigUuid",
                    "name" : "syslog_alert1",
                    "type" : "SyslogAlert"
                  },
                  "newComments" : [ "comment1", "comment2" ]
                }, {
                  "action" : "ALLOW",
                  "enabled" : true,
                  "type" : "AccessRule",
                  "name" : "Rule2",
                  "sendEventsToFMC" : false,
                  "logFiles" : false,
                  "logBegin" : false,
                  "logEnd" : false,
                  "variableSet" : {
                    "name" : "Default Set",
                    "id" : "VariableSetUUID",
                    "type" : "VariableSet"
                  },
                  "vlanTags" : {
                    "objects" : [ {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_1",
                      "id" : "VlanTagUUID1"
                    }, {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_2",
                      "id" : "VlanTagUUID2"
                    } ]
                  },
                  "urls" : {
                    "urlCategoriesWithReputation" : [ {
                      "type" : "UrlCategoryAndReputation",
                      "category" : {
                        "name" : "Weapons",
                        "id" : "URLCategoryUUID",
                        "type" : "URLCategory"
                      },
                      "reputation" : "BENIGN_SITES_WITH_SECURITY_RISKS"
                    } ]
                  },
                  "sourceZones" : {
                    "objects" : [ {
                      "name" : "External",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "destinationZones" : {
                    "objects" : [ {
                      "name" : "Internal",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "sourceDynamicObjects" : {
                    "objects" : [ {
                      "name" : "SourceDynamicObject",
                      "id" : "dynamicObjectUUID",
                      "type" : "DynamicObject"
                    } ]
                  },
                  "destinationDynamicObjects" : {
                    "objects" : [ {
                      "name" : "destinationDynamicObject",
                      "id" : "dynamicObjectUUID",
                      "type" : "DynamicObject"
                    } ]
                  },
                  "sourcePorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "AOL",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "destinationPorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "Bittorrent",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "ipsPolicy" : {
                    "type" : "IntrusionPolicy",
                    "id" : "ipsPolicyUuid",
                    "name" : "ipsPlicyName"
                  },
                  "filePolicy" : {
                    "type" : "FilePolicy",
                    "id" : "filePolicyUuid",
                    "name" : "filePolicyName"
                  },
                  "snmpConfig" : {
                    "id" : "snmpConfigUuid",
                    "name" : "snmp_alert1",
                    "type" : "SNMPAlert"
                  },
                  "syslogConfig" : {
                    "id" : "syslogConfigUuid",
                    "name" : "syslog_alert1",
                    "type" : "SyslogAlert"
                  },
                  "newComments" : [ "comment1", "comment2" ]
                } ],
                "Request example 8 : POST /fmc_config/v1/domain/DomainUUID/policy/accesspolicies/containerUUID/accessrules?bulk=true&category=NameOfCategory&insertBefore=RuleIndex ( POST Bulk insert of Access rule into category before an index )" : [ {
                  "action" : "ALLOW",
                  "enabled" : true,
                  "type" : "AccessRule",
                  "name" : "Rule1",
                  "sendEventsToFMC" : false,
                  "logFiles" : false,
                  "logBegin" : false,
                  "logEnd" : false,
                  "variableSet" : {
                    "name" : "Default Set",
                    "id" : "VariableSetUUID",
                    "type" : "VariableSet"
                  },
                  "vlanTags" : {
                    "objects" : [ {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_1",
                      "id" : "VlanTagUUID1"
                    }, {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_2",
                      "id" : "VlanTagUUID2"
                    } ]
                  },
                  "urls" : {
                    "urlCategoriesWithReputation" : [ {
                      "type" : "UrlCategoryAndReputation",
                      "category" : {
                        "name" : "Weapons",
                        "id" : "URLCategoryUUID",
                        "type" : "URLCategory"
                      },
                      "reputation" : "BENIGN_SITES_WITH_SECURITY_RISKS"
                    } ]
                  },
                  "sourceZones" : {
                    "objects" : [ {
                      "name" : "External",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "destinationZones" : {
                    "objects" : [ {
                      "name" : "Internal",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "sourceDynamicObjects" : {
                    "objects" : [ {
                      "name" : "SourceDynamicObject",
                      "id" : "dynamicObjectUUID",
                      "type" : "DynamicObject"
                    } ]
                  },
                  "destinationDynamicObjects" : {
                    "objects" : [ {
                      "name" : "destinationDynamicObject",
                      "id" : "dynamicObjectUUID",
                      "type" : "DynamicObject"
                    } ]
                  },
                  "timeRangeObjects" : [ {
                    "type" : "TimeRange",
                    "name" : "TestTimeRange",
                    "id" : "TimeRangeUUID"
                  } ],
                  "sourcePorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "AOL",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "destinationPorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "Bittorrent",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "ipsPolicy" : {
                    "type" : "IntrusionPolicy",
                    "id" : "ipsPolicyUuid",
                    "name" : "ipsPlicyName"
                  },
                  "filePolicy" : {
                    "type" : "FilePolicy",
                    "id" : "filePolicyUuid",
                    "name" : "filePolicyName"
                  },
                  "snmpConfig" : {
                    "id" : "snmpConfigUuid",
                    "name" : "snmp_alert1",
                    "type" : "SNMPAlert"
                  },
                  "syslogConfig" : {
                    "id" : "syslogConfigUuid",
                    "name" : "syslog_alert1",
                    "type" : "SyslogAlert"
                  },
                  "newComments" : [ "comment1", "comment2" ]
                }, {
                  "action" : "ALLOW",
                  "enabled" : true,
                  "type" : "AccessRule",
                  "name" : "Rule2",
                  "sendEventsToFMC" : false,
                  "logFiles" : false,
                  "logBegin" : false,
                  "logEnd" : false,
                  "variableSet" : {
                    "name" : "Default Set",
                    "id" : "VariableSetUUID",
                    "type" : "VariableSet"
                  },
                  "vlanTags" : {
                    "objects" : [ {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_1",
                      "id" : "VlanTagUUID1"
                    }, {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_2",
                      "id" : "VlanTagUUID2"
                    } ]
                  },
                  "urls" : {
                    "urlCategoriesWithReputation" : [ {
                      "type" : "UrlCategoryAndReputation",
                      "category" : {
                        "name" : "Weapons",
                        "id" : "URLCategoryUUID",
                        "type" : "URLCategory"
                      },
                      "reputation" : "BENIGN_SITES_WITH_SECURITY_RISKS"
                    } ]
                  },
                  "sourceZones" : {
                    "objects" : [ {
                      "name" : "External",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "destinationZones" : {
                    "objects" : [ {
                      "name" : "Internal",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "sourceDynamicObjects" : {
                    "objects" : [ {
                      "name" : "SourceDynamicObject",
                      "id" : "dynamicObjectUUID",
                      "type" : "DynamicObject"
                    } ]
                  },
                  "destinationDynamicObjects" : {
                    "objects" : [ {
                      "name" : "destinationDynamicObject",
                      "id" : "dynamicObjectUUID",
                      "type" : "DynamicObject"
                    } ]
                  },
                  "sourcePorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "AOL",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "destinationPorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "Bittorrent",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "ipsPolicy" : {
                    "type" : "IntrusionPolicy",
                    "id" : "ipsPolicyUuid",
                    "name" : "ipsPlicyName"
                  },
                  "filePolicy" : {
                    "type" : "FilePolicy",
                    "id" : "filePolicyUuid",
                    "name" : "filePolicyName"
                  },
                  "snmpConfig" : {
                    "id" : "snmpConfigUuid",
                    "name" : "snmp_alert1",
                    "type" : "SNMPAlert"
                  },
                  "syslogConfig" : {
                    "id" : "syslogConfigUuid",
                    "name" : "syslog_alert1",
                    "type" : "SyslogAlert"
                  },
                  "newComments" : [ "comment1", "comment2" ]
                } ],
                "Request example 9 : POST /fmc_config/v1/domain/DomainUUID/policy/accesspolicies/containerUUID/accessrules?bulk=true ( POST Bulk insert of Access rules )" : [ {
                  "action" : "ALLOW",
                  "enabled" : true,
                  "type" : "AccessRule",
                  "name" : "Rule1",
                  "sendEventsToFMC" : false,
                  "logFiles" : false,
                  "logBegin" : false,
                  "logEnd" : false,
                  "variableSet" : {
                    "name" : "Default Set",
                    "id" : "VariableSetUUID",
                    "type" : "VariableSet"
                  },
                  "vlanTags" : {
                    "objects" : [ {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_1",
                      "id" : "VlanTagUUID1"
                    }, {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_2",
                      "id" : "VlanTagUUID2"
                    } ]
                  },
                  "urls" : {
                    "urlCategoriesWithReputation" : [ {
                      "type" : "UrlCategoryAndReputation",
                      "category" : {
                        "name" : "Weapons",
                        "id" : "URLCategoryUUID",
                        "type" : "URLCategory"
                      },
                      "reputation" : "BENIGN_SITES_WITH_SECURITY_RISKS"
                    } ]
                  },
                  "sourceZones" : {
                    "objects" : [ {
                      "name" : "External",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "destinationZones" : {
                    "objects" : [ {
                      "name" : "Internal",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "sourceDynamicObjects" : {
                    "objects" : [ {
                      "name" : "SourceDynamicObject",
                      "id" : "dynamicObjectUUID",
                      "type" : "DynamicObject"
                    } ]
                  },
                  "destinationDynamicObjects" : {
                    "objects" : [ {
                      "name" : "destinationDynamicObject",
                      "id" : "dynamicObjectUUID",
                      "type" : "DynamicObject"
                    } ]
                  },
                  "sourcePorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "AOL",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "timeRangeObjects" : [ {
                    "type" : "TimeRange",
                    "name" : "TestTimeRange",
                    "id" : "TimeRangeUUID"
                  } ],
                  "destinationPorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "Bittorrent",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "ipsPolicy" : {
                    "type" : "IntrusionPolicy",
                    "id" : "ipsPolicyUuid",
                    "name" : "ipsPlicyName"
                  },
                  "filePolicy" : {
                    "type" : "FilePolicy",
                    "id" : "filePolicyUuid",
                    "name" : "filePolicyName"
                  },
                  "snmpConfig" : {
                    "id" : "snmpConfigUuid",
                    "name" : "snmp_alert1",
                    "type" : "SNMPAlert"
                  },
                  "syslogConfig" : {
                    "id" : "syslogConfigUuid",
                    "name" : "syslog_alert1",
                    "type" : "SyslogAlert"
                  },
                  "newComments" : [ "comment1", "comment2" ]
                }, {
                  "action" : "ALLOW",
                  "enabled" : true,
                  "type" : "AccessRule",
                  "name" : "Rule2",
                  "sendEventsToFMC" : false,
                  "logFiles" : false,
                  "logBegin" : false,
                  "logEnd" : false,
                  "variableSet" : {
                    "name" : "Default Set",
                    "id" : "VariableSetUUID",
                    "type" : "VariableSet"
                  },
                  "vlanTags" : {
                    "objects" : [ {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_1",
                      "id" : "VlanTagUUID1"
                    }, {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_2",
                      "id" : "VlanTagUUID2"
                    } ]
                  },
                  "urls" : {
                    "urlCategoriesWithReputation" : [ {
                      "type" : "UrlCategoryAndReputation",
                      "category" : {
                        "name" : "Weapons",
                        "id" : "URLCategoryUUID",
                        "type" : "URLCategory"
                      },
                      "reputation" : "BENIGN_SITES_WITH_SECURITY_RISKS"
                    } ]
                  },
                  "sourceZones" : {
                    "objects" : [ {
                      "name" : "External",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "destinationZones" : {
                    "objects" : [ {
                      "name" : "Internal",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "sourceDynamicObjects" : {
                    "objects" : [ {
                      "name" : "SourceDynamicObject",
                      "id" : "dynamicObjectUUID",
                      "type" : "DynamicObject"
                    } ]
                  },
                  "destinationDynamicObjects" : {
                    "objects" : [ {
                      "name" : "destinationDynamicObject",
                      "id" : "dynamicObjectUUID",
                      "type" : "DynamicObject"
                    } ]
                  },
                  "sourcePorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "AOL",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "destinationPorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "Bittorrent",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "ipsPolicy" : {
                    "type" : "IntrusionPolicy",
                    "id" : "ipsPolicyUuid",
                    "name" : "ipsPlicyName"
                  },
                  "filePolicy" : {
                    "type" : "FilePolicy",
                    "id" : "filePolicyUuid",
                    "name" : "filePolicyName"
                  },
                  "snmpConfig" : {
                    "id" : "snmpConfigUuid",
                    "name" : "snmp_alert1",
                    "type" : "SNMPAlert"
                  },
                  "syslogConfig" : {
                    "id" : "syslogConfigUuid",
                    "name" : "syslog_alert1",
                    "type" : "SyslogAlert"
                  },
                  "newComments" : [ "comment1", "comment2" ]
                } ]
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/AccessRule"
            },
            "examples" : { }
          }
        }
      },
      "put" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the access control rule associated with the specified policy ID and rule ID. If no ID is specified, retrieves list of all access rules associated with the specified policy ID. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateMultipleAccessRule",
        "parameters" : [ {
          "name" : "bulk",
          "in" : "query",
          "description" : "This parameter specifies that bulk operation is being used in the query. This parameter is required for bulk rule operations.",
          "required" : true,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The input access control rule model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AccessRule"
          }
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AccessRule"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/DomainUUID/policy/accesspolicies/containerUUID/accessrules/accessRuleUUID1 ( Test PUT of access rule )" : {
                  "action" : "ALLOW",
                  "enabled" : false,
                  "type" : "AccessRule",
                  "name" : "Rule2",
                  "sendEventsToFMC" : false,
                  "id" : "accessRuleUUID1",
                  "vlanTags" : {
                    "objects" : [ {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_1",
                      "id" : "VlanTagUUID1"
                    }, {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_2",
                      "id" : "VlanTagUUID2"
                    } ]
                  },
                  "urls" : {
                    "urlCategoriesWithReputation" : [ {
                      "type" : "UrlCategoryAndReputation",
                      "category" : {
                        "name" : "Weapons",
                        "id" : "URLCategoryUUID",
                        "type" : "URLCategory"
                      },
                      "reputation" : "BENIGN_SITES_WITH_SECURITY_RISKS"
                    } ]
                  },
                  "sourceZones" : {
                    "objects" : [ {
                      "name" : "External",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "destinationZones" : {
                    "objects" : [ {
                      "name" : "Internal",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "sourceDynamicObjects" : {
                    "objects" : [ {
                      "name" : "SourceDynamicObject",
                      "id" : "dynamicObjectUUID",
                      "type" : "DynamicObject"
                    } ]
                  },
                  "destinationDynamicObjects" : {
                    "objects" : [ {
                      "name" : "destinationDynamicObject",
                      "id" : "dynamicObjectUUID",
                      "type" : "DynamicObject"
                    } ]
                  },
                  "logFiles" : false,
                  "logBegin" : false,
                  "logEnd" : false,
                  "variableSet" : {
                    "name" : "Default Set",
                    "id" : "VariableSetUUID",
                    "type" : "VariableSet"
                  },
                  "sourcePorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "AOL",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "destinationPorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "Bittorrent",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "ipsPolicy" : {
                    "type" : "IntrusionPolicy",
                    "id" : "ipsPolicyUuid",
                    "name" : "ipsPlicyName"
                  },
                  "filePolicy" : {
                    "type" : "FilePolicy",
                    "id" : "filePolicyUuid",
                    "name" : "filePolicyName"
                  },
                  "snmpConfig" : {
                    "id" : "snmpConfigUuid",
                    "name" : "snmp_alert1",
                    "type" : "SNMPAlert"
                  },
                  "syslogConfig" : {
                    "id" : "syslogConfigUuid",
                    "name" : "syslog_alert1",
                    "type" : "SyslogAlert"
                  },
                  "newComments" : [ "comment1", "comment2" ]
                },
                "Request example 2 : PUT /fmc_config/v1/domain/DomainUUID/policy/accesspolicies/containerUUID/accessrules?bulk=true ( PUT Bulk update of Access rules )" : [ {
                  "action" : "ALLOW",
                  "enabled" : true,
                  "type" : "AccessRule",
                  "name" : "Rule1",
                  "sendEventsToFMC" : false,
                  "logFiles" : false,
                  "logBegin" : false,
                  "logEnd" : false,
                  "variableSet" : {
                    "name" : "Default Set",
                    "id" : "VariableSetUUID",
                    "type" : "VariableSet"
                  },
                  "vlanTags" : {
                    "objects" : [ {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_1",
                      "id" : "VlanTagUUID1"
                    }, {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_2",
                      "id" : "VlanTagUUID2"
                    } ]
                  },
                  "urls" : {
                    "urlCategoriesWithReputation" : [ {
                      "type" : "UrlCategoryAndReputation",
                      "category" : {
                        "name" : "Weapons",
                        "id" : "URLCategoryUUID",
                        "type" : "URLCategory"
                      },
                      "reputation" : "BENIGN_SITES_WITH_SECURITY_RISKS"
                    } ]
                  },
                  "sourceZones" : {
                    "objects" : [ {
                      "name" : "External",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "destinationZones" : {
                    "objects" : [ {
                      "name" : "Internal",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "sourceDynamicObjects" : {
                    "objects" : [ {
                      "name" : "SourceDynamicObject",
                      "id" : "dynamicObjectUUID",
                      "type" : "DynamicObject"
                    } ]
                  },
                  "destinationDynamicObjects" : {
                    "objects" : [ {
                      "name" : "destinationDynamicObject",
                      "id" : "dynamicObjectUUID",
                      "type" : "DynamicObject"
                    } ]
                  },
                  "sourcePorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "AOL",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "destinationPorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "Bittorrent",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "ipsPolicy" : {
                    "type" : "IntrusionPolicy",
                    "id" : "ipsPolicyUuid",
                    "name" : "ipsPlicyName"
                  },
                  "filePolicy" : {
                    "type" : "FilePolicy",
                    "id" : "filePolicyUuid",
                    "name" : "filePolicyName"
                  },
                  "snmpConfig" : {
                    "id" : "snmpConfigUuid",
                    "name" : "snmp_alert1",
                    "type" : "SNMPAlert"
                  },
                  "syslogConfig" : {
                    "id" : "syslogConfigUuid",
                    "name" : "syslog_alert1",
                    "type" : "SyslogAlert"
                  },
                  "newComments" : [ "comment1", "comment2" ]
                }, {
                  "action" : "ALLOW",
                  "enabled" : true,
                  "type" : "AccessRule",
                  "name" : "Rule2",
                  "sendEventsToFMC" : false,
                  "logFiles" : false,
                  "logBegin" : false,
                  "logEnd" : false,
                  "variableSet" : {
                    "name" : "Default Set",
                    "id" : "VariableSetUUID",
                    "type" : "VariableSet"
                  },
                  "vlanTags" : {
                    "objects" : [ {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_1",
                      "id" : "VlanTagUUID1"
                    }, {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_2",
                      "id" : "VlanTagUUID2"
                    } ]
                  },
                  "urls" : {
                    "urlCategoriesWithReputation" : [ {
                      "type" : "UrlCategoryAndReputation",
                      "category" : {
                        "name" : "Weapons",
                        "id" : "URLCategoryUUID",
                        "type" : "URLCategory"
                      },
                      "reputation" : "BENIGN_SITES_WITH_SECURITY_RISKS"
                    } ]
                  },
                  "sourceZones" : {
                    "objects" : [ {
                      "name" : "External",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "destinationZones" : {
                    "objects" : [ {
                      "name" : "Internal",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "sourceDynamicObjects" : {
                    "objects" : [ {
                      "name" : "SourceDynamicObject",
                      "id" : "dynamicObjectUUID",
                      "type" : "DynamicObject"
                    } ]
                  },
                  "destinationDynamicObjects" : {
                    "objects" : [ {
                      "name" : "destinationDynamicObject",
                      "id" : "dynamicObjectUUID",
                      "type" : "DynamicObject"
                    } ]
                  },
                  "sourcePorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "AOL",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "destinationPorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "Bittorrent",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "ipsPolicy" : {
                    "type" : "IntrusionPolicy",
                    "id" : "ipsPolicyUuid",
                    "name" : "ipsPlicyName"
                  },
                  "filePolicy" : {
                    "type" : "FilePolicy",
                    "id" : "filePolicyUuid",
                    "name" : "filePolicyName"
                  },
                  "snmpConfig" : {
                    "id" : "snmpConfigUuid",
                    "name" : "snmp_alert1",
                    "type" : "SNMPAlert"
                  },
                  "syslogConfig" : {
                    "id" : "syslogConfigUuid",
                    "name" : "syslog_alert1",
                    "type" : "SyslogAlert"
                  },
                  "newComments" : [ "comment1", "comment2" ]
                } ]
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/AccessRule"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the access control rule associated with the specified policy ID and rule ID. If no ID is specified, retrieves list of all access rules associated with the specified policy ID. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteMultipleAccessRule",
        "parameters" : [ {
          "name" : "bulk",
          "in" : "query",
          "description" : "This parameter specifies that bulk operation is being used in the query. This parameter is required for bulk rule operations.",
          "required" : true,
          "type" : "boolean"
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "To be used in conjunction with <code>bulk=true</code> for bulk deletion. Value is of format (including quotes): <code>\"ids:id1,id2,...\"</code>.<br/><code>ids</code> is a comma-separated list of rule IDs to be deleted.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The input access control rule model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AccessRule"
          }
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AccessRule"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /fmc_config/v1/domain/DomainUUID/policy/accesspolicies/containerUUID/accessrules/accessRuleUUID ( Test DELETE of Access rule )" : {
                  "metadata" : {
                    "readOnly" : {
                      "state" : true,
                      "reason" : "SYSTEM"
                    }
                  },
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/policy/accesspolicies/containerUUID/accessrules/accessRuleUUID"
                  },
                  "action" : "ALLOW",
                  "enabled" : true,
                  "type" : "AccessRule",
                  "name" : "Rule2",
                  "sendEventsToFMC" : false,
                  "ipsPolicy" : {
                    "name" : "Connectivity Over Security",
                    "id" : "IntrusionPolicyUUID",
                    "type" : "IntrusionPolicy"
                  },
                  "originalSourceNetworks" : { },
                  "id" : "accessRuleUUID",
                  "vlanTags" : {
                    "objects" : [ {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_1",
                      "id" : "VlanTagUUID"
                    } ]
                  },
                  "urls" : {
                    "urlCategoriesWithReputation" : [ {
                      "type" : "UrlCategoryAndReputation",
                      "category" : {
                        "name" : "Weapons",
                        "id" : "URLCategoryUUID",
                        "type" : "URLCategory"
                      },
                      "reputation" : "BENIGN_SITES_WITH_SECURITY_RISKS"
                    } ]
                  },
                  "sourceZones" : {
                    "objects" : [ {
                      "name" : "External",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "destinationZones" : {
                    "objects" : [ {
                      "name" : "Internal",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "sourceDynamicObjects" : {
                    "objects" : [ {
                      "name" : "SourceDynamicObject",
                      "id" : "dynamicObjectUUID",
                      "type" : "DynamicObject"
                    } ]
                  },
                  "destinationDynamicObjects" : {
                    "objects" : [ {
                      "name" : "destinationDynamicObject",
                      "id" : "dynamicObjectUUID",
                      "type" : "DynamicObject"
                    } ]
                  },
                  "logFiles" : false,
                  "logBegin" : false,
                  "logEnd" : false,
                  "variableSet" : {
                    "name" : "Default Set",
                    "id" : "VariableSetUUID",
                    "type" : "VariableSet"
                  },
                  "sourcePorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "AOL",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "destinationPorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "Bittorrent",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "applications" : {
                    "applications" : [ {
                      "id" : "1553",
                      "type" : "Application",
                      "name" : "1&1 Internet"
                    } ]
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/accessrules/{objectId}" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the access control rule associated with the specified policy ID and rule ID. If no ID is specified, retrieves list of all access rules associated with the specified policy ID.**",
        "operationId" : "getAccessRule",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of an access control rule.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AccessRule"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/policy/accesspolicies/containerUUID/accessrules/accessruleUUID ( Success: Test GET method for Access rule )" : {
                  "metadata" : {
                    "readOnly" : {
                      "state" : true,
                      "reason" : "SYSTEM"
                    }
                  },
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/policy/accesspolicies/containerUUID/accessrules/accessruleUUID"
                  },
                  "action" : "ALLOW",
                  "enabled" : true,
                  "type" : "AccessRule",
                  "name" : "Rule2",
                  "sendEventsToFMC" : false,
                  "ipsPolicy" : {
                    "name" : "Connectivity Over Security",
                    "id" : "ipsPolicyUUID",
                    "type" : "IntrusionPolicy"
                  },
                  "timeRangeObjects" : [ {
                    "type" : "TimeRange",
                    "name" : "TestTimeRange",
                    "id" : "TimeRangeUUID"
                  } ],
                  "originalSourceNetworks" : { },
                  "id" : "accessruleUUID",
                  "vlanTags" : {
                    "objects" : [ {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_1",
                      "id" : "vlanTagUUID"
                    } ]
                  },
                  "urls" : {
                    "urlCategoriesWithReputation" : [ {
                      "type" : "UrlCategoryAndReputation",
                      "category" : {
                        "name" : "Weapons",
                        "id" : "categoryUUID",
                        "type" : "URLCategory"
                      },
                      "reputation" : "BENIGN_SITES_WITH_SECURITY_RISKS"
                    } ]
                  },
                  "sourceZones" : {
                    "objects" : [ {
                      "name" : "External",
                      "id" : "sourceZoneObjectUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "destinationZones" : {
                    "objects" : [ {
                      "name" : "Internal",
                      "id" : "destinationZonesUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "logFiles" : false,
                  "logBegin" : false,
                  "logEnd" : false,
                  "variableSet" : {
                    "name" : "Default Set",
                    "id" : "variableSetUUID",
                    "type" : "VariableSet"
                  },
                  "sourcePorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "AOL",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "destinationPorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "Bittorrent",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "applications" : {
                    "applications" : [ {
                      "id" : "1553",
                      "type" : "Application",
                      "name" : "1&1 Internet"
                    } ]
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the access control rule associated with the specified policy ID and rule ID. If no ID is specified, retrieves list of all access rules associated with the specified policy ID. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateAccessRule",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of an access control rule.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The input access control rule model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AccessRule"
          }
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AccessRule"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/DomainUUID/policy/accesspolicies/containerUUID/accessrules/accessRuleUUID1 ( Test PUT of access rule )" : {
                  "action" : "ALLOW",
                  "enabled" : false,
                  "type" : "AccessRule",
                  "name" : "Rule2",
                  "sendEventsToFMC" : false,
                  "id" : "accessRuleUUID1",
                  "vlanTags" : {
                    "objects" : [ {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_1",
                      "id" : "VlanTagUUID1"
                    }, {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_2",
                      "id" : "VlanTagUUID2"
                    } ]
                  },
                  "urls" : {
                    "urlCategoriesWithReputation" : [ {
                      "type" : "UrlCategoryAndReputation",
                      "category" : {
                        "name" : "Weapons",
                        "id" : "URLCategoryUUID",
                        "type" : "URLCategory"
                      },
                      "reputation" : "BENIGN_SITES_WITH_SECURITY_RISKS"
                    } ]
                  },
                  "sourceZones" : {
                    "objects" : [ {
                      "name" : "External",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "destinationZones" : {
                    "objects" : [ {
                      "name" : "Internal",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "sourceDynamicObjects" : {
                    "objects" : [ {
                      "name" : "SourceDynamicObject",
                      "id" : "dynamicObjectUUID",
                      "type" : "DynamicObject"
                    } ]
                  },
                  "destinationDynamicObjects" : {
                    "objects" : [ {
                      "name" : "destinationDynamicObject",
                      "id" : "dynamicObjectUUID",
                      "type" : "DynamicObject"
                    } ]
                  },
                  "logFiles" : false,
                  "logBegin" : false,
                  "logEnd" : false,
                  "variableSet" : {
                    "name" : "Default Set",
                    "id" : "VariableSetUUID",
                    "type" : "VariableSet"
                  },
                  "sourcePorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "AOL",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "destinationPorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "Bittorrent",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "ipsPolicy" : {
                    "type" : "IntrusionPolicy",
                    "id" : "ipsPolicyUuid",
                    "name" : "ipsPlicyName"
                  },
                  "filePolicy" : {
                    "type" : "FilePolicy",
                    "id" : "filePolicyUuid",
                    "name" : "filePolicyName"
                  },
                  "snmpConfig" : {
                    "id" : "snmpConfigUuid",
                    "name" : "snmp_alert1",
                    "type" : "SNMPAlert"
                  },
                  "syslogConfig" : {
                    "id" : "syslogConfigUuid",
                    "name" : "syslog_alert1",
                    "type" : "SyslogAlert"
                  },
                  "newComments" : [ "comment1", "comment2" ]
                },
                "Request example 2 : PUT /fmc_config/v1/domain/DomainUUID/policy/accesspolicies/containerUUID/accessrules?bulk=true ( PUT Bulk update of Access rules )" : [ {
                  "action" : "ALLOW",
                  "enabled" : true,
                  "type" : "AccessRule",
                  "name" : "Rule1",
                  "sendEventsToFMC" : false,
                  "logFiles" : false,
                  "logBegin" : false,
                  "logEnd" : false,
                  "variableSet" : {
                    "name" : "Default Set",
                    "id" : "VariableSetUUID",
                    "type" : "VariableSet"
                  },
                  "vlanTags" : {
                    "objects" : [ {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_1",
                      "id" : "VlanTagUUID1"
                    }, {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_2",
                      "id" : "VlanTagUUID2"
                    } ]
                  },
                  "urls" : {
                    "urlCategoriesWithReputation" : [ {
                      "type" : "UrlCategoryAndReputation",
                      "category" : {
                        "name" : "Weapons",
                        "id" : "URLCategoryUUID",
                        "type" : "URLCategory"
                      },
                      "reputation" : "BENIGN_SITES_WITH_SECURITY_RISKS"
                    } ]
                  },
                  "sourceZones" : {
                    "objects" : [ {
                      "name" : "External",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "destinationZones" : {
                    "objects" : [ {
                      "name" : "Internal",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "sourceDynamicObjects" : {
                    "objects" : [ {
                      "name" : "SourceDynamicObject",
                      "id" : "dynamicObjectUUID",
                      "type" : "DynamicObject"
                    } ]
                  },
                  "destinationDynamicObjects" : {
                    "objects" : [ {
                      "name" : "destinationDynamicObject",
                      "id" : "dynamicObjectUUID",
                      "type" : "DynamicObject"
                    } ]
                  },
                  "sourcePorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "AOL",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "destinationPorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "Bittorrent",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "ipsPolicy" : {
                    "type" : "IntrusionPolicy",
                    "id" : "ipsPolicyUuid",
                    "name" : "ipsPlicyName"
                  },
                  "filePolicy" : {
                    "type" : "FilePolicy",
                    "id" : "filePolicyUuid",
                    "name" : "filePolicyName"
                  },
                  "snmpConfig" : {
                    "id" : "snmpConfigUuid",
                    "name" : "snmp_alert1",
                    "type" : "SNMPAlert"
                  },
                  "syslogConfig" : {
                    "id" : "syslogConfigUuid",
                    "name" : "syslog_alert1",
                    "type" : "SyslogAlert"
                  },
                  "newComments" : [ "comment1", "comment2" ]
                }, {
                  "action" : "ALLOW",
                  "enabled" : true,
                  "type" : "AccessRule",
                  "name" : "Rule2",
                  "sendEventsToFMC" : false,
                  "logFiles" : false,
                  "logBegin" : false,
                  "logEnd" : false,
                  "variableSet" : {
                    "name" : "Default Set",
                    "id" : "VariableSetUUID",
                    "type" : "VariableSet"
                  },
                  "vlanTags" : {
                    "objects" : [ {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_1",
                      "id" : "VlanTagUUID1"
                    }, {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_2",
                      "id" : "VlanTagUUID2"
                    } ]
                  },
                  "urls" : {
                    "urlCategoriesWithReputation" : [ {
                      "type" : "UrlCategoryAndReputation",
                      "category" : {
                        "name" : "Weapons",
                        "id" : "URLCategoryUUID",
                        "type" : "URLCategory"
                      },
                      "reputation" : "BENIGN_SITES_WITH_SECURITY_RISKS"
                    } ]
                  },
                  "sourceZones" : {
                    "objects" : [ {
                      "name" : "External",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "destinationZones" : {
                    "objects" : [ {
                      "name" : "Internal",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "sourceDynamicObjects" : {
                    "objects" : [ {
                      "name" : "SourceDynamicObject",
                      "id" : "dynamicObjectUUID",
                      "type" : "DynamicObject"
                    } ]
                  },
                  "destinationDynamicObjects" : {
                    "objects" : [ {
                      "name" : "destinationDynamicObject",
                      "id" : "dynamicObjectUUID",
                      "type" : "DynamicObject"
                    } ]
                  },
                  "sourcePorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "AOL",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "destinationPorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "Bittorrent",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "ipsPolicy" : {
                    "type" : "IntrusionPolicy",
                    "id" : "ipsPolicyUuid",
                    "name" : "ipsPlicyName"
                  },
                  "filePolicy" : {
                    "type" : "FilePolicy",
                    "id" : "filePolicyUuid",
                    "name" : "filePolicyName"
                  },
                  "snmpConfig" : {
                    "id" : "snmpConfigUuid",
                    "name" : "snmp_alert1",
                    "type" : "SNMPAlert"
                  },
                  "syslogConfig" : {
                    "id" : "syslogConfigUuid",
                    "name" : "syslog_alert1",
                    "type" : "SyslogAlert"
                  },
                  "newComments" : [ "comment1", "comment2" ]
                } ]
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/AccessRule"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the access control rule associated with the specified policy ID and rule ID. If no ID is specified, retrieves list of all access rules associated with the specified policy ID. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteAccessRule",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of an access control rule.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AccessRule"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /fmc_config/v1/domain/DomainUUID/policy/accesspolicies/containerUUID/accessrules/accessRuleUUID ( Test DELETE of Access rule )" : {
                  "metadata" : {
                    "readOnly" : {
                      "state" : true,
                      "reason" : "SYSTEM"
                    }
                  },
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/policy/accesspolicies/containerUUID/accessrules/accessRuleUUID"
                  },
                  "action" : "ALLOW",
                  "enabled" : true,
                  "type" : "AccessRule",
                  "name" : "Rule2",
                  "sendEventsToFMC" : false,
                  "ipsPolicy" : {
                    "name" : "Connectivity Over Security",
                    "id" : "IntrusionPolicyUUID",
                    "type" : "IntrusionPolicy"
                  },
                  "originalSourceNetworks" : { },
                  "id" : "accessRuleUUID",
                  "vlanTags" : {
                    "objects" : [ {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_1",
                      "id" : "VlanTagUUID"
                    } ]
                  },
                  "urls" : {
                    "urlCategoriesWithReputation" : [ {
                      "type" : "UrlCategoryAndReputation",
                      "category" : {
                        "name" : "Weapons",
                        "id" : "URLCategoryUUID",
                        "type" : "URLCategory"
                      },
                      "reputation" : "BENIGN_SITES_WITH_SECURITY_RISKS"
                    } ]
                  },
                  "sourceZones" : {
                    "objects" : [ {
                      "name" : "External",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "destinationZones" : {
                    "objects" : [ {
                      "name" : "Internal",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "sourceDynamicObjects" : {
                    "objects" : [ {
                      "name" : "SourceDynamicObject",
                      "id" : "dynamicObjectUUID",
                      "type" : "DynamicObject"
                    } ]
                  },
                  "destinationDynamicObjects" : {
                    "objects" : [ {
                      "name" : "destinationDynamicObject",
                      "id" : "dynamicObjectUUID",
                      "type" : "DynamicObject"
                    } ]
                  },
                  "logFiles" : false,
                  "logBegin" : false,
                  "logEnd" : false,
                  "variableSet" : {
                    "name" : "Default Set",
                    "id" : "VariableSetUUID",
                    "type" : "VariableSet"
                  },
                  "sourcePorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "AOL",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "destinationPorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "Bittorrent",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "applications" : {
                    "applications" : [ {
                      "id" : "1553",
                      "type" : "Application",
                      "name" : "1&1 Internet"
                    } ]
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/categories" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the category associated with the specified policy ID. If no ID is specified, retrieves list of all categories associated with the specified policy ID.**",
        "operationId" : "getAllAccessPolicyCategory",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AccessPolicyCategoryListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/DomainUUID/policy/accesspolicies/accesspolicyUUID/categories?expanded=true ( Test GET ALL Success of AccessPolicyCategory )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/policy/accesspolicies/accesspolicyUUID/categories?offset=0&limit=1"
                  },
                  "items" : [ {
                    "id" : "id_of_category",
                    "type" : "Category",
                    "name" : "Category0001",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/policy/accesspolicies/accesspolicyUUID/categories/categoryUUID"
                    },
                    "metadata" : {
                      "section" : "Section Name",
                      "startIndex" : "index of the first Access Rule inside the category",
                      "endIndex" : "index of the last Access Rule inside the category",
                      "accessPolicy" : {
                        "name" : "access_policy_name",
                        "type" : "AccessPolicy",
                        "id" : "id_of_access_policy"
                      }
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the category associated with the specified policy ID. If no ID is specified, retrieves list of all categories associated with the specified policy ID. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createAccessPolicyCategory",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The input category model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AccessPolicyCategory"
          }
        }, {
          "name" : "section",
          "in" : "query",
          "description" : "Retrieves, creates or modifies category in given section. Allowed value is 'mandatory' and 'default'.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "aboveCategory",
          "in" : "query",
          "description" : "creates category above specified category.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "insertBefore",
          "in" : "query",
          "description" : "creates category above given rule index.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "insertAfter",
          "in" : "query",
          "description" : "creates category below given rule index.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/AccessPolicyCategory"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /fmc_config/v1/domain/DomainUUID/policy/accesspolicies/accesspolicyUUID/categories ( Test POST of AccessPolicyCategory to create new record )" : {
                  "type" : "Category",
                  "name" : "Category0001"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/AccessPolicyCategory"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/categories/{objectId}" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the category associated with the specified policy ID. If no ID is specified, retrieves list of all categories associated with the specified policy ID.**",
        "operationId" : "getAccessPolicyCategory",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a category.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AccessPolicyCategory"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/policy/accesspolicies/accesspolicyUUID/categories/categoryUUID ( Test GET of AccessPolicyCategory to get a record )" : {
                  "id" : "id_of_category",
                  "type" : "Category",
                  "name" : "Category0001",
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/policy/accesspolicies/accesspolicyUUID/categories/categoryUUID"
                  },
                  "metadata" : {
                    "section" : "Section Name",
                    "startIndex" : "index of the first Access Rule inside the category",
                    "endIndex" : "index of the last Access Rule inside the category",
                    "accessPolicy" : {
                      "name" : "access_policy_name",
                      "type" : "AccessPolicy",
                      "id" : "id_of_access_policy"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the category associated with the specified policy ID. If no ID is specified, retrieves list of all categories associated with the specified policy ID. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateAccessPolicyCategory",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a category.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The input category model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AccessPolicyCategory"
          }
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AccessPolicyCategory"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/DomainUUID/policy/accesspolicies/accesspolicyUUID/categories/categoryUUID ( Test PUT of AccessPolicyInheritanceSetting to update the record )" : {
                  "id" : "id_of_category",
                  "type" : "Category",
                  "name" : "Category0001"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/AccessPolicyCategory"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the category associated with the specified policy ID. If no ID is specified, retrieves list of all categories associated with the specified policy ID. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteAccessPolicyCategory",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a category.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AccessPolicyCategory"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /fmc_config/v1/domain/DomainUUID/policy/accesspolicies/accesspolicyUUID/categories/categoryUUID ( Test DELETE of AccessPolicyCategory to delete a record )" : {
                  "id" : "id_of_category",
                  "type" : "Category",
                  "name" : "Category0001",
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/policy/accesspolicies/accesspolicyUUID/categories/categoryUUID"
                  },
                  "metadata" : {
                    "section" : "Section Name",
                    "startIndex" : "index of the first Access Rule inside the category",
                    "endIndex" : "index of the last Access Rule inside the category",
                    "accessPolicy" : {
                      "name" : "access_policy_name",
                      "type" : "AccessPolicy",
                      "id" : "id_of_access_policy"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/defaultactions" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves or modifies the default action associated with the specified access control policy ID and default action ID. If no default action ID is specified, retrieves list of all default actions associated with the specified access control policy ID.**",
        "operationId" : "getAllDefaultAction",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/DefaultActionListContainer"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/defaultactions/{objectId}" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves or modifies the default action associated with the specified access control policy ID and default action ID. If no default action ID is specified, retrieves list of all default actions associated with the specified access control policy ID.**",
        "operationId" : "getDefaultAction",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a default action.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/DefaultAction"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/policy/accesspolicies/ac_pol_uuid/defaultactions?expanded=true ( Test GET Success of AccessPolicy default action )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/policy/accesspolicies/accesspolicyUUID/defaultactions?offset=0&limit=1"
                  },
                  "items" : [ {
                    "variableSet" : {
                      "name" : "Default Set",
                      "id" : "variableSetUUID",
                      "type" : "VariableSet"
                    },
                    "action" : "PERMIT",
                    "type" : "AccessPolicyDefaultAction",
                    "intrusionPolicy" : {
                      "name" : "Balanced Security and Connectivity",
                      "id" : "instrusionPolicyUUID",
                      "type" : "IntrusionPolicy"
                    },
                    "sendEventsToFMC" : true,
                    "logBegin" : true,
                    "logEnd" : true,
                    "snmpConfig" : {
                      "name" : "snmp_alert1",
                      "id" : "snmpConfigUUID",
                      "type" : "SNMPAlert"
                    },
                    "id" : "defaultActionUUID"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves or modifies the default action associated with the specified access control policy ID and default action ID. If no default action ID is specified, retrieves list of all default actions associated with the specified access control policy ID. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateDefaultAction",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a default action.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The input default action model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DefaultAction"
          }
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/DefaultAction"
            },
            "examples" : { }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/DefaultAction"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/inheritancesettings" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves and modifies the inheritance settings associated with specified Access Policy.**",
        "operationId" : "getAllAccessPolicyInheritanceSetting",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AccessPolicyInheritanceSettingListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/DomainUUID/policy/accesspolicies/ac_pol_uuid/inheritancesettings?expanded=true ( Test GET ALL Success of AccessPolicy inheritance setting )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/policy/accesspolicies/accesspolicyUUID/inheritancesettings?offset=0&limit=1"
                  },
                  "items" : [ {
                    "type" : "AccessPolicyInheritanceSetting",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/policy/accesspolicies/accesspolicyUUID/inheritancesettings/inheritanceSettingUUID"
                    },
                    "basePolicy" : {
                      "type" : "AccessPolicy",
                      "id" : "id_of_base_policy",
                      "name" : "Base Policy Name",
                      "links" : {
                        "self" : "/fmc_config/v1/domain/DomainUUID/policy/accesspolicies/basePolicyUUID/"
                      }
                    },
                    "metadata" : {
                      "timestamp" : 12345678
                    },
                    "id" : "inheritanceSettingUUID"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/inheritancesettings/{objectId}" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves and modifies the inheritance settings associated with specified Access Policy.**",
        "operationId" : "getAccessPolicyInheritanceSetting",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the Access Policy Inheritance Setting.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AccessPolicyInheritanceSetting"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/policy/accesspolicies/accesspolicyUUID/inheritancesettings/inheritanceSettingUUID ( Test GET of AccessPolicyInheritanceSetting to get a record )" : {
                  "type" : "AccessPolicyInheritanceSetting",
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/policy/accesspolicies/accesspolicyUUID/inheritancesettings/inheritanceSettingUUID"
                  },
                  "basePolicy" : {
                    "type" : "AccessPolicy",
                    "id" : "id_of_base_policy",
                    "name" : "Base Policy Name",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/policy/accesspolicies/basePolicyUUID/"
                    }
                  },
                  "metadata" : {
                    "timestamp" : 12345678
                  },
                  "id" : "inheritanceSettingUUID"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves and modifies the inheritance settings associated with specified Access Policy. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateAccessPolicyInheritanceSetting",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the Access Policy Inheritance Setting.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Payload representing the Access Policy Inheritance Setting.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AccessPolicyInheritanceSetting"
          }
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AccessPolicyInheritanceSetting"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/DomainUUID/policy/accesspolicies/accesspolicyUUID/inheritancesettings/inheritanceSettingUUID ( Test PUT of AccessPolicyInheritanceSetting to update the record )" : {
                  "type" : "AccessPolicyInheritanceSetting",
                  "id" : "id_of_inheritance_settings",
                  "basePolicy" : {
                    "type" : "AccessPolicy",
                    "id" : "id_of_base_policy"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/AccessPolicyInheritanceSetting"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/loggingsettings" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves or modifies the logging setting associated with the specified access control policy ID and default action ID. If no default action ID is specified, retrieves list of all default actions associated with the specified access control policy ID.**",
        "operationId" : "getAllAccessPolicyLoggingSettingModel",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AccessPolicyLoggingSettingModelListContainer"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/loggingsettings/{objectId}" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves or modifies the logging setting associated with the specified access control policy ID and default action ID. If no default action ID is specified, retrieves list of all default actions associated with the specified access control policy ID.**",
        "operationId" : "getAccessPolicyLoggingSettingModel",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a logging setting.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AccessPolicyLoggingSettingModel"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/policy/accesspolicies/ac_pol_uuid/loggingsettings?expanded=true ( Test GET Success of AccessPolicy logging settings )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/policy/accesspolicies/ac_policy_id/loggingsettings?offset=0&limit=1&expanded=true"
                  },
                  "items" : [ {
                    "metadata" : {
                      "timestamp" : 0
                    },
                    "syslogConfigFromPlatformSetting" : true,
                    "severityForPlatformSettingSyslogConfig" : "CRIT",
                    "syslogConfig" : {
                      "name" : "test",
                      "id" : "8014f0d4-6a33-11e8-8755-90aed85e80f0",
                      "type" : "SyslogAlert"
                    },
                    "enableFileAndMalwareSyslog" : true,
                    "fileAndMalwareSyslogSeverity" : "ALERT",
                    "fileAndMalwareSyslogConfig" : {
                      "name" : "test",
                      "id" : "3f7ce75e-fd1b-11e8-8a68-ca0898f23acf",
                      "type" : "SyslogAlert"
                    },
                    "type" : "LoggingSetting",
                    "id" : "005056A9-9F80-0ed3-0000-030064771231"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves or modifies the logging setting associated with the specified access control policy ID and default action ID. If no default action ID is specified, retrieves list of all default actions associated with the specified access control policy ID. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateAccessPolicyLoggingSettingModel",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a logging setting.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The input default action model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AccessPolicyLoggingSettingModel"
          }
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AccessPolicyLoggingSettingModel"
            },
            "examples" : { }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/AccessPolicyLoggingSettingModel"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/operational/hitcounts" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, refreshes and clears Hit Count**",
        "operationId" : "getHitCount",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "Value is of format (including quotes): <code>\"deviceId:{uuid};ids:{uuid1,uuid2,..};fetchZeroHitCount:{true|false}\"</code><br/><code>deviceId</code> is UUID of device and is a mandatory field.<br/><code>ids</code> returns hitcounts of access rules if set to list of rule UUIDs. If this key is not used, all access rules will be returned (Note that this is applicable only in GET and DELETE operations). <br/><code>fetchZeroHitCount</code> returns only access rules whose hit count is zero if <code>true</code> (Note that this is applicable only in GET operation and if <code>ids</code> is not used).",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/HitCountListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/policy/accesspolicies/containerUUID/operational/hitcounts?filter=\"deviceId:{deviceId}\"&expanded=true ( Success: Test GET ALL method for HitCount )" : {
                  "link" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/policy/accesspolicies/containerUUID/operational/hitcounts?filter=\"deviceId:{deviceId}\"&expanded=true"
                  },
                  "items" : [ {
                    "metadata" : {
                      "policy" : {
                        "type" : "AccessPolicy",
                        "name" : "<Access Policy Name>",
                        "id" : "id_of_access_policy"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "id_of_global_domain",
                        "type" : "Domain"
                      },
                      "deviceRuleId" : "access_rule_id_on_ftd",
                      "ruleIndex" : "access_rule_name"
                    },
                    "link" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/policy/accesspolicies/containerUUID/operational/hitcounts?filter=\"deviceId:{deviceId};ids:{id_of_access_rule_1}\"&expanded=true"
                    },
                    "lastFetchTimeStamp" : "1997-07-16T19:20:30Z",
                    "type" : "AccessRule",
                    "hitCount" : 90,
                    "rule" : {
                      "id" : "id_of_access_rule_1",
                      "type" : "AccessRule",
                      "name" : "<Access Rule Name 1>"
                    },
                    "firstHitTimeStamp" : "1997-07-16T19:20:30Z",
                    "lastHitTimeStamp" : "1997-07-16T19:20:30Z"
                  }, {
                    "metadata" : {
                      "policy" : {
                        "type" : "AccessPolicy",
                        "name" : "<Access Policy Name>",
                        "id" : "id_of_access_policy"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "id_of_global_domain",
                        "type" : "Domain"
                      },
                      "deviceRuleId" : "access_rule_id_on_ftd",
                      "ruleIndex" : "access_rule_name"
                    },
                    "link" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/policy/accesspolicies/containerUUID/operational/hitcounts?filter=\"deviceId:{deviceId};ids:{id_of_access_rule_2}\"&expanded=true"
                    },
                    "lastFetchTimeStamp" : "1997-07-16T19:20:30Z",
                    "hitCount" : 0,
                    "rule" : {
                      "id" : "id_of_access_rule_2",
                      "type" : "AccessRule",
                      "name" : "<Access Rule Name 2>"
                    },
                    "firstHitTimeStamp" : "1997-07-16T19:20:30Z",
                    "lastHitTimeStamp" : "1997-07-16T19:20:30Z"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, refreshes and clears Hit Count _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateHitCount",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "Value is of format (including quotes): <code>\"deviceId:{uuid};ids:{uuid1,uuid2,..};fetchZeroHitCount:{true|false}\"</code><br/><code>deviceId</code> is UUID of device and is a mandatory field.<br/><code>ids</code> returns hitcounts of access rules if set to list of rule UUIDs. If this key is not used, all access rules will be returned (Note that this is applicable only in GET and DELETE operations). <br/><code>fetchZeroHitCount</code> returns only access rules whose hit count is zero if <code>true</code> (Note that this is applicable only in GET operation and if <code>ids</code> is not used).",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/HitCount"
            },
            "examples" : {
              "application/json" : {
                "Request example 2 : PUT /fmc_config/v1/domain/DomainUUID/policy/accesspolicies/containerUUID/operational/hitcounts?filter=\"{filterString}\";expanded=true ( Test PUT (Refresh) of HitCount )" : { },
                "Response Example 2 :PUT /fmc_config/v1/domain/DomainUUID/policy/accesspolicies/containerUUID/operational/hitcounts?filter=\"{filterString}\";expanded=true ( Test PUT (Refresh) of HitCount )" : {
                  "link" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/policy/accesspolicies/containerUUID/operational/hitcounts?filter=\"deviceId:{deviceId}\"&expanded=true"
                  },
                  "metadata" : {
                    "task" : {
                      "id" : "task_id",
                      "type" : "TaskStatus",
                      "links" : {
                        "self" : "link_to_task_status"
                      }
                    }
                  },
                  "type" : "HitCount"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/HitCount"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/DomainUUID/policy/accesspolicies/containerUUID/operational/hitcounts?filter=\"{filterString}\";expanded=true ( Test PUT (Refresh) of HitCount )" : { },
                "Response Example 1 :PUT /fmc_config/v1/domain/DomainUUID/policy/accesspolicies/containerUUID/operational/hitcounts?filter=\"{filterString}\";expanded=true ( Test PUT (Refresh) of HitCount )" : {
                  "link" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/policy/accesspolicies/containerUUID/operational/hitcounts?filter=\"deviceId:{deviceId}\"&expanded=true"
                  },
                  "metadata" : {
                    "task" : {
                      "id" : "task_id",
                      "type" : "TaskStatus",
                      "links" : {
                        "self" : "link_to_task_status"
                      }
                    }
                  },
                  "type" : "HitCount"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, refreshes and clears Hit Count _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteHitCount",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "Value is of format (including quotes): <code>\"deviceId:{uuid};ids:{uuid1,uuid2,..};fetchZeroHitCount:{true|false}\"</code><br/><code>deviceId</code> is UUID of device and is a mandatory field.<br/><code>ids</code> returns hitcounts of access rules if set to list of rule UUIDs. If this key is not used, all access rules will be returned (Note that this is applicable only in GET and DELETE operations). <br/><code>fetchZeroHitCount</code> returns only access rules whose hit count is zero if <code>true</code> (Note that this is applicable only in GET operation and if <code>ids</code> is not used).",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/HitCount"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /fmc_config/v1/domain/DomainUUID/policy/accesspolicies/containerUUID/operational/hitcounts?filter=\"{filterString}\";expanded=true ( Test DELETE (Clear) of HitCount )" : { }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/securityintelligencepolicies" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves the security intelligence policy associated with the specified Access Policy.**",
        "operationId" : "getAllAccessPolicySecurityIntelligencePolicy",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AccessPolicySecurityIntelligencePolicyListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/DomainUUID/policy/accesspolicies/accesspolicyUUID/securityintelligencepolicies?expanded=true ( Test GET ALL Success of AccessPolicy security intelligence policy )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/policy/accesspolicies/accesspolicyUUID/securityintelligencepolicies?offset=0&limit=1"
                  },
                  "items" : [ {
                    "type" : "SecurityIntelligencePolicy",
                    "id" : "securityIntelligencePolicyUUID",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/policy/accesspolicies/accesspolicyUUID/securityintelligencepolicies/securityintelligencepolicyUUID"
                    },
                    "urls" : {
                      "allowlist" : [ {
                        "sourceZone" : {
                          "name" : "SecurityZone",
                          "id" : "SecurityZoneUUID",
                          "type" : "SecurityZone",
                          "links" : {
                            "self" : "/fmc_config/v1/domain/DomainUUID/object/securityzones/SecurityZoneUUID"
                          }
                        },
                        "url" : {
                          "name" : "SIURLListObject",
                          "id" : "SIURLListObjectUUID",
                          "type" : "SIURLList",
                          "links" : {
                            "self" : "/fmc_config/v1/domain/DomainUUID/object/siurllists/SIURLListObjectUUID"
                          }
                        }
                      } ],
                      "blocklist" : [ {
                        "sourceZone" : {
                          "name" : "SecurityZone",
                          "id" : "SecurityZoneUUID",
                          "type" : "SecurityZone",
                          "links" : {
                            "self" : "/fmc_config/v1/domain/DomainUUID/object/securityzones/SecurityZoneUUID"
                          }
                        },
                        "url" : {
                          "name" : "SIURLFeed",
                          "id" : "SIURLFeedUUID",
                          "type" : "SIURLFeed",
                          "links" : {
                            "self" : "/fmc_config/v1/domain/DomainUUID/object/siurlfeeds/SIURLFeedUUID"
                          }
                        }
                      } ],
                      "blocklistLogging" : {
                        "enableLogging" : false,
                        "sendLogsToSyslogServer" : true,
                        "sendLogsToEventViewer" : true
                      }
                    },
                    "networks" : {
                      "allowlist" : [ {
                        "network" : {
                          "name" : "SINetworkList",
                          "id" : "SINetworkListUUID",
                          "type" : "SINetworkList",
                          "links" : {
                            "self" : "/fmc_config/v1/domain/DomainUUID/object/sinetworklists/SINetworkListUUID"
                          }
                        }
                      } ],
                      "blocklist" : [ {
                        "network" : {
                          "name" : "Network",
                          "id" : "NetworkUUID",
                          "type" : "Network",
                          "links" : {
                            "self" : "/fmc_config/v1/domain/DomainUUID/object/networks/NetworkUUID"
                          }
                        }
                      } ],
                      "blocklistLogging" : {
                        "enableLogging" : false,
                        "sendLogsToSyslogServer" : true,
                        "sendLogsToEventViewer" : true
                      }
                    },
                    "metadata" : {
                      "timestamp" : 1601475473350
                    },
                    "dnsPolicy" : {
                      "blocklistLogging" : {
                        "enableLogging" : false,
                        "sendLogsToSyslogServer" : true,
                        "sendLogsToEventViewer" : true,
                        "links" : {
                          "self" : "/fmc_config/v1/domain/DomainUUID/policy/dnspolicies/DNSPolicyUUID"
                        },
                        "type" : "DNSPolicy",
                        "name" : "name of the DNS policy",
                        "id" : "DNSPolicyUUID"
                      }
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{containerUUID}/securityintelligencepolicies/{objectId}" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves the security intelligence policy associated with the specified Access Policy.**",
        "operationId" : "getAccessPolicySecurityIntelligencePolicy",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the Security Intelligence policy associated with an Access Policy.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AccessPolicySecurityIntelligencePolicy"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/policy/accesspolicies/accesspolicyUUID/securityintelligencepolicies/securityintelligencepolicyUUID ( Test GET of AccessPolicySecurityIntelligencePolicies to get a record )" : {
                  "type" : "SecurityIntelligencePolicy",
                  "id" : "securityIntelligencePolicyUUID",
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/policy/accesspolicies/accesspolicyUUID/securityintelligencepolicies/securityintelligencepolicyUUID"
                  },
                  "urls" : {
                    "allowlist" : [ {
                      "sourceZone" : {
                        "name" : "SecurityZone",
                        "id" : "SecurityZoneUUID",
                        "type" : "SecurityZone",
                        "links" : {
                          "self" : "/fmc_config/v1/domain/DomainUUID/object/securityzones/SecurityZoneUUID"
                        }
                      },
                      "url" : {
                        "name" : "SIURLListObject",
                        "id" : "SIURLListObjectUUID",
                        "type" : "SIURLList",
                        "links" : {
                          "self" : "/fmc_config/v1/domain/DomainUUID/object/siurllists/SIURLListObjectUUID"
                        }
                      }
                    } ],
                    "blocklist" : [ {
                      "sourceZone" : {
                        "name" : "SecurityZone",
                        "id" : "SecurityZoneUUID",
                        "type" : "SecurityZone",
                        "links" : {
                          "self" : "/fmc_config/v1/domain/DomainUUID/object/securityzones/SecurityZoneUUID"
                        }
                      },
                      "url" : {
                        "name" : "SIURLFeed",
                        "id" : "SIURLFeedUUID",
                        "type" : "SIURLFeed",
                        "links" : {
                          "self" : "/fmc_config/v1/domain/DomainUUID/object/siurlfeeds/SIURLFeedUUID"
                        }
                      }
                    } ],
                    "blocklistLogging" : {
                      "enableLogging" : false,
                      "sendLogsToSyslogServer" : true,
                      "sendLogsToEventViewer" : true
                    }
                  },
                  "networks" : {
                    "allowlist" : [ {
                      "network" : {
                        "name" : "SINetworkList",
                        "id" : "SINetworkListUUID",
                        "type" : "SINetworkList",
                        "links" : {
                          "self" : "/fmc_config/v1/domain/DomainUUID/object/sinetworklists/SINetworkListUUID"
                        }
                      }
                    } ],
                    "blocklist" : [ {
                      "network" : {
                        "name" : "Network",
                        "id" : "NetworkUUID",
                        "type" : "Network",
                        "links" : {
                          "self" : "/fmc_config/v1/domain/DomainUUID/object/networks/NetworkUUID"
                        }
                      }
                    } ],
                    "blocklistLogging" : {
                      "enableLogging" : false,
                      "sendLogsToSyslogServer" : true,
                      "sendLogsToEventViewer" : true
                    }
                  },
                  "metadata" : {
                    "timestamp" : 1601475473350
                  },
                  "dnsPolicy" : {
                    "blocklistLogging" : {
                      "enableLogging" : false,
                      "sendLogsToSyslogServer" : true,
                      "sendLogsToEventViewer" : true
                    },
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/policy/dnspolicies/DNSPolicyUUID"
                    },
                    "type" : "DNSPolicy",
                    "name" : "name of the DNS policy",
                    "id" : "DNSPolicyUUID"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/accesspolicies/{objectId}" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the access control policy associated with the specified ID. Also, retrieves list of all access control policies.**",
        "operationId" : "getAccessPolicy",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for access control policy.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AccessPolicy"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/policy/accesspolicies/accesspolicyuuid ( Test GET Success of AccessPolicy policy )" : {
                  "type" : "AccessPolicy",
                  "name" : "AccessPolicy1_updated",
                  "description" : "policy to test FMC implementation",
                  "defaultAction" : {
                    "id" : "id_of_default_action",
                    "type" : "AccessPolicyDefaultAction"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the access control policy associated with the specified ID. Also, retrieves list of all access control policies. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateAccessPolicy",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for access control policy.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of access control policy.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AccessPolicy"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AccessPolicy"
            },
            "examples" : { }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/AccessPolicy"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the access control policy associated with the specified ID. Also, retrieves list of all access control policies. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteAccessPolicy",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for access control policy.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "ignoreWarning",
          "in" : "query",
          "description" : "Shows any warnings when deleting an access policy, if set to false. If not specified, value is set to true and warnings are ignored. Allowed values are 'true' and 'false'.",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AccessPolicy"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /fmc_config/v1/domain/DomainUUID/policy/accesspolicies ( Test DELETE success of AccessPolicy policy )" : {
                  "type" : "AccessPolicy",
                  "name" : "AccessPolicy1_updated",
                  "description" : "policy to test FMC implementation",
                  "defaultAction" : {
                    "id" : "id_of_default_action",
                    "type" : "AccessPolicyDefaultAction"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/dnspolicies" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves all the DNS Policies.**",
        "operationId" : "getAllDNSPolicy",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "Filter criteria can be specified using the format <code>name:policy_name</code><br/><br/><code>policy_name</code> -- Name of the DNS Policy to be queried.",
          "required" : false,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/DNSPolicyListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /api/fmc_config/v1/domain/DomainUUID/policy/dnspolicies?expanded=true ( Get all paginated DNS policy objects )" : {
                  "links" : {
                    "self" : "api/fmc_config/v1/domain/DomainUUID/policy/dnspolicies?expanded=true&offset=0&limit=3"
                  },
                  "items" : [ {
                    "name" : "Default DNS Policy",
                    "description" : "default DNS Policy",
                    "id" : "dnspolicyUUID",
                    "type" : "DNSPolicy",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/policy/dnspolicies/dnspolicyUUID"
                    }
                  }, {
                    "name" : "test DNS Policy",
                    "id" : "dnspolicyUUID",
                    "description" : "test DNS Policy",
                    "type" : "DNSPolicy",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/policy/dnspolicies/dnspolicyUUID"
                    }
                  }, {
                    "name" : "DNS Blacklist Policy",
                    "id" : "dnspolicyUUID",
                    "description" : "blacklist DNS Policy",
                    "type" : "DNSPolicy",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/policy/dnspolicies/dnspolicyUUID"
                    }
                  } ],
                  "paging" : {
                    "offset" : "0",
                    "limit" : "3",
                    "count" : "3",
                    "pages" : "1"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/dnspolicies/{containerUUID}/allowdnsrules" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves all the allow rules for a given DNS Policy.**",
        "operationId" : "getAllowDNSRule",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "Filter criteria can be specified using the format <code>name:rule_name</code><br/><br/><code>name</code> -- Name of the allow rule to be queried <br/>",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AllowDNSRuleListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/policy/dnspolicies/dnspolicyUUID/allowdnsrules?expanded=false&offset=0&limit=2 ( Get all paginated DNS Policy Allow Rules for a given DNS Policy UUID with limit set to 2 )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/policy/dnspolicies/dnspolicyUUID/allowdnsrules?expanded=false&offset=0&limit=2"
                  },
                  "items" : [ {
                    "name" : "DNSRuleName",
                    "action" : "ALLOW",
                    "type" : "AllowDNSRule"
                  }, {
                    "name" : "DNSRuleName",
                    "action" : "ALLOW",
                    "type" : "AllowDNSRule"
                  } ],
                  "paging" : {
                    "offset" : "0",
                    "limit" : "2",
                    "count" : "2",
                    "pages" : "1"
                  }
                },
                "Response Example 2 :GET /fmc_config/v1/domain/DomainUUID/policy/dnspolicies/dnspolicyUUID/allowdnsrules?expanded=true&offset=0&limit=1 ( Get all paginated DNS Policy Allow Rules for a given DNS Policy UUID with limit set to 1 and expanded true )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/policy/dnspolicies/dnspolicyUUID/allowdnsrules?expanded=true&offset=0&limit=1"
                  },
                  "items" : [ {
                    "name" : "Global Whitelist for DNS",
                    "action" : "ALLOW",
                    "type" : "AllowDNSRule",
                    "metadata" : {
                      "readOnly" : {
                        "state" : false
                      },
                      "ruleIndex" : 0,
                      "timestamp" : 1601994796,
                      "lastUser" : {
                        "name" : "admin",
                        "id" : "68d03c42-d9bd-11dc-89f2-b7961d42c462",
                        "type" : "user"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "e276abec-e0f2-11e3-8169-6d9ed49b625f",
                        "type" : "Domain"
                      }
                    },
                    "enabled" : true,
                    "systemDefault" : true,
                    "dnsLists" : {
                      "objects" : [ {
                        "id" : "SIDNSListUUID",
                        "type" : "SIDNSList",
                        "links" : {
                          "self" : "/fmc_config/v1/domain/DomainUUID/object/sidnslists/SIDNSListUUID"
                        }
                      } ]
                    }
                  } ],
                  "paging" : {
                    "offset" : "0",
                    "limit" : "1",
                    "count" : "1",
                    "pages" : "1"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/dnspolicies/{containerUUID}/blockdnsrules" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves all the block rules for a given DNS Policy.**",
        "operationId" : "getBlockDNSRule",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "Filter criteria can be specified using the format <code>name:rule_name</code><br/><br/><code>name</code> -- Name of the block rule to be queried <br/>",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/BlockDNSRuleListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/policy/dnspolicies/dnspolicyUUID/blockdnsrules?expanded=false&offset=0&limit=2 ( Get all paginated DNS Policy Block Rules for a given DNS Policy UUID with limit set to 2 )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/policy/dnspolicies/dnspolicyUUID/blockdnsrules?expanded=false&offset=0&limit=2"
                  },
                  "items" : [ {
                    "name" : "DNSRuleName",
                    "action" : "NXDOMAIN",
                    "type" : "BlockDNSRule"
                  }, {
                    "name" : "DNSRuleName",
                    "action" : "NXDOMAIN",
                    "type" : "BlockDNSRule"
                  } ],
                  "paging" : {
                    "offset" : "0",
                    "limit" : "2",
                    "count" : "2",
                    "pages" : "1"
                  }
                },
                "Response Example 2 :GET /fmc_config/v1/domain/DomainUUID/policy/dnspolicies/dnspolicyUUID/blockdnsrules?expanded=true&offset=0&limit=1 ( Get all paginated DNS Policy Block Rules for a given DNS Policy UUID with limit set to 1 and expanded true )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/policy/dnspolicies/dnspolicyUUID/blockdnsrules?expanded=true&offset=0&limit=1"
                  },
                  "items" : [ {
                    "name" : "Global Blacklist for DNS",
                    "action" : "NXDOMAIN",
                    "type" : "BlockDNSRule",
                    "metadata" : {
                      "readOnly" : {
                        "state" : false
                      },
                      "ruleIndex" : 4,
                      "timestamp" : 1601994796,
                      "lastUser" : {
                        "name" : "admin",
                        "id" : "68d03c42-d9bd-11dc-89f2-b7961d42c462",
                        "type" : "user"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "e276abec-e0f2-11e3-8169-6d9ed49b625f",
                        "type" : "Domain"
                      }
                    },
                    "enabled" : true,
                    "systemDefault" : true,
                    "dnsLists" : {
                      "objects" : [ {
                        "id" : "SIDNSListUUID",
                        "type" : "SIDNSList",
                        "links" : {
                          "self" : "/fmc_config/v1/domain/DomainUUID/object/sidnslists/SIDNSListUUID"
                        }
                      } ]
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/dnspolicies/{objectId}" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves all the DNS Policies.**",
        "operationId" : "getDNSPolicy",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a DNS policy.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/DNSPolicy"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /api/fmc_config/v1/domain/DomainUUID/policy/dnspolicies/dnspolicyUUID ( Test GET of DNS Policy )" : {
                  "id" : "dnspolicyUUID",
                  "type" : "DNSPolicy",
                  "name" : "Default DNS Policy",
                  "description" : "Default DNS Policy",
                  "links" : {
                    "self" : "/api/fmc_config/v1/domain/DomainUUID/policy/dnspolicies/dnspolicyUUID"
                  },
                  "metadata" : {
                    "domain" : {
                      "id" : "domainUUID",
                      "type" : "Domain",
                      "name" : "Global"
                    },
                    "lastUser" : {
                      "name" : "admin",
                      "id" : "userUUID",
                      "type" : "User"
                    },
                    "readOnly" : {
                      "state" : true
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/dynamicaccesspolicies" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the Dynamic Access Policy. If no ID is specified for a GET, retrieves list of all Dynamic Access Policies.**",
        "operationId" : "getAllDynamicAccessPolicy",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/DynamicAccessPolicyListContainer"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the Dynamic Access Policy. If no ID is specified for a GET, retrieves list of all Dynamic Access Policies. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createDynamicAccessPolicy",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of Dynamic Access Policy.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DynamicAccessPolicy"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/DynamicAccessPolicy"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/DynamicAccessPolicy"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/dynamicaccesspolicies/{objectId}" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the Dynamic Access Policy. If no ID is specified for a GET, retrieves list of all Dynamic Access Policies.**",
        "operationId" : "getDynamicAccessPolicy",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for Dynamic Access Policy.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/DynamicAccessPolicy"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the Dynamic Access Policy. If no ID is specified for a GET, retrieves list of all Dynamic Access Policies. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateDynamicAccessPolicy",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for Dynamic Access Policy.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of Dynamic Access Policy.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DynamicAccessPolicy"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/DynamicAccessPolicy"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/DynamicAccessPolicy"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the Dynamic Access Policy. If no ID is specified for a GET, retrieves list of all Dynamic Access Policies. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteDynamicAccessPolicy",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for Dynamic Access Policy.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/DynamicAccessPolicy"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/filepolicies" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves the endpoint device type object associated with the specified ID. If no ID is specified, retrieves list of all endpoint device type objects.**",
        "operationId" : "getAllFilePolicy",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FilePolicyListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/domainUUID/policy/filepolicies ( Success: Test GET ALL success )" : {
                  "links" : {
                    "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/policy/filepolicies?offset=0&limit=2"
                  },
                  "items" : [ {
                    "name" : "Test-TestDomain",
                    "id" : "File-policy-UUID-1",
                    "type" : "FilePolicy",
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/policy/filepolicies/File-policy-UUID-1"
                    }
                  }, {
                    "name" : "Test-GlobalDomain",
                    "id" : "File-policy-UUID-2",
                    "type" : "FilePolicy",
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/policy/filepolicies/File-policy-UUID-2"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/domainUUID/policy/filepolicies?expanded=true ( Success: Test GET ALL success with expanded=true )" : {
                  "links" : {
                    "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/policy/filepolicies?offset=0&limit=2"
                  },
                  "items" : [ {
                    "name" : "Test-TestDomain",
                    "id" : "File-policy-UUID-1",
                    "type" : "FilePolicy",
                    "description" : "Test-TestDomain",
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/policy/filepolicies/File-policy-UUID-1"
                    },
                    "metadata" : {
                      "readOnly" : {
                        "state" : true
                      },
                      "timestamp" : 1460056664,
                      "lastUser" : {
                        "name" : "admin",
                        "id" : "User-UUID",
                        "type" : "user"
                      },
                      "domain" : {
                        "name" : "TestDomain",
                        "id" : "domainUUID",
                        "type" : "domain"
                      }
                    }
                  }, {
                    "name" : "Test-GlobalDomain",
                    "id" : "File-policy-UUID-2",
                    "type" : "FilePolicy",
                    "description" : "Test-GlobalDomain",
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/policy/filepolicies/File-policy-UUID-2"
                    },
                    "metadata" : {
                      "readOnly" : {
                        "state" : false
                      },
                      "timestamp" : 1460057664,
                      "lastUser" : {
                        "name" : "admin",
                        "id" : "User-UUID",
                        "type" : "user"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "Global-domain-UUID",
                        "type" : "domain"
                      }
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/filepolicies/{objectId}" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves the endpoint device type object associated with the specified ID. If no ID is specified, retrieves list of all endpoint device type objects.**",
        "operationId" : "getFilePolicy",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a file policy.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FilePolicy"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/domainUUID/policy/filepolicies/File-policy-UUID-1 ( Success: Test GET method for filepolicy )" : {
                  "name" : "Test-TestDomain",
                  "id" : "File-policy-UUID-1",
                  "type" : "FilePolicy",
                  "description" : "Test-TestDomain",
                  "links" : {
                    "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/policy/filepolicies/File-policy-UUID-1"
                  },
                  "metadata" : {
                    "readOnly" : {
                      "state" : true
                    },
                    "timestamp" : 1460056664,
                    "lastUser" : {
                      "name" : "admin",
                      "id" : "User-UUID",
                      "type" : "user"
                    },
                    "domain" : {
                      "name" : "TestDomain",
                      "id" : "domainUUID",
                      "type" : "domain"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/ftdnatpolicies" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the NAT policy associated with the specified ID. Also, retrieves list of all NAT policies.**",
        "operationId" : "getAllFTDNatPolicy",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDNatPolicyListContainer"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the NAT policy associated with the specified ID. Also, retrieves list of all NAT policies. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createFTDNatPolicy",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of NAT policy.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FTDNatPolicy"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/FTDNatPolicy"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /api/fmc_config/v1/domain/DomainUUID/policy/ftdnatpolicies ( Example payloads for POST on NAT policy. )" : {
                  "type" : "FTDNatPolicy",
                  "name" : "NatPol5",
                  "description" : "nat policy for testing rest api"
                },
                "Response Example 1 :POST /api/fmc_config/v1/domain/DomainUUID/policy/ftdnatpolicies ( Example payloads for POST on NAT policy. )" : {
                  "type" : "FTDNatPolicy",
                  "links" : {
                    "self" : "<fmc_ip>/api/fmc_config/v1/domain/domainUUID/policy/ftdnatpolicies/natPolUuid1"
                  },
                  "rules" : {
                    "refType" : "list",
                    "links" : {
                      "self" : "<fmc_ip>/api/fmc_config/v1/domain/domainUUID/policy/ftdnatpolicies/natPolUuid1/natrules"
                    }
                  },
                  "name" : "NatPol5",
                  "description" : "nat policy for testing rest api",
                  "id" : "natPolUuid1"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/FTDNatPolicy"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/ftdnatpolicies/{containerUUID}/autonatrules" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the Auto NAT rule associated with the specified ID. Also, retrieves list of all Auto NAT rules.**",
        "operationId" : "getAllFTDAutoNatRule",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDAutoNatRuleListContainer"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the Auto NAT rule associated with the specified ID. Also, retrieves list of all Auto NAT rules. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createMultipleFTDAutoNatRule",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The input Auto NAT rule model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FTDAutoNatRule"
          }
        }, {
          "name" : "bulk",
          "in" : "query",
          "description" : "Enables bulk create for auto nat rules.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "section",
          "in" : "query",
          "description" : "Retrieves, creates or modifies auto nat rule in given section. Allowed value is 'auto'.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/FTDAutoNatRule"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /api/fmc_config/v1/domain/DomainUUID/policy/ftdnatpolicies/natPolicyUuid/autonatrules ( Example payload for POST request on auto NAT rules. )" : {
                  "originalNetwork" : {
                    "type" : "Network",
                    "id" : "Network object uuid"
                  },
                  "translatedNetwork" : {
                    "type" : "Network",
                    "id" : "Network object uuid"
                  },
                  "type" : "FTDAutoNatRule",
                  "natType" : "STATIC",
                  "interfaceIpv6" : false,
                  "fallThrough" : false,
                  "dns" : false,
                  "routeLookup" : false,
                  "noProxyArp" : false,
                  "netToNet" : false,
                  "sourceInterface" : {
                    "id" : "security zone uuid",
                    "type" : "SecurityZone"
                  },
                  "destinationInterface" : {
                    "id" : "security zone uuid",
                    "type" : "SecurityZone"
                  }
                },
                "Request example 2 : POST /api/fmc_config/v1/domain/DomainUUID/policy/ftdnatpolicies/natPolicyUuid/autonatrules ( Example payload for POST request on auto NAT rules with PAT block-allocation. )" : {
                  "originalNetwork" : {
                    "type" : "Network",
                    "id" : "Network object uuid"
                  },
                  "patOptions" : {
                    "patPoolAddress" : {
                      "type" : "Host",
                      "id" : "Host object uuid",
                      "name" : "NW1"
                    },
                    "interfacePat" : false,
                    "includeReserve" : false,
                    "roundRobin" : true,
                    "extendedPat" : false,
                    "flatPortRange" : false,
                    "blockAllocation" : true
                  },
                  "type" : "FTDAutoNatRule",
                  "natType" : "DYNAMIC",
                  "interfaceIpv6" : false,
                  "fallThrough" : false,
                  "dns" : false,
                  "routeLookup" : false,
                  "noProxyArp" : false,
                  "netToNet" : false,
                  "sourceInterface" : {
                    "id" : "security zone uuid",
                    "type" : "SecurityZone"
                  },
                  "destinationInterface" : {
                    "id" : "security zone uuid",
                    "type" : "SecurityZone"
                  }
                },
                "Request example 3 : POST /api/fmc_config/v1/domain/DomainUUID/policy/ftdnatpolicies/natPolicyUuid/autonatrules ( Example payload for POST request on auto NAT rules with interface in translated network )" : {
                  "originalNetwork" : {
                    "type" : "Network",
                    "id" : "Network object uuid"
                  },
                  "interfaceInTranslatedNetwork" : true,
                  "type" : "FTDAutoNatRule",
                  "natType" : "STATIC",
                  "interfaceIpv6" : false,
                  "fallThrough" : false,
                  "dns" : false,
                  "routeLookup" : false,
                  "noProxyArp" : false,
                  "netToNet" : false,
                  "sourceInterface" : {
                    "id" : "security zone uuid",
                    "type" : "SecurityZone"
                  },
                  "destinationInterface" : {
                    "id" : "security zone uuid",
                    "type" : "SecurityZone"
                  }
                },
                "Request example 4 : POST /api/fmc_config/v1/domain/DomainUUID/policy/ftdnatpolicies/natPolicyUuid/autonatrules?bulk=true ( Example payload for bulk POST on auto NAT rules )" : [ {
                  "type" : "FTDAutoNatRule",
                  "originalNetwork" : {
                    "type" : "Network",
                    "name" : "net_obj_name",
                    "id" : "net_obj_id"
                  },
                  "serviceProtocol" : "TCP",
                  "originalPort" : 123,
                  "translatedNetwork" : {
                    "type" : "Network",
                    "name" : "net_obj_name",
                    "id" : "net_obj_id"
                  },
                  "translatedPort" : 234,
                  "interfaceInTranslatedNetwork" : false,
                  "dns" : false,
                  "routeLookup" : false,
                  "noProxyArp" : false,
                  "netToNet" : false,
                  "fallThrough" : false,
                  "natType" : "STATIC",
                  "sourceInterface" : {
                    "name" : "sec_zone_name",
                    "id" : "sec_zone_id",
                    "type" : "SecurityZone"
                  },
                  "interfaceIpv6" : false,
                  "destinationInterface" : {
                    "name" : "sec_zone_name",
                    "id" : "sec_zone_id",
                    "type" : "SecurityZone"
                  }
                }, {
                  "type" : "FTDAutoNatRule",
                  "originalNetwork" : {
                    "type" : "Network",
                    "name" : "net_obj_name",
                    "id" : "net_obj_id"
                  },
                  "originalPort" : 0,
                  "translatedPort" : 0,
                  "interfaceInTranslatedNetwork" : false,
                  "dns" : false,
                  "routeLookup" : false,
                  "noProxyArp" : false,
                  "netToNet" : false,
                  "fallThrough" : false,
                  "patOptions" : {
                    "roundRobin" : false,
                    "patPoolAddress" : {
                      "type" : "Network",
                      "name" : "net_obj_name",
                      "id" : "net_obj_id"
                    },
                    "interfacePat" : false,
                    "includeReserve" : false,
                    "flatPortRange" : true,
                    "extendedPat" : false
                  },
                  "natType" : "DYNAMIC",
                  "sourceInterface" : {
                    "name" : "sec_zone_name",
                    "id" : "sec_zone_id",
                    "type" : "SecurityZone"
                  },
                  "interfaceIpv6" : false,
                  "destinationInterface" : {
                    "name" : "sec_zone_name",
                    "id" : "sec_zone_id",
                    "type" : "SecurityZone"
                  }
                } ],
                "Response Example 1 :POST /api/fmc_config/v1/domain/DomainUUID/policy/ftdnatpolicies/natPolicyUuid/autonatrules ( Example payload for POST request on auto NAT rules. )" : {
                  "metadata" : {
                    "section" : "AUTO",
                    "index" : 0,
                    "timestamp" : 1493371106718,
                    "domain" : {
                      "name" : "Global",
                      "id" : "global_domain_uuid",
                      "type" : "Domain"
                    }
                  },
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/global_domain_uuid/policy/ftdnatpolicies/natPolicyUuid/autonatrules/autoNatRuleUuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/global_domain_uuid/policy/ftdnatpolicies/natPolicyUuid/natrules"
                  },
                  "id" : "autoNatRuleUuid",
                  "originalNetwork" : {
                    "type" : "Network",
                    "id" : "Network object uuid",
                    "name" : "Network object name"
                  },
                  "translatedNetwork" : {
                    "type" : "Network",
                    "id" : "Network object uuid",
                    "name" : "Network object name"
                  },
                  "sourceInterface" : {
                    "id" : "security zone uuid",
                    "type" : "SecurityZone",
                    "name" : "Security zone object name"
                  },
                  "destinationInterface" : {
                    "id" : "security zone uuid",
                    "type" : "SecurityZone",
                    "name" : "Security zone object name"
                  },
                  "type" : "FTDAutoNatRule",
                  "natType" : "STATIC",
                  "interfaceIpv6" : false,
                  "fallThrough" : false,
                  "dns" : false,
                  "routeLookup" : false,
                  "noProxyArp" : false,
                  "netToNet" : false
                },
                "Response Example 2 :POST /api/fmc_config/v1/domain/DomainUUID/policy/ftdnatpolicies/natPolicyUuid/autonatrules ( Example payload for POST request on auto NAT rules with PAT block-allocation. )" : {
                  "metadata" : {
                    "section" : "AUTO",
                    "index" : 0,
                    "timestamp" : 1493371106718,
                    "domain" : {
                      "name" : "Global",
                      "id" : "global_domain_uuid",
                      "type" : "Domain"
                    }
                  },
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/global_domain_uuid/policy/ftdnatpolicies/natPolicyUuid/autonatrules/autoNatRuleUuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/global_domain_uuid/policy/ftdnatpolicies/natPolicyUuid/natrules"
                  },
                  "id" : "autoNatRuleUuid",
                  "originalNetwork" : {
                    "type" : "Network",
                    "id" : "Network object uuid",
                    "name" : "Network object name"
                  },
                  "patOptions" : {
                    "patPoolAddress" : {
                      "type" : "Host",
                      "id" : "Host object uuid",
                      "name" : "NW1"
                    },
                    "interfacePat" : false,
                    "includeReserve" : false,
                    "roundRobin" : true,
                    "extendedPat" : false,
                    "flatPortRange" : false,
                    "blockAllocation" : true
                  },
                  "sourceInterface" : {
                    "id" : "security zone uuid",
                    "type" : "SecurityZone",
                    "name" : "Security zone object name"
                  },
                  "destinationInterface" : {
                    "id" : "security zone uuid",
                    "type" : "SecurityZone",
                    "name" : "Security zone object name"
                  },
                  "type" : "FTDAutoNatRule",
                  "natType" : "DYNAMIC",
                  "interfaceIpv6" : false,
                  "fallThrough" : false,
                  "dns" : false,
                  "routeLookup" : false,
                  "noProxyArp" : false,
                  "netToNet" : false
                },
                "Response Example 3 :POST /api/fmc_config/v1/domain/DomainUUID/policy/ftdnatpolicies/natPolicyUuid/autonatrules ( Example payload for POST request on auto NAT rules with interface in translated network )" : {
                  "metadata" : {
                    "section" : "AUTO",
                    "index" : 0,
                    "timestamp" : 1493371106718,
                    "domain" : {
                      "name" : "Global",
                      "id" : "global_domain_uuid",
                      "type" : "Domain"
                    }
                  },
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/global_domain_uuid/policy/ftdnatpolicies/natPolicyUuid/autonatrules/autoNatRuleUuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/global_domain_uuid/policy/ftdnatpolicies/natPolicyUuid/natrules"
                  },
                  "id" : "autoNatRuleUuid",
                  "originalNetwork" : {
                    "type" : "Network",
                    "id" : "Network object uuid",
                    "name" : "Network object name"
                  },
                  "sourceInterface" : {
                    "id" : "security zone uuid",
                    "type" : "SecurityZone",
                    "name" : "Security zone object name"
                  },
                  "destinationInterface" : {
                    "id" : "security zone uuid",
                    "type" : "SecurityZone",
                    "name" : "Security zone object name"
                  },
                  "interfaceInTranslatedNetwork" : true,
                  "type" : "FTDAutoNatRule",
                  "natType" : "STATIC",
                  "interfaceIpv6" : false,
                  "fallThrough" : false,
                  "dns" : false,
                  "routeLookup" : false,
                  "noProxyArp" : false,
                  "netToNet" : false
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/FTDAutoNatRule"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/ftdnatpolicies/{containerUUID}/autonatrules/{objectId}" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the Auto NAT rule associated with the specified ID. Also, retrieves list of all Auto NAT rules.**",
        "operationId" : "getFTDAutoNatRule",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of an Auto NAT rule.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "section",
          "in" : "query",
          "description" : "Retrieves, creates or modifies auto nat rule in given section. Allowed value is 'auto'.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDAutoNatRule"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /api/fmc_config/v1/domain/DomainUUID/policy/ftdnatpolicies/natPolicyUuid/autonatrules/autoNatRuleUuid1 ( Example payload for GET request on auto NAT rules. )" : {
                  "metadata" : {
                    "section" : "AUTO",
                    "timestamp" : 1489053023583,
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUuid",
                      "type" : "Domain"
                    }
                  },
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/policy/ftdnatpolicies/natPolicyUuid/autonatrules/autoNatRuleUuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/policy/ftdnatpolicies/natPolicyUuid/natrules"
                  },
                  "serviceProtocol" : "TCP",
                  "translatedNetwork" : {
                    "type" : "Network",
                    "id" : "networkObjUuid",
                    "name" : "IPv4-Multicast"
                  },
                  "translatedPort" : 1234,
                  "originalNetwork" : {
                    "type" : "Network",
                    "id" : "networkObjUuid",
                    "name" : "IPv4-Link-Local"
                  },
                  "originalPort" : 345,
                  "type" : "FTDAutoNatRule",
                  "destinationInterface" : {
                    "name" : "seczonemanual",
                    "id" : "secZoneObjUuid",
                    "type" : "SecurityZone"
                  },
                  "dns" : false,
                  "interfaceIpv6" : false,
                  "noProxyArp" : false,
                  "netToNet" : false,
                  "natType" : "STATIC",
                  "sourceInterface" : {
                    "name" : "seczonemanual",
                    "id" : "secZoneObjUuid",
                    "type" : "SecurityZone"
                  },
                  "id" : "autoNatRuleUuid"
                },
                "Response Example 2 :GET /api/fmc_config/v1/domain/DomainUUID/policy/ftdnatpolicies/natPolicyUuid/autonatrules ( Example payload for GET listing on auto NAT rules )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/policy/ftdnatpolicies/natPolicyUuid/autonatrules?offset=0&limit=6"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/policy/ftdnatpolicies/natPolicyUuid/autonatrules/autoNatRuleUuid1",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/policy/ftdnatpolicies/natPolicyUuid/natrules"
                    },
                    "type" : "FTDAutoNatRule",
                    "id" : "autoNatRuleUuid1"
                  }, {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/policy/ftdnatpolicies/natPolicyUuid/autonatrules/autoNatRuleUuid2",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/policy/ftdnatpolicies/natPolicyUuid/natrules"
                    },
                    "type" : "FTDAutoNatRule",
                    "id" : "autoNatRuleUuid2"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                },
                "Response Example 3 :GET /api/fmc_config/v1/domain/DomainUUID/policy/ftdnatpolicies/natPolicyUuid/autonatrules?expanded=true ( Example payload for GET listing with ?expanded=true )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/policy/ftdnatpolicies/natPolicyUuid/autonatrules?offset=0&limit=2&expanded=true"
                  },
                  "items" : [ {
                    "metadata" : {
                      "section" : "AUTO",
                      "timestamp" : 1489053023583,
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUuid",
                        "type" : "Domain"
                      }
                    },
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/policy/ftdnatpolicies/natPolicyUuid/autonatrules/autoNatRuleUuid1",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/policy/ftdnatpolicies/natPolicyUuid/natrules"
                    },
                    "serviceProtocol" : "TCP",
                    "translatedNetwork" : {
                      "type" : "Network",
                      "id" : "networkObjUuid",
                      "name" : "IPv4-Multicast"
                    },
                    "translatedPort" : 1234,
                    "originalNetwork" : {
                      "type" : "Network",
                      "id" : "networkObjUuid",
                      "name" : "IPv4-Link-Local"
                    },
                    "originalPort" : 345,
                    "type" : "FTDAutoNatRule",
                    "destinationInterface" : {
                      "name" : "seczonemanual",
                      "id" : "secZoneObjUuid",
                      "type" : "SecurityZone"
                    },
                    "dns" : false,
                    "interfaceIpv6" : false,
                    "noProxyArp" : false,
                    "netToNet" : false,
                    "natType" : "STATIC",
                    "sourceInterface" : {
                      "name" : "seczonemanual",
                      "id" : "secZoneObjUuid",
                      "type" : "SecurityZone"
                    },
                    "id" : "autoNatRuleUuid1"
                  }, {
                    "metadata" : {
                      "section" : "AUTO",
                      "timestamp" : 1489032251323,
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUuid",
                        "type" : "Domain"
                      }
                    },
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/policy/ftdnatpolicies/natPolicyUuid/autonatrules/autoNatRuleUuid2",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/policy/ftdnatpolicies/natPolicyUuid/natrules"
                    },
                    "originalNetwork" : {
                      "type" : "Network",
                      "id" : "networkObjUuid",
                      "name" : "IPv4-Multicast"
                    },
                    "type" : "FTDAutoNatRule",
                    "destinationInterface" : {
                      "name" : "seczonemanual",
                      "id" : "secZoneObjUuid",
                      "type" : "SecurityZone"
                    },
                    "dns" : false,
                    "interfaceIpv6" : false,
                    "noProxyArp" : false,
                    "netToNet" : false,
                    "natType" : "STATIC",
                    "id" : "autoNatRuleUuid2"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the Auto NAT rule associated with the specified ID. Also, retrieves list of all Auto NAT rules. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateFTDAutoNatRule",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of an Auto NAT rule.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The input Auto NAT rule model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FTDAutoNatRule"
          }
        }, {
          "name" : "section",
          "in" : "query",
          "description" : "Retrieves, creates or modifies auto nat rule in given section. Allowed value is 'auto'.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDAutoNatRule"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /api/fmc_config/v1/domain/DomainUUID/policy/ftdnatpolicies/natPolicyUuid/autonatrules/autoNatRuleUuid ( Example payload for PUT request on Auto NAT rules )" : {
                  "originalNetwork" : {
                    "type" : "Network",
                    "id" : "Network object uuid"
                  },
                  "translatedNetwork" : {
                    "type" : "Network",
                    "id" : "Network object uuid"
                  },
                  "id" : "autoNatRuleUuid",
                  "type" : "FTDAutoNatRule",
                  "natType" : "STATIC",
                  "interfaceIpv6" : false,
                  "fallThrough" : false,
                  "dns" : false,
                  "routeLookup" : false,
                  "noProxyArp" : false,
                  "netToNet" : false,
                  "sourceInterface" : {
                    "id" : "security zone uuid",
                    "type" : "SecurityZone"
                  },
                  "destinationInterface" : {
                    "id" : "security zone uuid",
                    "type" : "SecurityZone"
                  }
                },
                "Request example 2 : PUT /api/fmc_config/v1/domain/DomainUUID/policy/ftdnatpolicies/natPolicyUuid/autonatrules/autoNatRuleUuid ( Example payload for PUT request on Auto NAT rules with PAT options. )" : {
                  "originalNetwork" : {
                    "type" : "Network",
                    "id" : "Network object uuid"
                  },
                  "patOptions" : {
                    "patPoolAddress" : {
                      "type" : "Host",
                      "id" : "Host object uuid",
                      "name" : "NW1"
                    },
                    "interfacePat" : false,
                    "includeReserve" : true,
                    "roundRobin" : true,
                    "extendedPat" : true,
                    "flatPortRange" : true
                  },
                  "id" : "autoNatRuleUuid",
                  "type" : "FTDAutoNatRule",
                  "natType" : "DYNAMIC",
                  "interfaceIpv6" : false,
                  "fallThrough" : false,
                  "dns" : false,
                  "routeLookup" : false,
                  "noProxyArp" : false,
                  "netToNet" : false,
                  "sourceInterface" : {
                    "id" : "security zone uuid",
                    "type" : "SecurityZone"
                  },
                  "destinationInterface" : {
                    "id" : "security zone uuid",
                    "type" : "SecurityZone"
                  }
                },
                "Response Example 1 :PUT /api/fmc_config/v1/domain/DomainUUID/policy/ftdnatpolicies/natPolicyUuid/autonatrules/autoNatRuleUuid ( Example payload for PUT request on Auto NAT rules )" : {
                  "metadata" : {
                    "section" : "AUTO",
                    "index" : 0,
                    "timestamp" : 1493371106718,
                    "domain" : {
                      "name" : "Global",
                      "id" : "global_domain_uuid",
                      "type" : "Domain"
                    }
                  },
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/global_domain_uuid/policy/ftdnatpolicies/natPolicyUuid/autonatrules/autoNatRuleUuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/global_domain_uuid/policy/ftdnatpolicies/natPolicyUuid/natrules"
                  },
                  "id" : "autoNatRuleUuid",
                  "originalNetwork" : {
                    "type" : "Network",
                    "id" : "Network object uuid",
                    "name" : "Network object name"
                  },
                  "translatedNetwork" : {
                    "type" : "Network",
                    "id" : "Network object uuid",
                    "name" : "Network object name"
                  },
                  "sourceInterface" : {
                    "id" : "security zone uuid",
                    "type" : "SecurityZone",
                    "name" : "Security zone object name"
                  },
                  "destinationInterface" : {
                    "id" : "security zone uuid",
                    "type" : "SecurityZone",
                    "name" : "Security zone object name"
                  },
                  "type" : "FTDAutoNatRule",
                  "natType" : "STATIC",
                  "interfaceIpv6" : false,
                  "fallThrough" : false,
                  "dns" : false,
                  "routeLookup" : false,
                  "noProxyArp" : false,
                  "netToNet" : false
                },
                "Response Example 2 :PUT /api/fmc_config/v1/domain/DomainUUID/policy/ftdnatpolicies/natPolicyUuid/autonatrules/autoNatRuleUuid ( Example payload for PUT request on Auto NAT rules with PAT options. )" : {
                  "metadata" : {
                    "section" : "AUTO",
                    "index" : 0,
                    "timestamp" : 1493371106718,
                    "domain" : {
                      "name" : "Global",
                      "id" : "global_domain_uuid",
                      "type" : "Domain"
                    }
                  },
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/global_domain_uuid/policy/ftdnatpolicies/natPolicyUuid/autonatrules/autoNatRuleUuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/global_domain_uuid/policy/ftdnatpolicies/natPolicyUuid/natrules"
                  },
                  "id" : "autoNatRuleUuid",
                  "originalNetwork" : {
                    "type" : "Network",
                    "id" : "Network object uuid",
                    "name" : "Network object name"
                  },
                  "patOptions" : {
                    "patPoolAddress" : {
                      "type" : "Host",
                      "id" : "Host object uuid",
                      "name" : "NW1"
                    },
                    "interfacePat" : false,
                    "includeReserve" : true,
                    "roundRobin" : true,
                    "extendedPat" : true,
                    "flatPortRange" : true
                  },
                  "sourceInterface" : {
                    "id" : "security zone uuid",
                    "type" : "SecurityZone",
                    "name" : "Security zone object name"
                  },
                  "destinationInterface" : {
                    "id" : "security zone uuid",
                    "type" : "SecurityZone",
                    "name" : "Security zone object name"
                  },
                  "type" : "FTDAutoNatRule",
                  "natType" : "DYNAMIC",
                  "interfaceIpv6" : false,
                  "fallThrough" : false,
                  "dns" : false,
                  "routeLookup" : false,
                  "noProxyArp" : false,
                  "netToNet" : false
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/FTDAutoNatRule"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the Auto NAT rule associated with the specified ID. Also, retrieves list of all Auto NAT rules. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteFTDAutoNatRule",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of an Auto NAT rule.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDAutoNatRule"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /api/fmc_config/v1/domain/DomainUUID/policy/ftdnatpolicies/natPolicyUuid/autonatrules/autoNatRuleUuid ( Example payload for DELETE request on Auto NAT rules with PAT options. )" : {
                  "metadata" : {
                    "section" : "AUTO",
                    "index" : 0,
                    "timestamp" : 1493371106718,
                    "domain" : {
                      "name" : "Global",
                      "id" : "global_domain_uuid",
                      "type" : "Domain"
                    }
                  },
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/global_domain_uuid/policy/ftdnatpolicies/natPolicyUuid/autonatrules/autoNatRuleUuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/global_domain_uuid/policy/ftdnatpolicies/natPolicyUuid/natrules"
                  },
                  "id" : "autoNatRuleUuid",
                  "originalNetwork" : {
                    "type" : "Network",
                    "id" : "Network object uuid",
                    "name" : "Network object name"
                  },
                  "patOptions" : {
                    "patPoolAddress" : {
                      "type" : "Host",
                      "id" : "Host object uuid",
                      "name" : "NW1"
                    },
                    "interfacePat" : false,
                    "includeReserve" : true,
                    "roundRobin" : true,
                    "extendedPat" : true,
                    "flatPortRange" : true
                  },
                  "sourceInterface" : {
                    "id" : "security zone uuid",
                    "type" : "SecurityZone",
                    "name" : "Security zone object name"
                  },
                  "destinationInterface" : {
                    "id" : "security zone uuid",
                    "type" : "SecurityZone",
                    "name" : "Security zone object name"
                  },
                  "type" : "FTDAutoNatRule",
                  "natType" : "DYNAMIC",
                  "interfaceIpv6" : false,
                  "fallThrough" : false,
                  "dns" : false,
                  "routeLookup" : false,
                  "noProxyArp" : false,
                  "netToNet" : false
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/ftdnatpolicies/{containerUUID}/manualnatrules" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the Manual NAT rule associated with the specified ID. Also, retrieves list of all Manual NAT rules.**",
        "operationId" : "getAllFTDManualNatRule",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDManualNatRuleListContainer"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the Manual NAT rule associated with the specified ID. Also, retrieves list of all Manual NAT rules. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createMultipleFTDManualNatRule",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The input Manual NAT rule model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FTDManualNatRule"
          }
        }, {
          "name" : "bulk",
          "in" : "query",
          "description" : "Enables bulk create for manual nat rules.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "section",
          "in" : "query",
          "description" : "Retrieves, creates or modifies manual nat rule in given section. Allowed value is 'before_auto' and 'after_auto'.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "targetIndex",
          "in" : "query",
          "description" : "Creates or modifies manual nat rule at given targetIndex. It takes an integer value.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/FTDManualNatRule"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /api/fmc_config/v1/domain/DomainUUID/policy/ftdnatpolicies/natPolicyUuid/manualnatrules ( Example payload for POST on manual NAT rules. )" : {
                  "originalDestinationPort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid"
                  },
                  "originalSource" : {
                    "type" : "Network",
                    "id" : "Network object uuid"
                  },
                  "originalSourcePort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid"
                  },
                  "translatedDestination" : {
                    "type" : "Network",
                    "id" : "Network object uuid"
                  },
                  "translatedDestinationPort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid"
                  },
                  "translatedSource" : {
                    "type" : "Network",
                    "id" : "network object uuid"
                  },
                  "translatedSourcePort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid"
                  },
                  "unidirectional" : false,
                  "originalDestination" : {
                    "type" : "Network",
                    "id" : "network object uuid"
                  },
                  "interfaceInOriginalDestination" : false,
                  "type" : "FTDManualNatRule",
                  "enabled" : true,
                  "natType" : "STATIC",
                  "interfaceIpv6" : false,
                  "fallThrough" : false,
                  "dns" : false,
                  "routeLookup" : false,
                  "noProxyArp" : false,
                  "netToNet" : false,
                  "sourceInterface" : {
                    "id" : "security zone uuid",
                    "type" : "SecurityZone"
                  },
                  "destinationInterface" : {
                    "id" : "security zone uuid",
                    "type" : "SecurityZone"
                  },
                  "description" : "description of nat rule"
                },
                "Request example 2 : POST /api/fmc_config/v1/domain/DomainUUID/policy/ftdnatpolicies/natPolicyUuid/manualnatrules ( Example payload for POST on manual NAT rules with interface in translated source. )" : {
                  "originalDestinationPort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid"
                  },
                  "originalSource" : {
                    "type" : "Network",
                    "id" : "Network object uuid"
                  },
                  "originalSourcePort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid"
                  },
                  "translatedDestination" : {
                    "type" : "Network",
                    "id" : "Network object uuid"
                  },
                  "translatedDestinationPort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid"
                  },
                  "translatedSourcePort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid"
                  },
                  "originalDestination" : {
                    "type" : "Network",
                    "id" : "network object uuid"
                  },
                  "unidirectional" : false,
                  "interfaceInOriginalDestination" : false,
                  "interfaceInTranslatedSource" : true,
                  "type" : "FTDManualNatRule",
                  "enabled" : true,
                  "natType" : "STATIC",
                  "interfaceIpv6" : false,
                  "fallThrough" : false,
                  "dns" : false,
                  "routeLookup" : false,
                  "noProxyArp" : false,
                  "netToNet" : false,
                  "sourceInterface" : {
                    "id" : "security zone uuid",
                    "type" : "SecurityZone"
                  },
                  "destinationInterface" : {
                    "id" : "security zone uuid",
                    "type" : "SecurityZone"
                  },
                  "description" : "description of nat rule"
                },
                "Request example 3 : POST /api/fmc_config/v1/domain/DomainUUID/policy/ftdnatpolicies/natPolicyUuid/manualnatrules ( Example payload for POST on manual NAT rules with interface in original destination )" : {
                  "originalDestinationPort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid"
                  },
                  "originalSource" : {
                    "type" : "Network",
                    "id" : "Network object uuid"
                  },
                  "originalSourcePort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid"
                  },
                  "translatedDestination" : {
                    "type" : "Network",
                    "id" : "Network object uuid"
                  },
                  "translatedDestinationPort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid"
                  },
                  "translatedSource" : {
                    "type" : "Network",
                    "id" : "network object uuid"
                  },
                  "translatedSourcePort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid"
                  },
                  "unidirectional" : false,
                  "interfaceInOriginalDestination" : true,
                  "type" : "FTDManualNatRule",
                  "enabled" : true,
                  "natType" : "STATIC",
                  "interfaceIpv6" : false,
                  "fallThrough" : false,
                  "dns" : false,
                  "routeLookup" : false,
                  "noProxyArp" : false,
                  "netToNet" : false,
                  "sourceInterface" : {
                    "id" : "security zone uuid",
                    "type" : "SecurityZone"
                  },
                  "destinationInterface" : {
                    "id" : "security zone uuid",
                    "type" : "SecurityZone"
                  },
                  "description" : "description of nat rule"
                },
                "Request example 4 : POST /api/fmc_config/v1/domain/DomainUUID/policy/ftdnatpolicies/natPolicyUuid/manualnatrules?section=before_auto&targetIndex=2 ( Example payload for POST on manual NAT rules with 'section' and 'targetIndex' query params. )" : {
                  "originalDestinationPort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid"
                  },
                  "originalSource" : {
                    "type" : "Network",
                    "id" : "Network object uuid"
                  },
                  "originalSourcePort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid"
                  },
                  "translatedDestination" : {
                    "type" : "Network",
                    "id" : "Network object uuid"
                  },
                  "translatedDestinationPort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid"
                  },
                  "translatedSource" : {
                    "type" : "Network",
                    "id" : "network object uuid"
                  },
                  "translatedSourcePort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid"
                  },
                  "unidirectional" : false,
                  "originalDestination" : {
                    "type" : "Network",
                    "id" : "network object uuid"
                  },
                  "interfaceInOriginalDestination" : false,
                  "type" : "FTDManualNatRule",
                  "enabled" : true,
                  "natType" : "STATIC",
                  "interfaceIpv6" : false,
                  "fallThrough" : false,
                  "dns" : false,
                  "routeLookup" : false,
                  "noProxyArp" : false,
                  "netToNet" : false,
                  "sourceInterface" : {
                    "id" : "security zone uuid",
                    "type" : "SecurityZone"
                  },
                  "destinationInterface" : {
                    "id" : "security zone uuid",
                    "type" : "SecurityZone"
                  },
                  "description" : "description of nat rule"
                },
                "Request example 5 : POST /api/fmc_config/v1/domain/DomainUUID/policy/ftdnatpolicies/natPolicyUuid/manualnatrules?section=after_auto&targetIndex=2 ( Example payload for POST on manual NAT rules with 'section' and 'targetIndex' query param. )" : {
                  "originalDestinationPort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid"
                  },
                  "originalSource" : {
                    "type" : "Network",
                    "id" : "Network object uuid"
                  },
                  "originalSourcePort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid"
                  },
                  "translatedDestination" : {
                    "type" : "Network",
                    "id" : "Network object uuid"
                  },
                  "translatedDestinationPort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid"
                  },
                  "translatedSource" : {
                    "type" : "Network",
                    "id" : "network object uuid"
                  },
                  "translatedSourcePort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid"
                  },
                  "unidirectional" : false,
                  "originalDestination" : {
                    "type" : "Network",
                    "id" : "network object uuid"
                  },
                  "interfaceInOriginalDestination" : false,
                  "type" : "FTDManualNatRule",
                  "enabled" : true,
                  "natType" : "STATIC",
                  "interfaceIpv6" : false,
                  "fallThrough" : false,
                  "dns" : false,
                  "routeLookup" : false,
                  "noProxyArp" : false,
                  "netToNet" : false,
                  "sourceInterface" : {
                    "id" : "security zone uuid",
                    "type" : "SecurityZone"
                  },
                  "destinationInterface" : {
                    "id" : "security zone uuid",
                    "type" : "SecurityZone"
                  },
                  "description" : "description of nat rule"
                },
                "Request example 6 : POST /api/fmc_config/v1/domain/DomainUUID/policy/ftdnatpolicies/natPolicyUuid/manualnatrules?bulk=true&amp;section=after_auto&targetIndex=2 ( Example payload for bulk POST on manual NAT rules with 'section' and 'targetIndex' query param. )" : [ {
                  "originalDestinationPort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid"
                  },
                  "originalSource" : {
                    "type" : "Network",
                    "id" : "Network object uuid"
                  },
                  "originalSourcePort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid"
                  },
                  "translatedDestination" : {
                    "type" : "Network",
                    "id" : "Network object uuid"
                  },
                  "translatedDestinationPort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid"
                  },
                  "translatedSource" : {
                    "type" : "Network",
                    "id" : "network object uuid"
                  },
                  "translatedSourcePort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid"
                  },
                  "unidirectional" : false,
                  "originalDestination" : {
                    "type" : "Network",
                    "id" : "network object uuid"
                  },
                  "interfaceInOriginalDestination" : false,
                  "type" : "FTDManualNatRule",
                  "enabled" : true,
                  "natType" : "STATIC",
                  "interfaceIpv6" : false,
                  "fallThrough" : false,
                  "dns" : false,
                  "routeLookup" : false,
                  "noProxyArp" : false,
                  "netToNet" : false,
                  "sourceInterface" : {
                    "id" : "security zone uuid",
                    "type" : "SecurityZone"
                  },
                  "destinationInterface" : {
                    "id" : "security zone uuid",
                    "type" : "SecurityZone"
                  },
                  "description" : "description of nat rule"
                }, {
                  "originalDestinationPort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid"
                  },
                  "originalSource" : {
                    "type" : "Network",
                    "id" : "Network object uuid"
                  },
                  "originalSourcePort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid"
                  },
                  "translatedDestination" : {
                    "type" : "Network",
                    "id" : "Network object uuid"
                  },
                  "translatedDestinationPort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid"
                  },
                  "translatedSource" : {
                    "type" : "Network",
                    "id" : "network object uuid"
                  },
                  "translatedSourcePort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid"
                  },
                  "unidirectional" : false,
                  "originalDestination" : {
                    "type" : "Network",
                    "id" : "network object uuid"
                  },
                  "interfaceInOriginalDestination" : false,
                  "type" : "FTDManualNatRule",
                  "enabled" : true,
                  "natType" : "STATIC",
                  "interfaceIpv6" : false,
                  "fallThrough" : false,
                  "dns" : false,
                  "routeLookup" : false,
                  "noProxyArp" : false,
                  "netToNet" : false,
                  "sourceInterface" : {
                    "id" : "security zone uuid",
                    "type" : "SecurityZone"
                  },
                  "destinationInterface" : {
                    "id" : "security zone uuid",
                    "type" : "SecurityZone"
                  },
                  "description" : "description of nat rule"
                } ],
                "Request example 7 : POST /api/fmc_config/v1/domain/DomainUUID/policy/ftdnatpolicies/natPolicyUuid/manualnatrules ( Example payload for POST on manual NAT rules with PAT with block-allocation . )" : {
                  "originalDestinationPort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid"
                  },
                  "originalSource" : {
                    "type" : "Network",
                    "id" : "Network object uuid"
                  },
                  "originalSourcePort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid"
                  },
                  "translatedDestination" : {
                    "type" : "Network",
                    "id" : "Network object uuid"
                  },
                  "translatedDestinationPort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid"
                  },
                  "patOptions" : {
                    "patPoolAddress" : {
                      "type" : "Host",
                      "id" : "Host object uuid",
                      "name" : "NW1"
                    },
                    "interfacePat" : false,
                    "includeReserve" : false,
                    "roundRobin" : true,
                    "extendedPat" : false,
                    "flatPortRange" : false,
                    "blockAllocation" : true
                  },
                  "translatedSourcePort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid"
                  },
                  "unidirectional" : true,
                  "originalDestination" : {
                    "type" : "Network",
                    "id" : "network object uuid"
                  },
                  "interfaceInOriginalDestination" : false,
                  "type" : "FTDManualNatRule",
                  "enabled" : true,
                  "natType" : "DYNAMIC",
                  "interfaceIpv6" : false,
                  "fallThrough" : false,
                  "dns" : false,
                  "routeLookup" : false,
                  "noProxyArp" : false,
                  "netToNet" : false,
                  "sourceInterface" : {
                    "id" : "security zone uuid",
                    "type" : "SecurityZone"
                  },
                  "destinationInterface" : {
                    "id" : "security zone uuid",
                    "type" : "SecurityZone"
                  },
                  "description" : "description of nat rule"
                },
                "Response Example 1 :POST /api/fmc_config/v1/domain/DomainUUID/policy/ftdnatpolicies/natPolicyUuid/manualnatrules ( Example payload for POST on manual NAT rules. )" : {
                  "metadata" : {
                    "section" : "BEFORE_AUTO",
                    "index" : 0,
                    "timestamp" : 1493371106718,
                    "domain" : {
                      "name" : "Global",
                      "id" : "global_domain_uuid",
                      "type" : "Domain"
                    }
                  },
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/global_domain_uuid/policy/ftdnatpolicies/natPolicyUuid/manualnatrules/manualNatRuleUuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/global_domain_uuid/policy/ftdnatpolicies/natPolicyUuid/natrules"
                  },
                  "id" : "manualNatRuleUuid",
                  "originalDestinationPort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid",
                    "name" : "port object name"
                  },
                  "originalSource" : {
                    "type" : "Network",
                    "id" : "network object uuid",
                    "name" : "network object name"
                  },
                  "originalSourcePort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid",
                    "name" : "port object name"
                  },
                  "translatedDestination" : {
                    "type" : "Network",
                    "id" : "network object uuid",
                    "name" : "network object name"
                  },
                  "translatedDestinationPort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid",
                    "name" : "port object name"
                  },
                  "translatedSource" : {
                    "type" : "Network",
                    "id" : "network object uuid",
                    "name" : "network object name"
                  },
                  "translatedSourcePort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid",
                    "name" : "port object name"
                  },
                  "unidirectional" : false,
                  "originalDestination" : {
                    "type" : "Network",
                    "id" : "network object uuid",
                    "name" : "network object name"
                  },
                  "interfaceInOriginalDestination" : false,
                  "type" : "FTDManualNatRule",
                  "enabled" : true,
                  "natType" : "STATIC",
                  "interfaceIpv6" : false,
                  "fallThrough" : false,
                  "dns" : false,
                  "routeLookup" : false,
                  "noProxyArp" : false,
                  "netToNet" : false,
                  "sourceInterface" : {
                    "name" : "sec zone object name",
                    "id" : "security zone uuid",
                    "type" : "SecurityZone"
                  },
                  "destinationInterface" : {
                    "name" : "sec zone object name",
                    "id" : "sec zone object uuid",
                    "type" : "SecurityZone"
                  },
                  "description" : "description of nat rule"
                },
                "Response Example 2 :POST /api/fmc_config/v1/domain/DomainUUID/policy/ftdnatpolicies/natPolicyUuid/manualnatrules ( Example payload for POST on manual NAT rules with interface in translated source. )" : {
                  "metadata" : {
                    "section" : "BEFORE_AUTO",
                    "index" : 0,
                    "timestamp" : 1493371106718,
                    "domain" : {
                      "name" : "Global",
                      "id" : "global_domain_uuid",
                      "type" : "Domain"
                    }
                  },
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/global_domain_uuid/policy/ftdnatpolicies/natPolicyUuid/manualnatrules/manualNatRuleUuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/global_domain_uuid/policy/ftdnatpolicies/natPolicyUuid/natrules"
                  },
                  "id" : "manualNatRuleUuid",
                  "originalDestinationPort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid",
                    "name" : "port object name"
                  },
                  "originalSource" : {
                    "type" : "Network",
                    "id" : "network object uuid",
                    "name" : "network object name"
                  },
                  "originalSourcePort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid",
                    "name" : "port object name"
                  },
                  "translatedDestination" : {
                    "type" : "Network",
                    "id" : "network object uuid",
                    "name" : "network object name"
                  },
                  "translatedDestinationPort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid",
                    "name" : "port object name"
                  },
                  "translatedSourcePort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid",
                    "name" : "port object name"
                  },
                  "originalDestination" : {
                    "type" : "Network",
                    "id" : "network object uuid",
                    "name" : "network object name"
                  },
                  "unidirectional" : false,
                  "interfaceInOriginalDestination" : false,
                  "interfaceInTranslatedSource" : true,
                  "type" : "FTDManualNatRule",
                  "enabled" : true,
                  "natType" : "STATIC",
                  "interfaceIpv6" : false,
                  "fallThrough" : false,
                  "dns" : false,
                  "routeLookup" : false,
                  "noProxyArp" : false,
                  "netToNet" : false,
                  "sourceInterface" : {
                    "name" : "sec zone object name",
                    "id" : "security zone uuid",
                    "type" : "SecurityZone"
                  },
                  "destinationInterface" : {
                    "name" : "sec zone object name",
                    "id" : "sec zone object uuid",
                    "type" : "SecurityZone"
                  },
                  "description" : "description of nat rule"
                },
                "Response Example 3 :POST /api/fmc_config/v1/domain/DomainUUID/policy/ftdnatpolicies/natPolicyUuid/manualnatrules ( Example payload for POST on manual NAT rules with interface in original destination )" : {
                  "metadata" : {
                    "section" : "BEFORE_AUTO",
                    "index" : 0,
                    "timestamp" : 1493371106718,
                    "domain" : {
                      "name" : "Global",
                      "id" : "global_domain_uuid",
                      "type" : "Domain"
                    }
                  },
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/global_domain_uuid/policy/ftdnatpolicies/natPolicyUuid/manualnatrules/manualNatRuleUuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/global_domain_uuid/policy/ftdnatpolicies/natPolicyUuid/natrules"
                  },
                  "id" : "manualNatRuleUuid",
                  "originalDestinationPort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid",
                    "name" : "port object name"
                  },
                  "originalSource" : {
                    "type" : "Network",
                    "id" : "network object uuid",
                    "name" : "network object name"
                  },
                  "originalSourcePort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid",
                    "name" : "port object name"
                  },
                  "translatedDestination" : {
                    "type" : "Network",
                    "id" : "network object uuid",
                    "name" : "network object name"
                  },
                  "translatedDestinationPort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid",
                    "name" : "port object name"
                  },
                  "translatedSource" : {
                    "type" : "Network",
                    "id" : "network object uuid",
                    "name" : "network object name"
                  },
                  "translatedSourcePort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid",
                    "name" : "port object name"
                  },
                  "unidirectional" : false,
                  "interfaceInOriginalDestination" : true,
                  "type" : "FTDManualNatRule",
                  "enabled" : true,
                  "natType" : "STATIC",
                  "interfaceIpv6" : false,
                  "fallThrough" : false,
                  "dns" : false,
                  "routeLookup" : false,
                  "noProxyArp" : false,
                  "netToNet" : false,
                  "sourceInterface" : {
                    "name" : "sec zone object name",
                    "id" : "security zone uuid",
                    "type" : "SecurityZone"
                  },
                  "destinationInterface" : {
                    "name" : "sec zone object name",
                    "id" : "sec zone object uuid",
                    "type" : "SecurityZone"
                  },
                  "description" : "description of nat rule"
                },
                "Response Example 7 :POST /api/fmc_config/v1/domain/DomainUUID/policy/ftdnatpolicies/natPolicyUuid/manualnatrules ( Example payload for POST on manual NAT rules with PAT with block-allocation . )" : {
                  "metadata" : {
                    "section" : "BEFORE_AUTO",
                    "index" : 0,
                    "timestamp" : 1493371106718,
                    "domain" : {
                      "name" : "Global",
                      "id" : "global_domain_uuid",
                      "type" : "Domain"
                    }
                  },
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/global_domain_uuid/policy/ftdnatpolicies/natPolicyUuid/manualnatrules/manualNatRuleUuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/global_domain_uuid/policy/ftdnatpolicies/natPolicyUuid/natrules"
                  },
                  "id" : "manualNatRuleUuid",
                  "originalDestinationPort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid",
                    "name" : "port object name"
                  },
                  "originalSource" : {
                    "type" : "Network",
                    "id" : "network object uuid",
                    "name" : "network object name"
                  },
                  "originalSourcePort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid",
                    "name" : "port object name"
                  },
                  "translatedDestination" : {
                    "type" : "Network",
                    "id" : "network object uuid",
                    "name" : "network object name"
                  },
                  "translatedDestinationPort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid",
                    "name" : "port object name"
                  },
                  "translatedSource" : {
                    "type" : "Network",
                    "id" : "network object uuid",
                    "name" : "network object name"
                  },
                  "patOptions" : {
                    "patPoolAddress" : {
                      "type" : "Host",
                      "id" : "Host object uuid",
                      "name" : "NW1"
                    },
                    "interfacePat" : false,
                    "includeReserve" : true,
                    "roundRobin" : true,
                    "extendedPat" : true,
                    "flatPortRange" : true,
                    "blockAllocation" : true
                  },
                  "unidirectional" : true,
                  "originalDestination" : {
                    "type" : "Network",
                    "id" : "network object uuid",
                    "name" : "network object name"
                  },
                  "interfaceInOriginalDestination" : false,
                  "type" : "FTDManualNatRule",
                  "enabled" : true,
                  "natType" : "DYNAMIC",
                  "interfaceIpv6" : false,
                  "fallThrough" : false,
                  "dns" : false,
                  "routeLookup" : false,
                  "noProxyArp" : false,
                  "netToNet" : false,
                  "sourceInterface" : {
                    "name" : "sec zone object name",
                    "id" : "security zone uuid",
                    "type" : "SecurityZone"
                  },
                  "destinationInterface" : {
                    "name" : "sec zone object name",
                    "id" : "sec zone object uuid",
                    "type" : "SecurityZone"
                  },
                  "description" : "description of nat rule"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/FTDManualNatRule"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/ftdnatpolicies/{containerUUID}/manualnatrules/{objectId}" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the Manual NAT rule associated with the specified ID. Also, retrieves list of all Manual NAT rules.**",
        "operationId" : "getFTDManualNatRule",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a Manual NAT rule.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "section",
          "in" : "query",
          "description" : "Retrieves, creates or modifies manual nat rule in given section. Allowed value is 'before_auto' and 'after_auto'.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDManualNatRule"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /api/fmc_config/v1/domain/DomainUUID/policy/ftdnatpolicies/natPolicyUuid/manualnatrules/manualNatRuleUuid1 ( Example payload for GET on Manual NAT rules. )" : {
                  "metadata" : {
                    "section" : "BEFORE_AUTO",
                    "index" : -1,
                    "timestamp" : 1488950245960,
                    "domain" : {
                      "name" : "Global",
                      "id" : "domainUuid",
                      "type" : "Domain"
                    }
                  },
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/policy/ftdnatpolicies/natPolicyUuid/manualnatrules/manualNatRuleUuid1",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/policy/ftdnatpolicies/natPolicyUuid/natrules"
                  },
                  "unidirectional" : true,
                  "originalSource" : {
                    "type" : "Network",
                    "id" : "networkObjUuid",
                    "name" : "any"
                  },
                  "interfaceInOriginalDestination" : false,
                  "interfaceInTranslatedSource" : true,
                  "enabled" : true,
                  "type" : "FTDManualNatRule",
                  "destinationInterface" : {
                    "name" : "seczonemanual",
                    "id" : "secZoneObjUuid2",
                    "type" : "SecurityZone"
                  },
                  "dns" : false,
                  "interfaceIpv6" : false,
                  "noProxyArp" : false,
                  "netToNet" : false,
                  "natType" : "DYNAMIC",
                  "sourceInterface" : {
                    "name" : "seczonebefore",
                    "id" : "secZoneObjUuid",
                    "type" : "SecurityZone"
                  },
                  "id" : "manualNatRuleUuid1"
                },
                "Response Example 2 :GET /api/fmc_config/v1/domain/DomainUUID/policy/ftdnatpolicies/natPolicyUuid/manualnatrules ( Example payload for GET listing on manual NAT rules. )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/policy/ftdnatpolicies/natPolicyUuid/manualnatrules?offset=0&limit=6"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/policy/ftdnatpolicies/natPolicyUuid/manualnatrules/manualNatRuleUuid1",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/policy/ftdnatpolicies/natPolicyUuid/natrules"
                    },
                    "type" : "FTDManualNatRule",
                    "id" : "manualNatRuleUuid1"
                  }, {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/policy/ftdnatpolicies/natPolicyUuid/manualnatrules/manualNatRuleUuid2",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/policy/ftdnatpolicies/natPolicyUuid/natrules"
                    },
                    "type" : "FTDManualNatRule",
                    "id" : "manualNatRuleUuid2"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                },
                "Response Example 3 :GET /api/fmc_config/v1/domain/DomainUUID/policy/ftdnatpolicies/natPolicyUuid/manualnatrules?expanded=true ( Example payload for GET on manual NAT rules with ?expanded=true )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/policy/ftdnatpolicies/natPolicyUuid/manualnatrules?offset=0&limit=2&expanded=true"
                  },
                  "items" : [ {
                    "metadata" : {
                      "section" : "BEFORE_AUTO",
                      "index" : 1,
                      "timestamp" : 1488950245960,
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUuid",
                        "type" : "Domain"
                      }
                    },
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/policy/ftdnatpolicies/natPolicyUuid/manualnatrules/manualNatRuleUuid1",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/policy/ftdnatpolicies/natPolicyUuid/natrules"
                    },
                    "unidirectional" : true,
                    "originalSource" : {
                      "type" : "Network",
                      "id" : "networkObjUuid",
                      "name" : "any"
                    },
                    "interfaceInOriginalDestination" : false,
                    "interfaceInTranslatedSource" : true,
                    "enabled" : true,
                    "type" : "FTDManualNatRule",
                    "destinationInterface" : {
                      "name" : "seczonemanual",
                      "id" : "secZoneUuid",
                      "type" : "SecurityZone"
                    },
                    "dns" : false,
                    "interfaceIpv6" : false,
                    "noProxyArp" : false,
                    "netToNet" : false,
                    "natType" : "DYNAMIC",
                    "sourceInterface" : {
                      "name" : "seczonebefore",
                      "id" : "secZoneObjUuid",
                      "type" : "SecurityZone"
                    },
                    "id" : "manualNatRuleUuid1"
                  }, {
                    "metadata" : {
                      "section" : "BEFORE_AUTO",
                      "index" : 2,
                      "timestamp" : 1488950602096,
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUuid",
                        "type" : "Domain"
                      }
                    },
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/policy/ftdnatpolicies/natPolicyUuid/manualnatrules/manualNatRuleUuid2",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/policy/ftdnatpolicies/natPolicyUuid/natrules"
                    },
                    "unidirectional" : false,
                    "translatedSource" : {
                      "type" : "Network",
                      "id" : "networkObjUuid",
                      "name" : "any"
                    },
                    "originalSource" : {
                      "type" : "Network",
                      "id" : "networkObjUuid",
                      "name" : "any"
                    },
                    "interfaceInOriginalDestination" : false,
                    "interfaceInTranslatedSource" : false,
                    "enabled" : true,
                    "type" : "FTDManualNatRule",
                    "destinationInterface" : {
                      "name" : "seczonemanual",
                      "id" : "secZoneUuid",
                      "type" : "SecurityZone"
                    },
                    "dns" : false,
                    "interfaceIpv6" : false,
                    "noProxyArp" : false,
                    "netToNet" : false,
                    "natType" : "STATIC",
                    "sourceInterface" : {
                      "name" : "seczonemanual",
                      "id" : "secZoneUuid",
                      "type" : "SecurityZone"
                    },
                    "description" : "manual nat rule 2",
                    "id" : "manualNatRuleUuid2"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the Manual NAT rule associated with the specified ID. Also, retrieves list of all Manual NAT rules. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateFTDManualNatRule",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a Manual NAT rule.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The input Manual NAT rule model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FTDManualNatRule"
          }
        }, {
          "name" : "section",
          "in" : "query",
          "description" : "Retrieves, creates or modifies manual nat rule in given section. Allowed value is 'before_auto' and 'after_auto'.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "targetIndex",
          "in" : "query",
          "description" : "Creates or modifies manual nat rule at given targetIndex. It takes an integer value.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDManualNatRule"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /api/fmc_config/v1/domain/DomainUUID/policy/ftdnatpolicies/natPolicyUuid/manualnatrules/manualNatRuleUuid ( Example payload for PUT on manual NAT rules. )" : {
                  "originalDestinationPort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid"
                  },
                  "originalSource" : {
                    "type" : "Network",
                    "id" : "Network object uuid"
                  },
                  "originalSourcePort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid"
                  },
                  "translatedDestination" : {
                    "type" : "Network",
                    "id" : "Network object uuid"
                  },
                  "translatedDestinationPort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid"
                  },
                  "translatedSource" : {
                    "type" : "Network",
                    "id" : "network object uuid"
                  },
                  "translatedSourcePort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid"
                  },
                  "unidirectional" : false,
                  "originalDestination" : {
                    "type" : "Network",
                    "id" : "network object uuid"
                  },
                  "id" : "manualNatRuleUuid",
                  "interfaceInOriginalDestination" : false,
                  "type" : "FTDManualNatRule",
                  "enabled" : true,
                  "natType" : "STATIC",
                  "interfaceIpv6" : false,
                  "fallThrough" : false,
                  "dns" : false,
                  "routeLookup" : false,
                  "noProxyArp" : false,
                  "netToNet" : false,
                  "sourceInterface" : {
                    "id" : "security zone uuid",
                    "type" : "SecurityZone"
                  },
                  "destinationInterface" : {
                    "id" : "security zone uuid",
                    "type" : "SecurityZone"
                  },
                  "description" : "description of nat rule"
                },
                "Request example 2 : PUT /api/fmc_config/v1/domain/DomainUUID/policy/ftdnatpolicies/natPolicyUuid/manualnatrules/manualNatRuleUuid?targetIndex=5 ( Example payload for PUT on manual NAT rules with 'targetIndex' query param. )" : {
                  "originalDestinationPort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid"
                  },
                  "originalSource" : {
                    "type" : "Network",
                    "id" : "Network object uuid"
                  },
                  "originalSourcePort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid"
                  },
                  "translatedDestination" : {
                    "type" : "Network",
                    "id" : "Network object uuid"
                  },
                  "translatedDestinationPort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid"
                  },
                  "patOptions" : {
                    "patPoolAddress" : {
                      "type" : "Host",
                      "id" : "Host object uuid",
                      "name" : "NW1"
                    },
                    "interfacePat" : false,
                    "includeReserve" : true,
                    "roundRobin" : true,
                    "extendedPat" : true,
                    "flatPortRange" : true
                  },
                  "translatedSourcePort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid"
                  },
                  "unidirectional" : true,
                  "originalDestination" : {
                    "type" : "Network",
                    "id" : "network object uuid"
                  },
                  "id" : "manualNatRuleUuid",
                  "interfaceInOriginalDestination" : false,
                  "type" : "FTDManualNatRule",
                  "enabled" : true,
                  "natType" : "DYNAMIC",
                  "interfaceIpv6" : false,
                  "fallThrough" : false,
                  "dns" : false,
                  "routeLookup" : false,
                  "noProxyArp" : false,
                  "netToNet" : false,
                  "sourceInterface" : {
                    "id" : "security zone uuid",
                    "type" : "SecurityZone"
                  },
                  "destinationInterface" : {
                    "id" : "security zone uuid",
                    "type" : "SecurityZone"
                  },
                  "description" : "description of nat rule"
                },
                "Request example 3 : PUT /api/fmc_config/v1/domain/DomainUUID/policy/ftdnatpolicies/natPolicyUuid/manualnatrules/manualNatRuleUuid?targetIndex=5&amp;section=before_auto ( Example payload for PUT on manual NAT rules with 'targetIndex' and 'section' query param. )" : {
                  "originalDestinationPort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid"
                  },
                  "originalSource" : {
                    "type" : "Network",
                    "id" : "Network object uuid"
                  },
                  "originalSourcePort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid"
                  },
                  "translatedDestination" : {
                    "type" : "Network",
                    "id" : "Network object uuid"
                  },
                  "translatedDestinationPort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid"
                  },
                  "patOptions" : {
                    "patPoolAddress" : {
                      "type" : "Host",
                      "id" : "Host object uuid",
                      "name" : "NW1"
                    },
                    "interfacePat" : false,
                    "includeReserve" : true,
                    "roundRobin" : true,
                    "extendedPat" : true,
                    "flatPortRange" : true
                  },
                  "translatedSourcePort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid"
                  },
                  "unidirectional" : true,
                  "originalDestination" : {
                    "type" : "Network",
                    "id" : "network object uuid"
                  },
                  "id" : "manualNatRuleUuid",
                  "interfaceInOriginalDestination" : false,
                  "type" : "FTDManualNatRule",
                  "enabled" : true,
                  "natType" : "DYNAMIC",
                  "interfaceIpv6" : false,
                  "fallThrough" : false,
                  "dns" : false,
                  "routeLookup" : false,
                  "noProxyArp" : false,
                  "netToNet" : false,
                  "sourceInterface" : {
                    "id" : "security zone uuid",
                    "type" : "SecurityZone"
                  },
                  "destinationInterface" : {
                    "id" : "security zone uuid",
                    "type" : "SecurityZone"
                  },
                  "description" : "description of nat rule"
                },
                "Response Example 1 :PUT /api/fmc_config/v1/domain/DomainUUID/policy/ftdnatpolicies/natPolicyUuid/manualnatrules/manualNatRuleUuid ( Example payload for PUT on manual NAT rules. )" : {
                  "metadata" : {
                    "section" : "BEFORE_AUTO",
                    "index" : 0,
                    "timestamp" : 1493371106718,
                    "domain" : {
                      "name" : "Global",
                      "id" : "global_domain_uuid",
                      "type" : "Domain"
                    }
                  },
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/global_domain_uuid/policy/ftdnatpolicies/natPolicyUuid/manualnatrules/manualNatRuleUuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/global_domain_uuid/policy/ftdnatpolicies/natPolicyUuid/natrules"
                  },
                  "id" : "manualNatRuleUuid",
                  "originalDestinationPort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid",
                    "name" : "port object name"
                  },
                  "originalSource" : {
                    "type" : "Network",
                    "id" : "network object uuid",
                    "name" : "network object name"
                  },
                  "originalSourcePort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid",
                    "name" : "port object name"
                  },
                  "translatedDestination" : {
                    "type" : "Network",
                    "id" : "network object uuid",
                    "name" : "network object name"
                  },
                  "translatedDestinationPort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid",
                    "name" : "port object name"
                  },
                  "translatedSource" : {
                    "type" : "Network",
                    "id" : "network object uuid",
                    "name" : "network object name"
                  },
                  "translatedSourcePort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid",
                    "name" : "port object name"
                  },
                  "unidirectional" : false,
                  "originalDestination" : {
                    "type" : "Network",
                    "id" : "network object uuid",
                    "name" : "network object name"
                  },
                  "interfaceInOriginalDestination" : false,
                  "type" : "FTDManualNatRule",
                  "enabled" : true,
                  "natType" : "STATIC",
                  "interfaceIpv6" : false,
                  "fallThrough" : false,
                  "dns" : false,
                  "routeLookup" : false,
                  "noProxyArp" : false,
                  "netToNet" : false,
                  "sourceInterface" : {
                    "name" : "sec zone object name",
                    "id" : "security zone uuid",
                    "type" : "SecurityZone"
                  },
                  "destinationInterface" : {
                    "name" : "sec zone object name",
                    "id" : "sec zone object uuid",
                    "type" : "SecurityZone"
                  },
                  "description" : "description of nat rule"
                },
                "Response Example 2 :PUT /api/fmc_config/v1/domain/DomainUUID/policy/ftdnatpolicies/natPolicyUuid/manualnatrules/manualNatRuleUuid?targetIndex=5 ( Example payload for PUT on manual NAT rules with 'targetIndex' query param. )" : {
                  "metadata" : {
                    "section" : "BEFORE_AUTO",
                    "index" : 0,
                    "timestamp" : 1493371106718,
                    "domain" : {
                      "name" : "Global",
                      "id" : "global_domain_uuid",
                      "type" : "Domain"
                    }
                  },
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/global_domain_uuid/policy/ftdnatpolicies/natPolicyUuid/manualnatrules/manualNatRuleUuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/global_domain_uuid/policy/ftdnatpolicies/natPolicyUuid/natrules"
                  },
                  "id" : "manualNatRuleUuid",
                  "originalDestinationPort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid",
                    "name" : "port object name"
                  },
                  "originalSource" : {
                    "type" : "Network",
                    "id" : "network object uuid",
                    "name" : "network object name"
                  },
                  "originalSourcePort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid",
                    "name" : "port object name"
                  },
                  "translatedDestination" : {
                    "type" : "Network",
                    "id" : "network object uuid",
                    "name" : "network object name"
                  },
                  "translatedDestinationPort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid",
                    "name" : "port object name"
                  },
                  "translatedSource" : {
                    "type" : "Network",
                    "id" : "network object uuid",
                    "name" : "network object name"
                  },
                  "patOptions" : {
                    "patPoolAddress" : {
                      "type" : "Host",
                      "id" : "Host object uuid",
                      "name" : "NW1"
                    },
                    "interfacePat" : false,
                    "includeReserve" : true,
                    "roundRobin" : true,
                    "extendedPat" : true,
                    "flatPortRange" : true
                  },
                  "unidirectional" : true,
                  "originalDestination" : {
                    "type" : "Network",
                    "id" : "network object uuid",
                    "name" : "network object name"
                  },
                  "interfaceInOriginalDestination" : false,
                  "type" : "FTDManualNatRule",
                  "enabled" : true,
                  "natType" : "DYNAMIC",
                  "interfaceIpv6" : false,
                  "fallThrough" : false,
                  "dns" : false,
                  "routeLookup" : false,
                  "noProxyArp" : false,
                  "netToNet" : false,
                  "sourceInterface" : {
                    "name" : "sec zone object name",
                    "id" : "security zone uuid",
                    "type" : "SecurityZone"
                  },
                  "destinationInterface" : {
                    "name" : "sec zone object name",
                    "id" : "sec zone object uuid",
                    "type" : "SecurityZone"
                  },
                  "description" : "description of nat rule"
                },
                "Response Example 3 :PUT /api/fmc_config/v1/domain/DomainUUID/policy/ftdnatpolicies/natPolicyUuid/manualnatrules/manualNatRuleUuid?targetIndex=5&amp;section=before_auto ( Example payload for PUT on manual NAT rules with 'targetIndex' and 'section' query param. )" : {
                  "metadata" : {
                    "section" : "BEFORE_AUTO",
                    "index" : 0,
                    "timestamp" : 1493371106718,
                    "domain" : {
                      "name" : "Global",
                      "id" : "global_domain_uuid",
                      "type" : "Domain"
                    }
                  },
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/global_domain_uuid/policy/ftdnatpolicies/natPolicyUuid/manualnatrules/manualNatRuleUuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/global_domain_uuid/policy/ftdnatpolicies/natPolicyUuid/natrules"
                  },
                  "id" : "manualNatRuleUuid",
                  "originalDestinationPort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid",
                    "name" : "port object name"
                  },
                  "originalSource" : {
                    "type" : "Network",
                    "id" : "network object uuid",
                    "name" : "network object name"
                  },
                  "originalSourcePort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid",
                    "name" : "port object name"
                  },
                  "translatedDestination" : {
                    "type" : "Network",
                    "id" : "network object uuid",
                    "name" : "network object name"
                  },
                  "translatedDestinationPort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid",
                    "name" : "port object name"
                  },
                  "translatedSource" : {
                    "type" : "Network",
                    "id" : "network object uuid",
                    "name" : "network object name"
                  },
                  "patOptions" : {
                    "patPoolAddress" : {
                      "type" : "Host",
                      "id" : "Host object uuid",
                      "name" : "NW1"
                    },
                    "interfacePat" : false,
                    "includeReserve" : true,
                    "roundRobin" : true,
                    "extendedPat" : true,
                    "flatPortRange" : true
                  },
                  "unidirectional" : true,
                  "originalDestination" : {
                    "type" : "Network",
                    "id" : "network object uuid",
                    "name" : "network object name"
                  },
                  "interfaceInOriginalDestination" : false,
                  "type" : "FTDManualNatRule",
                  "enabled" : true,
                  "natType" : "DYNAMIC",
                  "interfaceIpv6" : false,
                  "fallThrough" : false,
                  "dns" : false,
                  "routeLookup" : false,
                  "noProxyArp" : false,
                  "netToNet" : false,
                  "sourceInterface" : {
                    "name" : "sec zone object name",
                    "id" : "security zone uuid",
                    "type" : "SecurityZone"
                  },
                  "destinationInterface" : {
                    "name" : "sec zone object name",
                    "id" : "sec zone object uuid",
                    "type" : "SecurityZone"
                  },
                  "description" : "description of nat rule"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/FTDManualNatRule"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the Manual NAT rule associated with the specified ID. Also, retrieves list of all Manual NAT rules. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteFTDManualNatRule",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a Manual NAT rule.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDManualNatRule"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /api/fmc_config/v1/domain/DomainUUID/policy/ftdnatpolicies/natPolicyUuid/manualnatrules/manualNatRuleUuid ( Example payload for DELETE on manual NAT rule. )" : {
                  "metadata" : {
                    "section" : "BEFORE_AUTO",
                    "index" : 0,
                    "timestamp" : 1493371106718,
                    "domain" : {
                      "name" : "Global",
                      "id" : "global_domain_uuid",
                      "type" : "Domain"
                    }
                  },
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/global_domain_uuid/policy/ftdnatpolicies/natPolicyUuid/manualnatrules/manualNatRuleUuid",
                    "parent" : "<fmc_url>/api/fmc_config/v1/domain/global_domain_uuid/policy/ftdnatpolicies/natPolicyUuid/natrules"
                  },
                  "id" : "manualNatRuleUuid",
                  "originalDestinationPort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid",
                    "name" : "port object name"
                  },
                  "originalSource" : {
                    "type" : "Network",
                    "id" : "network object uuid",
                    "name" : "network object name"
                  },
                  "originalSourcePort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid",
                    "name" : "port object name"
                  },
                  "translatedDestination" : {
                    "type" : "Network",
                    "id" : "network object uuid",
                    "name" : "network object name"
                  },
                  "translatedDestinationPort" : {
                    "type" : "ProtocolPortObject",
                    "id" : "protocol port object uuid",
                    "name" : "port object name"
                  },
                  "translatedSource" : {
                    "type" : "Network",
                    "id" : "network object uuid",
                    "name" : "network object name"
                  },
                  "patOptions" : {
                    "patPoolAddress" : {
                      "type" : "Host",
                      "id" : "Host object uuid",
                      "name" : "NW1"
                    },
                    "interfacePat" : false,
                    "includeReserve" : true,
                    "roundRobin" : true,
                    "extendedPat" : true,
                    "flatPortRange" : true
                  },
                  "unidirectional" : false,
                  "originalDestination" : {
                    "type" : "Network",
                    "id" : "network object uuid",
                    "name" : "network object name"
                  },
                  "interfaceInOriginalDestination" : false,
                  "type" : "FTDManualNatRule",
                  "enabled" : true,
                  "natType" : "STATIC",
                  "interfaceIpv6" : false,
                  "fallThrough" : false,
                  "dns" : false,
                  "routeLookup" : false,
                  "noProxyArp" : false,
                  "netToNet" : false,
                  "sourceInterface" : {
                    "name" : "sec zone object name",
                    "id" : "security zone uuid",
                    "type" : "SecurityZone"
                  },
                  "destinationInterface" : {
                    "name" : "sec zone object name",
                    "id" : "sec zone object uuid",
                    "type" : "SecurityZone"
                  },
                  "description" : "description of nat rule"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/ftdnatpolicies/{containerUUID}/natrules" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves list of all NAT rules (manual and auto) associated with the specified policy ID.**",
        "operationId" : "getAllFTDNatRule",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "Value is of format : <code>\"sourceInterface:name;destinationInterface:name;originalSource:name/value;<br/>originalDestination:name/value;translatedSource:name/value;translatedDestination:name/value;<br/>originalSourcePort:name/value;originalDestinationPort:name/value;translatedSourcePort:name/value;<br/>translatedDestinationPort:name/value\"</code><br/>sourceInterface:SecurityZone/Interface group name (sec_zone_name1) can be given as value to fetch nat rule<br/>destinationInterface:SecurityZone/Interface group name (sec_zone_name1) can be given as value to fetch nat rule<br/>OriginalSource: Network object configured as Orignal source object name (object_name) or the value (10.1.2.3) of the object can be given<br/>originalDestination:Network object configured as Destination source object name (object_name) or the value (10.1.2.3) of the object can be given<br/>translatedSource:Network object configured as translated source object name (object_name) or the value (10.1.2.3) of the object can be given<br/>translatedDestination:Network object configured as translated Destination object name (object_name) or the value (10.1.2.3) of the object can be given<br/>originalSourcePort:Port object configured as Original Source Port object name (http) or value of the object as port no or protocal (tcp/80) can be given<br/>originalDestinationPort:Port object configured as Original Destination Port object name (http) or value of the object as port no or protocal (tcp/80) can be given<br/>translatedSourcePort:Port object configured as Translated Source Port object name (http) or value of the object as port no or protocal (tcp/80) can be given<br/>translatedDestinationPort:Port object configured as Translated Destination Port object name (http) or value of the object as port no or protocal (tcp/80) can be given\"<br/>",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDNatRuleListContainer"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/ftdnatpolicies/{containerUUID}/natrules/{objectId}" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves list of all NAT rules (manual and auto) associated with the specified policy ID.**",
        "operationId" : "getFTDNatRule",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a NAT rule.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "section",
          "in" : "query",
          "description" : "Retrieves nat rule in given section. Allowed value is 'before_auto', 'auto' and 'after_auto'.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Value is of format : <code>\"sourceInterface:name;destinationInterface:name;originalSource:name/value;<br/>originalDestination:name/value;translatedSource:name/value;translatedDestination:name/value;<br/>originalSourcePort:name/value;originalDestinationPort:name/value;translatedSourcePort:name/value;<br/>translatedDestinationPort:name/value\"</code><br/>sourceInterface:SecurityZone/Interface group name (sec_zone_name1) can be given as value to fetch nat rule<br/>destinationInterface:SecurityZone/Interface group name (sec_zone_name1) can be given as value to fetch nat rule<br/>OriginalSource: Network object configured as Orignal source object name (object_name) or the value (10.1.2.3) of the object can be given<br/>originalDestination:Network object configured as Destination source object name (object_name) or the value (10.1.2.3) of the object can be given<br/>translatedSource:Network object configured as translated source object name (object_name) or the value (10.1.2.3) of the object can be given<br/>translatedDestination:Network object configured as translated Destination object name (object_name) or the value (10.1.2.3) of the object can be given<br/>originalSourcePort:Port object configured as Original Source Port object name (http) or value of the object as port no or protocal (tcp/80) can be given<br/>originalDestinationPort:Port object configured as Original Destination Port object name (http) or value of the object as port no or protocal (tcp/80) can be given<br/>translatedSourcePort:Port object configured as Translated Source Port object name (http) or value of the object as port no or protocal (tcp/80) can be given<br/>translatedDestinationPort:Port object configured as Translated Destination Port object name (http) or value of the object as port no or protocal (tcp/80) can be given\"<br/>",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDNatRule"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /api/fmc_config/v1/domain/DomainUUID/policy/ftdnatpolicies/natPolicyUuid/natrules ( Example payload for GET on NAT rules )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/policy/ftdnatpolicies/natPolicyUuid/natrules?offset=0&limit=2"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/policy/ftdnatpolicies/natPolicyUuid/manualnatrules/manualNatRuleUuid",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/policy/ftdnatpolicies/natPolicyUuid/natrules"
                    },
                    "type" : "FTDManualNatRule",
                    "id" : "manualNatRuleUuid"
                  }, {
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/policy/ftdnatpolicies/natPolicyUuid/autonatrules/autoNatRuleUuid",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/policy/ftdnatpolicies/natPolicyUuid/natrules"
                    },
                    "type" : "FTDAutoNatRule",
                    "id" : "autoNatRuleUuid"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                },
                "Response Example 2 :GET /api/fmc_config/v1/domain/DomainUUID/policy/ftdnatpolicies/natPolicyUuid/natrules?expanded=true ( Example payload for GET on NAT rules with ?expanded=true )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/policy/ftdnatpolicies/natPolicyUuid/natrules?offset=0&limit=2&expanded=true"
                  },
                  "items" : [ {
                    "metadata" : {
                      "section" : "BEFORE_AUTO",
                      "index" : 1,
                      "timestamp" : 1488950245960,
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUuid",
                        "type" : "Domain"
                      }
                    },
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/policy/ftdnatpolicies/natPolicyUuid/manualnatrules/manualNatRuleUuid",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/policy/ftdnatpolicies/natPolicyUuid/natrules"
                    },
                    "unidirectional" : true,
                    "originalSource" : {
                      "type" : "Network",
                      "id" : "networkObjUuid",
                      "name" : "any"
                    },
                    "interfaceInOriginalDestination" : false,
                    "interfaceInTranslatedSource" : true,
                    "enabled" : true,
                    "type" : "FTDManualNatRule",
                    "destinationInterface" : {
                      "name" : "seczonemanual",
                      "id" : "secZoneObjUuid",
                      "type" : "SecurityZone"
                    },
                    "dns" : false,
                    "interfaceIpv6" : false,
                    "noProxyArp" : false,
                    "netToNet" : false,
                    "natType" : "DYNAMIC",
                    "sourceInterface" : {
                      "name" : "seczonebefore",
                      "id" : "secZoneObjUuid",
                      "type" : "SecurityZone"
                    },
                    "id" : "manualNatRuleUuid"
                  }, {
                    "metadata" : {
                      "section" : "AUTO",
                      "timestamp" : 1489053023583,
                      "domain" : {
                        "name" : "Global",
                        "id" : "domainUuid",
                        "type" : "Domain"
                      }
                    },
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/policy/ftdnatpolicies/natPolicyUuid/autonatrules/autoNatRuleUuid",
                      "parent" : "<fmc_url>/api/fmc_config/v1/domain/domainUuid/policy/ftdnatpolicies/natPolicyUuid/natrules"
                    },
                    "serviceProtocol" : "TCP",
                    "translatedNetwork" : {
                      "type" : "Network",
                      "id" : "networkObjUuid",
                      "name" : "IPv4-Multicast"
                    },
                    "translatedPort" : 1234,
                    "originalNetwork" : {
                      "type" : "Network",
                      "id" : "f0ce41ae-6ee9-4e00-8762-da9370c4fee5",
                      "name" : "IPv4-Link-Local"
                    },
                    "originalPort" : 345,
                    "type" : "FTDAutoNatRule",
                    "destinationInterface" : {
                      "name" : "seczonemanual",
                      "id" : "secZoneObjUuid",
                      "type" : "SecurityZone"
                    },
                    "dns" : false,
                    "interfaceIpv6" : false,
                    "noProxyArp" : false,
                    "netToNet" : false,
                    "natType" : "STATIC",
                    "sourceInterface" : {
                      "name" : "seczonemanual",
                      "id" : "secZoneObjUuid",
                      "type" : "SecurityZone"
                    },
                    "description" : "auto nat rule 2",
                    "id" : "autoNatRuleUuid"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/ftdnatpolicies/{objectId}" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the NAT policy associated with the specified ID. Also, retrieves list of all NAT policies.**",
        "operationId" : "getFTDNatPolicy",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for NAT policy.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDNatPolicy"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /api/fmc_config/v1/domain/DomainUUID/policy/ftdnatpolicies/natPolicyUuid ( Example payloads for GET on NAT policy. )" : {
                  "type" : "FTDNatPolicy",
                  "links" : {
                    "self" : "<fmc_ip>/api/fmc_config/v1/domain/domainUUID/policy/ftdnatpolicies/natPolUuid1"
                  },
                  "rules" : {
                    "refType" : "list",
                    "links" : {
                      "self" : "<fmc_ip>/api/fmc_config/v1/domain/domainUUID/policy/ftdnatpolicies/natPolUuid1/natrules"
                    }
                  },
                  "name" : "NatPol",
                  "description" : "nat policy for testing",
                  "id" : "natPolUuid1"
                },
                "Response Example 2 :GET /api/fmc_config/v1/domain/DomainUUID/policy/ftdnatpolicies ( Example payloads for GET listing on NAT policy. )" : {
                  "links" : {
                    "self" : "<fmc_ip>/api/fmc_config/v1/domain/domainUUID/policy/ftdnatpolicies?offset=0&limit=2"
                  },
                  "items" : [ {
                    "type" : "FTDNatPolicy",
                    "links" : {
                      "self" : "<fmc_ip>/api/fmc_config/v1/domain/domainUUID/policy/ftdnatpolicies/natPolUuid1"
                    },
                    "name" : "NatPol",
                    "id" : "natPolUuid1"
                  }, {
                    "type" : "FTDNatPolicy",
                    "links" : {
                      "self" : "<fmc_ip>/api/fmc_config/v1/domain/domainUUID/policy/ftdnatpolicies/natPolUuid2"
                    },
                    "name" : "NatPol2",
                    "id" : "natPolUuid2"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                },
                "Response Example 3 :GET /api/fmc_config/v1/domain/DomainUUID/policy/ftdnatpolicies?expanded=true ( Example payload for GET on NAT policy with expanded=true )" : {
                  "links" : {
                    "self" : "<fmc_ip>/api/fmc_config/v1/domain/domainUUID/policy/ftdnatpolicies?offset=0&limit=2&expanded=true"
                  },
                  "items" : [ {
                    "type" : "FTDNatPolicy",
                    "links" : {
                      "self" : "<fmc_ip>/api/fmc_config/v1/domain/domainUUID/policy/ftdnatpolicies/natPolUuid1"
                    },
                    "rules" : {
                      "refType" : "list",
                      "links" : {
                        "self" : "<fmc_ip>/api/fmc_config/v1/domain/domainUUID/policy/ftdnatpolicies/natPolUuid1/natrules"
                      }
                    },
                    "name" : "NatPol",
                    "description" : "nat policy 1 for testing",
                    "id" : "natPolUuid1"
                  }, {
                    "type" : "FTDNatPolicy",
                    "links" : {
                      "self" : "<fmc_ip>/api/fmc_config/v1/domain/domainUUID/policy/ftdnatpolicies/natPolUuid2"
                    },
                    "rules" : {
                      "refType" : "list",
                      "links" : {
                        "self" : "<fmc_ip>/api/fmc_config/v1/domain/domainUUID/policy/ftdnatpolicies/natPolUuid2/natrules"
                      }
                    },
                    "name" : "NatPol2",
                    "description" : "Some description",
                    "id" : "natPolUuid2"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the NAT policy associated with the specified ID. Also, retrieves list of all NAT policies. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateFTDNatPolicy",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for NAT policy.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of NAT policy.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FTDNatPolicy"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDNatPolicy"
            },
            "examples" : { }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/FTDNatPolicy"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the NAT policy associated with the specified ID. Also, retrieves list of all NAT policies. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteFTDNatPolicy",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for NAT policy.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDNatPolicy"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /api/fmc_config/v1/domain/domainUUID/policy/ftdnatpolicies/natPolicyUuid ( Example payload for DELETE on NAT policy. )" : {
                  "type" : "FTDNatPolicy",
                  "links" : {
                    "self" : "<fmc_ip>/api/fmc_config/v1/domain/domainUUID/policy/natpolicies/natPolicyUuid"
                  },
                  "rules" : {
                    "refType" : "list",
                    "links" : {
                      "self" : "<fmc_ip>/api/fmc_config/v1/domain/domainUUID/policy/natpolicies/natPolicyUuid/natrules"
                    }
                  },
                  "name" : "UpdatedNatPolName",
                  "description" : "Updated description",
                  "id" : "natPolicyUuid"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/ftds2svpns" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the FTD Site to Site VPN topology associated with the specified ID. If no ID is specified for a GET, retrieves list of all FTD Site to Site VPN topologies.**",
        "operationId" : "getAllFTDS2SVpnModel",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDS2SVpnModelListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/DomainUUID/policy/ftds2svpns ( Success: Test GET ALL success )" : {
                  "links" : {
                    "self" : "<fmc_ip>/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/policy/ftds2svpns?offset=0&limit=2"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_ip>/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/policy/ftds2svpns/005056A9-7483-0ed3-0000-012884902862"
                    },
                    "name" : "tests2s",
                    "id" : "005056A9-5800-0ed3-0000-008589935597",
                    "type" : "FTDS2SVpn"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 1,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/DomainUUID/policy/ftds2svpns?expanded=true ( Success: Test GET ALL success with expanded=true )" : {
                  "links" : {
                    "self" : "<fmc_ip>/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/policy/ftds2svpns?offset=0&limit=1&expanded=true"
                  },
                  "items" : [ {
                    "name" : "cisco_s2s_vpn",
                    "id" : "005056A9-9F80-0ed3-0000-008589935105",
                    "type" : "FTDS2SVpn",
                    "topologyType" : "POINT_TO_POINT",
                    "ikeV1Enabled" : false,
                    "ikeV2Enabled" : true,
                    "links" : {
                      "self" : "<fmc_ip>/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/policy/ftds2svpns/005056A9-9F80-0ed3-0000-008589935105"
                    },
                    "endpoints" : {
                      "refType" : "list",
                      "links" : {
                        "self" : "<fmc_ip>/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/policy/ftds2svpns/005056A9-9F80-0ed3-0000-008589935105/endpoints"
                      },
                      "type" : "EndPoint"
                    },
                    "ikeSettings" : {
                      "links" : {
                        "self" : "<fmc_ip>/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/policy/ftds2svpns/005056A9-9F80-0ed3-0000-008589935105/ikesettings/005056A9-7483-0ed3-0000-012884902862"
                      },
                      "id" : "005056A9-7483-0ed3-0000-012884902862",
                      "type" : "IkeSettings"
                    },
                    "ipsecSettings" : {
                      "id" : "005056A9-9F80-0ed3-0000-008589935150",
                      "type" : "IPSecSettings",
                      "links" : {
                        "self" : "<fmc_ip>/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/policy/ftds2svpns/005056A9-9F80-0ed3-0000-008589935105/ipsecsettings/005056A9-9F80-0ed3-0000-008589935150"
                      }
                    },
                    "advancedSettings" : {
                      "id" : "005056A9-9F80-0ed3-0000-008589935160",
                      "type" : "AdvancedSettings",
                      "links" : {
                        "self" : "<fmc_ip>/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/policy/ftds2svpns/005056A9-9F80-0ed3-0000-008589935105/advancedSettings/005056A9-9F80-0ed3-0000-008589935160"
                      }
                    },
                    "metadata" : {
                      "timestamp" : 1527842213894,
                      "lastUser" : {
                        "name" : "admin"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "e276abec-e0f2-11e3-8169-6d9ed49b625f"
                      }
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the FTD Site to Site VPN topology associated with the specified ID. If no ID is specified for a GET, retrieves list of all FTD Site to Site VPN topologies. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createFTDS2SVpnModel",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of FTD Site to Site VPN topology.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FTDS2SVpnModel"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/FTDS2SVpnModel"
            },
            "examples" : { }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/FTDS2SVpnModel"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/ftds2svpns/{containerUUID}/advancedsettings" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves and modifies a Advanced settings inside a VPN Site To Site Topology. If no ID is specified for a GET, retrieves list containing a single AdvancedSettings entry of the topology.**",
        "operationId" : "getAllVpnAdvancedSettings",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/VpnAdvancedSettingsListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/DomainUUID/policy/ftds2svpns/containerUUID/advancedsettings ( Success: Test GET ALL success )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/policy/ftds2svpns/005056A9-097E-0ed3-0000-008589935150/advancedsettings?offset=0&limit=1"
                  },
                  "items" : [ {
                    "id" : "005056A9-097E-0ed3-0000-021474836554",
                    "type" : "AdvancedSettings",
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/policy/ftds2svpns/005056A9-097E-0ed3-0000-008589935150/advancedsettings/005056A9-097E-0ed3-0000-021474836554"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/DomainUUID/policy/ftds2svpns/containerUUID/endpoints?expanded=true ( Success: Test GET ALL success with expanded=true )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/policy/ftds2svpns/005056A9-097E-0ed3-0000-008589935150/advancedsettings?offset=0&limit=1&expanded=true"
                  },
                  "items" : [ {
                    "id" : "005056A9-097E-0ed3-0000-021474836554",
                    "type" : "AdvancedSettings",
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/policy/ftds2svpns/005056A9-097E-0ed3-0000-008589935150/advancedsettings/005056A9-097E-0ed3-0000-021474836554"
                    },
                    "advancedIkeSetting" : {
                      "peerIdentityValidation" : "REQUIRED",
                      "thresholdToChallengeIncomingCookies" : 50,
                      "percentageOfSAsAllowedInNegotiation" : 100,
                      "enableNotificationOnTunnelDisconnect" : false,
                      "identitySentToPeer" : "AUTO_OR_DN",
                      "enableAggressiveMode" : false,
                      "cookieChallenge" : "CUSTOM"
                    },
                    "advancedTunnelSetting" : {
                      "certificateMapSettings" : {
                        "useCertMapConfiguredInEndpointToDetermineTunnel" : false,
                        "useCertificateOuToDetermineTunnel" : true,
                        "useIkeIdentityOuToDetermineTunnel" : true,
                        "usePeerIpAddressToDetermineTunnel" : true
                      },
                      "enableSpokeToSpokeConnectivityThrougHub" : false,
                      "natKeepaliveMessageTraversal" : {
                        "enabled" : true,
                        "intervalSeconds" : 20
                      },
                      "bypassAccessControlTrafficForDecryptedTraffic" : false
                    },
                    "advancedIpsecSetting" : {
                      "maximumTransmissionUnitAging" : {
                        "enabled" : false
                      },
                      "enableFragmentationBeforeEncryption" : true
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/ftds2svpns/{containerUUID}/advancedsettings/{objectId}" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves and modifies a Advanced settings inside a VPN Site To Site Topology. If no ID is specified for a GET, retrieves list containing a single AdvancedSettings entry of the topology.**",
        "operationId" : "getVpnAdvancedSettings",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for Advanced settings in a Site to Site VPN topology.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/VpnAdvancedSettings"
            },
            "examples" : { }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves and modifies a Advanced settings inside a VPN Site To Site Topology. If no ID is specified for a GET, retrieves list containing a single AdvancedSettings entry of the topology. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateVpnAdvancedSettings",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for Advanced settings in a Site to Site VPN topology.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of Advanced settings in a Site to Site VPN topology.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VpnAdvancedSettings"
          }
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/VpnAdvancedSettings"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/DomainUUID/policy/ftds2svpns/containerUUID/ipsecsettings/ipsecsettingsUUID ( Test PUT of Vpn Advanced Settings )" : {
                  "id" : "005056A9-097E-0ed3-0000-021474836554",
                  "type" : "AdvancedSettings",
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/policy/ftds2svpns/005056A9-097E-0ed3-0000-008589935150/advancedsettings/005056A9-097E-0ed3-0000-021474836554"
                  },
                  "advancedIkeSetting" : {
                    "peerIdentityValidation" : "REQUIRED",
                    "thresholdToChallengeIncomingCookies" : 50,
                    "percentageOfSAsAllowedInNegotiation" : 100,
                    "enableNotificationOnTunnelDisconnect" : false,
                    "identitySentToPeer" : "AUTO_OR_DN",
                    "enableAggressiveMode" : false,
                    "cookieChallenge" : "CUSTOM"
                  },
                  "advancedTunnelSetting" : {
                    "certificateMapSettings" : {
                      "useCertMapConfiguredInEndpointToDetermineTunnel" : false,
                      "useCertificateOuToDetermineTunnel" : true,
                      "useIkeIdentityOuToDetermineTunnel" : true,
                      "usePeerIpAddressToDetermineTunnel" : true
                    },
                    "enableSpokeToSpokeConnectivityThroughHub" : false,
                    "natKeepaliveMessageTraversal" : {
                      "enabled" : true,
                      "intervalSeconds" : 20
                    },
                    "bypassAccessControlTrafficForDecryptedTraffic" : false
                  },
                  "advancedIpsecSetting" : {
                    "maximumTransmissionUnitAging" : {
                      "enabled" : false
                    },
                    "enableFragmentationBeforeEncryption" : true
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/VpnAdvancedSettings"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/ftds2svpns/{containerUUID}/endpoints" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies a specific Endpoint associated with the specified ID inside a VPN Site To Site Topology. If no ID is specifid for a GET, retrieves list of all Endpoints of a topology.**",
        "operationId" : "getAllVpnEndpoint",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/VpnEndpointListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET fmc_config/v1/domain/domainUUID/policy/ftds2svpns/topologyUuid/endpoints ( Success: Test GET ALL success )" : {
                  "links" : {
                    "self" : "<fmc_ip>/api/fmc_config/v1/domain/domainUUID/policy/ftds2svpns/topologyUuid/endpoints?offset=0&limit=2"
                  },
                  "items" : [ {
                    "name" : "192.168.0.22",
                    "id" : "005056A9-6FFE-0ed3-0000-120259084433",
                    "type" : "EndPoint"
                  }, {
                    "name" : "192.168.0.22",
                    "id" : "endpointId",
                    "type" : "EndPoint"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET fmc_config/v1/domain/domainUUID/policy/ftds2svpns/topologyUuid/endpoints?expanded=true ( Success: Test GET ALL success with expanded=true )" : {
                  "links" : {
                    "self" : "<fmc_ip>/api/fmc_config/v1/domain/domainUUID/policy/ftds2svpns/topologyUuid/endpoints?offset=0&limit=2&expanded=true"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_ip>/api/fmc_config/v1/domain/domainUUID/policy/ftds2svpns/topologyUuid/endpoints/005056A9-6FFE-0ed3-0000-120259084433"
                    },
                    "name" : "192.168.0.22",
                    "id" : "005056A9-6FFE-0ed3-0000-120259084433",
                    "type" : "EndPoint",
                    "extranet" : false,
                    "device" : {
                      "name" : "192.168.0.22",
                      "id" : "463b5424-2812-11e8-9a5f-89adee70d40d",
                      "type" : "Device"
                    },
                    "interface" : {
                      "name" : "s1",
                      "id" : "005056A9-6FFE-0ed3-0000-042949673272"
                    },
                    "protectedNetworks" : {
                      "networks" : [ {
                        "name" : "IPv4-Private-172.16.0.0-12",
                        "id" : "b7a78a7d-20c5-47b2-b02f-86b4360112ac"
                      } ]
                    },
                    "connectionType" : "BIDIRECTIONAL",
                    "dynamicRRIEnabled" : false,
                    "peerType" : "PEER"
                  }, {
                    "links" : {
                      "self" : "<fmc_ip>/api/fmc_config/v1/domain/domainUUID/policy/ftds2svpns/topologyUuid/endpoints/endpointId"
                    },
                    "interface" : {
                      "name" : "inside",
                      "id" : "005056A9-6FFE-0ed3-0000-004294967551"
                    },
                    "name" : "192.168.0.22",
                    "id" : "endpointId",
                    "type" : "EndPoint",
                    "extranet" : false,
                    "device" : {
                      "name" : "192.168.0.22",
                      "id" : "463b5424-2812-11e8-9a5f-89adee70d40d",
                      "type" : "Device"
                    },
                    "connectionType" : "ORIGINATE_ONLY",
                    "dynamicRRIEnabled" : false,
                    "protectedNetworks" : {
                      "networks" : [ {
                        "name" : "IPv4-Private-172.16.0.0-12",
                        "id" : "b7a78a7d-20c5-47b2-b02f-86b4360112ac"
                      } ]
                    },
                    "peerType" : "PEER"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies a specific Endpoint associated with the specified ID inside a VPN Site To Site Topology. If no ID is specifid for a GET, retrieves list of all Endpoints of a topology. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createVpnEndpoint",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of Endpoint.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VpnEndpoint"
          }
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/VpnEndpoint"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /fmc_config/v1/domain/DomainUUID/policy/ftds2svpns/containerUUID/endpoints ( POST of Endpoint with FMC managed FTD device )" : {
                  "peerType" : "PEER",
                  "device" : {
                    "name" : "192.168.0.32",
                    "id" : "933e077a-64cc-11e8-9be7-da0d15a02570",
                    "type" : "Device"
                  },
                  "interface" : {
                    "name" : "inside",
                    "id" : "005056A9-9F80-0ed3-0000-008589934781",
                    "type" : "PhysicalInterface"
                  },
                  "protectedNetworks" : {
                    "networks" : [ {
                      "name" : "IPv4-Private-10.0.0.0-8",
                      "id" : "95916354-5aa1-4057-8eea-b42a5a207abc",
                      "type" : "Network"
                    } ]
                  },
                  "connectionType" : "BIDIRECTIONAL",
                  "type" : "EndPoint"
                },
                "Request example 2 : POST /fmc_config/v1/domain/DomainUUID/policy/ftds2svpns/containerUUID/endpoints ( POST of Endpoint with extranet )" : {
                  "peerType" : "PEER",
                  "extranet" : true,
                  "extranetInfo" : {
                    "name" : "10.0.0.1",
                    "ipAddress" : "10.0.0.1"
                  },
                  "protectedNetworks" : {
                    "networks" : [ {
                      "name" : "IPv4-Private-10.0.0.0-8",
                      "id" : "95916354-5aa1-4057-8eea-b42a5a207abc",
                      "type" : "Network"
                    } ]
                  },
                  "type" : "EndPoint"
                },
                "Request example 3 : POST /fmc_config/v1/domain/DomainUUID/policy/ftds2svpns/containerUUID/endpoints?bulk=true ( bulk POST example for Endpoints in VPN topology )" : [ {
                  "peerType" : "PEER",
                  "device" : {
                    "name" : "192.168.0.32",
                    "id" : "933e077a-64cc-11e8-9be7-da0d15a02570",
                    "type" : "Device"
                  },
                  "interface" : {
                    "name" : "inside",
                    "id" : "005056A9-9F80-0ed3-0000-008589934781",
                    "type" : "PhysicalInterface"
                  },
                  "protectedNetworks" : {
                    "networks" : [ {
                      "name" : "IPv4-Private-10.0.0.0-8",
                      "id" : "95916354-5aa1-4057-8eea-b42a5a207abc",
                      "type" : "Network"
                    } ]
                  },
                  "connectionType" : "BIDIRECTIONAL",
                  "type" : "EndPoint"
                }, {
                  "peerType" : "PEER",
                  "extranet" : true,
                  "extranetInfo" : {
                    "name" : "10.0.0.1",
                    "ipAddress" : "10.0.0.1"
                  },
                  "protectedNetworks" : {
                    "networks" : [ {
                      "name" : "IPv4-Private-10.0.0.0-8",
                      "id" : "95916354-5aa1-4057-8eea-b42a5a207abc",
                      "type" : "Network"
                    } ]
                  },
                  "type" : "EndPoint"
                } ],
                "Response Example 3 :POST /fmc_config/v1/domain/DomainUUID/policy/ftds2svpns/containerUUID/endpoints?bulk=true ( bulk POST example for Endpoints in VPN topology )" : {
                  "links" : {
                    "self" : "<fmc_ip>/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/policy/ftds2svpns/005056A9-6FFE-0ed3-0000-004294967298/endpoints?bulk=true"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_ip>/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/policy/ftds2svpns/005056A9-6FFE-0ed3-0000-004294967298/endpoints/005056A9-6FFE-0ed3-0000-141733920770"
                    },
                    "id" : "005056A9-6FFE-0ed3-0000-141733920770",
                    "name" : "192.168.0.23",
                    "peerType" : "PEER",
                    "device" : {
                      "name" : "192.168.0.32",
                      "id" : "933e077a-64cc-11e8-9be7-da0d15a02570",
                      "type" : "Device"
                    },
                    "interface" : {
                      "name" : "inside",
                      "id" : "005056A9-9F80-0ed3-0000-008589934781",
                      "type" : "PhysicalInterface"
                    },
                    "protectedNetworks" : {
                      "networks" : [ {
                        "name" : "IPv4-Private-10.0.0.0-8",
                        "id" : "95916354-5aa1-4057-8eea-b42a5a207abc",
                        "type" : "Network"
                      } ]
                    },
                    "connectionType" : "BIDIRECTIONAL",
                    "type" : "EndPoint"
                  }, {
                    "links" : {
                      "self" : "<fmc_ip>/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/policy/ftds2svpns/005056A9-6FFE-0ed3-0000-004294967298/endpoints/005056A9-6FFE-0ed3-0000-141733920771"
                    },
                    "id" : "005056A9-6FFE-0ed3-0000-141733920771",
                    "peerType" : "PEER",
                    "extranet" : true,
                    "extranetInfo" : {
                      "name" : "10.0.0.1",
                      "ipAddress" : "10.0.0.1"
                    },
                    "protectedNetworks" : {
                      "networks" : [ {
                        "name" : "IPv4-Private-10.0.0.0-8",
                        "id" : "95916354-5aa1-4057-8eea-b42a5a207abc",
                        "type" : "Network"
                      } ]
                    },
                    "type" : "EndPoint"
                  } ]
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/VpnEndpoint"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/ftds2svpns/{containerUUID}/endpoints/{objectId}" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies a specific Endpoint associated with the specified ID inside a VPN Site To Site Topology. If no ID is specifid for a GET, retrieves list of all Endpoints of a topology.**",
        "operationId" : "getVpnEndpoint",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for an Endpoint in a Site to Site VPN topology.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/VpnEndpoint"
            },
            "examples" : { }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies a specific Endpoint associated with the specified ID inside a VPN Site To Site Topology. If no ID is specifid for a GET, retrieves list of all Endpoints of a topology. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateVpnEndpoint",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for an Endpoint in a Site to Site VPN topology.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of Endpoint.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VpnEndpoint"
          }
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/VpnEndpoint"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/DomainUUID/policy/ftds2svpns/containerUUID/endpoints/endpointUUID ( Test PUT of Endpoint )" : {
                  "id" : "005056A9-6FFE-0ed3-0000-120259084433",
                  "type" : "EndPoint",
                  "extranet" : false,
                  "device" : {
                    "name" : "192.168.0.22",
                    "id" : "463b5424-2812-11e8-9a5f-89adee70d40d",
                    "type" : "Device"
                  },
                  "interface" : {
                    "name" : "s1",
                    "id" : "005056A9-6FFE-0ed3-0000-042949673272"
                  },
                  "connectionType" : "BIDIRECTIONAL",
                  "protectedNetworks" : {
                    "networks" : [ {
                      "name" : "IPv4-Private-172.16.0.0-12",
                      "id" : "b7a78a7d-20c5-47b2-b02f-86b4360112ac"
                    } ]
                  },
                  "peerType" : "PEER"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/VpnEndpoint"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies a specific Endpoint associated with the specified ID inside a VPN Site To Site Topology. If no ID is specifid for a GET, retrieves list of all Endpoints of a topology. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteVpnEndpoint",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for an Endpoint in a Site to Site VPN topology.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/VpnEndpoint"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/ftds2svpns/{containerUUID}/ikesettings" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the IKE Settings associated with the specified ID inside a VPN Site To Site Topology. If no ID is specified for a GET, retrieves Ike Settings of a topology.**",
        "operationId" : "getAllVpnIkeSettings",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/VpnIkeSettingsListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/DomainUUID/policy/ftds2svpns/containerUUID/ikesettings ( Success: Test GET ALL success )" : {
                  "links" : {
                    "self" : "<fmc_ip>/api/fmc_config/v1/domain/domainUUID/policy/ftds2svpns/topologyUUID/ikesettings?offset=0&limit=1"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_ip>/api/fmc_config/v1/domain/domainUUID/policy/ftds2svpns/topologyUUID/ikesettings/005056A9-7483-0ed3-0000-012884902862"
                    },
                    "id" : "005056A9-7483-0ed3-0000-012884902862",
                    "type" : "IkeSettings"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/DomainUUID/policy/ftds2svpns/containerUUID/ikesettings?expanded=true ( Success: Test GET ALL success with expanded=true )" : {
                  "links" : {
                    "self" : "<fmc_ip>/api/fmc_config/v1/domain/domainUUID/policy/ftds2svpns/topologyUUID/ikesettings?offset=0&limit=1&expanded=true"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "<fmc_ip>/api/fmc_config/v1/domain/domainUUID/policy/ftds2svpns/topologyUUID/ikesettings/005056A9-7483-0ed3-0000-012884902862"
                    },
                    "id" : "005056A9-7483-0ed3-0000-012884902862",
                    "type" : "IkeSettings",
                    "ikeV2Settings" : {
                      "automaticPreSharedKeyLength" : 7,
                      "enforceHexBasedPreSharedKeyOnly" : true,
                      "authenticationType" : "AUTOMATIC_PRE_SHARED_KEY",
                      "policy" : {
                        "name" : "DES-SHA-SHA",
                        "id" : "005056A9-6FFE-0ed3-0000-000000000402",
                        "type" : "Ike2"
                      }
                    },
                    "ikeV1Settings" : {
                      "automaticPreSharedKeyLength" : 7,
                      "authenticationType" : "AUTOMATIC_PRE_SHARED_KEY",
                      "policy" : {
                        "name" : "preshared_sha_des_dh5_160",
                        "id" : "005056A9-6FFE-0ed3-0000-000000000303",
                        "type" : "Ike"
                      }
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/ftds2svpns/{containerUUID}/ikesettings/{objectId}" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the IKE Settings associated with the specified ID inside a VPN Site To Site Topology. If no ID is specified for a GET, retrieves Ike Settings of a topology.**",
        "operationId" : "getVpnIkeSettings",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for an Ike Settings policy in a Site to Site VPN topology.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/VpnIkeSettings"
            },
            "examples" : { }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the IKE Settings associated with the specified ID inside a VPN Site To Site Topology. If no ID is specified for a GET, retrieves Ike Settings of a topology. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateVpnIkeSettings",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for an Ike Settings policy in a Site to Site VPN topology.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of Ike Settings.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VpnIkeSettings"
          }
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/VpnIkeSettings"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/DomainUUID/policy/ftds2svpns/containerUUID/ikesettings/ikeSettingsUUID ( Test PUT of Ike Settings )" : {
                  "links" : {
                    "self" : "<fmc_ip>/api/fmc_config/v1/domain/domainUUID/policy/ftds2svpns/topologyUUID/ikesettings/005056A9-7483-0ed3-0000-012884902862"
                  },
                  "id" : "005056A9-7483-0ed3-0000-012884902862",
                  "type" : "IkeSettings",
                  "ikeV2Settings" : {
                    "automaticPreSharedKeyLength" : 7,
                    "enforceHexBasedPreSharedKeyOnly" : true,
                    "authenticationType" : "AUTOMATIC_PRE_SHARED_KEY",
                    "policy" : {
                      "name" : "DES-SHA-SHA",
                      "id" : "005056A9-6FFE-0ed3-0000-000000000402",
                      "type" : "Ike2"
                    }
                  },
                  "ikeV1Settings" : {
                    "automaticPreSharedKeyLength" : 7,
                    "authenticationType" : "AUTOMATIC_PRE_SHARED_KEY",
                    "policy" : {
                      "name" : "preshared_sha_des_dh5_160",
                      "id" : "005056A9-6FFE-0ed3-0000-000000000303",
                      "type" : "Ike"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/VpnIkeSettings"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/ftds2svpns/{containerUUID}/ipsecsettings" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves and modifies a IPSec Proposal settings inside a VPN Site To Site Topology. If no ID is specified for a GET, retrieves list containing a single IPSecSettings entry of the topology.**",
        "operationId" : "getAllVpnIPSecSettings",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/VpnIPSecSettingsListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/DomainUUID/policy/ftds2svpns/containerUUID/ipsecsettings ( Example GET ALL of VPN IPSec Settings )" : {
                  "links" : {
                    "self" : "https://u32c01p12-vrouter.cisco.com:8131/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/policy/ftds2svpns/005056A9-302C-0ed3-0000-017179869721/ipsecsettings?offset=0&limit=1"
                  },
                  "items" : [ {
                    "id" : "005056A9-302C-0ed3-0000-038654705756",
                    "type" : "IPSecSettings",
                    "links" : {
                      "self" : "https://u32c01p12-vrouter.cisco.com:8131/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/policy/ftds2svpns/005056A9-302C-0ed3-0000-017179869721/ipsecsettings/005056A9-302C-0ed3-0000-038654705756"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/DomainUUID/policy/ftds2svpns/containerUUID/endpoints?expanded=true ( Example expanded GET ALL of VPN IPSec Settings )" : {
                  "links" : {
                    "self" : "https://u32c01p12-vrouter.cisco.com:8131/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/policy/ftds2svpns/005056A9-302C-0ed3-0000-017179869721/ipsecsettings?offset=0&limit=1&expanded=true"
                  },
                  "items" : [ {
                    "tfcPackets" : {
                      "enabled" : false,
                      "burstBytes" : 0,
                      "payloadBytes" : 0,
                      "timeoutSeconds" : 0
                    },
                    "cryptoMapType" : "STATIC",
                    "ikeV2Mode" : "TUNNEL",
                    "enableSaStrengthEnforcement" : false,
                    "enableRRI" : true,
                    "lifetimeSeconds" : 28800,
                    "lifetimeKilobytes" : 4608000,
                    "perfectForwardSecrecy" : {
                      "enabled" : false
                    },
                    "validateIncomingIcmpErrorMessage" : false,
                    "doNotFragmentPolicy" : "NONE",
                    "id" : "005056A9-302C-0ed3-0000-038654705756",
                    "type" : "IPSecSettings",
                    "links" : {
                      "self" : "https://u32c01p12-vrouter.cisco.com:8131/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/policy/ftds2svpns/005056A9-302C-0ed3-0000-017179869721/ipsecsettings/005056A9-302C-0ed3-0000-038654705756"
                    },
                    "ikeV2IpsecProposal" : [ {
                      "name" : "AES-GCM",
                      "id" : "005056A9-302C-0ed3-0000-000000002010",
                      "type" : "IKEv2IPsecProposal"
                    } ]
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/ftds2svpns/{containerUUID}/ipsecsettings/{objectId}" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves and modifies a IPSec Proposal settings inside a VPN Site To Site Topology. If no ID is specified for a GET, retrieves list containing a single IPSecSettings entry of the topology.**",
        "operationId" : "getVpnIPSecSettings",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for IPSec Proposal settings in a Site to Site VPN topology.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/VpnIPSecSettings"
            },
            "examples" : { }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves and modifies a IPSec Proposal settings inside a VPN Site To Site Topology. If no ID is specified for a GET, retrieves list containing a single IPSecSettings entry of the topology. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateVpnIPSecSettings",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for IPSec Proposal settings in a Site to Site VPN topology.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of IPSec Proposal settings.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VpnIPSecSettings"
          }
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/VpnIPSecSettings"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/DomainUUID/policy/ftds2svpns/containerUUID/ipsecsettings/ipsecsettingsUUID ( Example PUT of VPN IPSec Settings )" : {
                  "tfcPackets" : {
                    "enabled" : false,
                    "burstBytes" : 0,
                    "payloadBytes" : 0,
                    "timeoutSeconds" : 0
                  },
                  "cryptoMapType" : "STATIC",
                  "ikeV2Mode" : "TUNNEL",
                  "enableSaStrengthEnforcement" : false,
                  "enableRRI" : true,
                  "lifetimeSeconds" : 28800,
                  "lifetimeKilobytes" : 4608000,
                  "perfectForwardSecrecy" : {
                    "enabled" : false
                  },
                  "validateIncomingIcmpErrorMessage" : false,
                  "doNotFragmentPolicy" : "NONE",
                  "id" : "005056A9-302C-0ed3-0000-017179869924",
                  "type" : "IPSecSettings",
                  "links" : {
                    "self" : "https://u32c01p12-vrouter.cisco.com:8131/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/policy/ftds2svpns/005056A9-302C-0ed3-0000-017179869721/ipsecsettings/005056A9-302C-0ed3-0000-017179869924"
                  },
                  "ikeV2IpsecProposal" : [ {
                    "name" : "AES-GCM",
                    "id" : "005056A9-302C-0ed3-0000-000000002010",
                    "type" : "IKEv2IPsecProposal"
                  } ]
                },
                "Response Example 1 :PUT /fmc_config/v1/domain/DomainUUID/policy/ftds2svpns/containerUUID/ipsecsettings/ipsecsettingsUUID ( Example PUT of VPN IPSec Settings )" : {
                  "tfcPackets" : {
                    "enabled" : false,
                    "burstBytes" : 0,
                    "payloadBytes" : 0,
                    "timeoutSeconds" : 0
                  },
                  "cryptoMapType" : "STATIC",
                  "ikeV2Mode" : "TUNNEL",
                  "enableSaStrengthEnforcement" : false,
                  "enableRRI" : true,
                  "lifetimeSeconds" : 28800,
                  "lifetimeKilobytes" : 4608000,
                  "perfectForwardSecrecy" : {
                    "enabled" : false,
                    "modulusGroup" : 2
                  },
                  "validateIncomingIcmpErrorMessage" : false,
                  "doNotFragmentPolicy" : "NONE",
                  "type" : "IPSecSettings",
                  "ikeV1IpsecProposal" : [ {
                    "name" : "tunnel_aes256_sha",
                    "id" : "005056A9-302C-0ed3-0000-000000002003",
                    "type" : "IKEv1IPsecProposal"
                  } ],
                  "ikeV2IpsecProposal" : [ {
                    "name" : "AES-GCM",
                    "id" : "005056A9-302C-0ed3-0000-000000002010",
                    "type" : "IKEv2IPsecProposal"
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/VpnIPSecSettings"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/ftds2svpns/{objectId}" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the FTD Site to Site VPN topology associated with the specified ID. If no ID is specified for a GET, retrieves list of all FTD Site to Site VPN topologies.**",
        "operationId" : "getFTDS2SVpnModel",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for FTD Site to Site VPN topology.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDS2SVpnModel"
            },
            "examples" : { }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the FTD Site to Site VPN topology associated with the specified ID. If no ID is specified for a GET, retrieves list of all FTD Site to Site VPN topologies. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateFTDS2SVpnModel",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for FTD Site to Site VPN topology.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of FTD Site to Site VPN topology.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FTDS2SVpnModel"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDS2SVpnModel"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/DomainUUID/policy/ftds2svpns/FTDS2SUUID ( Test PUT of FTDS2S )" : {
                  "name" : "Cicso_S2S_Vpn",
                  "type" : "FTDS2SVpn",
                  "topologyType" : "POINT_TO_POINT",
                  "ikeV1Enabled" : true,
                  "ikeV2Enabled" : false
                },
                "Response Example 1 :PUT /fmc_config/v1/domain/DomainUUID/policy/ftds2svpns/FTDS2SUUID ( Test PUT of FTDS2S )" : {
                  "name" : "Cicso_S2S_Vpn",
                  "id" : "005056A9-9F80-0ed3-0000-008589935332",
                  "type" : "FTDS2SVpn",
                  "links" : {
                    "self" : "<fmc_ip>/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/policy/ftds2svpns/005056A9-9F80-0ed3-0000-008589935332"
                  },
                  "endpoints" : {
                    "refType" : "list",
                    "links" : {
                      "self" : "<fmc_ip>/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/policy/ftds2svpns/005056A9-9F80-0ed3-0000-008589935332/endpoints"
                    },
                    "type" : "EndPoint"
                  },
                  "ikeSettings" : {
                    "links" : {
                      "self" : "<fmc_ip>/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/policy/ftds2svpns/005056A9-9F80-0ed3-0000-008589935332/ikesettings/005056A9-7483-0ed3-0000-012884902862"
                    },
                    "id" : "005056A9-7483-0ed3-0000-012884902862",
                    "type" : "IkeSettings"
                  },
                  "ipsecSettings" : {
                    "id" : "005056A9-9F80-0ed3-0000-008589935354",
                    "type" : "IPSecSettings",
                    "links" : {
                      "self" : "<fmc_ip>/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/policy/ftds2svpns/005056A9-9F80-0ed3-0000-008589935332/ipsecsettings/005056A9-9F80-0ed3-0000-008589935354"
                    }
                  },
                  "advancedSettings" : {
                    "id" : "005056A9-9F80-0ed3-0000-008589935373",
                    "type" : "AdvancedSettings",
                    "links" : {
                      "self" : "<fmc_ip>/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/policy/ftds2svpns/005056A9-9F80-0ed3-0000-008589935332/advancedSettings/005056A9-9F80-0ed3-0000-008589935373"
                    }
                  },
                  "topologyType" : "POINT_TO_POINT",
                  "ikeV1Enabled" : true,
                  "ikeV2Enabled" : false
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/FTDS2SVpnModel"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the FTD Site to Site VPN topology associated with the specified ID. If no ID is specified for a GET, retrieves list of all FTD Site to Site VPN topologies. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteFTDS2SVpnModel",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for FTD Site to Site VPN topology.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDS2SVpnModel"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /fmc_config/v1/domain/DomainUUID/policy/ftds2svpns/FTDS2SUUID ( Test Delete of FTDS2SVpn )" : {
                  "links" : {
                    "self" : "<fmc_ip>/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/policy/ftds2svpns/005056A9-7483-0ed3-0000-012884902862"
                  },
                  "ipsecSettings" : {
                    "id" : "005056A9-5800-0ed3-0000-008589935770",
                    "type" : "ipsecsettings",
                    "links" : {
                      "self" : "<fmc_ip>/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/policy/ftds2svpns/005056A9-5800-0ed3-0000-008589935597/ipsecsettings/005056A9-5800-0ed3-0000-008589935770"
                    }
                  },
                  "endpoints" : {
                    "refType" : "list",
                    "type" : "EndPoint",
                    "links" : {
                      "self" : "<fmc_ip>/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/policy/ftds2svpns/005056A9-5800-0ed3-0000-008589935597/endpoints"
                    }
                  },
                  "ikeSettings" : {
                    "links" : {
                      "self" : "<fmc_ip>/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/policy/ftds2svpns/005056A9-5800-0ed3-0000-008589935597/ikesettings"
                    },
                    "id" : "005056A9-7483-0ed3-0000-012884902862",
                    "type" : "IkeSettings"
                  },
                  "topologyType" : "POINT_TO_POINT",
                  "ikeV1Enabled" : false,
                  "ikeV2Enabled" : true,
                  "name" : "tests2s",
                  "id" : "005056A9-5800-0ed3-0000-008589935597",
                  "type" : "FTDS2SVpn"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/identitypolicies" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves the Identity Policy associated with the specified ID. If no ID is specified, retrieves list of all Identity Policies.**",
        "operationId" : "getAllIdentityPolicy",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/IdentityPolicyListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/domainUUID/policy/identitypolicies?limit=2 ( Get all paginated IdentityPolicy with limit set 2 )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/policy/identitypolicies?offset=0&limit=2&expanded=true"
                  },
                  "items" : [ {
                    "name" : "my_id_policy_2",
                    "id" : "492873ac-f79e-11ea-86b1-c9fbaca1c89a",
                    "type" : "IdentityPolicy"
                  }, {
                    "name" : "my_id_policy",
                    "id" : "c20551c0-f698-11ea-bbe6-985851b5f895",
                    "type" : "IdentityPolicy"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/domainUUID/policy/identitypolicies?limit=2&expanded=true ( Get all paginated detailed IdentityPolicy with limit set 2  )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/policy/identitypolicies?offset=0&limit=2&expanded=true"
                  },
                  "items" : [ {
                    "name" : "my_id_policy_2",
                    "id" : "492873ac-f79e-11ea-86b1-c9fbaca1c89a",
                    "version" : "70575f06-f79e-11ea-8c86-b289cbd6e1c1",
                    "type" : "IdentityPolicy",
                    "metadata" : {
                      "readOnly" : {
                        "state" : false
                      },
                      "timestamp" : 1602085051,
                      "lastUser" : {
                        "name" : "admin",
                        "id" : "68d03c42-d9bd-11dc-89f2-b7961d42c462",
                        "type" : "user"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "e276abec-e0f2-11e3-8169-6d9ed49b625f",
                        "type" : "Domain"
                      }
                    },
                    "links" : {
                      "self" : "/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/policy/identitypolicies/492873ac-f79e-11ea-86b1-c9fbaca1c89a"
                    }
                  }, {
                    "name" : "my_id_policy",
                    "id" : "c20551c0-f698-11ea-bbe6-985851b5f895",
                    "version" : "0c27422c-f699-11ea-bbe6-985851b5f895",
                    "type" : "IdentityPolicy",
                    "metadata" : {
                      "readOnly" : {
                        "state" : false
                      },
                      "timestamp" : 1602085051,
                      "lastUser" : {
                        "name" : "admin",
                        "id" : "68d03c42-d9bd-11dc-89f2-b7961d42c462",
                        "type" : "user"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "e276abec-e0f2-11e3-8169-6d9ed49b625f",
                        "type" : "Domain"
                      }
                    },
                    "links" : {
                      "self" : "/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/policy/identitypolicies/c20551c0-f698-11ea-bbe6-985851b5f895"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/identitypolicies/{objectId}" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves the Identity Policy associated with the specified ID. If no ID is specified, retrieves list of all Identity Policies.**",
        "operationId" : "getIdentityPolicy",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of an Identity Policy.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/IdentityPolicy"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/domainUUID/policy/identitypolicies/68d03c42-d9bd-11dc-89f2-b7961d42c462 ( Get IdentityPolicy by id )" : {
                  "name" : "my_id_policy",
                  "id" : "c20551c0-f698-11ea-bbe6-985851b5f895",
                  "version" : "0c27422c-f699-11ea-bbe6-985851b5f895",
                  "type" : "IdentityPolicy",
                  "metadata" : {
                    "readOnly" : {
                      "state" : false
                    },
                    "timestamp" : 1602085051,
                    "lastUser" : {
                      "name" : "admin",
                      "id" : "68d03c42-d9bd-11dc-89f2-b7961d42c462",
                      "type" : "user"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "e276abec-e0f2-11e3-8169-6d9ed49b625f",
                      "type" : "Domain"
                    }
                  },
                  "links" : {
                    "self" : "/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/policy/identitypolicies/c20551c0-f698-11ea-bbe6-985851b5f895"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/intrusionpolicies" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the intrusion policy associated with the specified ID. Also, retrieves list of all intrusion policies.**",
        "operationId" : "getAllIntrusionPolicy",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/IntrusionPolicyListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/DomainUUID/object/policy/intrusionpolicies ( Get all paginated intrusion policy without offset and limit )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/policy/intrusionpolicies?offset=0&limit=5"
                  },
                  "items" : [ {
                    "name" : "No Rules Active",
                    "id" : "intrusionPolicyUUID",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/policy/intrusionpolicies/intrusionPolicyUUID"
                    },
                    "type" : "IntrusionPolicy",
                    "snortEngine" : "SNORT2 | SNORT3",
                    "inspectionMode" : "DETECTION | PREVENTION",
                    "isSystemDefined" : true
                  }, {
                    "name" : "Maximum Detection",
                    "id" : "intrusionPolicyUUID",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/policy/intrusionpolicies/intrusionPolicyUUID"
                    },
                    "type" : "IntrusionPolicy",
                    "snortEngine" : "SNORT2 | SNORT3",
                    "inspectionMode" : "DETECTION | PREVENTION",
                    "isSystemDefined" : true
                  }, {
                    "name" : "Connectivity Over Security",
                    "id" : "intrusionPolicyUUID",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/policy/intrusionpolicies/intrusionPolicyUUID"
                    },
                    "type" : "IntrusionPolicy",
                    "snortEngine" : "SNORT2 | SNORT3",
                    "inspectionMode" : "DETECTION | PREVENTION",
                    "isSystemDefined" : true
                  }, {
                    "name" : "Balanced Security and Connectivity",
                    "id" : "intrusionPolicyUUID",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/policy/intrusionpolicies/intrusionPolicyUUID"
                    },
                    "type" : "IntrusionPolicy",
                    "snortEngine" : "SNORT2 | SNORT3",
                    "inspectionMode" : "DETECTION | PREVENTION",
                    "isSystemDefined" : true
                  }, {
                    "name" : "Security Over Connectivity",
                    "id" : "intrusionPolicyUUID",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/policy/intrusionpolicies/intrusionPolicyUUID"
                    },
                    "type" : "IntrusionPolicy",
                    "snortEngine" : "SNORT2 | SNORT3",
                    "inspectionMode" : "DETECTION | PREVENTION",
                    "isSystemDefined" : true
                  }, {
                    "name" : "No Rules Active",
                    "id" : "intrusionPolicyUUID",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/policy/intrusionpolicies/intrusionPolicyUUID"
                    },
                    "type" : "IntrusionPolicy",
                    "snortEngine" : "SNORT2 | SNORT3",
                    "inspectionMode" : "DETECTION | PREVENTION",
                    "isSystemDefined" : true
                  }, {
                    "name" : "Maximum Detection",
                    "id" : "intrusionPolicyUUID",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/policy/intrusionpolicies/intrusionPolicyUUID"
                    },
                    "type" : "IntrusionPolicy",
                    "snortEngine" : "SNORT3",
                    "inspectionMode" : "DETECTION | PREVENTION",
                    "isSystemDefined" : true
                  }, {
                    "name" : "Connectivity Over Security",
                    "id" : "intrusionPolicyUUID",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/policy/intrusionpolicies/intrusionPolicyUUID"
                    },
                    "type" : "IntrusionPolicy",
                    "snortEngine" : "SNORT2 | SNORT3",
                    "inspectionMode" : "DETECTION | PREVENTION",
                    "isSystemDefined" : true
                  }, {
                    "name" : "Balanced Security and Connectivity",
                    "id" : "intrusionPolicyUUID",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/policy/intrusionpolicies/intrusionPolicyUUID"
                    },
                    "type" : "IntrusionPolicy",
                    "snortEngine" : "SNORT2 | SNORT3",
                    "inspectionMode" : "DETECTION | PREVENTION",
                    "isSystemDefined" : true
                  }, {
                    "name" : "Security Over Connectivity",
                    "id" : "intrusionPolicyUUID",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/policy/intrusionpolicies/intrusionPolicyUUID"
                    },
                    "type" : "IntrusionPolicy",
                    "snortEngine" : "SNORT2 | SNORT3",
                    "inspectionMode" : "DETECTION | PREVENTION",
                    "isSystemDefined" : true
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 10,
                    "count" : 10,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the intrusion policy associated with the specified ID. Also, retrieves list of all intrusion policies. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createIntrusionPolicy",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of intrusion policy.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/IntrusionPolicy"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/IntrusionPolicy"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /fmc_config/v1/domain/DomainUUID/policy/intrusionpolicies ( Test intrusion policy creation )" : {
                  "basePolicy" : {
                    "name" : "test1",
                    "id" : "intrusionPolicyUUID",
                    "type" : "IntrusionPolicy"
                  },
                  "description" : "Created via automation",
                  "inspectionMode" : "PREVENTION",
                  "name" : "test1",
                  "type" : "IntrusionPolicy"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/IntrusionPolicy"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/intrusionpolicies/{containerUUID}/intrusionrulegroups" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves or modifies the per-policy behaviour of the specified intrusion rule ID for the target intrusion policy ID. If no rule ID is specified for a GET, retrieves list of all Snort 3 intrusion rulegroups associated with the policy ID.**",
        "operationId" : "getAllSnort3IntrusionRuleGroups",
        "parameters" : [ {
          "name" : "includeCount",
          "in" : "query",
          "description" : "Boolean value if the count of rules should be calculated in the response.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Value can be any of the formats (including quotes): <code>\"name:Browser/Firefox\"</code> or <code>\"currentSecurityLevel:DISABLED\"</code> or <code>\"showonlyparents:{true/false}\"</code> or <code>\"includeCount:true\"</code>.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Snort3IntrusionRuleGroupsListContainer"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves or modifies the per-policy behaviour of the specified intrusion rule ID for the target intrusion policy ID. If no rule ID is specified for a GET, retrieves list of all Snort 3 intrusion rulegroups associated with the policy ID. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateMultipleSnort3IntrusionRuleGroups",
        "parameters" : [ {
          "name" : "bulk",
          "in" : "query",
          "description" : "This parameter specifies that bulk operation is being used in the query. This parameter is required for bulk Snort 3 rulegroup operations.",
          "required" : true,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of Snort 3 intrusion rulegroup behaviour specific to the intrusion policy.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Snort3IntrusionRuleGroups"
          }
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Snort3IntrusionRuleGroups"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/domainUUID/policy/intrusionpolicies/uuid/intrusionrulegroups/Snort3IntrusionRuleGroups-UUID ( Success: Test PUT method for Snort3IntrusionRuleGroups )" : {
                  "name" : "Group1",
                  "id" : "bb79c3d4-904e-569e-80ba-ad50a8f24a67",
                  "type" : "IntrusionRuleGroup",
                  "defaultSecurityLevel" : "DISABLED",
                  "description" : "A description about Group1 goes here.",
                  "overrideSecurityLevel" : "LEVEL_1"
                },
                "Request example 2 : PUT /fmc_config/v1/domain/domainUUID/policy/intrusionpolicies/uuid/intrusionrulegroups?bulk=true ( Success: Test Bulk PUT method for Snort3IntrusionRuleGroups )" : [ {
                  "name" : "Group1",
                  "id" : "bb79c3d4-904e-569e-80ba-ad50a8f24a67",
                  "type" : "IntrusionRuleGroup",
                  "defaultSecurityLevel" : "DISABLED",
                  "description" : "A description about Group1 goes here.",
                  "overrideSecurityLevel" : "LEVEL_1"
                } ]
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/Snort3IntrusionRuleGroups"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/intrusionpolicies/{containerUUID}/intrusionrulegroups/{objectId}" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves or modifies the per-policy behaviour of the specified intrusion rule ID for the target intrusion policy ID. If no rule ID is specified for a GET, retrieves list of all Snort 3 intrusion rulegroups associated with the policy ID.**",
        "operationId" : "getSnort3IntrusionRuleGroups",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier of a Snort 3 rulegroup.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Snort3IntrusionRuleGroups"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/domainUUID/policy/intrusionpolicies/uuid/intrusionrulegroups ( Success: Test GET method for Snort3IntrusionRuleGroups )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/policy/intrusionpolicies/uuid/intrusionrulegroups?offset=0&limit=2"
                  },
                  "items" : [ {
                    "name" : "Group1",
                    "id" : "bb79c3d4-904e-569e-80ba-ad50a8f24a67",
                    "type" : "IntrusionRuleGroup",
                    "defaultSecurityLevel" : "DISABLED",
                    "description" : "A description about Group1 goes here.",
                    "overrideSecurityLevel" : "LEVEL_1"
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves or modifies the per-policy behaviour of the specified intrusion rule ID for the target intrusion policy ID. If no rule ID is specified for a GET, retrieves list of all Snort 3 intrusion rulegroups associated with the policy ID. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateSnort3IntrusionRuleGroups",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier of a Snort 3 rulegroup.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "removeRuleOverrides",
          "in" : "query",
          "description" : "Boolean value for removing the rule overrides when excluding a rulegroup from a policy.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of Snort 3 intrusion rulegroup behaviour specific to the intrusion policy.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Snort3IntrusionRuleGroups"
          }
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Snort3IntrusionRuleGroups"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/domainUUID/policy/intrusionpolicies/uuid/intrusionrulegroups/Snort3IntrusionRuleGroups-UUID ( Success: Test PUT method for Snort3IntrusionRuleGroups )" : {
                  "name" : "Group1",
                  "id" : "bb79c3d4-904e-569e-80ba-ad50a8f24a67",
                  "type" : "IntrusionRuleGroup",
                  "defaultSecurityLevel" : "DISABLED",
                  "description" : "A description about Group1 goes here.",
                  "overrideSecurityLevel" : "LEVEL_1"
                },
                "Request example 2 : PUT /fmc_config/v1/domain/domainUUID/policy/intrusionpolicies/uuid/intrusionrulegroups?bulk=true ( Success: Test Bulk PUT method for Snort3IntrusionRuleGroups )" : [ {
                  "name" : "Group1",
                  "id" : "bb79c3d4-904e-569e-80ba-ad50a8f24a67",
                  "type" : "IntrusionRuleGroup",
                  "defaultSecurityLevel" : "DISABLED",
                  "description" : "A description about Group1 goes here.",
                  "overrideSecurityLevel" : "LEVEL_1"
                } ]
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/Snort3IntrusionRuleGroups"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/intrusionpolicies/{containerUUID}/intrusionrules" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves or modifies the per-policy behaviour of the specified intrusion rule ID for the target intrusion policy ID. If no rule ID is specified for a GET, retrieves list of all Snort 3 intrusion rules associated with the policy ID.**",
        "operationId" : "getAllSnort3IPSRules",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "Value can be any of the formats (including quotes): <code>\"gid:123;sid:456\"</code> or <code>\"overrides:true;ipspolicy:{uuid1,uuid2,...}</code> or <code>\"fts:789\"</code>. (TODO: describe all the keys). <code>ipspolicy</code> is a comma-separated list of Snort 3 Intrusion Policy IDs.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting parameters to be provided e.g. sid,-sid,gid,-gid,msg,-msg.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Snort3IPSRulesListContainer"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves or modifies the per-policy behaviour of the specified intrusion rule ID for the target intrusion policy ID. If no rule ID is specified for a GET, retrieves list of all Snort 3 intrusion rules associated with the policy ID. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateMultipleSnort3IPSRules",
        "parameters" : [ {
          "name" : "bulk",
          "in" : "query",
          "description" : "This parameter specifies that bulk operation is being used in the query. This parameter is required for bulk Snort 3 intrusion rule operations.",
          "required" : true,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of Snort 3 intrusion rule behaviour specific to the intrusion policy.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Snort3IPSRules"
          }
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Snort3IPSRules"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/domainUUID/policy/intrusionpolicies/policyUUID/intrusionrules/Snort3IPSRules-UUID ( Success: Test PUT method for Snort3IPSRules )" : {
                  "sid" : 37062,
                  "gid" : 1,
                  "revision" : 2,
                  "msg" : "\"APP-DETECT 12P DNS request attempt\"",
                  "ruleData" : "alert udp $HOME_NET any -> any 53 ( msg:\"APP-DETECT 12P DNS request attempt\"; flow:to_server; byte_test:1,!&,0xF8,2; content:\"|03|b32|03|i2p|00|\",fast_pattern,nocase; metadata:policy max-detect-ips drop; service:dns; reference:url,geti2p.net; classtype:misc-activity; sid:37062; rev:2; )",
                  "isSystemDefined" : "false | true",
                  "ruleAction" : [ {
                    "defaultState" : "BLOCK",
                    "overrideState" : "ALERT",
                    "policy" : {
                      "name" : "Maximum Detection",
                      "id" : "ccbf50d8-b908-5a56-b1a8-099773b904f2",
                      "type" : "IntrusionPolicy",
                      "inlineDrop" : 0
                    }
                  }, {
                    "defaultState" : "DISABLE",
                    "overrideState" : "BLOCK",
                    "policy" : {
                      "name" : "Balanced Security and Connectivity",
                      "id" : "6c5fd197-7d58-51cc-b048-40f5a7442f4b",
                      "type" : "IntrusionPolicy",
                      "inlineDrop" : 0
                    }
                  }, {
                    "defaultState" : "DISABLE",
                    "overrideState" : "ALERT",
                    "policy" : {
                      "name" : "Connectivity Over Security",
                      "id" : "e90b3402-1dde-58b8-956e-0ba3e73b9c0a",
                      "type" : "IntrusionPolicy",
                      "inlineDrop" : 0
                    }
                  }, {
                    "defaultState" : "DISABLE",
                    "overrideState" : "DISABLE",
                    "policy" : {
                      "name" : "No Rules Active",
                      "id" : "402cd584-98f0-544e-b628-0c4b40903189",
                      "type" : "IntrusionPolicy",
                      "inlineDrop" : 0
                    }
                  }, {
                    "defaultState" : "DISABLE",
                    "overrideState" : "BLOCK",
                    "policy" : {
                      "name" : "Security Over Connectivity",
                      "id" : "eb508df4-58a2-59c3-a610-500d9a9e4423",
                      "type" : "IntrusionPolicy",
                      "inlineDrop" : 0
                    }
                  } ],
                  "name" : " ",
                  "description" : "\"APP-DETECT 12P DNS request attempt\"",
                  "id" : "Snort3IPSRules-UUID-1"
                },
                "Request example 2 : PUT /fmc_config/v1/domain/domainUUID/policy/intrusionpolicies/policyUUID/intrusionrules?bulk=true ( Success: Test Bulk PUT method for Snort3IPSRules )" : [ {
                  "sid" : 37062,
                  "gid" : 1,
                  "revision" : 2,
                  "msg" : "\"APP-DETECT 12P DNS request attempt\"",
                  "ruleData" : "alert udp $HOME_NET any -> any 53 ( msg:\"APP-DETECT 12P DNS request attempt\"; flow:to_server; byte_test:1,!&,0xF8,2; content:\"|03|b32|03|i2p|00|\",fast_pattern,nocase; metadata:policy max-detect-ips drop; service:dns; reference:url,geti2p.net; classtype:misc-activity; sid:37062; rev:2; )",
                  "isSystemDefined" : "false | true",
                  "ruleAction" : [ {
                    "defaultState" : "BLOCK",
                    "overrideState" : "ALERT",
                    "policy" : {
                      "name" : "Maximum Detection",
                      "id" : "ccbf50d8-b908-5a56-b1a8-099773b904f2",
                      "type" : "IntrusionPolicy",
                      "inlineDrop" : 0
                    }
                  }, {
                    "defaultState" : "DISABLE",
                    "overrideState" : "BLOCK",
                    "policy" : {
                      "name" : "Balanced Security and Connectivity",
                      "id" : "6c5fd197-7d58-51cc-b048-40f5a7442f4b",
                      "type" : "IntrusionPolicy",
                      "inlineDrop" : 0
                    }
                  }, {
                    "defaultState" : "DISABLE",
                    "overrideState" : "ALERT",
                    "policy" : {
                      "name" : "Connectivity Over Security",
                      "id" : "e90b3402-1dde-58b8-956e-0ba3e73b9c0a",
                      "type" : "IntrusionPolicy",
                      "inlineDrop" : 0
                    }
                  }, {
                    "defaultState" : "DISABLE",
                    "overrideState" : "DISABLE",
                    "policy" : {
                      "name" : "No Rules Active",
                      "id" : "402cd584-98f0-544e-b628-0c4b40903189",
                      "type" : "IntrusionPolicy",
                      "inlineDrop" : 0
                    }
                  }, {
                    "defaultState" : "DISABLE",
                    "overrideState" : "BLOCK",
                    "policy" : {
                      "name" : "Security Over Connectivity",
                      "id" : "eb508df4-58a2-59c3-a610-500d9a9e4423",
                      "type" : "IntrusionPolicy",
                      "inlineDrop" : 0
                    }
                  } ],
                  "name" : " ",
                  "description" : "\"APP-DETECT 12P DNS request attempt\"",
                  "id" : "Snort3IPSRules-UUID-1"
                }, {
                  "sid" : 28071,
                  "gid" : 1,
                  "revision" : 3,
                  "msg" : "\"APP-DETECT 360.cn SafeGuard local HTTP management console access attempt\"",
                  "ruleData" : "alert tcp $EXTERNAL_NET any -> $HOME_NET $HTTP_PORTS ( msg:\"APP-DETECT 360.cn SafeGuard local HTTP management console access attempt\"; flow:to_server,established; http_uri; content:\"/login.php?refer=%2F\",fast_pattern,nocase; metadata:policy max-detect-ips drop; service:http; reference:url,en.wikipedia.org/wiki/360_Safeguard; reference:url,research.zscaler.com/2011/05/is-360cn-evil.html; reference:url,www.alexa.com/siteinfo/360safe.com; reference:url,www.virustotal.com/en/domain/360safe.com/information/; classtype:trojan-activity; sid:28071; rev:3; )",
                  "isSystemDefined" : "false | true",
                  "ruleAction" : [ {
                    "defaultState" : "BLOCK",
                    "overrideState" : "ALERT",
                    "policy" : {
                      "name" : "Maximum Detection",
                      "id" : "ccbf50d8-b908-5a56-b1a8-099773b904f2",
                      "type" : "IntrusionPolicy",
                      "inlineDrop" : 0
                    }
                  }, {
                    "defaultState" : "DISABLE",
                    "overrideState" : "BLOCK",
                    "policy" : {
                      "name" : "Balanced Security and Connectivity",
                      "id" : "6c5fd197-7d58-51cc-b048-40f5a7442f4b",
                      "type" : "IntrusionPolicy",
                      "inlineDrop" : 0
                    }
                  }, {
                    "defaultState" : "DISABLE",
                    "overrideState" : "ALERT",
                    "policy" : {
                      "name" : "Connectivity Over Security",
                      "id" : "e90b3402-1dde-58b8-956e-0ba3e73b9c0a",
                      "type" : "IntrusionPolicy",
                      "inlineDrop" : 0
                    }
                  }, {
                    "defaultState" : "DISABLE",
                    "overrideState" : "DISABLE",
                    "policy" : {
                      "name" : "No Rules Active",
                      "id" : "402cd584-98f0-544e-b628-0c4b40903189",
                      "type" : "IntrusionPolicy",
                      "inlineDrop" : 0
                    }
                  }, {
                    "defaultState" : "DISABLE",
                    "overrideState" : "BLOCK",
                    "policy" : {
                      "name" : "Security Over Connectivity",
                      "id" : "eb508df4-58a2-59c3-a610-500d9a9e4423",
                      "type" : "IntrusionPolicy",
                      "inlineDrop" : 0
                    }
                  } ],
                  "name" : " ",
                  "description" : "\"APP-DETECT 12P DNS request attempt\"",
                  "id" : "Snort3IPSRules-UUID-2"
                } ]
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/Snort3IPSRules"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/intrusionpolicies/{containerUUID}/intrusionrules/{objectId}" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves or modifies the per-policy behaviour of the specified intrusion rule ID for the target intrusion policy ID. If no rule ID is specified for a GET, retrieves list of all Snort 3 intrusion rules associated with the policy ID.**",
        "operationId" : "getSnort3IPSRules",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier of a Snort 3 intrusion rule.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Snort3IPSRules"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/domainUUID/policy/intrusionpolicies/policyUUID/intrusionrules ( Success: Test GET method for Snort3IPSRules )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/domainUUID/policy/intrusionpolicies/policyUUID/intrusionrules?offset=0&limit=2"
                  },
                  "items" : [ {
                    "sid" : 37062,
                    "gid" : 1,
                    "revision" : 2,
                    "msg" : "\"APP-DETECT 12P DNS request attempt\"",
                    "ruleData" : "alert udp $HOME_NET any -> any 53 ( msg:\"APP-DETECT 12P DNS request attempt\"; flow:to_server; byte_test:1,!&,0xF8,2; content:\"|03|b32|03|i2p|00|\",fast_pattern,nocase; metadata:policy max-detect-ips drop; service:dns; reference:url,geti2p.net; classtype:misc-activity; sid:37062; rev:2; )",
                    "isSystemDefined" : "false | true",
                    "ruleAction" : [ {
                      "defaultState" : "BLOCK",
                      "policy" : {
                        "name" : "Maximum Detection",
                        "id" : "ccbf50d8-b908-5a56-b1a8-099773b904f2",
                        "type" : "IntrusionPolicy",
                        "inlineDrop" : 0
                      }
                    }, {
                      "defaultState" : "DISABLE",
                      "policy" : {
                        "name" : "Balanced Security and Connectivity",
                        "id" : "6c5fd197-7d58-51cc-b048-40f5a7442f4b",
                        "type" : "IntrusionPolicy",
                        "inlineDrop" : 0
                      }
                    }, {
                      "defaultState" : "DISABLE",
                      "policy" : {
                        "name" : "Connectivity Over Security",
                        "id" : "e90b3402-1dde-58b8-956e-0ba3e73b9c0a",
                        "type" : "IntrusionPolicy",
                        "inlineDrop" : 0
                      }
                    }, {
                      "defaultState" : "DISABLE",
                      "policy" : {
                        "name" : "No Rules Active",
                        "id" : "402cd584-98f0-544e-b628-0c4b40903189",
                        "type" : "IntrusionPolicy",
                        "inlineDrop" : 0
                      }
                    }, {
                      "defaultState" : "DISABLE",
                      "policy" : {
                        "name" : "Security Over Connectivity",
                        "id" : "eb508df4-58a2-59c3-a610-500d9a9e4423",
                        "type" : "IntrusionPolicy",
                        "inlineDrop" : 0
                      }
                    } ],
                    "name" : " ",
                    "description" : "\"APP-DETECT 12P DNS request attempt\"",
                    "id" : "Snort3IPSRules-UUID-1",
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/policy/intrusionpolicies/policyUUID/intrusionrules/Snort3IPSRules-UUID-1"
                    }
                  }, {
                    "sid" : 28071,
                    "gid" : 1,
                    "revision" : 3,
                    "msg" : "\"APP-DETECT 360.cn SafeGuard local HTTP management console access attempt\"",
                    "ruleData" : "alert tcp $EXTERNAL_NET any -> $HOME_NET $HTTP_PORTS ( msg:\"APP-DETECT 360.cn SafeGuard local HTTP management console access attempt\"; flow:to_server,established; http_uri; content:\"/login.php?refer=%2F\",fast_pattern,nocase; metadata:policy max-detect-ips drop; service:http; reference:url,en.wikipedia.org/wiki/360_Safeguard; reference:url,research.zscaler.com/2011/05/is-360cn-evil.html; reference:url,www.alexa.com/siteinfo/360safe.com; reference:url,www.virustotal.com/en/domain/360safe.com/information/; classtype:trojan-activity; sid:28071; rev:3; )",
                    "isSystemDefined" : "true",
                    "ruleAction" : [ {
                      "defaultState" : "BLOCK",
                      "policy" : {
                        "name" : "Maximum Detection",
                        "id" : "ccbf50d8-b908-5a56-b1a8-099773b904f2",
                        "type" : "IntrusionPolicy",
                        "inlineDrop" : 0
                      }
                    }, {
                      "defaultState" : "DISABLE",
                      "policy" : {
                        "name" : "Balanced Security and Connectivity",
                        "id" : "6c5fd197-7d58-51cc-b048-40f5a7442f4b",
                        "type" : "IntrusionPolicy",
                        "inlineDrop" : 0
                      }
                    }, {
                      "defaultState" : "DISABLE",
                      "policy" : {
                        "name" : "Connectivity Over Security",
                        "id" : "e90b3402-1dde-58b8-956e-0ba3e73b9c0a",
                        "type" : "IntrusionPolicy",
                        "inlineDrop" : 0
                      }
                    }, {
                      "defaultState" : "DISABLE",
                      "policy" : {
                        "name" : "No Rules Active",
                        "id" : "402cd584-98f0-544e-b628-0c4b40903189",
                        "type" : "IntrusionPolicy",
                        "inlineDrop" : 0
                      }
                    }, {
                      "defaultState" : "DISABLE",
                      "policy" : {
                        "name" : "Security Over Connectivity",
                        "id" : "eb508df4-58a2-59c3-a610-500d9a9e4423",
                        "type" : "IntrusionPolicy",
                        "inlineDrop" : 0
                      }
                    } ],
                    "name" : " ",
                    "description" : "\"APP-DETECT 360.cn SafeGuard local HTTP management console access attempt\"",
                    "id" : "Snort3IPSRules-UUID-2",
                    "links" : {
                      "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/policy/intrusionpolicies/policyUUID/intrusionrules/Snort3IPSRules-UUID-2"
                    }
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves or modifies the per-policy behaviour of the specified intrusion rule ID for the target intrusion policy ID. If no rule ID is specified for a GET, retrieves list of all Snort 3 intrusion rules associated with the policy ID. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateSnort3IPSRules",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier of a Snort 3 intrusion rule.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of Snort 3 intrusion rule behaviour specific to the intrusion policy.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Snort3IPSRules"
          }
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Snort3IPSRules"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/domainUUID/policy/intrusionpolicies/policyUUID/intrusionrules/Snort3IPSRules-UUID ( Success: Test PUT method for Snort3IPSRules )" : {
                  "sid" : 37062,
                  "gid" : 1,
                  "revision" : 2,
                  "msg" : "\"APP-DETECT 12P DNS request attempt\"",
                  "ruleData" : "alert udp $HOME_NET any -> any 53 ( msg:\"APP-DETECT 12P DNS request attempt\"; flow:to_server; byte_test:1,!&,0xF8,2; content:\"|03|b32|03|i2p|00|\",fast_pattern,nocase; metadata:policy max-detect-ips drop; service:dns; reference:url,geti2p.net; classtype:misc-activity; sid:37062; rev:2; )",
                  "isSystemDefined" : "false | true",
                  "ruleAction" : [ {
                    "defaultState" : "BLOCK",
                    "overrideState" : "ALERT",
                    "policy" : {
                      "name" : "Maximum Detection",
                      "id" : "ccbf50d8-b908-5a56-b1a8-099773b904f2",
                      "type" : "IntrusionPolicy",
                      "inlineDrop" : 0
                    }
                  }, {
                    "defaultState" : "DISABLE",
                    "overrideState" : "BLOCK",
                    "policy" : {
                      "name" : "Balanced Security and Connectivity",
                      "id" : "6c5fd197-7d58-51cc-b048-40f5a7442f4b",
                      "type" : "IntrusionPolicy",
                      "inlineDrop" : 0
                    }
                  }, {
                    "defaultState" : "DISABLE",
                    "overrideState" : "ALERT",
                    "policy" : {
                      "name" : "Connectivity Over Security",
                      "id" : "e90b3402-1dde-58b8-956e-0ba3e73b9c0a",
                      "type" : "IntrusionPolicy",
                      "inlineDrop" : 0
                    }
                  }, {
                    "defaultState" : "DISABLE",
                    "overrideState" : "DISABLE",
                    "policy" : {
                      "name" : "No Rules Active",
                      "id" : "402cd584-98f0-544e-b628-0c4b40903189",
                      "type" : "IntrusionPolicy",
                      "inlineDrop" : 0
                    }
                  }, {
                    "defaultState" : "DISABLE",
                    "overrideState" : "BLOCK",
                    "policy" : {
                      "name" : "Security Over Connectivity",
                      "id" : "eb508df4-58a2-59c3-a610-500d9a9e4423",
                      "type" : "IntrusionPolicy",
                      "inlineDrop" : 0
                    }
                  } ],
                  "name" : " ",
                  "description" : "\"APP-DETECT 12P DNS request attempt\"",
                  "id" : "Snort3IPSRules-UUID-1"
                },
                "Request example 2 : PUT /fmc_config/v1/domain/domainUUID/policy/intrusionpolicies/policyUUID/intrusionrules?bulk=true ( Success: Test Bulk PUT method for Snort3IPSRules )" : [ {
                  "sid" : 37062,
                  "gid" : 1,
                  "revision" : 2,
                  "msg" : "\"APP-DETECT 12P DNS request attempt\"",
                  "ruleData" : "alert udp $HOME_NET any -> any 53 ( msg:\"APP-DETECT 12P DNS request attempt\"; flow:to_server; byte_test:1,!&,0xF8,2; content:\"|03|b32|03|i2p|00|\",fast_pattern,nocase; metadata:policy max-detect-ips drop; service:dns; reference:url,geti2p.net; classtype:misc-activity; sid:37062; rev:2; )",
                  "isSystemDefined" : "false | true",
                  "ruleAction" : [ {
                    "defaultState" : "BLOCK",
                    "overrideState" : "ALERT",
                    "policy" : {
                      "name" : "Maximum Detection",
                      "id" : "ccbf50d8-b908-5a56-b1a8-099773b904f2",
                      "type" : "IntrusionPolicy",
                      "inlineDrop" : 0
                    }
                  }, {
                    "defaultState" : "DISABLE",
                    "overrideState" : "BLOCK",
                    "policy" : {
                      "name" : "Balanced Security and Connectivity",
                      "id" : "6c5fd197-7d58-51cc-b048-40f5a7442f4b",
                      "type" : "IntrusionPolicy",
                      "inlineDrop" : 0
                    }
                  }, {
                    "defaultState" : "DISABLE",
                    "overrideState" : "ALERT",
                    "policy" : {
                      "name" : "Connectivity Over Security",
                      "id" : "e90b3402-1dde-58b8-956e-0ba3e73b9c0a",
                      "type" : "IntrusionPolicy",
                      "inlineDrop" : 0
                    }
                  }, {
                    "defaultState" : "DISABLE",
                    "overrideState" : "DISABLE",
                    "policy" : {
                      "name" : "No Rules Active",
                      "id" : "402cd584-98f0-544e-b628-0c4b40903189",
                      "type" : "IntrusionPolicy",
                      "inlineDrop" : 0
                    }
                  }, {
                    "defaultState" : "DISABLE",
                    "overrideState" : "BLOCK",
                    "policy" : {
                      "name" : "Security Over Connectivity",
                      "id" : "eb508df4-58a2-59c3-a610-500d9a9e4423",
                      "type" : "IntrusionPolicy",
                      "inlineDrop" : 0
                    }
                  } ],
                  "name" : " ",
                  "description" : "\"APP-DETECT 12P DNS request attempt\"",
                  "id" : "Snort3IPSRules-UUID-1"
                }, {
                  "sid" : 28071,
                  "gid" : 1,
                  "revision" : 3,
                  "msg" : "\"APP-DETECT 360.cn SafeGuard local HTTP management console access attempt\"",
                  "ruleData" : "alert tcp $EXTERNAL_NET any -> $HOME_NET $HTTP_PORTS ( msg:\"APP-DETECT 360.cn SafeGuard local HTTP management console access attempt\"; flow:to_server,established; http_uri; content:\"/login.php?refer=%2F\",fast_pattern,nocase; metadata:policy max-detect-ips drop; service:http; reference:url,en.wikipedia.org/wiki/360_Safeguard; reference:url,research.zscaler.com/2011/05/is-360cn-evil.html; reference:url,www.alexa.com/siteinfo/360safe.com; reference:url,www.virustotal.com/en/domain/360safe.com/information/; classtype:trojan-activity; sid:28071; rev:3; )",
                  "isSystemDefined" : "false | true",
                  "ruleAction" : [ {
                    "defaultState" : "BLOCK",
                    "overrideState" : "ALERT",
                    "policy" : {
                      "name" : "Maximum Detection",
                      "id" : "ccbf50d8-b908-5a56-b1a8-099773b904f2",
                      "type" : "IntrusionPolicy",
                      "inlineDrop" : 0
                    }
                  }, {
                    "defaultState" : "DISABLE",
                    "overrideState" : "BLOCK",
                    "policy" : {
                      "name" : "Balanced Security and Connectivity",
                      "id" : "6c5fd197-7d58-51cc-b048-40f5a7442f4b",
                      "type" : "IntrusionPolicy",
                      "inlineDrop" : 0
                    }
                  }, {
                    "defaultState" : "DISABLE",
                    "overrideState" : "ALERT",
                    "policy" : {
                      "name" : "Connectivity Over Security",
                      "id" : "e90b3402-1dde-58b8-956e-0ba3e73b9c0a",
                      "type" : "IntrusionPolicy",
                      "inlineDrop" : 0
                    }
                  }, {
                    "defaultState" : "DISABLE",
                    "overrideState" : "DISABLE",
                    "policy" : {
                      "name" : "No Rules Active",
                      "id" : "402cd584-98f0-544e-b628-0c4b40903189",
                      "type" : "IntrusionPolicy",
                      "inlineDrop" : 0
                    }
                  }, {
                    "defaultState" : "DISABLE",
                    "overrideState" : "BLOCK",
                    "policy" : {
                      "name" : "Security Over Connectivity",
                      "id" : "eb508df4-58a2-59c3-a610-500d9a9e4423",
                      "type" : "IntrusionPolicy",
                      "inlineDrop" : 0
                    }
                  } ],
                  "name" : " ",
                  "description" : "\"APP-DETECT 12P DNS request attempt\"",
                  "id" : "Snort3IPSRules-UUID-2"
                } ]
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/Snort3IPSRules"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/intrusionpolicies/{objectId}" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the intrusion policy associated with the specified ID. Also, retrieves list of all intrusion policies.**",
        "operationId" : "getIntrusionPolicy",
        "parameters" : [ {
          "name" : "includeCount",
          "in" : "query",
          "description" : "Boolean value if the count of rules should be calculated in the response.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for intrusion policy.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/IntrusionPolicy"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/policy/intrusionpolicies/intrusionPolicyUUID ( Test GET of intrusion policy for a uuid )" : {
                  "name" : "Security Over Connectivity",
                  "id" : "intrusionPolicyUUID",
                  "snortEngine" : "SNORT2 | SNORT3",
                  "inspectionMode" : "DETECTION | PREVENTION",
                  "isSystemDefined" : true,
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/policy/intrusionpolicies/intrusionPolicyUUID"
                  },
                  "type" : "IntrusionPolicy",
                  "metadata" : {
                    "readOnly" : {
                      "state" : true
                    },
                    "domain" : {
                      "id" : "DomainUUID",
                      "type" : "Domain",
                      "name" : "Global"
                    },
                    "lastUser" : {
                      "name" : "admin",
                      "id" : "userUUID",
                      "type" : "User"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the intrusion policy associated with the specified ID. Also, retrieves list of all intrusion policies. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateIntrusionPolicy",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for intrusion policy.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "replicateInspectionMode",
          "in" : "query",
          "description" : "Flag to replicate inspection mode from snort 3 version to snort 2 version.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of intrusion policy.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/IntrusionPolicy"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/IntrusionPolicy"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/DomainUUID/policy/intrusionpolicies/intrusionPolicyUUID ( Test PUT of intrusion policy to update record )" : {
                  "basePolicy" : {
                    "name" : "test1",
                    "id" : "intrusionPolicyUUID",
                    "type" : "IntrusionPolicy"
                  },
                  "description" : "description",
                  "inspectionMode" : "PREVENTION",
                  "name" : "test1",
                  "type" : "IntrusionPolicy"
                },
                "Response Example 1 :PUT /fmc_config/v1/domain/DomainUUID/policy/intrusionpolicies/intrusionPolicyUUID ( Test PUT of intrusion policy to update record )" : {
                  "basePolicy" : {
                    "name" : "test1",
                    "id" : "intrusionPolicyUUID",
                    "type" : "IntrusionPolicy"
                  },
                  "description" : "description",
                  "inspectionMode" : "PREVENTION",
                  "name" : "test1",
                  "type" : "IntrusionPolicy"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/IntrusionPolicy"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the intrusion policy associated with the specified ID. Also, retrieves list of all intrusion policies. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteIntrusionPolicy",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for intrusion policy.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/IntrusionPolicy"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /fmc_config/v1/domain/DomainUUID/policy/intrusionpolicies/intrusionPolicyUUID ( Test DELETE of device )" : {
                  "basePolicy" : {
                    "name" : "test1",
                    "id" : "intrusionPolicyUUID",
                    "type" : "IntrusionPolicy"
                  },
                  "description" : "description",
                  "inspectionMode" : "PREVENTION",
                  "name" : "test1",
                  "type" : "IntrusionPolicy"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/networkanalysispolicies" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the network analysis policy associated with the specified ID. Also, retrieves list of all network analysis policies.**",
        "operationId" : "getAllSnort3NetworkAnalysisPolicy",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Snort3NetworkAnalysisPolicyListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/DomainUUID/object/policy/networkanalysispolicies ( Get all paginated Network Analysis Policy without offset and limit )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/policy/networkanalysispolicies?offset=0&limit=5"
                  },
                  "items" : [ {
                    "name" : "No Rules Active",
                    "id" : "networkAnalysisPolicyUUID",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/policy/networkanalysispolicies/networkAnalysisPolicyUUID"
                    },
                    "type" : "NetworkAnalysisPolicy",
                    "snortEngine" : "SNORT2 | SNORT3",
                    "inspectionMode" : "DETECTION | PREVENTION",
                    "isSystemDefined" : true
                  }, {
                    "name" : "Maximum Detection",
                    "id" : "networkAnalysisPolicyUUID",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/policy/networkanalysispolicies/networkAnalysisPolicyUUID"
                    },
                    "type" : "NetworkAnalysisPolicy",
                    "snortEngine" : "SNORT2 | SNORT3",
                    "inspectionMode" : "DETECTION | PREVENTION",
                    "isSystemDefined" : true
                  }, {
                    "name" : "Connectivity Over Security",
                    "id" : "networkAnalysisPolicyUUID",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/policy/networkanalysispolicies/networkAnalysisPolicyUUID"
                    },
                    "type" : "NetworkAnalysisPolicy",
                    "snortEngine" : "SNORT2 | SNORT3",
                    "inspectionMode" : "DETECTION | PREVENTION",
                    "isSystemDefined" : true
                  }, {
                    "name" : "Balanced Security and Connectivity",
                    "id" : "networkAnalysisPolicyUUID",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/policy/networkanalysispolicies/networkAnalysisPolicyUUID"
                    },
                    "type" : "NetworkAnalysisPolicy",
                    "snortEngine" : "SNORT2 | SNORT3",
                    "inspectionMode" : "DETECTION | PREVENTION",
                    "isSystemDefined" : true
                  }, {
                    "name" : "Security Over Connectivity",
                    "id" : "networkAnalysisPolicyUUID",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/policy/networkanalysispolicies/networkAnalysisPolicyUUID"
                    },
                    "type" : "NetworkAnalysisPolicy",
                    "snortEngine" : "SNORT2 | SNORT3",
                    "inspectionMode" : "DETECTION | PREVENTION",
                    "isSystemDefined" : true
                  }, {
                    "name" : "No Rules Active",
                    "id" : "networkAnalysisPolicyUUID",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/policy/networkanalysispolicies/networkAnalysisPolicyUUID"
                    },
                    "type" : "NetworkAnalysisPolicy",
                    "snortEngine" : "SNORT2 | SNORT3",
                    "inspectionMode" : "DETECTION | PREVENTION",
                    "isSystemDefined" : true
                  }, {
                    "name" : "Maximum Detection",
                    "id" : "networkAnalysisPolicyUUID",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/policy/networkanalysispolicies/networkAnalysisPolicyUUID"
                    },
                    "type" : "NetworkAnalysisPolicy",
                    "snortEngine" : "SNORT3",
                    "inspectionMode" : "DETECTION | PREVENTION",
                    "isSystemDefined" : true
                  }, {
                    "name" : "Connectivity Over Security",
                    "id" : "networkAnalysisPolicyUUID",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/policy/networkanalysispolicies/networkAnalysisPolicyUUID"
                    },
                    "type" : "NetworkAnalysisPolicy",
                    "snortEngine" : "SNORT2 | SNORT3",
                    "inspectionMode" : "DETECTION | PREVENTION",
                    "isSystemDefined" : true
                  }, {
                    "name" : "Balanced Security and Connectivity",
                    "id" : "networkAnalysisPolicyUUID",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/policy/networkanalysispolicies/networkAnalysisPolicyUUID"
                    },
                    "type" : "NetworkAnalysisPolicy",
                    "snortEngine" : "SNORT2 | SNORT3",
                    "inspectionMode" : "DETECTION | PREVENTION",
                    "isSystemDefined" : true
                  }, {
                    "name" : "Security Over Connectivity",
                    "id" : "networkAnalysisPolicyUUID",
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/policy/networkanalysispolicies/networkAnalysisPolicyUUID"
                    },
                    "type" : "NetworkAnalysisPolicy",
                    "snortEngine" : "SNORT2 | SNORT3",
                    "inspectionMode" : "DETECTION | PREVENTION",
                    "isSystemDefined" : true
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 10,
                    "count" : 10,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the network analysis policy associated with the specified ID. Also, retrieves list of all network analysis policies. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createSnort3NetworkAnalysisPolicy",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The input network analysis model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Snort3NetworkAnalysisPolicy"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/Snort3NetworkAnalysisPolicy"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /fmc_config/v1/domain/DomainUUID/policy/networkanalysispolicies ( Test Network Analysis Policy creation )" : {
                  "name" : "test1",
                  "type" : "NetworkAnalysisPolicy",
                  "inlineDrop" : 0,
                  "basePolicy" : {
                    "id" : "networkAnalysisPolicyUUID",
                    "type" : "NetworkAnalysisPolicy"
                  }
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/Snort3NetworkAnalysisPolicy"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/networkanalysispolicies/{containerUUID}/inspectorconfigs" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves the inspector configuration associated with specified network analysis policy. The effective behaviour of the inspector configuration can be modified by modifying the inspector override configuration for the specified policy.**",
        "operationId" : "getInspectorConfig",
        "parameters" : [ {
          "name" : "inspectors",
          "in" : "query",
          "description" : "Retrieves only the specified inspectors of the specified network analysis policy. Input is a comma-separated list of inspector names.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/InspectorConfigListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/policy/networkanalysispolicies/containerUUID/inspectorconfigs?inspectors=\"ftp_server,http_inspect\"&expanded=true ( Success: Test GET ALL method for Custom NAP )" : {
                  "link" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/policy/networkanalysispolicies/containerUUID/inspectorconfigs"
                  },
                  "items" : [ {
                    "link" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/policy/networkanalysispolicies/containerUUID/inspectorconfigs"
                    },
                    "type" : "InspectorConfig",
                    "inspectorConfig" : { }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/networkanalysispolicies/{containerUUID}/inspectoroverrideconfigs" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves or modifies the inspector override configuration associated with the specified policy. An inspector override allows the user to modify behaviour specified in the base policy's inspector configuration.**",
        "operationId" : "getInspectorOverrideConfig",
        "parameters" : [ {
          "name" : "inspectors",
          "in" : "query",
          "description" : "Retrieves only the specified inspectors of the specified network analysis policy. Input is a comma-separated list of inspector names.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/InspectorOverrideConfigListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/policy/networkanalysispolicies/containerUUID/inspectoroverrideconfigs?inspectors=\"ftp_server,http_inspect\"&expanded=true ( Success: Test GET ALL method for Custom NAP override )" : {
                  "link" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/policy/networkanalysispolicies/containerUUID/inspectoroverrideconfigs"
                  },
                  "items" : [ {
                    "link" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/policy/networkanalysispolicies/containerUUID/inspectoroverrideconfigs"
                    },
                    "type" : "InspectorOverrideConfig",
                    "inspectorOverrideConfig" : { }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves or modifies the inspector override configuration associated with the specified policy. An inspector override allows the user to modify behaviour specified in the base policy's inspector configuration. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateInspectorOverrideConfig",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of inspector override configuration.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/InspectorOverrideConfig"
          }
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/InspectorOverrideConfig"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/DomainUUID/policy/networkanalysispolicies/containerUUID/inspectoroverrideconfigs ( Enabling a Singleton inspector when default state in the Base Policy is disable )" : {
                  "type" : "InspectorOverrideConfig",
                  "inspectorOverrideConfig" : {
                    "rate_filter" : {
                      "enabled" : true,
                      "type" : "singleton",
                      "data" : [ ]
                    }
                  }
                },
                "Request example 10 : PUT /fmc_config/v1/domain/DomainUUID/policy/networkanalysispolicies/containerUUID/inspectoroverrideconfigs ( Configuring arp_spoof inspector )" : {
                  "type" : "InspectorOverrideConfig",
                  "inspectorOverrideConfig" : {
                    "arp_spoof" : {
                      "type" : "singleton",
                      "data" : {
                        "hosts" : [ {
                          "ip" : "1.1.1.1",
                          "mac" : "ff:0f:f1:0f:0f:ff"
                        }, {
                          "ip" : "2.2.2.2",
                          "mac" : "ff:0f:f2:0f:0f:ff"
                        } ]
                      },
                      "enabled" : true
                    }
                  }
                },
                "Request example 11 : PUT /fmc_config/v1/domain/DomainUUID/policy/networkanalysispolicies/containerUUID/inspectoroverrideconfigs ( Configuring rate filter )" : {
                  "type" : "InspectorOverrideConfig",
                  "inspectorOverrideConfig" : {
                    "rate_filter" : {
                      "data" : [ {
                        "apply_to" : "[10.1.2.100, 10.1.2.101]",
                        "count" : 5,
                        "gid" : 135,
                        "new_action" : "alert",
                        "seconds" : 1,
                        "sid" : 1,
                        "timeout" : 5,
                        "track" : "by_src"
                      } ],
                      "enabled" : true,
                      "type" : "singleton"
                    }
                  }
                },
                "Request example 12 : PUT /fmc_config/v1/domain/DomainUUID/policy/networkanalysispolicies/containerUUID/inspectoroverrideconfigs ( Configuring Smtp list alt_max_command_line_len. Give the entire list in overrides )" : {
                  "type" : "InspectorOverrideConfig",
                  "inspectorOverrideConfig" : {
                    "smtp" : {
                      "type" : "multiton",
                      "instances" : [ {
                        "name" : "smtp",
                        "data" : {
                          "alt_max_command_line_len" : [ {
                            "length" : 255,
                            "command" : "ATRN"
                          }, {
                            "command" : "AUTH",
                            "length" : 246
                          }, {
                            "length" : 255,
                            "command" : "BDAT"
                          }, {
                            "length" : 246,
                            "command" : "DATA"
                          }, {
                            "length" : 246,
                            "command" : "XEXCH50"
                          }, {
                            "length" : 246,
                            "command" : "X-EXPS"
                          } ]
                        }
                      } ],
                      "enabled" : true
                    }
                  }
                },
                "Request example 13 : PUT /fmc_config/v1/domain/DomainUUID/policy/networkanalysispolicies/containerUUID/inspectoroverrideconfigs ( Removing all the inspector overrides for NAP policy )" : {
                  "type" : "InspectorOverrideConfig",
                  "inspectorOverrideConfig" : { }
                },
                "Request example 2 : PUT /fmc_config/v1/domain/DomainUUID/policy/networkanalysispolicies/containerUUID/inspectoroverrideconfigs ( Disabling a Singleton inspector when default state in the Base Policy is enable )" : {
                  "type" : "InspectorOverrideConfig",
                  "inspectorOverrideConfig" : {
                    "rate_filter" : {
                      "enabled" : false,
                      "type" : "singleton",
                      "data" : [ ]
                    }
                  }
                },
                "Request example 3 : PUT /fmc_config/v1/domain/DomainUUID/policy/networkanalysispolicies/containerUUID/inspectoroverrideconfigs ( Enabling a Multiton inspector when default state in the Base Policy is disable )" : {
                  "type" : "InspectorOverrideConfig",
                  "inspectorOverrideConfig" : {
                    "ssh" : {
                      "enabled" : true,
                      "type" : "multiton",
                      "instances" : [ ]
                    }
                  }
                },
                "Request example 4 : PUT /fmc_config/v1/domain/DomainUUID/policy/networkanalysispolicies/containerUUID/inspectoroverrideconfigs ( Disabling a Multiton inspector when default state in the Base Policy is enable )" : {
                  "type" : "InspectorOverrideConfig",
                  "inspectorOverrideConfig" : {
                    "ssh" : {
                      "enabled" : false,
                      "type" : "multiton",
                      "instances" : [ ]
                    },
                    "iec104" : {
                      "type" : "multiton",
                      "enabled" : false,
                      "instances" : [ ]
                    }
                  }
                },
                "Request example 5 : PUT /fmc_config/v1/domain/DomainUUID/policy/networkanalysispolicies/containerUUID/inspectoroverrideconfigs ( Overriding default value of specific setting(s) for Singleton inspector )" : {
                  "type" : "InspectorOverrideConfig",
                  "inspectorOverrideConfig" : {
                    "normalizer" : {
                      "enabled" : true,
                      "type" : "singleton",
                      "data" : {
                        "tcp" : {
                          "block" : true
                        },
                        "ip6" : true
                      }
                    }
                  }
                },
                "Request example 6 : PUT /fmc_config/v1/domain/DomainUUID/policy/networkanalysispolicies/containerUUID/inspectoroverrideconfigs ( Overriding specific setting(s) of a default instance (where instance name matches with inspector type) in Multiton inspector )" : {
                  "type" : "InspectorOverrideConfig",
                  "inspectorOverrideConfig" : {
                    "http_inspect" : {
                      "enabled" : true,
                      "type" : "multiton",
                      "instances" : [ {
                        "data" : {
                          "unzip" : false
                        },
                        "name" : "http_inspect"
                      } ]
                    }
                  }
                },
                "Request example 7 : PUT /fmc_config/v1/domain/DomainUUID/policy/networkanalysispolicies/containerUUID/inspectoroverrideconfigs ( Adding binder rule for a default instance with required changes (default binder rules cannot be really edited, they are always appended at the end) )" : {
                  "type" : "InspectorOverrideConfig",
                  "inspectorOverrideConfig" : {
                    "binder" : {
                      "enabled" : true,
                      "type" : "binder",
                      "rules" : [ {
                        "use" : {
                          "type" : "http_inspect"
                        },
                        "when" : {
                          "role" : "server",
                          "service" : "http",
                          "dst_nets" : "10.1.1.0/24"
                        }
                      } ]
                    }
                  }
                },
                "Request example 8 : PUT /fmc_config/v1/domain/DomainUUID/policy/networkanalysispolicies/containerUUID/inspectoroverrideconfigs ( Adding a new custom instance. Corresponding Binder rule entry must be defined in the binder module )" : {
                  "type" : "InspectorOverrideConfig",
                  "inspectorOverrideConfig" : {
                    "telnet" : {
                      "enabled" : true,
                      "type" : "multiton",
                      "instances" : [ {
                        "name" : "telnet_my_instance",
                        "data" : {
                          "encrypted_traffic" : true
                        }
                      } ]
                    },
                    "binder" : {
                      "enabled" : true,
                      "type" : "binder",
                      "rules" : [ {
                        "when" : {
                          "role" : "any",
                          "service" : "telnet"
                        },
                        "use" : {
                          "type" : "telnet",
                          "name" : "telnet_my_instance"
                        }
                      } ]
                    }
                  }
                },
                "Request example 9 : PUT /fmc_config/v1/domain/DomainUUID/policy/networkanalysispolicies/containerUUID/inspectoroverrideconfigs ( Overriding a Singleton instance (normalizer inspector), overriding a Multiton default instance (http_inspect inspector) and creating a new Multiton instance (telnet inspector) )" : {
                  "type" : "InspectorOverrideConfig",
                  "inspectorOverrideConfig" : {
                    "normalizer" : {
                      "enabled" : true,
                      "type" : "singleton",
                      "data" : {
                        "tcp" : {
                          "block" : true
                        },
                        "ip6" : true
                      }
                    },
                    "http_inspect" : {
                      "enabled" : true,
                      "type" : "multiton",
                      "instances" : [ {
                        "data" : {
                          "unzip" : false,
                          "xff_headers" : "x-forwarded-for true-client-ip x-another-forwarding-header"
                        },
                        "name" : "http_inspect"
                      } ]
                    },
                    "telnet" : {
                      "enabled" : true,
                      "type" : "multiton",
                      "instances" : [ {
                        "name" : "telnet_my_instance",
                        "data" : {
                          "encrypted_traffic" : true
                        }
                      } ]
                    },
                    "binder" : {
                      "enabled" : true,
                      "type" : "binder",
                      "rules" : [ {
                        "when" : {
                          "role" : "any",
                          "service" : "telnet"
                        },
                        "use" : {
                          "type" : "telnet",
                          "name" : "telnet_my_instance"
                        }
                      }, {
                        "use" : {
                          "type" : "http_inspect"
                        },
                        "when" : {
                          "role" : "server",
                          "service" : "http",
                          "dst_nets" : "10.1.1.0/24"
                        }
                      } ]
                    }
                  }
                },
                "Response Example 1 :PUT /fmc_config/v1/domain/DomainUUID/policy/networkanalysispolicies/containerUUID/inspectoroverrideconfigs ( Enabling a Singleton inspector when default state in the Base Policy is disable )" : {
                  "type" : "InspectorOverrideConfig",
                  "inspectorOverrideConfig" : {
                    "rate_filter" : {
                      "enabled" : true,
                      "type" : "singleton",
                      "data" : [ ]
                    }
                  }
                },
                "Response Example 10 :PUT /fmc_config/v1/domain/DomainUUID/policy/networkanalysispolicies/containerUUID/inspectoroverrideconfigs ( Configuring arp_spoof inspector )" : {
                  "type" : "InspectorOverrideConfig",
                  "inspectorOverrideConfig" : {
                    "arp_spoof" : {
                      "type" : "singleton",
                      "data" : {
                        "hosts" : [ {
                          "ip" : "1.1.1.1",
                          "mac" : "ff:0f:f1:0f:0f:ff"
                        }, {
                          "ip" : "2.2.2.2",
                          "mac" : "ff:0f:f2:0f:0f:ff"
                        } ]
                      },
                      "enabled" : true
                    }
                  }
                },
                "Response Example 11 :PUT /fmc_config/v1/domain/DomainUUID/policy/networkanalysispolicies/containerUUID/inspectoroverrideconfigs ( Configuring rate filter )" : {
                  "type" : "InspectorOverrideConfig",
                  "inspectorOverrideConfig" : {
                    "rate_filter" : {
                      "data" : [ {
                        "apply_to" : "[10.1.2.100, 10.1.2.101]",
                        "count" : 5,
                        "gid" : 135,
                        "new_action" : "alert",
                        "seconds" : 1,
                        "sid" : 1,
                        "timeout" : 5,
                        "track" : "by_src"
                      } ],
                      "enabled" : true,
                      "type" : "singleton"
                    }
                  }
                },
                "Response Example 12 :PUT /fmc_config/v1/domain/DomainUUID/policy/networkanalysispolicies/containerUUID/inspectoroverrideconfigs ( Configuring Smtp list alt_max_command_line_len. Give the entire list in overrides )" : {
                  "type" : "InspectorOverrideConfig",
                  "inspectorOverrideConfig" : {
                    "smtp" : {
                      "type" : "multiton",
                      "instances" : [ {
                        "name" : "smtp",
                        "data" : {
                          "alt_max_command_line_len" : [ {
                            "length" : 255,
                            "command" : "ATRN"
                          }, {
                            "command" : "AUTH",
                            "length" : 246
                          }, {
                            "length" : 255,
                            "command" : "BDAT"
                          }, {
                            "length" : 246,
                            "command" : "DATA"
                          }, {
                            "length" : 246,
                            "command" : "XEXCH50"
                          }, {
                            "length" : 246,
                            "command" : "X-EXPS"
                          } ]
                        }
                      } ],
                      "enabled" : true
                    }
                  }
                },
                "Response Example 13 :PUT /fmc_config/v1/domain/DomainUUID/policy/networkanalysispolicies/containerUUID/inspectoroverrideconfigs ( Removing all the inspector overrides for NAP policy )" : {
                  "type" : "InspectorOverrideConfig",
                  "inspectorOverrideConfig" : { }
                },
                "Response Example 2 :PUT /fmc_config/v1/domain/DomainUUID/policy/networkanalysispolicies/containerUUID/inspectoroverrideconfigs ( Disabling a Singleton inspector when default state in the Base Policy is enable )" : {
                  "type" : "InspectorOverrideConfig",
                  "inspectorOverrideConfig" : {
                    "rate_filter" : {
                      "enabled" : false,
                      "type" : "singleton",
                      "data" : [ ]
                    }
                  }
                },
                "Response Example 3 :PUT /fmc_config/v1/domain/DomainUUID/policy/networkanalysispolicies/containerUUID/inspectoroverrideconfigs ( Enabling a Multiton inspector when default state in the Base Policy is disable )" : {
                  "type" : "InspectorOverrideConfig",
                  "inspectorOverrideConfig" : {
                    "ssh" : {
                      "enabled" : true,
                      "type" : "multiton",
                      "instances" : [ ]
                    }
                  }
                },
                "Response Example 4 :PUT /fmc_config/v1/domain/DomainUUID/policy/networkanalysispolicies/containerUUID/inspectoroverrideconfigs ( Disabling a Multiton inspector when default state in the Base Policy is enable )" : {
                  "type" : "InspectorOverrideConfig",
                  "inspectorOverrideConfig" : {
                    "ssh" : {
                      "enabled" : false,
                      "type" : "multiton",
                      "instances" : [ ]
                    },
                    "iec104" : {
                      "type" : "multiton",
                      "enabled" : false,
                      "instances" : [ ]
                    }
                  }
                },
                "Response Example 5 :PUT /fmc_config/v1/domain/DomainUUID/policy/networkanalysispolicies/containerUUID/inspectoroverrideconfigs ( Overriding default value of specific setting(s) for Singleton inspector )" : {
                  "type" : "InspectorOverrideConfig",
                  "inspectorOverrideConfig" : {
                    "normalizer" : {
                      "enabled" : true,
                      "type" : "singleton",
                      "data" : {
                        "tcp" : {
                          "block" : true
                        },
                        "ip6" : true
                      }
                    }
                  }
                },
                "Response Example 6 :PUT /fmc_config/v1/domain/DomainUUID/policy/networkanalysispolicies/containerUUID/inspectoroverrideconfigs ( Overriding specific setting(s) of a default instance (where instance name matches with inspector type) in Multiton inspector )" : {
                  "type" : "InspectorOverrideConfig",
                  "inspectorOverrideConfig" : {
                    "http_inspect" : {
                      "enabled" : true,
                      "type" : "multiton",
                      "instances" : [ {
                        "data" : {
                          "unzip" : false
                        },
                        "name" : "http_inspect"
                      } ]
                    }
                  }
                },
                "Response Example 7 :PUT /fmc_config/v1/domain/DomainUUID/policy/networkanalysispolicies/containerUUID/inspectoroverrideconfigs ( Adding binder rule for a default instance with required changes (default binder rules cannot be really edited, they are always appended at the end) )" : {
                  "type" : "InspectorOverrideConfig",
                  "inspectorOverrideConfig" : {
                    "binder" : {
                      "enabled" : true,
                      "type" : "binder",
                      "rules" : [ {
                        "use" : {
                          "type" : "http_inspect"
                        },
                        "when" : {
                          "role" : "server",
                          "service" : "http",
                          "dst_nets" : "10.1.1.0/24"
                        }
                      } ]
                    }
                  }
                },
                "Response Example 8 :PUT /fmc_config/v1/domain/DomainUUID/policy/networkanalysispolicies/containerUUID/inspectoroverrideconfigs ( Adding a new custom instance. Corresponding Binder rule entry must be defined in the binder module )" : {
                  "type" : "InspectorOverrideConfig",
                  "inspectorOverrideConfig" : {
                    "telnet" : {
                      "enabled" : true,
                      "type" : "multiton",
                      "instances" : [ {
                        "name" : "telnet_my_instance",
                        "data" : {
                          "encrypted_traffic" : true
                        }
                      } ]
                    },
                    "binder" : {
                      "enabled" : true,
                      "type" : "binder",
                      "rules" : [ {
                        "when" : {
                          "role" : "any",
                          "service" : "telnet"
                        },
                        "use" : {
                          "type" : "telnet",
                          "name" : "telnet_my_instance"
                        }
                      } ]
                    }
                  }
                },
                "Response Example 9 :PUT /fmc_config/v1/domain/DomainUUID/policy/networkanalysispolicies/containerUUID/inspectoroverrideconfigs ( Overriding a Singleton instance (normalizer inspector), overriding a Multiton default instance (http_inspect inspector) and creating a new Multiton instance (telnet inspector) )" : {
                  "type" : "InspectorOverrideConfig",
                  "inspectorOverrideConfig" : {
                    "normalizer" : {
                      "enabled" : true,
                      "type" : "singleton",
                      "data" : {
                        "tcp" : {
                          "block" : true
                        },
                        "ip6" : true
                      }
                    },
                    "http_inspect" : {
                      "enabled" : true,
                      "type" : "multiton",
                      "instances" : [ {
                        "data" : {
                          "unzip" : false,
                          "xff_headers" : "x-forwarded-for true-client-ip x-another-forwarding-header"
                        },
                        "name" : "http_inspect"
                      } ]
                    },
                    "telnet" : {
                      "enabled" : true,
                      "type" : "multiton",
                      "instances" : [ {
                        "name" : "telnet_my_instance",
                        "data" : {
                          "encrypted_traffic" : true
                        }
                      } ]
                    },
                    "binder" : {
                      "enabled" : true,
                      "type" : "binder",
                      "rules" : [ {
                        "when" : {
                          "role" : "any",
                          "service" : "telnet"
                        },
                        "use" : {
                          "type" : "telnet",
                          "name" : "telnet_my_instance"
                        }
                      }, {
                        "use" : {
                          "type" : "http_inspect"
                        },
                        "when" : {
                          "role" : "server",
                          "service" : "http",
                          "dst_nets" : "10.1.1.0/24"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/InspectorOverrideConfig"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/networkanalysispolicies/{objectId}" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the network analysis policy associated with the specified ID. Also, retrieves list of all network analysis policies.**",
        "operationId" : "getSnort3NetworkAnalysisPolicy",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the network analysis policy.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Snort3NetworkAnalysisPolicy"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/policy/networkanalysispolicies/networkAnalysisPolicyUUID ( Test GET of Network Analysis Policy for a uuid )" : {
                  "name" : "Security Over Connectivity",
                  "id" : "networkAnalysisPolicyUUID",
                  "snortEngine" : "SNORT2 | SNORT3",
                  "inspectionMode" : "DETECTION | PREVENTION",
                  "isSystemDefined" : true,
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/policy/networkanalysispolicies/networkAnalysisPolicyUUID"
                  },
                  "type" : "NetworkAnalysisPolicy",
                  "metadata" : {
                    "readOnly" : {
                      "state" : true
                    },
                    "domain" : {
                      "id" : "DomainUUID",
                      "type" : "Domain",
                      "name" : "Global"
                    },
                    "lastUser" : {
                      "name" : "admin",
                      "id" : "userUUID",
                      "type" : "User"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the network analysis policy associated with the specified ID. Also, retrieves list of all network analysis policies. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateSnort3NetworkAnalysisPolicy",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the network analysis policy.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "replicateInspectionMode",
          "in" : "query",
          "description" : "Flag to replicate inspection mode from snort 3 version to snort 2 version.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The input network analysis model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Snort3NetworkAnalysisPolicy"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Snort3NetworkAnalysisPolicy"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/DomainUUID/policy/networkanalysispolicies/networkAnalysisPolicyUUID ( Test PUT of Network Analysis Policy to update record )" : {
                  "id" : "networkAnalysisPolicyUUID",
                  "name" : "test1_updated",
                  "type" : "NetworkAnalysisPolicy",
                  "inlineDrop" : 1
                },
                "Response Example 1 :PUT /fmc_config/v1/domain/DomainUUID/policy/networkanalysispolicies/networkAnalysisPolicyUUID ( Test PUT of Network Analysis Policy to update record )" : {
                  "id" : "networkAnalysisPolicyUUID",
                  "name" : "test1_updated",
                  "type" : "NetworkAnalysisPolicy",
                  "inlineDrop" : 1,
                  "isSystemDefined" : "false | true"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/Snort3NetworkAnalysisPolicy"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the network analysis policy associated with the specified ID. Also, retrieves list of all network analysis policies. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteSnort3NetworkAnalysisPolicy",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the network analysis policy.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Snort3NetworkAnalysisPolicy"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /fmc_config/v1/domain/DomainUUID/policy/networkanalysispolicies/networkAnalysisPolicyUUID ( Test DELETE of Network Analysis Policy )" : {
                  "id" : "networkAnalysisPolicyUUID",
                  "name" : "test1_updated",
                  "type" : "NetworkAnalysisPolicy",
                  "inlineDrop" : 1,
                  "basePolicy" : {
                    "id" : "networkAnalysisPolicyUUID",
                    "type" : "NetworkAnalysisPolicy"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/prefilterpolicies" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves prefilter policy associated with the specified ID. Also, retrieves list of all prefilter policies.**",
        "operationId" : "getAllPrefilterPolicy",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PrefilterPolicyListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/DomainUUID/policy/prefilterpolicies ( Test GET ALL Success of Prefilter policy )" : {
                  "items" : [ {
                    "name" : "PrefilterPolicy1",
                    "id" : "PrefilterPolicyUUID1",
                    "type" : "PrefilterPolicy",
                    "description" : "Description of a Prefilter Policy",
                    "rules" : {
                      "refType" : "list",
                      "type" : "PrefilterRule",
                      "links" : {
                        "self" : "URL for Prefilter Rules"
                      }
                    },
                    "defaultAction" : {
                      "type" : "PrefilterPolicyDefaultAction",
                      "id" : "PrefilterPolicyDefaultActionUUID",
                      "action" : "BLOCK_TUNNELS/ANALYZE_TUNNELS",
                      "links" : {
                        "self" : "URL for Prefilter Policy Default Action"
                      }
                    },
                    "metadata" : {
                      "domain" : {
                        "name" : "Global",
                        "id" : "DomainUUID",
                        "type" : "Domain"
                      }
                    }
                  }, {
                    "name" : "PrefilterPolicy2",
                    "id" : "PrefilterPolicyUUID2",
                    "type" : "PrefilterPolicy",
                    "description" : "Description of a Prefilter Policy",
                    "rules" : {
                      "refType" : "list",
                      "type" : "PrefilterRule",
                      "links" : {
                        "self" : "URL for Prefilter Rules"
                      }
                    },
                    "defaultAction" : {
                      "type" : "PrefilterPolicyDefaultAction",
                      "id" : "PrefilterPolicyDefaultActionUUID",
                      "action" : "BLOCK_TUNNELS/ANALYZE_TUNNELS",
                      "links" : {
                        "self" : "URL for Prefilter Policy Default Action"
                      }
                    },
                    "metadata" : {
                      "domain" : {
                        "name" : "Global",
                        "id" : "DomainUUID",
                        "type" : "Domain"
                      }
                    }
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves prefilter policy associated with the specified ID. Also, retrieves list of all prefilter policies. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createPrefilterPolicy",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of prefilter policy.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PrefilterPolicy"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/PrefilterPolicy"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /fmc_config/v1/domain/DomainUUID/policy/prefilterpolicies ( Success: POST method for PrefilterPolicy with minimum required fields )" : {
                  "type" : "PrefilterPolicy",
                  "name" : "PrefilterPolicy1",
                  "description" : "policy to test FMC implementation"
                },
                "Request example 2 : POST /fmc_config/v1/domain/DomainUUID/policy/prefilterpolicies ( Success: Test POST method for PrefilterPolicy with defaultaction )" : {
                  "type" : "PrefilterPolicy",
                  "name" : "PrefilterPolicy1",
                  "description" : "policy to test FMC implementation",
                  "defaultAction" : {
                    "type" : "PrefilterPolicyDefaultAction",
                    "logBegin" : "true/false",
                    "logEnd" : "true/false",
                    "sendEventsToFMC" : "true/false",
                    "action" : "BLOCK_TUNNELS/ANALYZE_TUNNELS",
                    "syslogConfig" : {
                      "name" : "SyslogAlert1",
                      "id" : "SyslogAlertUUID",
                      "type" : "SyslogAlert"
                    },
                    "snmpConfig" : {
                      "name" : "SNMPAlert1",
                      "id" : "SNMPAlertUUID",
                      "type" : "SNMPAlert"
                    }
                  }
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/PrefilterPolicy"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/prefilterpolicies/{containerUUID}/defaultactions" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves or modifies the default action associated with the specified prefilter control policy ID and default action ID. If no default action ID is specified, retrieves list of all default actions associated with the specified prefilter policy ID.**",
        "operationId" : "getAllPrefilterDefaultAction",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PrefilterDefaultActionListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/DomainUUID/policy/prefilterpolicies/preflt_pol_uuid/defaultactions?expanded=true ( Test GET ALL Success of PrefilterPolicy default action )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/policy/prefilterpolicies/prefilterpolicyUUID/defaultactions?offset=0&limit=1"
                  },
                  "items" : [ {
                    "action" : "ANALYZE_TUNNELS",
                    "type" : "PrefilterPolicyDefaultAction",
                    "sendEventsToFMC" : true,
                    "logBegin" : true,
                    "logEnd" : true,
                    "snmpConfig" : {
                      "name" : "snmp_alert1",
                      "id" : "snmpConfigUUID",
                      "type" : "SNMPAlert"
                    },
                    "id" : "defaultActionUUID"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/prefilterpolicies/{containerUUID}/defaultactions/{objectId}" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves or modifies the default action associated with the specified prefilter control policy ID and default action ID. If no default action ID is specified, retrieves list of all default actions associated with the specified prefilter policy ID.**",
        "operationId" : "getPrefilterDefaultAction",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a default action.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PrefilterDefaultAction"
            },
            "examples" : { }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves or modifies the default action associated with the specified prefilter control policy ID and default action ID. If no default action ID is specified, retrieves list of all default actions associated with the specified prefilter policy ID. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updatePrefilterDefaultAction",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a default action.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The input default action model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PrefilterDefaultAction"
          }
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PrefilterDefaultAction"
            },
            "examples" : { }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/PrefilterDefaultAction"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/prefilterpolicies/{containerUUID}/operational/hitcounts" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, refreshes and clears Hit Count**",
        "operationId" : "getPrefilterHitCount",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "Value is of format (including quotes): <code>\"deviceId:{uuid};ids:{uuid1,uuid2,..};fetchZeroHitCount:{true|false}\"</code><br/><code>deviceId</code> is UUID of device and is a mandatory field.<br/><code>ids</code> returns hitcounts of prefilter rules if set to list of rule UUIDs. If this key is not used, all prefilter rules will be returned (Note that this is applicable only in GET and DELETE operations). <br/><code>fetchZeroHitCount</code> returns only access rules whose hit count is zero if <code>true</code> (Note that this is applicable only in GET operation and if <code>ids</code> is not used).",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PrefilterHitCountListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/policy/prefilterpolicies/containerUUID/operational/hitcounts?filter=\"deviceId:{deviceId}\"&expanded=true ( Success: Test GET ALL method for HitCount )" : {
                  "link" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/policy/prefilterpolicies/containerUUID/operational/hitcounts?filter=\"deviceId:{deviceId}\"&expanded=true"
                  },
                  "items" : [ {
                    "metadata" : {
                      "policy" : {
                        "type" : "PrefilterPolicy",
                        "name" : "<Prefilter Policy Name>",
                        "id" : "id_of_prefilter_policy"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "id_of_global_domain",
                        "type" : "Domain"
                      },
                      "deviceRuleId" : "prefilter_rule_id_on_ftd",
                      "ruleIndex" : "prefilter_rule_name"
                    },
                    "link" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/policy/prefilterpolicies/containerUUID/operational/hitcounts?filter=\"deviceId:{deviceId};ids:{id_of_prefilter_rule_1}\"&expanded=true"
                    },
                    "lastFetchTimeStamp" : "1997-07-16T19:20:30Z",
                    "type" : "PrefilterRule",
                    "hitCount" : 90,
                    "rule" : {
                      "id" : "id_of_prefilter_rule_1",
                      "type" : "PrefilterRule",
                      "name" : "<Prefilter Rule Name 1>"
                    },
                    "firstHitTimeStamp" : "1997-07-16T19:20:30Z",
                    "lastHitTimeStamp" : "1997-07-16T19:20:30Z"
                  }, {
                    "metadata" : {
                      "policy" : {
                        "type" : "PrefilterPolicy",
                        "name" : "<Prefilter Policy Name>",
                        "id" : "id_of_prefilter_policy"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "id_of_global_domain",
                        "type" : "Domain"
                      },
                      "deviceRuleId" : "prefilter_rule_id_on_ftd",
                      "ruleIndex" : "prefilter_rule_name"
                    },
                    "link" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/policy/prefilterpolicies/containerUUID/operational/hitcounts?filter=\"deviceId:{deviceId};ids:{id_of_prefilter_rule_2}\"&expanded=true"
                    },
                    "lastFetchTimeStamp" : "1997-07-16T19:20:30Z",
                    "hitCount" : 0,
                    "rule" : {
                      "id" : "id_of_prefilter_rule_2",
                      "type" : "PrefilterRule",
                      "name" : "<Prefilter Rule Name 2>"
                    },
                    "firstHitTimeStamp" : "1997-07-16T19:20:30Z",
                    "lastHitTimeStamp" : "1997-07-16T19:20:30Z"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, refreshes and clears Hit Count _Check the response section for applicable examples (if any)._**",
        "operationId" : "updatePrefilterHitCount",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "Value is of format (including quotes): <code>\"deviceId:{uuid};ids:{uuid1,uuid2,..};fetchZeroHitCount:{true|false}\"</code><br/><code>deviceId</code> is UUID of device and is a mandatory field.<br/><code>ids</code> returns hitcounts of prefilter rules if set to list of rule UUIDs. If this key is not used, all prefilter rules will be returned (Note that this is applicable only in GET and DELETE operations). <br/><code>fetchZeroHitCount</code> returns only access rules whose hit count is zero if <code>true</code> (Note that this is applicable only in GET operation and if <code>ids</code> is not used).",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PrefilterHitCount"
            },
            "examples" : { }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/PrefilterHitCount"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/DomainUUID/policy/prefilterpolicies/containerUUID/operational/hitcounts?filter=\"{filterString}\";expanded=true ( Test PUT (Refresh) of HitCount )" : { },
                "Response Example 1 :PUT /fmc_config/v1/domain/DomainUUID/policy/prefilterpolicies/containerUUID/operational/hitcounts?filter=\"{filterString}\";expanded=true ( Test PUT (Refresh) of HitCount )" : {
                  "link" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/policy/prefilterpolicies/containerUUID/operational/hitcounts?filter=\"deviceId:{deviceId}\"&expanded=true"
                  },
                  "metadata" : {
                    "task" : {
                      "id" : "task_id",
                      "type" : "TaskStatus",
                      "links" : {
                        "self" : "link_to_task_status"
                      }
                    }
                  },
                  "type" : "HitCount"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, refreshes and clears Hit Count _Check the response section for applicable examples (if any)._**",
        "operationId" : "deletePrefilterHitCount",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "Value is of format (including quotes): <code>\"deviceId:{uuid};ids:{uuid1,uuid2,..};fetchZeroHitCount:{true|false}\"</code><br/><code>deviceId</code> is UUID of device and is a mandatory field.<br/><code>ids</code> returns hitcounts of prefilter rules if set to list of rule UUIDs. If this key is not used, all prefilter rules will be returned (Note that this is applicable only in GET and DELETE operations). <br/><code>fetchZeroHitCount</code> returns only access rules whose hit count is zero if <code>true</code> (Note that this is applicable only in GET operation and if <code>ids</code> is not used).",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PrefilterHitCount"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /fmc_config/v1/domain/DomainUUID/policy/prefilterpolicies/containerUUID/operational/hitcounts?filter=\"{filterString}\";expanded=true ( Test DELETE (Clear) of HitCount )" : { }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/prefilterpolicies/{containerUUID}/prefilterrules" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the prefilter rule associated with the specified policy ID and rule ID. If no ID is specified, retrieves list of all prefilter rules associated with the specified policy ID.**",
        "operationId" : "getAllPrefilterRule",
        "parameters" : [ {
          "name" : "ruleType",
          "in" : "query",
          "description" : "If parameter is specified, only the policies with specified <code>ruleType</code> will be shown. Allowed values are 'PREFILTER' and 'TUNNEL'. Cannot be used if object ID is specified in path.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PrefilterRuleListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/DomainUUID/policy/prefilterpolicies/containerUUID/prefilterrules ( Success: Test GET ALL success )" : {
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/policy/prefilterpolicies/containerUUID/prefilterrules?offset=0&limit=1"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/policy/prefilterpolicies/containerUUID/prefilterrules/prefilterruleUUID1"
                    },
                    "type" : "PrefilterRule",
                    "name" : "Rule1",
                    "id" : "prefilterRuleUUID1"
                  }, {
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/policy/prefilterpolicies/containerUUID/prefilterrules/prefilterruleUUID2"
                    },
                    "type" : "PrefilterRule",
                    "name" : "Rule2",
                    "id" : "prefilterRuleUUID2"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/DomainUUID/policy/prefilterpolicies/containerUUID/prefilterrules?expanded=true ( Success: Test GET ALL success with expanded=true )" : {
                  "metadata" : {
                    "readOnly" : {
                      "state" : true,
                      "reason" : "SYSTEM"
                    }
                  },
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/policy/prefilterpolicies/containerUUID/prefilterrules?offset=0&limit=2"
                  },
                  "items" : [ {
                    "metadata" : {
                      "readOnly" : {
                        "state" : true,
                        "reason" : "SYSTEM"
                      }
                    },
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/policy/prefilterpolicies/containerUUID/prefilterrules/prefilterRuleUUID1"
                    },
                    "action" : "FASTPATH/ANALYZE/BLOCK",
                    "enabled" : true,
                    "type" : "PrefilterRule",
                    "name" : "Rule1",
                    "sendEventsToFMC" : false,
                    "ruleType" : "PREFILTER",
                    "bidirectional" : false,
                    "id" : "prefilterruleUUID1",
                    "vlanTags" : {
                      "objects" : [ {
                        "type" : "VlanTag",
                        "name" : "vlan_tag_1",
                        "id" : "vlanTagUUID"
                      } ]
                    },
                    "sourceInterfaces" : {
                      "objects" : [ {
                        "name" : "External",
                        "id" : "sourceInterfaceObjectUUID",
                        "type" : "SecurityZone"
                      } ]
                    },
                    "destinationInterfaces" : {
                      "objects" : [ {
                        "name" : "Internal",
                        "id" : "destinationInterfaceUUID",
                        "type" : "SecurityZone"
                      } ]
                    },
                    "logBegin" : false,
                    "logEnd" : false,
                    "sourcePorts" : {
                      "objects" : [ {
                        "type" : "ProtocolPortObject",
                        "name" : "AOL",
                        "id" : "ProtocolPortObjectUUID"
                      } ]
                    },
                    "destinationPorts" : {
                      "objects" : [ {
                        "type" : "ProtocolPortObject",
                        "name" : "Bittorrent",
                        "id" : "ProtocolPortObjectUUID"
                      } ]
                    },
                    "commentHistoryList" : [ {
                      "user" : {
                        "name" : "user1",
                        "type" : "User"
                      },
                      "date" : "utc-millisec",
                      "comment" : "Prefilter Rule Comments"
                    } ],
                    "sourceNetworks" : {
                      "objects" : [ {
                        "type" : "Host",
                        "id" : "sourceNetworkObjectUUID",
                        "name" : "Host1"
                      } ]
                    },
                    "destinationNetworks" : {
                      "objects" : [ {
                        "type" : "Host",
                        "id" : "destinationNetworkUUID",
                        "name" : "Host1"
                      } ]
                    }
                  }, {
                    "metadata" : {
                      "readOnly" : {
                        "state" : true,
                        "reason" : "SYSTEM"
                      }
                    },
                    "links" : {
                      "self" : "/fmc_config/v1/domain/DomainUUID/policy/prefilterpolicies/containerUUID/prefilterrules/prefilterRuleUUID2"
                    },
                    "action" : "FASTPATH/ANALYZE/BLOCK",
                    "enabled" : true,
                    "type" : "PrefilterRule",
                    "name" : "Rule2",
                    "sendEventsToFMC" : false,
                    "ruleType" : "PREFILTER",
                    "bidirectional" : false,
                    "id" : "prefilterruleUUID2",
                    "vlanTags" : {
                      "objects" : [ {
                        "type" : "VlanTag",
                        "name" : "vlan_tag_1",
                        "id" : "vlanTagUUID"
                      } ]
                    },
                    "sourceInterfaces" : {
                      "objects" : [ {
                        "name" : "External",
                        "id" : "sourceInterfaceObjectUUID",
                        "type" : "SecurityZone"
                      } ]
                    },
                    "destinationInterfaces" : {
                      "objects" : [ {
                        "name" : "Internal",
                        "id" : "destinationInterfaceUUID",
                        "type" : "SecurityZone"
                      } ]
                    },
                    "logBegin" : false,
                    "logEnd" : false,
                    "sourcePorts" : {
                      "objects" : [ {
                        "type" : "ProtocolPortObject",
                        "name" : "AOL",
                        "id" : "ProtocolPortObjectUUID"
                      } ]
                    },
                    "destinationPorts" : {
                      "objects" : [ {
                        "type" : "ProtocolPortObject",
                        "name" : "Bittorrent",
                        "id" : "ProtocolPortObjectUUID"
                      } ]
                    },
                    "commentHistoryList" : [ {
                      "user" : {
                        "name" : "user1",
                        "type" : "User"
                      },
                      "date" : "utc-millisec",
                      "comment" : "Prefilter Rule Comments"
                    } ],
                    "sourceNetworks" : {
                      "objects" : [ {
                        "type" : "Host",
                        "id" : "sourceNetworkObjectUUID",
                        "name" : "Host1"
                      } ]
                    },
                    "destinationNetworks" : {
                      "objects" : [ {
                        "type" : "Host",
                        "id" : "destinationNetworkUUID",
                        "name" : "Host1"
                      } ]
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the prefilter rule associated with the specified policy ID and rule ID. If no ID is specified, retrieves list of all prefilter rules associated with the specified policy ID. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createMultiplePrefilterRule",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The input prefilter rule model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PrefilterRule"
          }
        }, {
          "name" : "bulk",
          "in" : "query",
          "description" : "This parameter specifies that bulk operation is being used in the query. This parameter is required for bulk rule operations.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "insertAfter",
          "in" : "query",
          "description" : "This parameter specifies that the rules will be inserted after the specified rule index. insertBefore takes precedence over insertAfter - if both are specified, the insertBefore parameter will apply.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "insertBefore",
          "in" : "query",
          "description" : "This parameter specifies that the rules will be inserted before the specified rule index. insertBefore takes precedence over insertAfter - if both are specified, the insertBefore parameter will apply.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/PrefilterRule"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /fmc_config/v1/domain/DomainUUID/policy/prefilterpolicies/containerUUID/prefilterrules ( Test POST of Prefilter rule )" : {
                  "action" : "FASTPATH/ANALYZE/BLOCK",
                  "enabled" : true,
                  "type" : "PrefilterRule",
                  "name" : "Rule1",
                  "sendEventsToFMC" : false,
                  "ruleType" : "PREFILTER",
                  "bidirectional" : false,
                  "logBegin" : false,
                  "logEnd" : false,
                  "vlanTags" : {
                    "objects" : [ {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_1",
                      "id" : "VlanTagUUID1"
                    }, {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_2",
                      "id" : "VlanTagUUID2"
                    } ]
                  },
                  "sourceInterfaces" : {
                    "objects" : [ {
                      "name" : "External",
                      "id" : "SecurityInterfaceUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "destinationInterfaces" : {
                    "objects" : [ {
                      "name" : "Internal",
                      "id" : "SecurityInterfaceUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "sourcePorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "AOL",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "destinationPorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "Bittorrent",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "sourceNetworks" : {
                    "objects" : [ {
                      "type" : "Host",
                      "id" : "sourceNetworkObjectUUID",
                      "name" : "Host1"
                    } ]
                  },
                  "destinationNetworks" : {
                    "objects" : [ {
                      "type" : "Host",
                      "id" : "destinationNetworkUUID",
                      "name" : "Host1"
                    } ]
                  },
                  "snmpConfig" : {
                    "id" : "snmpConfigUuid",
                    "name" : "snmp_alert1",
                    "type" : "SNMPAlert"
                  },
                  "syslogConfig" : {
                    "id" : "syslogConfigUuid",
                    "name" : "syslog_alert1",
                    "type" : "SyslogAlert"
                  },
                  "newComments" : [ "comment1", "comment2" ]
                },
                "Request example 2 : POST /fmc_config/v1/domain/DomainUUID/policy/prefilterpolicies/containerUUID/prefilterrules ( Test POST of Tunnel rule )" : {
                  "action" : "FASTPATH/ANALYZE/BLOCK",
                  "enabled" : true,
                  "type" : "PrefilterRule",
                  "name" : "TunnelRule1",
                  "sendEventsToFMC" : false,
                  "ruleType" : "TUNNEL",
                  "bidirectional" : true,
                  "logBegin" : false,
                  "logEnd" : false,
                  "vlanTags" : {
                    "objects" : [ {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_1",
                      "id" : "VlanTagUUID1"
                    }, {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_2",
                      "id" : "VlanTagUUID2"
                    } ]
                  },
                  "sourceInterfaces" : {
                    "objects" : [ {
                      "name" : "External",
                      "id" : "SecurityInterfaceUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "destinationInterfaces" : {
                    "objects" : [ {
                      "name" : "Internal",
                      "id" : "SecurityInterfaceUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "encapsulationPorts" : [ "GRE", "IP_IN_IP", "IPV6_IN_IP", "TEREDO" ],
                  "tunnelZone" : {
                    "objects" : [ {
                      "id" : "tunnelZoneUUID",
                      "type" : "TunnelTag",
                      "name" : "TunnelZone2"
                    } ]
                  },
                  "sourceNetworks" : {
                    "objects" : [ {
                      "type" : "Host",
                      "id" : "sourceNetworkObjectUUID",
                      "name" : "Host1"
                    } ]
                  },
                  "destinationNetworks" : {
                    "objects" : [ {
                      "type" : "Host",
                      "id" : "destinationNetworkUUID",
                      "name" : "Host1"
                    } ]
                  },
                  "snmpConfig" : {
                    "id" : "snmpConfigUuid",
                    "name" : "snmp_alert1",
                    "type" : "SNMPAlert"
                  },
                  "syslogConfig" : {
                    "id" : "syslogConfigUuid",
                    "name" : "syslog_alert1",
                    "type" : "SyslogAlert"
                  },
                  "newComments" : [ "comment1", "comment2" ]
                },
                "Request example 3 : POST /fmc_config/v1/domain/DomainUUID/policy/prefilterpolicies/containerUUID/prefilterrules?bulk=true ( POST Bulk insert of Prefilter rules )" : [ {
                  "action" : "ALLOW",
                  "enabled" : true,
                  "type" : "PrefilterRule",
                  "name" : "Rule1",
                  "sendEventsToFMC" : false,
                  "ruleType" : "PREFILTER",
                  "bidirectional" : false,
                  "logBegin" : false,
                  "logEnd" : false,
                  "vlanTags" : {
                    "objects" : [ {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_1",
                      "id" : "VlanTagUUID1"
                    }, {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_2",
                      "id" : "VlanTagUUID2"
                    } ]
                  },
                  "sourceInterfaces" : {
                    "objects" : [ {
                      "name" : "External",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "destinationInterfaces" : {
                    "objects" : [ {
                      "name" : "Internal",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "sourcePorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "AOL",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "destinationPorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "Bittorrent",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "timeRangeObjects" : [ {
                    "type" : "TimeRange",
                    "name" : "TestTimeRange",
                    "id" : "TimeRangeUUID"
                  } ],
                  "snmpConfig" : {
                    "id" : "snmpConfigUuid",
                    "name" : "snmp_alert1",
                    "type" : "SNMPAlert"
                  },
                  "syslogConfig" : {
                    "id" : "syslogConfigUuid",
                    "name" : "syslog_alert1",
                    "type" : "SyslogAlert"
                  },
                  "newComments" : [ "comment1", "comment2" ]
                }, {
                  "action" : "ALLOW",
                  "enabled" : true,
                  "type" : "PrefilterRule",
                  "name" : "Rule2",
                  "sendEventsToFMC" : false,
                  "ruleType" : "PREFILTER",
                  "bidirectional" : false,
                  "logBegin" : false,
                  "logEnd" : false,
                  "vlanTags" : {
                    "objects" : [ {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_1",
                      "id" : "VlanTagUUID1"
                    }, {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_2",
                      "id" : "VlanTagUUID2"
                    } ]
                  },
                  "sourceInterfaces" : {
                    "objects" : [ {
                      "name" : "External",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "destinationInterfaces" : {
                    "objects" : [ {
                      "name" : "Internal",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "sourcePorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "AOL",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "destinationPorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "Bittorrent",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "snmpConfig" : {
                    "id" : "snmpConfigUuid",
                    "name" : "snmp_alert1",
                    "type" : "SNMPAlert"
                  },
                  "syslogConfig" : {
                    "id" : "syslogConfigUuid",
                    "name" : "syslog_alert1",
                    "type" : "SyslogAlert"
                  },
                  "newComments" : [ "comment1", "comment2" ]
                } ]
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/PrefilterRule"
            },
            "examples" : { }
          }
        }
      },
      "put" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the prefilter rule associated with the specified policy ID and rule ID. If no ID is specified, retrieves list of all prefilter rules associated with the specified policy ID. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateMultiplePrefilterRule",
        "parameters" : [ {
          "name" : "bulk",
          "in" : "query",
          "description" : "This parameter specifies that bulk operation is being used in the query. This parameter is required for bulk rule operations.",
          "required" : true,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The input prefilter rule model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PrefilterRule"
          }
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PrefilterRule"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/DomainUUID/policy/prefilterpolicies/containerUUID/prefilterrules/prefilterruleUUID1 ( Test PUT of Prefilter rule )" : {
                  "action" : "FASTPATH/ANALYZE/BLOCK",
                  "enabled" : false,
                  "type" : "PrefilterRule",
                  "name" : "Rule2",
                  "sendEventsToFMC" : false,
                  "ruleType" : "PREFILTER",
                  "bidirectional" : false,
                  "id" : "prefilterruleUUID1",
                  "vlanTags" : {
                    "objects" : [ {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_1",
                      "id" : "VlanTagUUID1"
                    }, {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_2",
                      "id" : "VlanTagUUID2"
                    } ]
                  },
                  "sourceInterfaces" : {
                    "objects" : [ {
                      "name" : "External",
                      "id" : "SecurityInterfaceUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "destinationInterfaces" : {
                    "objects" : [ {
                      "name" : "Internal",
                      "id" : "SecurityInterfaceUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "sourceNetworks" : {
                    "objects" : [ {
                      "type" : "Host",
                      "id" : "sourceNetworkObjectUUID",
                      "name" : "Host1"
                    } ]
                  },
                  "destinationNetworks" : {
                    "objects" : [ {
                      "type" : "Host",
                      "id" : "destinationNetworkUUID",
                      "name" : "Host1"
                    } ]
                  },
                  "logBegin" : false,
                  "logEnd" : false,
                  "sourcePorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "AOL",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "destinationPorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "Bittorrent",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "timeRangeObjects" : [ {
                    "type" : "TimeRange",
                    "name" : "TestTimeRange",
                    "id" : "TimeRangeUUID"
                  } ],
                  "snmpConfig" : {
                    "id" : "snmpConfigUuid",
                    "name" : "snmp_alert1",
                    "type" : "SNMPAlert"
                  },
                  "syslogConfig" : {
                    "id" : "syslogConfigUuid",
                    "name" : "syslog_alert1",
                    "type" : "SyslogAlert"
                  },
                  "newComments" : [ "comment1", "comment2" ]
                },
                "Request example 2 : PUT /fmc_config/v1/domain/DomainUUID/policy/prefilterpolicies/containerUUID/prefilterrules/prefilterruleUUID1 ( Test PUT of Tunnel rule )" : {
                  "action" : "FASTPATH/ANALYZE/BLOCK",
                  "enabled" : false,
                  "type" : "PrefilterRule",
                  "name" : "TunnelRule2",
                  "sendEventsToFMC" : false,
                  "ruleType" : "TUNNEL",
                  "bidirectional" : true,
                  "id" : "prefilterruleUUID1",
                  "vlanTags" : {
                    "objects" : [ {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_1",
                      "id" : "VlanTagUUID1"
                    }, {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_2",
                      "id" : "VlanTagUUID2"
                    } ]
                  },
                  "sourceInterfaces" : {
                    "objects" : [ {
                      "name" : "External",
                      "id" : "SecurityInterfaceUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "destinationInterfaces" : {
                    "objects" : [ {
                      "name" : "Internal",
                      "id" : "SecurityInterfaceUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "sourceNetworks" : {
                    "objects" : [ {
                      "type" : "Host",
                      "id" : "sourceNetworkObjectUUID",
                      "name" : "Host1"
                    } ]
                  },
                  "destinationNetworks" : {
                    "objects" : [ {
                      "type" : "Host",
                      "id" : "destinationNetworkUUID",
                      "name" : "Host1"
                    } ]
                  },
                  "logBegin" : false,
                  "logEnd" : false,
                  "encapsulationPorts" : [ "GRE", "IP_IN_IP", "IPV6_IN_IP", "TEREDO" ],
                  "tunnelZone" : {
                    "objects" : [ {
                      "id" : "tunnelZoneUUID",
                      "type" : "TunnelTag",
                      "name" : "TunnelZone2"
                    } ]
                  },
                  "snmpConfig" : {
                    "id" : "snmpConfigUuid",
                    "name" : "snmp_alert1",
                    "type" : "SNMPAlert"
                  },
                  "syslogConfig" : {
                    "id" : "syslogConfigUuid",
                    "name" : "syslog_alert1",
                    "type" : "SyslogAlert"
                  },
                  "newComments" : [ "comment1", "comment2" ]
                },
                "Request example 3 : PUT /fmc_config/v1/domain/DomainUUID/policy/prefilterpolicies/containerUUID/prefilterrules?bulk=true ( PUT Bulk update of Prefilter rules )" : [ {
                  "action" : "ALLOW",
                  "enabled" : true,
                  "type" : "PrefilterRule",
                  "name" : "Rule1",
                  "sendEventsToFMC" : false,
                  "ruleType" : "PREFILTER",
                  "bidirectional" : false,
                  "logBegin" : false,
                  "logEnd" : false,
                  "vlanTags" : {
                    "objects" : [ {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_1",
                      "id" : "VlanTagUUID1"
                    }, {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_2",
                      "id" : "VlanTagUUID2"
                    } ]
                  },
                  "sourceInterfaces" : {
                    "objects" : [ {
                      "name" : "External",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "destinationInterfaces" : {
                    "objects" : [ {
                      "name" : "Internal",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "sourcePorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "AOL",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "destinationPorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "Bittorrent",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "snmpConfig" : {
                    "id" : "snmpConfigUuid",
                    "name" : "snmp_alert1",
                    "type" : "SNMPAlert"
                  },
                  "syslogConfig" : {
                    "id" : "syslogConfigUuid",
                    "name" : "syslog_alert1",
                    "type" : "SyslogAlert"
                  },
                  "newComments" : [ "comment1", "comment2" ]
                }, {
                  "action" : "ALLOW",
                  "enabled" : true,
                  "type" : "PrefilterRule",
                  "name" : "Rule2",
                  "sendEventsToFMC" : false,
                  "ruleType" : "PREFILTER",
                  "bidirectional" : false,
                  "logBegin" : false,
                  "logEnd" : false,
                  "vlanTags" : {
                    "objects" : [ {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_1",
                      "id" : "VlanTagUUID1"
                    }, {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_2",
                      "id" : "VlanTagUUID2"
                    } ]
                  },
                  "sourceInterfaces" : {
                    "objects" : [ {
                      "name" : "External",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "destinationInterfaces" : {
                    "objects" : [ {
                      "name" : "Internal",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "sourcePorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "AOL",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "destinationPorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "Bittorrent",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "snmpConfig" : {
                    "id" : "snmpConfigUuid",
                    "name" : "snmp_alert1",
                    "type" : "SNMPAlert"
                  },
                  "syslogConfig" : {
                    "id" : "syslogConfigUuid",
                    "name" : "syslog_alert1",
                    "type" : "SyslogAlert"
                  },
                  "newComments" : [ "comment1", "comment2" ]
                } ]
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/PrefilterRule"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the prefilter rule associated with the specified policy ID and rule ID. If no ID is specified, retrieves list of all prefilter rules associated with the specified policy ID. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteMultiplePrefilterRule",
        "parameters" : [ {
          "name" : "bulk",
          "in" : "query",
          "description" : "This parameter specifies that bulk operation is being used in the query. This parameter is required for bulk rule operations.",
          "required" : true,
          "type" : "boolean"
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "To be used in conjunction with <code>bulk=true</code> for bulk deletion. Value is of format (including quotes): <code>\"ids:id1,id2,...\"</code>.<br/><code>ids</code> is a comma-separated list of rule IDs to be deleted.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The input prefilter rule model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PrefilterRule"
          }
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PrefilterRule"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /fmc_config/v1/domain/DomainUUID/policy/prefilterpolicies/containerUUID/prefilterrules/prefilterruleUUID ( Test DELETE of Prefilter rule )" : {
                  "metadata" : {
                    "readOnly" : {
                      "state" : true,
                      "reason" : "SYSTEM"
                    }
                  },
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/policy/prefilterpolicies/containerUUID/prefilterrules/prefilterruleUUID"
                  },
                  "action" : "FASTPATH/ANALYZE/BLOCK",
                  "enabled" : true,
                  "type" : "PrefilterRule",
                  "name" : "Rule2",
                  "sendEventsToFMC" : false,
                  "ruleType" : "TUNNEL/PREFILTER",
                  "bidirectional" : false,
                  "id" : "prefilterruleUUID",
                  "sourceNetworks" : {
                    "objects" : [ {
                      "type" : "Host",
                      "id" : "sourceNetworkObjectUUID",
                      "name" : "Host1"
                    } ]
                  },
                  "destinationNetworks" : {
                    "objects" : [ {
                      "type" : "Host",
                      "id" : "destinationNetworkUUID",
                      "name" : "Host1"
                    } ]
                  },
                  "vlanTags" : {
                    "objects" : [ {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_1",
                      "id" : "VlanTagUUID"
                    } ]
                  },
                  "sourceInterfaces" : {
                    "objects" : [ {
                      "name" : "External",
                      "id" : "SecurityInterfaceUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "destinationInterfaces" : {
                    "objects" : [ {
                      "name" : "Internal",
                      "id" : "SecurityInterfaceUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "logBegin" : false,
                  "logEnd" : false,
                  "sourcePorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "AOL",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "destinationPorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "Bittorrent",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/prefilterpolicies/{containerUUID}/prefilterrules/{objectId}" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the prefilter rule associated with the specified policy ID and rule ID. If no ID is specified, retrieves list of all prefilter rules associated with the specified policy ID.**",
        "operationId" : "getPrefilterRule",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a prefilter rule.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PrefilterRule"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/policy/prefilterpolicies/containerUUID/prefilterrules/prefilterruleUUID ( Success: Test GET method for Prefilter rule )" : {
                  "metadata" : {
                    "readOnly" : {
                      "state" : true,
                      "reason" : "SYSTEM"
                    }
                  },
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/policy/prefilterpolicies/containerUUID/prefilterrules/prefilterruleUUID"
                  },
                  "action" : "FASTPATH/ANALYZE/BLOCK",
                  "enabled" : true,
                  "type" : "PrefilterRule",
                  "name" : "Rule2",
                  "sendEventsToFMC" : false,
                  "ruleType" : "PREFILTER",
                  "bidirectional" : false,
                  "id" : "prefilterruleUUID",
                  "vlanTags" : {
                    "objects" : [ {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_1",
                      "id" : "vlanTagUUID"
                    } ]
                  },
                  "timeRangeObjects" : [ {
                    "type" : "TimeRange",
                    "name" : "TestTimeRange",
                    "id" : "TimeRangeUUID"
                  } ],
                  "sourceInterfaces" : {
                    "objects" : [ {
                      "name" : "External",
                      "id" : "sourceInterfaceObjectUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "destinationInterfaces" : {
                    "objects" : [ {
                      "name" : "Internal",
                      "id" : "destinationInterfaceUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "logBegin" : false,
                  "logEnd" : false,
                  "sourcePorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "AOL",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "destinationPorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "Bittorrent",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "sourceNetworks" : {
                    "objects" : [ {
                      "type" : "Host",
                      "id" : "sourceNetworkObjectUUID",
                      "name" : "Host1"
                    } ]
                  },
                  "destinationNetworks" : {
                    "objects" : [ {
                      "type" : "Host",
                      "id" : "destinationNetworkUUID",
                      "name" : "Host1"
                    } ]
                  }
                },
                "Response Example 2 :GET /fmc_config/v1/domain/DomainUUID/policy/prefilterpolicies/containerUUID/prefilterrules/prefilterruleUUID ( Success: Test GET method for Tunnel rule )" : {
                  "metadata" : {
                    "readOnly" : {
                      "state" : true,
                      "reason" : "SYSTEM"
                    }
                  },
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/policy/prefilterpolicies/containerUUID/prefilterrules/prefilterruleUUID"
                  },
                  "action" : "FASTPATH/ANALYZE/BLOCK",
                  "enabled" : true,
                  "type" : "PrefilterRule",
                  "name" : "TunnelRule2",
                  "sendEventsToFMC" : false,
                  "ruleType" : "TUNNEL",
                  "bidirectional" : true,
                  "id" : "prefilterruleUUID",
                  "vlanTags" : {
                    "objects" : [ {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_1",
                      "id" : "vlanTagUUID"
                    } ]
                  },
                  "sourceInterfaces" : {
                    "objects" : [ {
                      "name" : "External",
                      "id" : "sourceInterfaceObjectUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "destinationInterfaces" : {
                    "objects" : [ {
                      "name" : "Internal",
                      "id" : "destinationInterfaceUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "logBegin" : false,
                  "logEnd" : false,
                  "encapsulationPorts" : [ "GRE", "IP_IN_IP", "IPV6_IN_IP", "TEREDO" ],
                  "tunnelZone" : {
                    "objects" : [ {
                      "id" : "tunnelZoneUUID",
                      "type" : "TunnelTag",
                      "name" : "TunnelZone1"
                    } ]
                  },
                  "commentHistoryList" : [ {
                    "user" : {
                      "name" : "user1",
                      "type" : "User"
                    },
                    "date" : "utc-millisec",
                    "comment" : "Prefilter Rule Comments"
                  } ],
                  "sourceNetworks" : {
                    "objects" : [ {
                      "type" : "Host",
                      "id" : "sourceNetworkObjectUUID",
                      "name" : "Host1"
                    } ]
                  },
                  "destinationNetworks" : {
                    "objects" : [ {
                      "type" : "Host",
                      "id" : "destinationNetworkUUID",
                      "name" : "Host1"
                    } ]
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the prefilter rule associated with the specified policy ID and rule ID. If no ID is specified, retrieves list of all prefilter rules associated with the specified policy ID. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updatePrefilterRule",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a prefilter rule.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The input prefilter rule model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PrefilterRule"
          }
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PrefilterRule"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_config/v1/domain/DomainUUID/policy/prefilterpolicies/containerUUID/prefilterrules/prefilterruleUUID1 ( Test PUT of Prefilter rule )" : {
                  "action" : "FASTPATH/ANALYZE/BLOCK",
                  "enabled" : false,
                  "type" : "PrefilterRule",
                  "name" : "Rule2",
                  "sendEventsToFMC" : false,
                  "ruleType" : "PREFILTER",
                  "bidirectional" : false,
                  "id" : "prefilterruleUUID1",
                  "vlanTags" : {
                    "objects" : [ {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_1",
                      "id" : "VlanTagUUID1"
                    }, {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_2",
                      "id" : "VlanTagUUID2"
                    } ]
                  },
                  "sourceInterfaces" : {
                    "objects" : [ {
                      "name" : "External",
                      "id" : "SecurityInterfaceUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "destinationInterfaces" : {
                    "objects" : [ {
                      "name" : "Internal",
                      "id" : "SecurityInterfaceUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "sourceNetworks" : {
                    "objects" : [ {
                      "type" : "Host",
                      "id" : "sourceNetworkObjectUUID",
                      "name" : "Host1"
                    } ]
                  },
                  "destinationNetworks" : {
                    "objects" : [ {
                      "type" : "Host",
                      "id" : "destinationNetworkUUID",
                      "name" : "Host1"
                    } ]
                  },
                  "logBegin" : false,
                  "logEnd" : false,
                  "sourcePorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "AOL",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "destinationPorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "Bittorrent",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "timeRangeObjects" : [ {
                    "type" : "TimeRange",
                    "name" : "TestTimeRange",
                    "id" : "TimeRangeUUID"
                  } ],
                  "snmpConfig" : {
                    "id" : "snmpConfigUuid",
                    "name" : "snmp_alert1",
                    "type" : "SNMPAlert"
                  },
                  "syslogConfig" : {
                    "id" : "syslogConfigUuid",
                    "name" : "syslog_alert1",
                    "type" : "SyslogAlert"
                  },
                  "newComments" : [ "comment1", "comment2" ]
                },
                "Request example 2 : PUT /fmc_config/v1/domain/DomainUUID/policy/prefilterpolicies/containerUUID/prefilterrules/prefilterruleUUID1 ( Test PUT of Tunnel rule )" : {
                  "action" : "FASTPATH/ANALYZE/BLOCK",
                  "enabled" : false,
                  "type" : "PrefilterRule",
                  "name" : "TunnelRule2",
                  "sendEventsToFMC" : false,
                  "ruleType" : "TUNNEL",
                  "bidirectional" : true,
                  "id" : "prefilterruleUUID1",
                  "vlanTags" : {
                    "objects" : [ {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_1",
                      "id" : "VlanTagUUID1"
                    }, {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_2",
                      "id" : "VlanTagUUID2"
                    } ]
                  },
                  "sourceInterfaces" : {
                    "objects" : [ {
                      "name" : "External",
                      "id" : "SecurityInterfaceUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "destinationInterfaces" : {
                    "objects" : [ {
                      "name" : "Internal",
                      "id" : "SecurityInterfaceUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "sourceNetworks" : {
                    "objects" : [ {
                      "type" : "Host",
                      "id" : "sourceNetworkObjectUUID",
                      "name" : "Host1"
                    } ]
                  },
                  "destinationNetworks" : {
                    "objects" : [ {
                      "type" : "Host",
                      "id" : "destinationNetworkUUID",
                      "name" : "Host1"
                    } ]
                  },
                  "logBegin" : false,
                  "logEnd" : false,
                  "encapsulationPorts" : [ "GRE", "IP_IN_IP", "IPV6_IN_IP", "TEREDO" ],
                  "tunnelZone" : {
                    "objects" : [ {
                      "id" : "tunnelZoneUUID",
                      "type" : "TunnelTag",
                      "name" : "TunnelZone2"
                    } ]
                  },
                  "snmpConfig" : {
                    "id" : "snmpConfigUuid",
                    "name" : "snmp_alert1",
                    "type" : "SNMPAlert"
                  },
                  "syslogConfig" : {
                    "id" : "syslogConfigUuid",
                    "name" : "syslog_alert1",
                    "type" : "SyslogAlert"
                  },
                  "newComments" : [ "comment1", "comment2" ]
                },
                "Request example 3 : PUT /fmc_config/v1/domain/DomainUUID/policy/prefilterpolicies/containerUUID/prefilterrules?bulk=true ( PUT Bulk update of Prefilter rules )" : [ {
                  "action" : "ALLOW",
                  "enabled" : true,
                  "type" : "PrefilterRule",
                  "name" : "Rule1",
                  "sendEventsToFMC" : false,
                  "ruleType" : "PREFILTER",
                  "bidirectional" : false,
                  "logBegin" : false,
                  "logEnd" : false,
                  "vlanTags" : {
                    "objects" : [ {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_1",
                      "id" : "VlanTagUUID1"
                    }, {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_2",
                      "id" : "VlanTagUUID2"
                    } ]
                  },
                  "sourceInterfaces" : {
                    "objects" : [ {
                      "name" : "External",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "destinationInterfaces" : {
                    "objects" : [ {
                      "name" : "Internal",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "sourcePorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "AOL",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "destinationPorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "Bittorrent",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "snmpConfig" : {
                    "id" : "snmpConfigUuid",
                    "name" : "snmp_alert1",
                    "type" : "SNMPAlert"
                  },
                  "syslogConfig" : {
                    "id" : "syslogConfigUuid",
                    "name" : "syslog_alert1",
                    "type" : "SyslogAlert"
                  },
                  "newComments" : [ "comment1", "comment2" ]
                }, {
                  "action" : "ALLOW",
                  "enabled" : true,
                  "type" : "PrefilterRule",
                  "name" : "Rule2",
                  "sendEventsToFMC" : false,
                  "ruleType" : "PREFILTER",
                  "bidirectional" : false,
                  "logBegin" : false,
                  "logEnd" : false,
                  "vlanTags" : {
                    "objects" : [ {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_1",
                      "id" : "VlanTagUUID1"
                    }, {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_2",
                      "id" : "VlanTagUUID2"
                    } ]
                  },
                  "sourceInterfaces" : {
                    "objects" : [ {
                      "name" : "External",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "destinationInterfaces" : {
                    "objects" : [ {
                      "name" : "Internal",
                      "id" : "SecurityZoneUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "sourcePorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "AOL",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "destinationPorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "Bittorrent",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "snmpConfig" : {
                    "id" : "snmpConfigUuid",
                    "name" : "snmp_alert1",
                    "type" : "SNMPAlert"
                  },
                  "syslogConfig" : {
                    "id" : "syslogConfigUuid",
                    "name" : "syslog_alert1",
                    "type" : "SyslogAlert"
                  },
                  "newComments" : [ "comment1", "comment2" ]
                } ]
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/PrefilterRule"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves, deletes, creates, or modifies the prefilter rule associated with the specified policy ID and rule ID. If no ID is specified, retrieves list of all prefilter rules associated with the specified policy ID. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deletePrefilterRule",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a prefilter rule.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PrefilterRule"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /fmc_config/v1/domain/DomainUUID/policy/prefilterpolicies/containerUUID/prefilterrules/prefilterruleUUID ( Test DELETE of Prefilter rule )" : {
                  "metadata" : {
                    "readOnly" : {
                      "state" : true,
                      "reason" : "SYSTEM"
                    }
                  },
                  "links" : {
                    "self" : "/fmc_config/v1/domain/DomainUUID/policy/prefilterpolicies/containerUUID/prefilterrules/prefilterruleUUID"
                  },
                  "action" : "FASTPATH/ANALYZE/BLOCK",
                  "enabled" : true,
                  "type" : "PrefilterRule",
                  "name" : "Rule2",
                  "sendEventsToFMC" : false,
                  "ruleType" : "TUNNEL/PREFILTER",
                  "bidirectional" : false,
                  "id" : "prefilterruleUUID",
                  "sourceNetworks" : {
                    "objects" : [ {
                      "type" : "Host",
                      "id" : "sourceNetworkObjectUUID",
                      "name" : "Host1"
                    } ]
                  },
                  "destinationNetworks" : {
                    "objects" : [ {
                      "type" : "Host",
                      "id" : "destinationNetworkUUID",
                      "name" : "Host1"
                    } ]
                  },
                  "vlanTags" : {
                    "objects" : [ {
                      "type" : "VlanTag",
                      "name" : "vlan_tag_1",
                      "id" : "VlanTagUUID"
                    } ]
                  },
                  "sourceInterfaces" : {
                    "objects" : [ {
                      "name" : "External",
                      "id" : "SecurityInterfaceUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "destinationInterfaces" : {
                    "objects" : [ {
                      "name" : "Internal",
                      "id" : "SecurityInterfaceUUID",
                      "type" : "SecurityZone"
                    } ]
                  },
                  "logBegin" : false,
                  "logEnd" : false,
                  "sourcePorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "AOL",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  },
                  "destinationPorts" : {
                    "objects" : [ {
                      "type" : "ProtocolPortObject",
                      "name" : "Bittorrent",
                      "id" : "ProtocolPortObjectUUID"
                    } ]
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/prefilterpolicies/{objectId}" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves prefilter policy associated with the specified ID. Also, retrieves list of all prefilter policies.**",
        "operationId" : "getPrefilterPolicy",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for prefilter policy.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PrefilterPolicy"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/DomainUUID/policy/prefilterpolicies ( Test GET Success of Prefilter policy )" : {
                  "name" : "PrefilterPolicy1",
                  "id" : "PrefilterPolicyUUID",
                  "type" : "PrefilterPolicy",
                  "description" : "Description of a Prefilter Policy",
                  "rules" : {
                    "refType" : "list",
                    "type" : "PrefilterRule",
                    "links" : {
                      "self" : "URL for Prefilter Rules"
                    }
                  },
                  "defaultAction" : {
                    "type" : "PrefilterPolicyDefaultAction",
                    "id" : "PrefilterPolicyDefaultActionUUID",
                    "action" : "BLOCK_TUNNELS/ANALYZE_TUNNELS",
                    "links" : {
                      "self" : "URL for Prefilter Policy Default Action"
                    }
                  },
                  "metadata" : {
                    "domain" : {
                      "name" : "Global",
                      "id" : "DomainUUID",
                      "type" : "Domain"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves prefilter policy associated with the specified ID. Also, retrieves list of all prefilter policies. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updatePrefilterPolicy",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for prefilter policy.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Input representation of prefilter policy.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PrefilterPolicy"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PrefilterPolicy"
            },
            "examples" : { }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/PrefilterPolicy"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves prefilter policy associated with the specified ID. Also, retrieves list of all prefilter policies. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deletePrefilterPolicy",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for prefilter policy.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PrefilterPolicy"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /fmc_config/v1/domain/DomainUUID/policy/prefilterpolicies ( Test DELETE success of Prefilter policy )" : {
                  "type" : "PrefilterPolicy",
                  "name" : "PrefilterPolicy1",
                  "description" : "policy to test FMC implementation"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/ravpns" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves the FTD RA VPN topology associated with the specified ID. If no ID is specified for a GET, retrieves list of all FTD RA VPN topologies.**",
        "operationId" : "getAllFTDRAVpnModel",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDRAVpnModelListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/DomainUUID/policy/ravpns/containerUUID/ravpnaddressassignments ( Success: Test GET ALL success )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/policy/ravpns/containerUUID/advancedsettings?offset=0&limit=1&expanded=false"
                  },
                  "items" : [ {
                    "id" : "RA-VPNUUID",
                    "name" : "RA-VPN",
                    "type" : "RaVpn",
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUUID/policy/ravpns"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/DomainUUID/policy/ravpns/containerUUID/ravpnaddressassignments?expanded=true ( Success: Test GET ALL success with expanded=true )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUUID/policy/ravpns/containerUUID/ravpnaddressassignments?offset=0&limit=1&expanded=true"
                  },
                  "items" : [ {
                    "id" : "RaVpnNameUUID",
                    "type" : "RaVpn",
                    "name" : "RaVpnName",
                    "description" : "RaVpn-Description",
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUUID/policy/ravpns"
                    },
                    "accessInterfaceSettings" : {
                      "interfaceSettings" : [ {
                        "accessInterface" : {
                          "id" : "outsideInterfaceZoneUUID",
                          "type" : "SecurityZone",
                          "name" : "outsideInterfaceZone"
                        },
                        "enableIPSecIkev2" : true,
                        "enableSSL" : true,
                        "enableDTLS" : true,
                        "configureInterfaceIDCertificate" : false
                      } ],
                      "allowConnectionProfileSelection" : true,
                      "webPort" : 1094,
                      "dtlsPort" : 1095,
                      "sslIdCertificate" : {
                        "id" : "sslCert1UUID",
                        "type" : "CertEnrollment",
                        "name" : "sslCert1"
                      },
                      "ipsecIdCertificate" : {
                        "id" : "ipsecCert1UUID",
                        "type" : "CertEnrollment",
                        "name" : "ipsecCert1"
                      },
                      "bypassACPolicyForDecryptTraffic" : true
                    },
                    "groupPolicies" : [ {
                      "id" : "grouppolicy1UUID",
                      "type" : "GroupPolicy",
                      "name" : "grouppolicy1"
                    } ],
                    "anyconnectClientImages" : [ {
                      "anyconnectImage" : {
                        "id" : "windowsImage47UUID",
                        "type" : "AnyconnectPackage",
                        "name" : "windowsImage47"
                      },
                      "operatingSystem" : "WINDOWS",
                      "order" : 1
                    } ],
                    "ravpnConnectionProfiles" : [ {
                      "refType" : "list",
                      "type" : "RaVpnConnectionProfile",
                      "links" : {
                        "self" : "https://fmcip/api/fmc_config/v1/domain/DomainUUID/policy/ravpns/ravpnUUID/ravpnconnectionprofiles"
                      }
                    } ],
                    "addressAssignmentSettings" : {
                      "id" : "005056A9-9F80-0ed3-0000-008589935160",
                      "type" : "RaVpnAddressAssignmentSetting",
                      "links" : {
                        "self" : "https://fmcip/api/fmc_config/v1/domain/DomainUUID/policy/ravpns/ravpnUUID/addressassignmentsettings/addressassignmentsettingUUID"
                      }
                    },
                    "certificateMapSettings" : {
                      "id" : "005056A9-7483-0ed3-0000-012884902862",
                      "type" : "RaVpnCertificateMapSetting",
                      "links" : {
                        "self" : "https://fmcip/api/fmc_config/v1/domain/DomainUUID/policy/ravpns/ravpnUUID/certificatemapsettings/certificatemapsettingUUID"
                      }
                    },
                    "metadata" : { }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/ravpns/{containerUUID}/addressassignmentsettings" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves Address Assignment Setting inside a VPN RA Topology. If no ID is specified for a GET, retrieves list containing a single Address Assignment Setting entry of the topology.**",
        "operationId" : "getAllFTDRAVpnAddressAssignmentSetting",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDRAVpnAddressAssignmentSettingListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/DomainUUID/policy/ravpns/containerUUID/ravpnaddressassignments ( Success: Test GET ALL success )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/policy/ravpns/containerUUID/advancedsettings?offset=0&limit=1&expanded=false"
                  },
                  "items" : [ {
                    "id" : "005056A9-097E-0ed3-0000-021474836554",
                    "type" : "RaVpnAddressAssignmentSetting",
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUUID/policy/ravpns/containerUUID/ravpnaddressassignments/ravpnaddressassignmentUUID"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/DomainUUID/policy/ravpns/containerUUID/ravpnaddressassignments?expanded=true ( Success: Test GET ALL success with expanded=true )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUUID/policy/ravpns/containerUUID/ravpnaddressassignments?offset=0&limit=1&expanded=true"
                  },
                  "items" : [ {
                    "id" : "005056A9-097E-0ed3-0000-021474836554",
                    "type" : "RaVpnAddressAssignmentSetting",
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUUID/policy/ravpns/containerUUID/ravpnaddressassignments/ravpnaddressassignmentUUID"
                    },
                    "useAuthorizationServerForIPv4" : true,
                    "useDHCP" : true,
                    "useInternalAddressPoolForIPv4" : true,
                    "IPAddressReuseInterval" : 10,
                    "useAuthorizationServerForIPv6" : true,
                    "useInternalAddressPoolForIPv6" : true
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/ravpns/{containerUUID}/addressassignmentsettings/{objectId}" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves Address Assignment Setting inside a VPN RA Topology. If no ID is specified for a GET, retrieves list containing a single Address Assignment Setting entry of the topology.**",
        "operationId" : "getFTDRAVpnAddressAssignmentSetting",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for Address Assignment Setting in a RA VPN topology.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDRAVpnAddressAssignmentSetting"
            },
            "examples" : { }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/ravpns/{containerUUID}/certificatemapsettings" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves Certificate Map Setting inside a VPN RA Topology. If no ID is specified for a GET, retrieves list containing a single Certificate Map Setting entry of the topology.**",
        "operationId" : "getAllFTDRAVpnCertificateMapSettings",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDRAVpnCertificateMapSettingsListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/DomainUUID/policy/ravpns/containerUUID/ravpncertificatemapsettings ( Success: Test GET ALL success )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/policy/ravpns/containerUUID/advancedsettings?offset=0&limit=1&expanded=false"
                  },
                  "items" : [ {
                    "id" : "005056A9-097E-0ed3-0000-021474836554",
                    "type" : "RaVpnCertificateMapSetting",
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUUID/policy/ravpns/containerUUID/ravpncertificatemapsettings/ravpncertificatemapsettingUUID"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/DomainUUID/policy/ravpns/containerUUID/ravpncertificatemapsettings?expanded=true ( Success: Test GET ALL success with expanded=true )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUUID/policy/ravpns/containerUUID/ravpncertificatemapsettings?offset=0&limit=1&expanded=true"
                  },
                  "items" : [ {
                    "id" : "005056A9-097E-0ed3-0000-021474836554",
                    "type" : "RaVpnCertificateMapSetting",
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/domainUUID/policy/ravpns/containerUUID/ravpncertificatemapsettings/ravpncertificatemapsettingUUID"
                    },
                    "useGroupURL" : true,
                    "enableCertificateToConnectionProfileMapping" : true,
                    "certificateToConnectionProfileMap" : [ {
                      "certificateMap" : {
                        "id" : "certMapNameUUID",
                        "type" : "CertificateMap",
                        "name" : "certMapName"
                      },
                      "connectionProfile" : {
                        "id" : "Bangalore-SSLUUID",
                        "type" : "RaVpnConnectionProfile",
                        "name" : "Bangalore-SSL"
                      }
                    } ]
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/ravpns/{containerUUID}/certificatemapsettings/{objectId}" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves Certificate Map Setting inside a VPN RA Topology. If no ID is specified for a GET, retrieves list containing a single Certificate Map Setting entry of the topology.**",
        "operationId" : "getFTDRAVpnCertificateMapSettings",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for Certificate Map Setting in a RA VPN topology.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDRAVpnCertificateMapSettings"
            },
            "examples" : { }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/ravpns/{containerUUID}/connectionprofiles" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves Connection Profile data inside a VPN RA Topology. If no ID is specified for a GET, retrieves list containing a single Connection Profile entry of the topology.**",
        "operationId" : "getAllFTDRAVpnConnectionProfileModel",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDRAVpnConnectionProfileModelListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/DomainUUID/policy/ravpns/containerUUID/ravpnaddressassignments ( Success: Test GET ALL success )" : {
                  "links" : {
                    "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/policy/ravpns/containerUUID/connectionprofiles?offset=0&limit=1&expanded=false"
                  },
                  "items" : [ {
                    "name" : "PolicyA",
                    "id" : "00505681-B560-0ed3-0000-008589934853",
                    "type" : "RaVpnConnectionProfile",
                    "links" : {
                      "self" : "<fmc_url>/api/fmc_config/v1/domain/DomainUUID/policy/ravpns/containerUUID/connectionprofiles"
                    },
                    "metadata" : {
                      "parentPolicy" : {
                        "name" : "PolicyA",
                        "id" : "00505681-B560-0ed3-0000-008589934728",
                        "type" : "RAVpn"
                      },
                      "timestamp" : 1604495697993,
                      "lastUser" : {
                        "name" : "admin"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "e276abec-e0f2-11e3-8169-6d9ed49b625f",
                        "type" : "Domain"
                      }
                    },
                    "ipv4AddressPool" : [ {
                      "type" : "IPv4AddressPool",
                      "overridable" : false,
                      "name" : "1.1.1.1",
                      "id" : "00505681-B560-0ed3-0000-012884901896"
                    } ],
                    "ipv6AddressPool" : [ {
                      "type" : "IPv6AddressPool",
                      "numberOfAddresses" : 0,
                      "overridable" : false,
                      "name" : "ipv6Test",
                      "id" : "00505681-B560-0ed3-0000-042949672967"
                    } ],
                    "groupAlias" : [ {
                      "aliasName" : "PolicyA",
                      "enabled" : true
                    }, {
                      "aliasName" : "PolicyB",
                      "enabled" : false
                    } ],
                    "groupUrl" : [ {
                      "aliasUrl" : {
                        "name" : "UrlObject",
                        "id" : "00505681-B560-0ed3-0000-064424509447",
                        "type" : "URLObject"
                      },
                      "enabled" : false
                    }, {
                      "aliasUrl" : {
                        "name" : "UrlObject",
                        "id" : "00505681-B560-0ed3-0000-064424509447",
                        "type" : "URLObject"
                      },
                      "enabled" : true
                    } ],
                    "certificateUsernameSettings" : {
                      "mapPrimaryField" : "COMMON_NAME",
                      "mapSecondaryField" : "ORGANIZATION_UNIT",
                      "mapEntireDNAsUsername" : false,
                      "prefillUsernameFromCertificate" : false,
                      "hideUsername" : false
                    },
                    "secondaryAuthenticationSettings" : {
                      "promptUsername" : true,
                      "usePrimaryUsername" : false,
                      "mapUsernameFromCertificate" : false,
                      "useSecondaryUsernameforSession" : true
                    },
                    "accountingServer" : {
                      "name" : "RadServer",
                      "id" : "00505681-B560-0ed3-0000-008589934616",
                      "type" : "AAAGroupServer"
                    },
                    "authorizationServer" : {
                      "name" : "RadServer",
                      "id" : "00505681-B560-0ed3-0000-008589934616",
                      "type" : "AAAGroupServer"
                    },
                    "primaryAuthenticationServer" : {
                      "name" : "Realm",
                      "id" : "bb0d11ca-1d1f-11eb-ae41-95cfd3b68e35",
                      "type" : "IdentityRealm"
                    },
                    "authenticationMethod" : "AAA_ONLY",
                    "groupPolicy" : {
                      "name" : "DfltGrpPolicy",
                      "id" : "00505681-B560-0ed3-0000-000000010001",
                      "type" : "ASA_Group_Policy"
                    },
                    "allowConnectionOnlyIfAuthorized" : true,
                    "stripRealmFromUsername" : true,
                    "stripGroupFromUsername" : true,
                    "enablePasswordManagement" : true,
                    "passwordExpirationNotificationPeriod" : 14,
                    "notifyUserOnPasswordExpiryDay" : false,
                    "dhcpServersForAddressAssignment" : [ {
                      "name" : "dhcp1Test",
                      "id" : "00505681-B560-0ed3-0000-021474836489",
                      "type" : "NetworkObject"
                    }, {
                      "name" : "dhcpTest",
                      "id" : "00505681-B560-0ed3-0000-012884901932",
                      "type" : "NetworkObject"
                    } ],
                    "enableMultipleCertificateAuthentication" : false
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/ravpns/{containerUUID}/connectionprofiles/{objectId}" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves Connection Profile data inside a VPN RA Topology. If no ID is specified for a GET, retrieves list containing a single Connection Profile entry of the topology.**",
        "operationId" : "getFTDRAVpnConnectionProfileModel",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for Connection Profile in a RA VPN topology.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDRAVpnConnectionProfileModel"
            },
            "examples" : { }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/ravpns/{objectId}" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves the FTD RA VPN topology associated with the specified ID. If no ID is specified for a GET, retrieves list of all FTD RA VPN topologies.**",
        "operationId" : "getFTDRAVpnModel",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Identifier for FTD RA VPN topology.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FTDRAVpnModel"
            },
            "examples" : { }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/snmpalerts" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves the SNMP alert object associated with the specified ID. If no ID is specified, retrieves list of all SNMP alert objects.**",
        "operationId" : "getAllSNMPConfig",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/SNMPConfigListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/domainUUID/policy/snmpalerts ( GET ALL SNMP alerts without any query )" : {
                  "links" : {
                    "self" : "https://somehost.cisco.com/api/fmc_config/v1/domain/domainUUID/policy/snmpalerts?offset=0&limit=3"
                  },
                  "items" : [ {
                    "name" : "Test-SNMP-Global-v2",
                    "id" : "SNMP-alert-UUID-1",
                    "type" : "SNMPAlert",
                    "links" : {
                      "self" : "https://somehost.cisco.com/api/fmc_config/v1/domain/domainUUID/policy/snmpalerts/SNMP-alert-UUID-1"
                    }
                  }, {
                    "name" : "Test-SNMP-TestDomain-v1",
                    "id" : "SNMP-alert-UUID-2",
                    "type" : "SNMPAlert",
                    "links" : {
                      "self" : "https://somehost.cisco.com/api/fmc_config/v1/domain/domainUUID/policy/snmpalerts/SNMP-alert-UUID-2"
                    }
                  }, {
                    "name" : "Test-SNMP-TestDomain-v3",
                    "id" : "SNMP-alert-UUID-3",
                    "type" : "SNMPAlert",
                    "links" : {
                      "self" : "https://somehost.cisco.com/api/fmc_config/v1/domain/domainUUID/policy/snmpalerts/SNMP-alert-UUID-3"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 3,
                    "count" : 3,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/domainUUID/policy/snmpalerts?expanded=true ( GET ALL SNMP alerts with expanded=true )" : {
                  "links" : {
                    "self" : "https://somehost.cisco.com/api/fmc_config/v1/domain/domainUUID/policy/snmpalerts?offset=0&limit=3"
                  },
                  "items" : [ {
                    "name" : "Test-SNMP-Global-v2",
                    "id" : "SNMP-alert-UUID-1",
                    "type" : "SNMPAlert",
                    "version" : "2.0",
                    "links" : {
                      "self" : "https://somehost.cisco.com/api/fmc_config/v1/domain/domainUUID/policy/snmpalerts/SNMP-alert-UUID-1"
                    },
                    "metadata" : {
                      "readOnly" : {
                        "state" : false
                      },
                      "timestamp" : 1460056664,
                      "lastUser" : {
                        "name" : "admin",
                        "id" : "User-UUID",
                        "type" : "user"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "Global-domain-UUID",
                        "type" : "domain"
                      }
                    }
                  }, {
                    "name" : "Test-SNMP-TestDomain-v1",
                    "id" : "SNMP-alert-UUID-2",
                    "type" : "SNMPAlert",
                    "version" : "1.0",
                    "links" : {
                      "self" : "https://somehost.cisco.com/api/fmc_config/v1/domain/domainUUID/policy/snmpalerts/SNMP-alert-UUID-2"
                    },
                    "metadata" : {
                      "readOnly" : {
                        "state" : true
                      },
                      "timestamp" : 1460057664,
                      "lastUser" : {
                        "name" : "admin",
                        "id" : "User-UUID",
                        "type" : "user"
                      },
                      "domain" : {
                        "name" : "TestDomain",
                        "id" : "domainUUID",
                        "type" : "domain"
                      }
                    }
                  }, {
                    "name" : "Test-SNMP-TestDomain-v3",
                    "id" : "SNMP-alert-UUID-3",
                    "type" : "SNMPAlert",
                    "version" : "3.0",
                    "links" : {
                      "self" : "https://somehost.cisco.com/api/fmc_config/v1/domain/domainUUID/policy/snmpalerts/SNMP-alert-UUID-3"
                    },
                    "metadata" : {
                      "readOnly" : {
                        "state" : true
                      },
                      "timestamp" : 1460058664,
                      "lastUser" : {
                        "name" : "admin",
                        "id" : "User-UUID",
                        "type" : "user"
                      },
                      "domain" : {
                        "name" : "TestDomain",
                        "id" : "domainUUID",
                        "type" : "domain"
                      }
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 3,
                    "count" : 3,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/snmpalerts/{objectId}" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves the SNMP alert object associated with the specified ID. If no ID is specified, retrieves list of all SNMP alert objects.**",
        "operationId" : "getSNMPConfig",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a SNMP alert.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/SNMPConfig"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/default/policy/snmpalerts/SNMP-alert-UUID-1 ( GET a SNMP alert given UUID )" : {
                  "name" : "Test-SNMP-Global-v2",
                  "id" : "SNMP-alert-UUID-1",
                  "type" : "SNMPAlert",
                  "version" : "2.0",
                  "links" : {
                    "self" : "https://somehost.cisco.com/api/fmc_config/v1/domain/default/policy/snmpalerts/SNMP-alert-UUID-1"
                  },
                  "metadata" : {
                    "readOnly" : {
                      "state" : true
                    },
                    "timestamp" : 1460056664,
                    "lastUser" : {
                      "name" : "admin",
                      "id" : "User-UUID",
                      "type" : "user"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "Global-domain-UUID",
                      "type" : "domain"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/syslogalerts" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves the syslog alert object associated with the specified ID. If no ID is specified, retrieves list of all syslog alert objects.**",
        "operationId" : "getAllSyslogConfig",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/SyslogConfigListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_config/v1/domain/domainUUID/policy/syslogalerts ( GET ALL syslog alerts without any query )" : {
                  "links" : {
                    "self" : "https://somehost.cisco.com/api/fmc_config/v1/domain/domainUUID/policy/syslogalerts?offset=0&limit=2"
                  },
                  "items" : [ {
                    "name" : "Test-Syslog-Global",
                    "id" : "Syslog-alert-UUID-1",
                    "type" : "SyslogAlert",
                    "links" : {
                      "self" : "https://somehost.cisco.com/api/fmc_config/v1/domain/domainUUID/policy/syslogalerts/Syslog-alert-UUID-1"
                    }
                  }, {
                    "name" : "Test-Syslog-Testdomain",
                    "id" : "Syslog-alert-UUID-2",
                    "type" : "SyslogAlert",
                    "links" : {
                      "self" : "https://somehost.cisco.com/api/fmc_config/v1/domain/domainUUID/policy/syslogalerts/Syslog-alert-UUID-2"
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_config/v1/domain/domainUUID/policy/syslogalerts?expanded=true ( GET ALL syslog alerts with expanded=true )" : {
                  "links" : {
                    "self" : "https://somehost.cisco.com/api/fmc_config/v1/domain/domainUUID/policy/syslogalerts?offset=0&limit=2"
                  },
                  "items" : [ {
                    "name" : "Test-Syslog-Global",
                    "id" : "Syslog-alert-UUID-1",
                    "type" : "SyslogAlert",
                    "links" : {
                      "self" : "https://somehost.cisco.com/api/fmc_config/v1/domain/domainUUID/policy/syslogalerts/Syslog-alert-UUID-1"
                    },
                    "metadata" : {
                      "readOnly" : {
                        "state" : false
                      },
                      "timestamp" : 1460056577,
                      "lastUser" : {
                        "name" : "admin",
                        "id" : "User-UUID",
                        "type" : "user"
                      },
                      "domain" : {
                        "name" : "Global",
                        "id" : "Global-domain-UUID",
                        "type" : "domain"
                      }
                    }
                  }, {
                    "name" : "Test-Syslog-Testdomain",
                    "id" : "Syslog-alert-UUID-2",
                    "type" : "SyslogAlert",
                    "links" : {
                      "self" : "https://somehost.cisco.com/api/fmc_config/v1/domain/domainUUID/policy/syslogalerts/Syslog-alert-UUID-2"
                    },
                    "metadata" : {
                      "readOnly" : {
                        "state" : true
                      },
                      "timestamp" : 1460057577,
                      "lastUser" : {
                        "name" : "admin",
                        "id" : "User-UUID",
                        "type" : "user"
                      },
                      "domain" : {
                        "name" : "TestDomain",
                        "id" : "domainUUID",
                        "type" : "domain"
                      }
                    }
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/policy/syslogalerts/{objectId}" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "**Retrieves the syslog alert object associated with the specified ID. If no ID is specified, retrieves list of all syslog alert objects.**",
        "operationId" : "getSyslogConfig",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of a syslog alert.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/SyslogConfig"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/domainUUID/policy/syslogalerts/Syslog-alert-UUID-1 ( GET syslog alert by given UUID )" : {
                  "name" : "Test-Syslog-Global",
                  "id" : "Syslog-alert-UUID-1",
                  "type" : "SyslogAlert",
                  "links" : {
                    "self" : "https://somehost.cisco.com/api/fmc_config/v1/domain/default/policy/syslogalerts/Syslog-alert-UUID-1"
                  },
                  "metadata" : {
                    "readOnly" : {
                      "state" : true
                    },
                    "timestamp" : 1460056577,
                    "lastUser" : {
                      "name" : "admin",
                      "id" : "User-UUID",
                      "type" : "user"
                    },
                    "domain" : {
                      "name" : "Global",
                      "id" : "Global-domain-UUID",
                      "type" : "domain"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/search/global" : {
      "get" : {
        "tags" : [ "Search" ],
        "description" : "**Search for objects and policies matching specified text or IP address**",
        "operationId" : "getGlobalSearch",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "Text or IP address used for filtering",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/GlobalSearchListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /api/fmc_config/v1/domain/default/search/global ( GET ALL search )" : {
                  "links" : {
                    "self" : "/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/search/global?offset=0&limit=4&filter=any&expanded=true"
                  },
                  "items" : [ {
                    "category" : "OBJECT",
                    "name" : "any",
                    "type" : "NetworkGroup",
                    "links" : {
                      "self" : "/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/object/networkgroups/69fa2a3a-4487-4e3c-816f-4098f684826e"
                    },
                    "metadata" : {
                      "domain" : {
                        "name" : "Global",
                        "id" : "e276abec-e0f2-11e3-8169-6d9ed49b625f",
                        "type" : "Domain"
                      }
                    },
                    "id" : "69fa2a3a-4487-4e3c-816f-4098f684826e"
                  }, {
                    "category" : "OBJECT",
                    "name" : "ANY",
                    "type" : "ISESecurityGroupTag",
                    "links" : {
                      "self" : "/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/object/isesecuritygrouptags/5fce8cce-aa67-11e5-816b-95eb712b72a1"
                    },
                    "metadata" : {
                      "domain" : {
                        "name" : "Global",
                        "id" : "e276abec-e0f2-11e3-8169-6d9ed49b625f",
                        "type" : "Domain"
                      }
                    },
                    "id" : "5fce8cce-aa67-11e5-816b-95eb712b72a1"
                  }, {
                    "category" : "OBJECT",
                    "value" : "0.0.0.0/0",
                    "name" : "any-ipv4",
                    "type" : "Network",
                    "links" : {
                      "self" : "/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/object/networks/cb7116e8-66a6-480b-8f9b-295191a0940a"
                    },
                    "metadata" : {
                      "domain" : {
                        "name" : "Global",
                        "id" : "e276abec-e0f2-11e3-8169-6d9ed49b625f",
                        "type" : "Domain"
                      }
                    },
                    "id" : "cb7116e8-66a6-480b-8f9b-295191a0940a"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 4,
                    "count" : 3,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/search/object" : {
      "get" : {
        "tags" : [ "Search" ],
        "description" : "**Search for objects matching specified text or IP address**",
        "operationId" : "getGlobalObjectSearch",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "Text or IP address used for filtering",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/GlobalObjectSearchListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/search/object?offset=0&limit=25&filter=any&expanded=true ( GET list of objects matching filter text \"any\" )" : {
                  "links" : {
                    "self" : "/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/search/object?offset=0&limit=25&filter=any&expanded=true"
                  },
                  "items" : [ {
                    "category" : "OBJECT",
                    "name" : "ANY",
                    "type" : "ISESecurityGroupTag",
                    "links" : {
                      "self" : "/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/object/isesecuritygrouptags/5fce8cce-aa67-11e5-816b-95eb712b72a1"
                    },
                    "metadata" : {
                      "domain" : {
                        "name" : "Global",
                        "id" : "e276abec-e0f2-11e3-8169-6d9ed49b625f",
                        "type" : "Domain"
                      }
                    },
                    "id" : "5fce8cce-aa67-11e5-816b-95eb712b72a1"
                  }, {
                    "category" : "OBJECT",
                    "name" : "any",
                    "type" : "NetworkGroup",
                    "links" : {
                      "self" : "/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/object/networkgroups/69fa2a3a-4487-4e3c-816f-4098f684826e"
                    },
                    "metadata" : {
                      "domain" : {
                        "name" : "Global",
                        "id" : "e276abec-e0f2-11e3-8169-6d9ed49b625f",
                        "type" : "Domain"
                      }
                    },
                    "id" : "69fa2a3a-4487-4e3c-816f-4098f684826e"
                  }, {
                    "category" : "OBJECT",
                    "value" : "0.0.0.0/0",
                    "name" : "any-ipv4",
                    "type" : "Network",
                    "links" : {
                      "self" : "/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/object/networks/cb7116e8-66a6-480b-8f9b-295191a0940a"
                    },
                    "metadata" : {
                      "domain" : {
                        "name" : "Global",
                        "id" : "e276abec-e0f2-11e3-8169-6d9ed49b625f",
                        "type" : "Domain"
                      }
                    },
                    "id" : "cb7116e8-66a6-480b-8f9b-295191a0940a"
                  }, {
                    "category" : "OBJECT",
                    "value" : "::/0",
                    "name" : "any-ipv6",
                    "type" : "Host",
                    "links" : {
                      "self" : "/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/object/hosts/dde11d62-288b-4b4c-92e0-1dad0496f14b"
                    },
                    "metadata" : {
                      "domain" : {
                        "name" : "Global",
                        "id" : "e276abec-e0f2-11e3-8169-6d9ed49b625f",
                        "type" : "Domain"
                      }
                    },
                    "id" : "dde11d62-288b-4b4c-92e0-1dad0496f14b"
                  }, {
                    "category" : "OBJECT",
                    "value" : "192.88.99.0/24",
                    "name" : "IPv6-to-IPv4-Relay-Anycast",
                    "type" : "Network",
                    "links" : {
                      "self" : "/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/object/networks/04ea3f1f-f5a9-4eca-b051-487ebeb4c97f"
                    },
                    "metadata" : {
                      "domain" : {
                        "name" : "Global",
                        "id" : "e276abec-e0f2-11e3-8169-6d9ed49b625f",
                        "type" : "Domain"
                      }
                    },
                    "id" : "04ea3f1f-f5a9-4eca-b051-487ebeb4c97f"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 25,
                    "count" : 5,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/search/policy" : {
      "get" : {
        "tags" : [ "Search" ],
        "description" : "**Search for policies matching specified text or IP address (literal values in policies)**",
        "operationId" : "getGlobalPolicySearch",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "Text or IP address used for filtering",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/GlobalPolicySearchListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/search/policy?offset=0&limit=25&filter=global&expanded=true ( GET list of policies matching filter text \"global\" )" : {
                  "links" : {
                    "self" : "/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/search/policy?offset=0&limit=200&filter=text:global"
                  },
                  "items" : [ {
                    "category" : "POLICY",
                    "type" : "PrefilterPolicy",
                    "id" : "005056A9-9066-0ed3-0000-249108103339",
                    "links" : {
                      "self" : "/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/policy/prefilterpolicies/005056A9-9066-0ed3-0000-249108103339"
                    },
                    "name" : "Global Prefilter"
                  }, {
                    "category" : "POLICY",
                    "type" : "AccessPolicy",
                    "id" : "005056A9-9066-0ed3-0000-038654705727",
                    "links" : {
                      "self" : "/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/policy/accesspolicies/005056A9-9066-0ed3-0000-038654705727"
                    },
                    "name" : "Global ACP"
                  }, {
                    "category" : "POLICY",
                    "type" : "FTDNatPolicy",
                    "id" : "005056A9-9066-0ed3-0000-403726925915",
                    "links" : {
                      "self" : "/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/policy/ftdnatpolicies/005056A9-9066-0ed3-0000-403726925915"
                    },
                    "name" : "Global FTD NAT"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 200,
                    "count" : 3,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/users/authroles" : {
      "get" : {
        "tags" : [ "Users" ],
        "description" : "**Retrieves the list of all existing user roles in the system.**",
        "operationId" : "getAllAuthRoles",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AuthRolesListContainer"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/users/ssoconfigs" : {
      "get" : {
        "tags" : [ "Users" ],
        "description" : "**Retrieves, creates, or modifies the SSO configuration associated with the specified ID. If no ID is specified for a GET, retrieves list of all SSO configurations.**",
        "operationId" : "getAllSSOConfig",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/SSOConfigListContainer"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_config/v1/domain/{domainUUID}/users/ssoconfigs/{objectId}" : {
      "get" : {
        "tags" : [ "Users" ],
        "description" : "**Retrieves, creates, or modifies the SSO configuration associated with the specified ID. If no ID is specified for a GET, retrieves list of all SSO configurations.**",
        "operationId" : "getSSOConfig",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the SSO configuration.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/SSOConfig"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_config/v1/domain/domainUUID/users/ssoconfigs ( GET method for SSO configuration )" : {
                  "type" : "SSOConfig",
                  "links" : {
                    "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/users/ssoconfigs"
                  },
                  "metadata" : {
                    "timestamp" : 1459973987,
                    "readOnly" : {
                      "state" : true
                    },
                    "domain" : {
                      "id" : "domainUUID",
                      "type" : "Domain",
                      "name" : "Global"
                    },
                    "lastUser" : {
                      "name" : "admin",
                      "id" : "User-UUID",
                      "type" : "User"
                    }
                  },
                  "enabled" : true,
                  "id" : "SSOConfigsUUID",
                  "rootUrl" : "SSO Config Root URL",
                  "ssoUrl" : "SSO Config IDP URL",
                  "ssoProvider" : "Name of the SSO Config Provider",
                  "ssoIssuer" : "SSO IDP Issuer",
                  "advancedConfig" : {
                    "memberAttr" : "SSO Member attr",
                    "roles" : [ {
                      "map" : "Role Map",
                      "name" : "Role name",
                      "id" : "Role UUID",
                      "type" : "Role Type"
                    }, {
                      "name" : "Role name",
                      "id" : "Role UUID",
                      "type" : "Role Type"
                    } ],
                    "defaultRole" : {
                      "name" : "Default SSO Role",
                      "id" : "Role UUID",
                      "type" : "Role Type"
                    }
                  },
                  "ssoCert" : "SSO Cert"
                },
                "Response Example 2 :GET /fmc_config/v1/domain/domainUUID/users/ssoconfigs?expanded=false ( GET method for SSO configuration with expanded set to false )" : {
                  "type" : "SSOConfig",
                  "links" : {
                    "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/users/ssoconfigs"
                  },
                  "metadata" : {
                    "timestamp" : 1459973987,
                    "readOnly" : {
                      "state" : true
                    },
                    "domain" : {
                      "id" : "domainUUID",
                      "type" : "Domain",
                      "name" : "Global"
                    },
                    "lastUser" : {
                      "name" : "admin",
                      "id" : "User-UUID",
                      "type" : "User"
                    }
                  },
                  "id" : "SSOConfigsUUID"
                },
                "Response Example 3 :GET /fmc_config/v1/domain/domainUUID/users/ssoconfigs/ssoconfigsUUID ( GET method for SSO configuration with id )" : {
                  "type" : "SSOConfig",
                  "links" : {
                    "self" : "https://example.cisco.com/api/fmc_config/v1/domain/domainUUID/users/ssoconfigs/ssoconfigsUUID"
                  },
                  "metadata" : {
                    "timestamp" : 1459973987,
                    "readOnly" : {
                      "state" : true
                    },
                    "domain" : {
                      "id" : "domainUUID",
                      "type" : "Domain",
                      "name" : "Global"
                    },
                    "lastUser" : {
                      "name" : "admin",
                      "id" : "User-UUID",
                      "type" : "User"
                    }
                  },
                  "enabled" : true,
                  "id" : "SSOConfigsUUID",
                  "rootUrl" : "SSO Config Root URL",
                  "ssoUrl" : "SSO Config IDP URL",
                  "ssoProvider" : "Name of the SSO Config Provider",
                  "ssoIssuer" : "SSO IDP Issuer",
                  "advancedConfig" : {
                    "memberAttr" : "SSO Member attr",
                    "roles" : [ {
                      "map" : "Role Map",
                      "name" : "Role name",
                      "id" : "Role UUID"
                    }, {
                      "name" : "Role name",
                      "id" : "Role UUID"
                    } ],
                    "defaultRole" : {
                      "name" : "Default SSO Role",
                      "id" : "Role UUID",
                      "type" : "Role Type"
                    }
                  },
                  "ssoCert" : "SSO Cert"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Users" ],
        "description" : "**Retrieves, creates, or modifies the SSO configuration associated with the specified ID. If no ID is specified for a GET, retrieves list of all SSO configurations. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateSSOConfig",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the SSO configuration.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The input SSO configuration model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SSOConfig"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/SSOConfig"
            },
            "examples" : { }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/SSOConfig"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_platform/v1/domain/{domainUUID}/audit/auditrecords" : {
      "get" : {
        "tags" : [ "Audit" ],
        "description" : "**API Operations on audit objects.**",
        "operationId" : "getAllAuditModel",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AuditModelListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_platform/v1/domain/default/audit/auditrecords ( GET ALL AuditInfo )" : {
                  "links" : {
                    "self" : "https://example.cisco.com/api/fmc_platform/v1/domain/default/audit/auditrecords?offset=0&limit=4"
                  },
                  "items" : [ {
                    "time" : 1460055526,
                    "username" : "admin",
                    "message" : "New session source IP - 127.0.0.1:",
                    "subSystem" : "Session Expiration",
                    "source" : "127.0.0.1",
                    "domain" : "Global-domain-UUID"
                  }, {
                    "time" : 1460055526,
                    "username" : "admin",
                    "message" : "Login Success:",
                    "subSystem" : "Login",
                    "source" : "127.0.0.1",
                    "domain" : "Global-domain-UUID"
                  }, {
                    "time" : 1460055515,
                    "message" : "GET https://example.cisco.com/api/fmc_platform/v1/domain/default/audit/auditrecords Unauthorized (401) - The request requires user authentication:",
                    "subSystem" : "API",
                    "source" : "10.150.162.23",
                    "domain" : "Global-domain-UUID"
                  }, {
                    "time" : 1460054229,
                    "username" : "admin",
                    "message" : "Login Success:",
                    "subSystem" : "Login",
                    "source" : "127.0.0.1",
                    "domain" : "Global-domain-UUID"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 4,
                    "count" : 4,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_platform/v1/domain/default/audit/auditrecords?subSystem=API ( GET ALL AuditInfo )" : {
                  "links" : {
                    "self" : "https://example.cisco.com/api/fmc_platform/v1/domain/default/audit/auditrecords?offset=0&limit=1"
                  },
                  "items" : [ {
                    "links" : { },
                    "time" : 1460055515,
                    "message" : "GET https://example.cisco.com/api/fmc_platform/v1/domain/default/audit/auditrecords Unauthorized (401) - The request requires user authentication:",
                    "subSystem" : "API",
                    "source" : "10.150.162.23",
                    "domain" : "Global-domain-UUID"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_platform/v1/domain/{domainUUID}/audit/auditrecords/{objectId}" : {
      "get" : {
        "tags" : [ "Audit" ],
        "description" : "**API Operations on audit objects.**",
        "operationId" : "getAuditModel",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the object.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AuditModel"
            },
            "examples" : { }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_platform/v1/info/domain" : {
      "get" : {
        "tags" : [ "System Information" ],
        "description" : "**API Operation for Domains.**",
        "operationId" : "getAllDomain",
        "parameters" : [ {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/DomainListContainer"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_platform/v1/info/domain/{domainUUID}/{objectId}" : {
      "get" : {
        "tags" : [ "System Information" ],
        "description" : "**API Operation for Domains.**",
        "operationId" : "getDomain",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the domain.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Domain"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_platform/v1/info/domain ( Success: Test GET success of All Domains )" : {
                  "type" : "Domain",
                  "Description" : "List of domains",
                  "name" : "Name of the domain",
                  "uuid" : "UUID of the domain",
                  "links" : {
                    "self" : "https://example.cisco.com/api/fmc_platform/v1/info/domain"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_platform/v1/info/serverversion" : {
      "get" : {
        "tags" : [ "System Information" ],
        "description" : "**API Operation for Server Version.**",
        "operationId" : "getAllServerVersion",
        "parameters" : [ {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ServerVersionListContainer"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_platform/v1/info/serverversion/{objectId}" : {
      "get" : {
        "tags" : [ "System Information" ],
        "description" : "**API Operation for Server Version.**",
        "operationId" : "getServerVersion",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the object.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ServerVersion"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_platform/v1/info/serverversion ( Success: Test GET success of a Server Version )" : {
                  "type" : "ServerVersion",
                  "description" : "System Version",
                  "serverversion" : "Version Number",
                  "links" : {
                    "self" : "https://example.cisco.com/api/fmc_platform/v1/info/serverversion"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_platform/v1/updates/cancelupgrades" : {
      "post" : {
        "tags" : [ "Updates" ],
        "description" : "**API to trigger Cancel of a failed upgrade. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createCancelUpgrade",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The input representation of CancelUpgrade object model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CancelUpgrade"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/CancelUpgrade"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /api/fmc_platform/v1/updates/cancelupgrades ( Trigger cancel upgrade on the specified devices )" : {
                  "targets" : [ {
                    "id" : "1251b782-7922-11e8-85d1-9ce8632d3182",
                    "type" : "Device",
                    "name" : "vFTD-1"
                  }, {
                    "id" : "88f052b8-7922-11e8-a602-840c6cea8ca5",
                    "type" : "Device",
                    "name" : "vFTD-2"
                  } ]
                },
                "Response Example 1 :POST /api/fmc_platform/v1/updates/cancelupgrades ( Trigger cancel upgrade on the specified devices )" : {
                  "targets" : [ {
                    "id" : "1251b782-7922-11e8-85d1-9ce8632d3182",
                    "type" : "Device",
                    "name" : "vFTD-1"
                  }, {
                    "id" : "88f052b8-7922-11e8-a602-840c6cea8ca5",
                    "type" : "Device",
                    "name" : "vFTD-2"
                  } ],
                  "metadata" : {
                    "task" : {
                      "id" : "8589935884",
                      "message" : "Triggered all Cancel Upgrades successfully",
                      "status" : "RUNNING"
                    }
                  },
                  "type" : "CancelUpgrade"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/CancelUpgrade"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_platform/v1/updates/retryupgrades" : {
      "post" : {
        "tags" : [ "Updates" ],
        "description" : "**API to trigger Retry of a failed upgrade. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createRetryUpgrade",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The input representation of RetryUpgrade object model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RetryUpgrade"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/RetryUpgrade"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /api/fmc_platform/v1/updates/retryupgrades ( Trigger retry upgrade on the specified devices )" : {
                  "targets" : [ {
                    "id" : "1251b782-7922-11e8-85d1-9ce8632d3182",
                    "type" : "Device",
                    "name" : "vFTD-1"
                  }, {
                    "id" : "88f052b8-7922-11e8-a602-840c6cea8ca5",
                    "type" : "Device",
                    "name" : "vFTD-2"
                  } ]
                },
                "Response Example 1 :POST /api/fmc_platform/v1/updates/retryupgrades ( Trigger retry upgrade on the specified devices )" : {
                  "targets" : [ {
                    "id" : "1251b782-7922-11e8-85d1-9ce8632d3182",
                    "type" : "Device",
                    "name" : "vFTD-1"
                  }, {
                    "id" : "88f052b8-7922-11e8-a602-840c6cea8ca5",
                    "type" : "Device",
                    "name" : "vFTD-2"
                  } ],
                  "metadata" : {
                    "task" : {
                      "id" : "8589935884",
                      "message" : "Triggered all Retry Upgrades successfully",
                      "status" : "RUNNING"
                    }
                  },
                  "type" : "RetryUpgrade"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/RetryUpgrade"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_platform/v1/updates/upgradepackages" : {
      "get" : {
        "tags" : [ "Updates" ],
        "description" : "**API operation for listing upgrade packages.**",
        "operationId" : "getAllUpgradePackage",
        "parameters" : [ {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/UpgradePackageListContainer"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_platform/v1/updates/upgradepackages/{containerUUID}/applicabledevices" : {
      "get" : {
        "tags" : [ "Updates" ],
        "description" : "**Devices available for a particular upgrade package.**",
        "operationId" : "getAllApplicableDevice",
        "parameters" : [ {
          "name" : "containerUUID",
          "in" : "path",
          "description" : "The container id under which this specific resource is contained.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ApplicableDeviceListContainer"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_platform/v1/updates/upgradepackages/{objectId}" : {
      "get" : {
        "tags" : [ "Updates" ],
        "description" : "**API operation for listing upgrade packages.**",
        "operationId" : "getUpgradePackage",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the object.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/UpgradePackage"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /api/fmc_platform/v1/updates/upgradepackages ( Test Get of Upgrade Packages )" : {
                  "links" : {
                    "self" : "https://u32c01p11-vrouter.cisco.com:18514/api/fmc_platform/v1/updates/upgradepackages?offset=0&limit=4"
                  },
                  "items" : [ {
                    "metadata" : {
                      "upgradeType" : "Cisco FTD Upgrade",
                      "upgradeFileName" : "Cisco_FTD_Upgrade-6.2.3-84.sh",
                      "fileSize" : 1038736,
                      "updateVersion" : "6.2.3-84 IMS 84",
                      "upgradeFrom" : "6.1.0",
                      "uploadDate" : "2018-04-04T01:28:31Z",
                      "rebootRequired" : true,
                      "upgradeFileId" : "Cisco FTD Upgrade / Wed Apr  4 01:28:28 UTC 2018"
                    },
                    "name" : "Cisco_FTD_Upgrade-6.2.3-84.sh",
                    "links" : {
                      "self" : "https://u32c01p11-vrouter.cisco.com:18514/api/fmc_platform/v1/updates/upgradepackages/b3e26a18-8392-11e8-b3c5-e4a3cc8a21de"
                    },
                    "id" : "b3e26a18-8392-11e8-b3c5-e4a3cc8a21de",
                    "type" : "UpgradePackage"
                  }, {
                    "metadata" : {
                      "upgradeType" : "Cisco FTD Upgrade",
                      "upgradeFileName" : "Cisco_FTD_Upgrade-6.3.0-1256.sh",
                      "fileSize" : 1097772,
                      "updateVersion" : "6.3.0-1256 IMS 1256",
                      "upgradeFrom" : "6.1.0",
                      "uploadDate" : "2018-07-03T03:30:40Z",
                      "rebootRequired" : true,
                      "upgradeFileId" : "Cisco FTD Upgrade / Tue Jul  3 03:30:35 UTC 2018"
                    },
                    "name" : "Cisco_FTD_Upgrade-6.3.0-1256.sh",
                    "links" : {
                      "self" : "https://u32c01p11-vrouter.cisco.com:18514/api/fmc_platform/v1/updates/upgradepackages/b3e61096-8392-11e8-b3c5-e4a3cc8a21de"
                    },
                    "id" : "b3e61096-8392-11e8-b3c5-e4a3cc8a21de",
                    "type" : "UpgradePackage"
                  }, {
                    "metadata" : {
                      "upgradeType" : "Cisco FTD SSP Upgrade",
                      "upgradeFileName" : "Cisco_FTD_SSP_Upgrade-6.3.0-10716.sh",
                      "fileSize" : 2244980,
                      "updateVersion" : "6.3.0-10716 IMS 10716",
                      "upgradeFrom" : "6.1.0",
                      "uploadDate" : "2018-06-24T15:06:31Z",
                      "rebootRequired" : true,
                      "upgradeFileId" : "Cisco FTD SSP Upgrade / Sun Jun 24 15:06:14 UTC 2018"
                    },
                    "name" : "Cisco_FTD_SSP_Upgrade-6.3.0-10716.sh",
                    "links" : {
                      "self" : "https://u32c01p11-vrouter.cisco.com:18514/api/fmc_platform/v1/updates/upgradepackages/8b0e576e-79dd-11e8-845b-e5a3cc8a21de"
                    },
                    "id" : "8b0e576e-79dd-11e8-845b-e5a3cc8a21de",
                    "type" : "UpgradePackage"
                  }, {
                    "metadata" : {
                      "upgradeType" : "Cisco FTD Upgrade",
                      "upgradeFileName" : "Cisco_FTD_Upgrade-6.3.0-10716.sh",
                      "fileSize" : 1102216,
                      "updateVersion" : "6.3.0-10716 IMS 10716",
                      "upgradeFrom" : "6.1.0",
                      "uploadDate" : "2018-06-24T14:59:41Z",
                      "rebootRequired" : true,
                      "upgradeFileId" : "Cisco FTD Upgrade / Sun Jun 24 14:59:38 UTC 2018"
                    },
                    "name" : "Cisco_FTD_Upgrade-6.3.0-10716.sh",
                    "links" : {
                      "self" : "https://u32c01p11-vrouter.cisco.com:18514/api/fmc_platform/v1/updates/upgradepackages/8b0f623a-79dd-11e8-845b-e5a3cc8a21de"
                    },
                    "id" : "8b0f623a-79dd-11e8-845b-e5a3cc8a21de",
                    "type" : "UpgradePackage"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 4,
                    "count" : 4,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Updates" ],
        "description" : "**API operation for listing upgrade packages. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteUpgradePackage",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the object.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/UpgradePackage"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : DELETE /api/fmc_platform/v1/updates/upgradepackages/ad4e78a0-948a-11e8-9f03-07873f284bf9 ( Delete the Upgrade Package  by the upgrade package id. This operation will remove the upgrade package from FMC. )" : "",
                "Response Example 1 :DELETE /api/fmc_platform/v1/updates/upgradepackages/ad4e78a0-948a-11e8-9f03-07873f284bf9 ( Delete the Upgrade Package  by the upgrade package id. This operation will remove the upgrade package from FMC. )" : {
                  "metadata" : {
                    "upgradeType" : "Cisco FTD SSP Upgrade",
                    "upgradeFileName" : "Cisco_FTD_SSP_Upgrade-6.3.0-1347.sh",
                    "fileSize" : 2337872,
                    "updateVersion" : "6.3.0-1347 IMS 1347",
                    "upgradeFrom" : "6.1.0",
                    "uploadDate" : "2018-07-27T21:30:05Z",
                    "rebootRequired" : true,
                    "upgradeFileId" : "Cisco FTD SSP Upgrade / Fri Jul 27 21:29:45 UTC 2018"
                  },
                  "name" : "Cisco_FTD_SSP_Upgrade-6.3.0-1347.sh",
                  "links" : {
                    "self" : "https://u32c01p11-vrouter.cisco.com:18514/api/fmc_platform/v1/updates/upgradepackages/ad4e78a0-948a-11e8-9f03-07873f284bf9"
                  },
                  "id" : "ad4e78a0-948a-11e8-9f03-07873f284bf9",
                  "type" : "UpgradePackage"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_platform/v1/updates/upgrades" : {
      "post" : {
        "tags" : [ "Updates" ],
        "description" : "**API to trigger upgrade. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createUpgrade",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The input representation of Upgrade object model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Upgrade"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/Upgrade"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /api/fmc_platform/v1/updates/upgrades ( Push the specified upgrade package on the specified devices )" : {
                  "upgradePackage" : {
                    "id" : "73207350-8395-11e8-845b-e5a3cc8a21de",
                    "type" : "UpgradePackage"
                  },
                  "targets" : [ {
                    "id" : "1251b782-7922-11e8-85d1-9ce8632d3182",
                    "type" : "Device",
                    "name" : "vFTD-1"
                  }, {
                    "id" : "88f052b8-7922-11e8-a602-840c6cea8ca5",
                    "type" : "Device",
                    "name" : "vFTD-2"
                  } ],
                  "pushUpgradeFileOnly" : "true"
                },
                "Request example 2 : POST /api/fmc_platform/v1/updates/upgrades ( Trigger the specified upgrade on the specified devices )" : {
                  "upgradePackage" : {
                    "id" : "73207350-8395-11e8-845b-e5a3cc8a21de",
                    "type" : "UpgradePackage"
                  },
                  "targets" : [ {
                    "id" : "1251b782-7922-11e8-85d1-9ce8632d3182",
                    "type" : "Device",
                    "name" : "vFTD-1"
                  }, {
                    "id" : "88f052b8-7922-11e8-a602-840c6cea8ca5",
                    "type" : "Device",
                    "name" : "vFTD-2"
                  } ],
                  "pushUpgradeFileOnly" : "false"
                },
                "Response Example 1 :POST /api/fmc_platform/v1/updates/upgrades ( Push the specified upgrade package on the specified devices )" : {
                  "upgradePackage" : {
                    "id" : "73207350-8395-11e8-845b-e5a3cc8a21de",
                    "type" : "UpgradePackage"
                  },
                  "targets" : [ {
                    "id" : "1251b782-7922-11e8-85d1-9ce8632d3182",
                    "type" : "Device",
                    "name" : "vFTD-1"
                  }, {
                    "id" : "88f052b8-7922-11e8-a602-840c6cea8ca5",
                    "type" : "Device",
                    "name" : "vFTD-2"
                  } ],
                  "pushUpgradeFileOnly" : "true",
                  "metadata" : {
                    "task" : {
                      "id" : "8589935884",
                      "message" : "Triggered all Push Upgrades successfully",
                      "status" : "RUNNING"
                    }
                  },
                  "type" : "Upgrade"
                },
                "Response Example 2 :POST /api/fmc_platform/v1/updates/upgrades ( Trigger the specified upgrade on the specified devices )" : {
                  "upgradePackage" : {
                    "id" : "73207350-8395-11e8-845b-e5a3cc8a21de",
                    "type" : "UpgradePackage"
                  },
                  "targets" : [ {
                    "id" : "1251b782-7922-11e8-85d1-9ce8632d3182",
                    "type" : "Device",
                    "name" : "vFTD-1"
                  }, {
                    "id" : "88f052b8-7922-11e8-a602-840c6cea8ca5",
                    "type" : "Device",
                    "name" : "vFTD-2"
                  } ],
                  "pushUpgradeFileOnly" : "false",
                  "metadata" : {
                    "task" : {
                      "id" : "8589935884",
                      "message" : "Triggered all Upgrades successfully",
                      "status" : "RUNNING"
                    }
                  },
                  "type" : "Upgrade"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/Upgrade"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_tid/v1/domain/{domainUUID}/taxiiconfig/collections" : {
      "post" : {
        "tags" : [ "Intelligence" ],
        "description" : "**API Operations on Taxii Collection objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createRESTTaxiiCollection",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The input Taxii Collection object model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RESTTaxiiCollection"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/RESTTaxiiCollection"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /fmc_tid/v1/domain/domainUUID/taxiiconfig/collections ( POST Example for collections )" : {
                  "uri" : "http://hailataxii.com/taxii-discovery-service",
                  "username" : "username",
                  "passwd" : "password",
                  "caCert" : "",
                  "clientCert" : "",
                  "clientPrivateKey" : "",
                  "params" : {
                    "hostnameVerifier" : "allow_all",
                    "selfSignedServerCertificate" : "false"
                  },
                  "version" : "0.1.0",
                  "type" : "source",
                  "discoveryInfo" : [ {
                    "collectionPollIntervalInMinutes" : 0,
                    "collectionName" : "DISCOVERY",
                    "collectionProtocolBinding" : "urn:taxii.mitre.org:protocol:https:1.0",
                    "collectionAddress" : "http://hailataxii.com:80/taxii-data",
                    "collectionMessageBinding" : "[urn:taxii.mitre.org:message:xml:1.1]",
                    "collectionContentBinding" : "[]",
                    "type" : "taxii_collections"
                  }, {
                    "collectionPollIntervalInMinutes" : 0,
                    "collectionName" : "COLLECTION_MANAGEMENT",
                    "collectionProtocolBinding" : "urn:taxii.mitre.org:protocol:https:1.0",
                    "collectionAddress" : "http://hailataxii.com:80/taxii-data",
                    "collectionMessageBinding" : "[urn:taxii.mitre.org:message:xml:1.1]",
                    "collectionContentBinding" : "[]",
                    "type" : "taxii_collections"
                  }, {
                    "collectionPollIntervalInMinutes" : 0,
                    "collectionName" : "POLL",
                    "collectionProtocolBinding" : "urn:taxii.mitre.org:protocol:https:1.0",
                    "collectionAddress" : "http://hailataxii.com:80/taxii-data",
                    "collectionMessageBinding" : "[urn:taxii.mitre.org:message:xml:1.1]",
                    "collectionContentBinding" : "[]",
                    "type" : "taxii_collections"
                  } ]
                },
                "Response Example 1 :POST /fmc_tid/v1/domain/domainUUID/taxiiconfig/collections ( POST Example for collections )" : {
                  "uri" : "http://hailataxii.com/taxii-discovery-service",
                  "params" : {
                    "hostnameVerifier" : "allow_all",
                    "selfSignedServerCertificate" : "false"
                  },
                  "nextRun" : 0,
                  "consumedUnsupportedObservables" : 0,
                  "lastRun" : 0,
                  "discoveryInfo" : [ {
                    "collectionPollIntervalInMinutes" : 0,
                    "collectionName" : "DISCOVERY",
                    "collectionProtocolBinding" : "urn:taxii.mitre.org:protocol:https:1.0",
                    "collectionAddress" : "http://hailataxii.com:80/taxii-data",
                    "collectionMessageBinding" : "[urn:taxii.mitre.org:message:xml:1.1]",
                    "collectionContentBinding" : "[]",
                    "type" : "taxii_collections"
                  }, {
                    "collectionPollIntervalInMinutes" : 0,
                    "collectionName" : "COLLECTION_MANAGEMENT",
                    "collectionProtocolBinding" : "urn:taxii.mitre.org:protocol:https:1.0",
                    "collectionAddress" : "http://hailataxii.com:80/taxii-data",
                    "collectionMessageBinding" : "[urn:taxii.mitre.org:message:xml:1.1]",
                    "collectionContentBinding" : "[]",
                    "type" : "taxii_collections"
                  }, {
                    "collectionPollIntervalInMinutes" : 0,
                    "collectionName" : "POLL",
                    "collectionProtocolBinding" : "urn:taxii.mitre.org:protocol:https:1.0",
                    "collectionAddress" : "http://hailataxii.com:80/taxii-data",
                    "collectionMessageBinding" : "[urn:taxii.mitre.org:message:xml:1.1]",
                    "collectionContentBinding" : "[]",
                    "type" : "taxii_collections"
                  } ],
                  "totalUnsupportedObservables" : 0,
                  "totalInvalidObservables" : 0,
                  "availableCollections" : [ {
                    "collectionPollIntervalInMinutes" : 0,
                    "collectionName" : "guest.Abuse_ch",
                    "collectionDescription" : "guest.Abuse_ch",
                    "collectionProtocolBinding" : "urn:taxii.mitre.org:protocol:https:1.0",
                    "collectionAddress" : "http://hailataxii.com:80/taxii-data",
                    "collectionMessageBinding" : "[urn:taxii.mitre.org:message:xml:1.1]",
                    "type" : "taxii_collections"
                  }, {
                    "collectionPollIntervalInMinutes" : 0,
                    "collectionName" : "guest.CyberCrime_Tracker",
                    "collectionDescription" : "guest.CyberCrime_Tracker",
                    "collectionProtocolBinding" : "urn:taxii.mitre.org:protocol:https:1.0",
                    "collectionAddress" : "http://hailataxii.com:80/taxii-data",
                    "collectionMessageBinding" : "[urn:taxii.mitre.org:message:xml:1.1]",
                    "type" : "taxii_collections"
                  }, {
                    "collectionPollIntervalInMinutes" : 0,
                    "collectionName" : "guest.EmergineThreats_rules",
                    "collectionDescription" : "guest.EmergineThreats_rules",
                    "collectionProtocolBinding" : "urn:taxii.mitre.org:protocol:https:1.0",
                    "collectionAddress" : "http://hailataxii.com:80/taxii-data",
                    "collectionMessageBinding" : "[urn:taxii.mitre.org:message:xml:1.1]",
                    "type" : "taxii_collections"
                  }, {
                    "collectionPollIntervalInMinutes" : 0,
                    "collectionName" : "guest.EmergingThreats_rules",
                    "collectionDescription" : "guest.EmergingThreats_rules",
                    "collectionProtocolBinding" : "urn:taxii.mitre.org:protocol:https:1.0",
                    "collectionAddress" : "http://hailataxii.com:80/taxii-data",
                    "collectionMessageBinding" : "[urn:taxii.mitre.org:message:xml:1.1]",
                    "type" : "taxii_collections"
                  }, {
                    "collectionPollIntervalInMinutes" : 0,
                    "collectionName" : "guest.Lehigh_edu",
                    "collectionDescription" : "guest.Lehigh_edu",
                    "collectionProtocolBinding" : "urn:taxii.mitre.org:protocol:https:1.0",
                    "collectionAddress" : "http://hailataxii.com:80/taxii-data",
                    "collectionMessageBinding" : "[urn:taxii.mitre.org:message:xml:1.1]",
                    "type" : "taxii_collections"
                  }, {
                    "collectionPollIntervalInMinutes" : 0,
                    "collectionName" : "guest.MalwareDomainList_Hostlist",
                    "collectionDescription" : "guest.MalwareDomainList_Hostlist",
                    "collectionProtocolBinding" : "urn:taxii.mitre.org:protocol:https:1.0",
                    "collectionAddress" : "http://hailataxii.com:80/taxii-data",
                    "collectionMessageBinding" : "[urn:taxii.mitre.org:message:xml:1.1]",
                    "type" : "taxii_collections"
                  }, {
                    "collectionPollIntervalInMinutes" : 0,
                    "collectionName" : "guest.blutmagie_de_torExits",
                    "collectionDescription" : "guest.blutmagie_de_torExits",
                    "collectionProtocolBinding" : "urn:taxii.mitre.org:protocol:https:1.0",
                    "collectionAddress" : "http://hailataxii.com:80/taxii-data",
                    "collectionMessageBinding" : "[urn:taxii.mitre.org:message:xml:1.1]",
                    "type" : "taxii_collections"
                  }, {
                    "collectionPollIntervalInMinutes" : 0,
                    "collectionName" : "guest.dataForLast_7daysOnly",
                    "collectionDescription" : "guest.dataForLast_7daysOnly",
                    "collectionProtocolBinding" : "urn:taxii.mitre.org:protocol:https:1.0",
                    "collectionAddress" : "http://hailataxii.com:80/taxii-data",
                    "collectionMessageBinding" : "[urn:taxii.mitre.org:message:xml:1.1]",
                    "type" : "taxii_collections"
                  }, {
                    "collectionPollIntervalInMinutes" : 0,
                    "collectionName" : "guest.dshield_BlockList",
                    "collectionDescription" : "guest.dshield_BlockList",
                    "collectionProtocolBinding" : "urn:taxii.mitre.org:protocol:https:1.0",
                    "collectionAddress" : "http://hailataxii.com:80/taxii-data",
                    "collectionMessageBinding" : "[urn:taxii.mitre.org:message:xml:1.1]",
                    "type" : "taxii_collections"
                  }, {
                    "collectionPollIntervalInMinutes" : 0,
                    "collectionName" : "guest.phishtank_com",
                    "collectionDescription" : "guest.phishtank_com",
                    "collectionProtocolBinding" : "urn:taxii.mitre.org:protocol:https:1.0",
                    "collectionAddress" : "http://hailataxii.com:80/taxii-data",
                    "collectionMessageBinding" : "[urn:taxii.mitre.org:message:xml:1.1]",
                    "type" : "taxii_collections"
                  }, {
                    "collectionPollIntervalInMinutes" : 0,
                    "collectionName" : "system.Default",
                    "collectionDescription" : "system.Default",
                    "collectionProtocolBinding" : "urn:taxii.mitre.org:protocol:https:1.0",
                    "collectionAddress" : "http://hailataxii.com:80/taxii-data",
                    "collectionMessageBinding" : "[urn:taxii.mitre.org:message:xml:1.1]",
                    "type" : "taxii_collections"
                  } ],
                  "downloadOn" : false,
                  "runNow" : false,
                  "feedStatus" : "new",
                  "consumedIndicators" : 0,
                  "totalIndicators" : 0,
                  "discardedIndicators" : 0,
                  "totalDiscardedIndicators" : 0,
                  "totalObservables" : 0,
                  "invalidObservables" : 0,
                  "consumedObservables" : 0,
                  "refresh" : 0,
                  "passwd" : "password",
                  "property" : {
                    "ttl" : 90,
                    "whitelist" : false,
                    "expirationTime" : 0,
                    "publish" : true,
                    "action" : "monitor"
                  },
                  "username" : "username",
                  "id" : "sourceUUID",
                  "type" : "source"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/RESTTaxiiCollection"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_tid/v1/domain/{domainUUID}/taxiiconfig/discoveryinfo" : {
      "post" : {
        "tags" : [ "Intelligence" ],
        "description" : "**API Operations on Discovery Info objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createRESTDiscoveryInfo",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The input Discovery Info object model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RESTDiscoveryInfo"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/RESTDiscoveryInfo"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /fmc_tid/v1/domain/domainUUID/taxiiconfig/discoveryinfo ( POST Example for discoveryinfo )" : {
                  "uri" : "http://hailataxii.com/taxii-discovery-service",
                  "username" : "username",
                  "passwd" : "password",
                  "caCert" : "",
                  "clientCert" : "",
                  "clientPrivateKey" : "",
                  "params" : {
                    "hostnameVerifier" : "allow_all",
                    "selfSignedServerCertificate" : "false"
                  },
                  "version" : "0.1.0",
                  "type" : "source"
                },
                "Response Example 1 :POST /fmc_tid/v1/domain/domainUUID/taxiiconfig/discoveryinfo ( POST Example for discoveryinfo )" : {
                  "uri" : "http://hailataxii.com/taxii-discovery-service",
                  "params" : {
                    "hostnameVerifier" : "allow_all",
                    "selfSignedServerCertificate" : "false"
                  },
                  "consumedUnsupportedObservables" : 0,
                  "lastRun" : 0,
                  "nextRun" : 0,
                  "feedStatus" : "new",
                  "discoveryInfo" : [ {
                    "collectionName" : "DISCOVERY",
                    "collectionProtocolBinding" : "urn:taxii.mitre.org:protocol:https:1.0",
                    "collectionPollIntervalInMinutes" : 0,
                    "collectionAddress" : "http://hailataxii.com:80/taxii-data",
                    "collectionMessageBinding" : "[urn:taxii.mitre.org:message:xml:1.1]",
                    "collectionContentBinding" : "[]",
                    "type" : "taxii_collections"
                  }, {
                    "collectionName" : "COLLECTION_MANAGEMENT",
                    "collectionProtocolBinding" : "urn:taxii.mitre.org:protocol:https:1.0",
                    "collectionPollIntervalInMinutes" : 0,
                    "collectionAddress" : "http://hailataxii.com:80/taxii-data",
                    "collectionMessageBinding" : "[urn:taxii.mitre.org:message:xml:1.1]",
                    "collectionContentBinding" : "[]",
                    "type" : "taxii_collections"
                  }, {
                    "collectionName" : "POLL",
                    "collectionProtocolBinding" : "urn:taxii.mitre.org:protocol:https:1.0",
                    "collectionPollIntervalInMinutes" : 0,
                    "collectionAddress" : "http://hailataxii.com:80/taxii-data",
                    "collectionMessageBinding" : "[urn:taxii.mitre.org:message:xml:1.1]",
                    "collectionContentBinding" : "[]",
                    "type" : "taxii_collections"
                  } ],
                  "refresh" : 0,
                  "passwd" : "password",
                  "consumedObservables" : 0,
                  "totalUnsupportedObservables" : 0,
                  "invalidObservables" : 0,
                  "totalObservables" : 0,
                  "totalInvalidObservables" : 0,
                  "downloadOn" : false,
                  "runNow" : false,
                  "consumedIndicators" : 0,
                  "totalIndicators" : 0,
                  "discardedIndicators" : 0,
                  "totalDiscardedIndicators" : 0,
                  "property" : {
                    "ttl" : 90,
                    "action" : "monitor",
                    "expirationTime" : 0,
                    "publish" : true,
                    "whitelist" : false
                  },
                  "username" : "username",
                  "id" : "id",
                  "type" : "source"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/RESTDiscoveryInfo"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_tid/v1/domain/{domainUUID}/tid/element" : {
      "get" : {
        "tags" : [ "Intelligence" ],
        "description" : "**API Operations on Element objects.**",
        "operationId" : "getAllRESTElement",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/RESTElementListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_tid/v1/domain/domainUUID/tid/elementUUID ( Get all ElementModel instances. )" : {
                  "links" : {
                    "self" : "/fmc_tid/v1/domain/domainUUID/tid/elementUUID"
                  },
                  "items" : [ {
                    "id" : "elementUUID",
                    "type" : "element",
                    "name" : "Element Name"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 1,
                    "count" : 1,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_tid/v1/domain/{domainUUID}/tid/element/{objectId}" : {
      "get" : {
        "tags" : [ "Intelligence" ],
        "description" : "**API Operations on Element objects.**",
        "operationId" : "getRESTElement",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the Element.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/RESTElement"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_tid/v1/domain/domainUUID/tid/element/elementUUID ( Get a single ElementModel instance )" : {
                  "links" : {
                    "self" : "/fmc_tid/v1/domain/domainUUID/tid/element/elementUUID"
                  },
                  "id" : "elementUUID",
                  "type" : "element",
                  "name" : "Sample Element",
                  "model" : "Sample Model",
                  "caCert" : "-----BEGIN CACERTIFICATE-----\nMIIGLT...\n-----END CACERTIFICATE-----\n",
                  "cert" : "-----BEGIN CERTIFICATE-----\nMIIGLT...\n-----END CERTIFICATE-----\n",
                  "key" : "-----BEGIN RSA PRIVATE KEY-----\nMIIJK...\n-----END RSA PRIVATE KEY-----\n",
                  "status" : "SampleStatus",
                  "registrationDate" : "1457566762",
                  "miscData" : {
                    "policyName" : "Sample Policy",
                    "policyId" : "Sample Policy Id",
                    "tidStatus" : "1"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_tid/v1/domain/{domainUUID}/tid/incident" : {
      "get" : {
        "tags" : [ "Intelligence" ],
        "description" : "**API Operations on Incident objects.**",
        "operationId" : "getAllRESTIncident",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/RESTIncidentListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_tid/v1/domain/domainUUID/tid/incident ( Example of GET all incidents (concise view) )" : {
                  "links" : {
                    "self" : "/fmc_tid/v1/domain/domainUUID/tid/incident"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "/fmc_tid/v1/domain/domainUUID/tid/incident/incidentUUID"
                    },
                    "id" : "incidentUUID",
                    "type" : "incident"
                  }, {
                    "links" : {
                      "self" : "/fmc_tid/v1/domain/domainUUID/tid/incident/incidentUUID"
                    },
                    "id" : "incidentUUID",
                    "type" : "incident"
                  }, {
                    "links" : {
                      "self" : "/fmc_tid/v1/domain/domainUUID/tid/incident/incidentUUID"
                    },
                    "id" : "incidentUUID",
                    "type" : "incident"
                  }, {
                    "links" : {
                      "self" : "/fmc_tid/v1/domain/domainUUID/tid/incident/incidentUUID"
                    },
                    "id" : "incidentUUID",
                    "type" : "incident"
                  }, {
                    "links" : {
                      "self" : "/fmc_tid/v1/domain/domainUUID/tid/incident/incidentUUID"
                    },
                    "id" : "incidentUUID",
                    "type" : "incident"
                  }, {
                    "links" : {
                      "self" : "/fmc_tid/v1/domain/domainUUID/tid/incident/incidentUUID"
                    },
                    "id" : "incidentUUID",
                    "type" : "incident"
                  }, {
                    "links" : {
                      "self" : "/fmc_tid/v1/domain/domainUUID/tid/incident/incidentUUID"
                    },
                    "id" : "incidentUUID",
                    "type" : "incident"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 7,
                    "count" : 7,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_tid/v1/domain/domainUUID/tid/incident?filter=updatedAt%3A1498629923..1499839523 ( Example of GET all incidents (with filter) )" : {
                  "links" : {
                    "self" : "/fmc_tid/v1/domain/domainUUID/tid/incident?filter=updatedAt:1498629923..1499839523"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "/fmc_tid/v1/domain/domainUUID/tid/incident/incidentUUID"
                    },
                    "id" : "incidentUUID",
                    "type" : "incident"
                  }, {
                    "links" : {
                      "self" : "/fmc_tid/v1/domain/domainUUID/tid/incident/incidentUUID"
                    },
                    "id" : "incidentUUID",
                    "type" : "incident"
                  }, {
                    "links" : {
                      "self" : "/fmc_tid/v1/domain/domainUUID/tid/incident/incidentUUID"
                    },
                    "id" : "incidentUUID",
                    "type" : "incident"
                  }, {
                    "links" : {
                      "self" : "/fmc_tid/v1/domain/domainUUID/tid/incident/incidentUUID"
                    },
                    "id" : "incidentUUID",
                    "type" : "incident"
                  }, {
                    "links" : {
                      "self" : "/fmc_tid/v1/domain/domainUUID/tid/incident/incidentUUID"
                    },
                    "id" : "incidentUUID",
                    "type" : "incident"
                  }, {
                    "links" : {
                      "self" : "/fmc_tid/v1/domain/domainUUID/tid/incident/incidentUUID"
                    },
                    "id" : "incidentUUID",
                    "type" : "incident"
                  }, {
                    "links" : {
                      "self" : "/fmc_tid/v1/domain/domainUUID/tid/incident/incidentUUID"
                    },
                    "id" : "incidentUUID",
                    "type" : "incident"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 7,
                    "count" : 7,
                    "pages" : 1
                  }
                },
                "Response Example 3 : GET /fmc_tid/v1/domain/domainUUID/tid/incident?expanded=true ( Example of GET all incidents (expanded view) )" : {
                  "links" : {
                    "self" : "/fmc_tid/v1/domain/domainUUID/tid/incident?expanded=true"
                  },
                  "items" : [ {
                    "updatedAt" : 1499839877,
                    "sourceName" : "guest.dataForLast_7daysOnly",
                    "equation" : {
                      "children" : [ {
                        "children" : [ {
                          "isRealized" : false,
                          "type" : "LL_UNSUPPORTED_OBJECT_TYPE|Port",
                          "value" : "IDREF:{http://hailataxii.com}Observable-fc5c11a8-b038-4abc-9641-2b495c78774a"
                        } ],
                        "condition" : "EQUALS",
                        "isRealized" : false,
                        "applyCondition" : "ANY"
                      }, {
                        "children" : [ {
                          "isRealized" : false,
                          "type" : "DomainNameObjectType",
                          "value" : "domainNameValue"
                        } ],
                        "condition" : "EQUALS",
                        "isRealized" : false,
                        "applyCondition" : "ANY"
                      }, {
                        "children" : [ {
                          "isRealized" : true,
                          "type" : "IPV_4_ADDR",
                          "value" : "ipAddressValue"
                        } ],
                        "condition" : "EQUALS",
                        "isRealized" : true,
                        "applyCondition" : "ANY"
                      } ],
                      "isRealized" : true,
                      "op" : "OR"
                    },
                    "indicatorName" : "Test Indicators",
                    "observations" : [ {
                      "count" : 1,
                      "elementName" : "elementName",
                      "elementId" : "elementUUID",
                      "type" : "observation",
                      "data" : {
                        "miscData" : {
                          "appId" : "ICMP",
                          "clientId" : "ICMP client",
                          "connectionSec" : "1498739637",
                          "counter" : "83",
                          "destIpAddress" : "ipAddressValue",
                          "destPort" : "0",
                          "destZone" : "AutomatedInlineSZ",
                          "instanceId" : "1",
                          "protocol" : "ICMP",
                          "srcIpAddress" : "ipAddressValue",
                          "srcPort" : "8",
                          "srcZone" : "AutomatedInlineSZ",
                          "userId" : "No Authentication Required"
                        },
                        "actionTaken" : "none",
                        "type" : "IPV_4_ADDR",
                        "value" : "ipAddressValue"
                      },
                      "timestamp" : 1498739637
                    } ],
                    "indicatorId" : "indicatorUUID",
                    "feedId" : "feedUUID",
                    "realizedAt" : 1498739702,
                    "actionTaken" : "monitored",
                    "property" : {
                      "ttl" : 90,
                      "whitelist" : false,
                      "expirationTime" : 1506514677,
                      "publish" : true,
                      "action" : "monitor"
                    },
                    "status" : "new",
                    "links" : {
                      "self" : "/fmc_tid/v1/domain/domainUUID/tid/incident/incidentUUID"
                    },
                    "id" : "incidentUUID",
                    "type" : "incident",
                    "version" : "1.0.0",
                    "description" : "123 blah"
                  }, {
                    "updatedAt" : 1499839877,
                    "sourceName" : "guest.dataForLast_7daysOnly",
                    "equation" : {
                      "children" : [ {
                        "children" : [ {
                          "isRealized" : false,
                          "type" : "LL_UNSUPPORTED_OBJECT_TYPE|Port",
                          "value" : "IDREF:{http://hailataxii.com}Observable-fc5c11a8-b038-4abc-9641-2b495c78774a"
                        } ],
                        "condition" : "EQUALS",
                        "isRealized" : false,
                        "applyCondition" : "ANY"
                      }, {
                        "children" : [ {
                          "isRealized" : false,
                          "type" : "DomainNameObjectType",
                          "value" : "domainNameValue"
                        } ],
                        "condition" : "EQUALS",
                        "isRealized" : false,
                        "applyCondition" : "ANY"
                      }, {
                        "children" : [ {
                          "isRealized" : true,
                          "type" : "IPV_4_ADDR",
                          "value" : "ipAddressValue"
                        } ],
                        "condition" : "EQUALS",
                        "isRealized" : true,
                        "applyCondition" : "ANY"
                      } ],
                      "isRealized" : true,
                      "op" : "OR"
                    },
                    "indicatorName" : "Test Indicators",
                    "observations" : [ {
                      "count" : 1,
                      "elementName" : "elementName",
                      "elementId" : "elementUUID",
                      "type" : "observation",
                      "data" : {
                        "miscData" : {
                          "appId" : "ICMP",
                          "clientId" : "ICMP client",
                          "connectionSec" : "1498739637",
                          "counter" : "83",
                          "destIpAddress" : "ipAddressValue",
                          "destPort" : "0",
                          "destZone" : "AutomatedInlineSZ",
                          "instanceId" : "1",
                          "protocol" : "ICMP",
                          "srcIpAddress" : "ipAddressValue",
                          "srcPort" : "8",
                          "srcZone" : "AutomatedInlineSZ",
                          "userId" : "No Authentication Required"
                        },
                        "actionTaken" : "none",
                        "type" : "IPV_4_ADDR",
                        "value" : "ipAddressValue"
                      },
                      "timestamp" : 1498739637
                    } ],
                    "indicatorId" : "indicatorUUID",
                    "feedId" : "feedUUID",
                    "realizedAt" : 1498739637,
                    "actionTaken" : "monitored",
                    "property" : {
                      "ttl" : 90,
                      "whitelist" : false,
                      "expirationTime" : 1506514677,
                      "publish" : true,
                      "action" : "monitor"
                    },
                    "status" : "new",
                    "links" : {
                      "self" : "/fmc_tid/v1/domain/domainUUID/tid/incident/incidentUUID"
                    },
                    "id" : "incidentUUID",
                    "type" : "incident",
                    "version" : "1.0.0"
                  }, {
                    "updatedAt" : 1499839877,
                    "sourceName" : "guest.dataForLast_7daysOnly",
                    "equation" : {
                      "children" : [ {
                        "children" : [ {
                          "isRealized" : false,
                          "type" : "LL_UNSUPPORTED_OBJECT_TYPE|Port",
                          "value" : "IDREF:{http://hailataxii.com}Observable-fbdadbd3-dc8f-4f21-8736-1123903a056f"
                        } ],
                        "condition" : "EQUALS",
                        "isRealized" : false,
                        "applyCondition" : "ANY"
                      }, {
                        "children" : [ {
                          "isRealized" : false,
                          "type" : "IPV_4_ADDR",
                          "value" : "ipAddressValue"
                        } ],
                        "condition" : "EQUALS",
                        "isRealized" : false,
                        "applyCondition" : "ANY"
                      }, {
                        "children" : [ {
                          "isRealized" : true,
                          "type" : "DomainNameObjectType",
                          "value" : "domainNameValue"
                        } ],
                        "condition" : "EQUALS",
                        "isRealized" : true,
                        "applyCondition" : "ANY"
                      } ],
                      "isRealized" : true,
                      "op" : "OR"
                    },
                    "indicatorName" : "Test Indicators",
                    "observations" : [ {
                      "count" : 1,
                      "elementName" : "elementName",
                      "elementId" : "elementUUID",
                      "type" : "observation",
                      "data" : {
                        "miscData" : {
                          "appId" : "DNS",
                          "clientId" : "DNS",
                          "connectionSec" : "1498739586",
                          "counter" : "78",
                          "destIpAddress" : "ipAddressValue",
                          "destPort" : "53",
                          "destZone" : "AutomatedInlineSZ",
                          "dnsResponse" : "No Error",
                          "instanceId" : "1",
                          "protocol" : "UDP",
                          "srcIpAddress" : "ipAddressValue",
                          "srcPort" : "41641",
                          "srcZone" : "AutomatedInlineSZ",
                          "userId" : "No Authentication Required"
                        },
                        "actionTaken" : "none",
                        "type" : "DomainNameObjectType",
                        "value" : "domainNameValue"
                      },
                      "timestamp" : 1498739586
                    } ],
                    "indicatorId" : "indicatorUUID",
                    "feedId" : "feedUUID",
                    "realizedAt" : 1498739618,
                    "actionTaken" : "monitored",
                    "property" : {
                      "ttl" : 90,
                      "whitelist" : false,
                      "expirationTime" : 1506514581,
                      "publish" : true,
                      "action" : "monitor"
                    },
                    "status" : "new",
                    "links" : {
                      "self" : "/fmc_tid/v1/domain/domainUUID/tid/incident/incidentUUID"
                    },
                    "id" : "incidentUUID",
                    "type" : "incident",
                    "version" : "1.0.0"
                  }, {
                    "updatedAt" : 1499840402,
                    "sourceName" : "guest.dataForLast_7daysOnly",
                    "equation" : {
                      "children" : [ {
                        "children" : [ {
                          "isRealized" : false,
                          "type" : "LL_UNSUPPORTED_OBJECT_TYPE|Port",
                          "value" : "IDREF:{http://hailataxii.com}Observable-fbdadbd3-dc8f-4f21-8736-1123903a056f"
                        } ],
                        "condition" : "EQUALS",
                        "isRealized" : false,
                        "applyCondition" : "ANY"
                      }, {
                        "children" : [ {
                          "isRealized" : false,
                          "type" : "LL_UNSUPPORTED_OBJECT_TYPE|Port",
                          "value" : "IDREF:{http://hailataxii.com}Observable-ffed4f18-a648-4162-a088-a529f218ff96"
                        } ],
                        "condition" : "EQUALS",
                        "isRealized" : false,
                        "applyCondition" : "ANY"
                      }, {
                        "children" : [ {
                          "isRealized" : false,
                          "type" : "IPV_4_ADDR",
                          "value" : "ipAddressValue"
                        } ],
                        "condition" : "EQUALS",
                        "isRealized" : false,
                        "applyCondition" : "ANY"
                      }, {
                        "children" : [ {
                          "isRealized" : true,
                          "type" : "DomainNameObjectType",
                          "value" : "domainNameValue"
                        } ],
                        "condition" : "EQUALS",
                        "isRealized" : true,
                        "applyCondition" : "ANY"
                      } ],
                      "isRealized" : true,
                      "op" : "OR"
                    },
                    "indicatorName" : "Test Indicators 2",
                    "observations" : [ {
                      "count" : 1,
                      "elementName" : "elementName",
                      "elementId" : "elementUUID",
                      "type" : "observation",
                      "data" : {
                        "miscData" : {
                          "appId" : "DNS",
                          "clientId" : "DNS",
                          "connectionSec" : "1498739571",
                          "counter" : "77",
                          "destIpAddress" : "ipAddressValue",
                          "destPort" : "53",
                          "destZone" : "AutomatedInlineSZ",
                          "dnsResponse" : "No Error",
                          "instanceId" : "1",
                          "protocol" : "UDP",
                          "srcIpAddress" : "ipAddressValue",
                          "srcPort" : "41207",
                          "srcZone" : "AutomatedInlineSZ",
                          "userId" : "No Authentication Required"
                        },
                        "actionTaken" : "none",
                        "type" : "DomainNameObjectType",
                        "value" : "domainNameValue"
                      },
                      "timestamp" : 1498739571
                    } ],
                    "indicatorId" : "indicatorUUID",
                    "feedId" : "feedUUID",
                    "realizedAt" : 1498739604,
                    "actionTaken" : "monitored",
                    "property" : {
                      "ttl" : 90,
                      "whitelist" : false,
                      "expirationTime" : 1506514581,
                      "publish" : true,
                      "action" : "monitor"
                    },
                    "status" : "new",
                    "links" : {
                      "self" : "/fmc_tid/v1/domain/domainUUID/tid/incident/incidentUUID"
                    },
                    "id" : "incidentUUID",
                    "type" : "incident",
                    "version" : "1.0.0"
                  }, {
                    "updatedAt" : 1499839877,
                    "sourceName" : "guest.dataForLast_7daysOnly",
                    "equation" : {
                      "children" : [ {
                        "children" : [ {
                          "isRealized" : false,
                          "type" : "LL_UNSUPPORTED_OBJECT_TYPE|Port",
                          "value" : "IDREF:{http://hailataxii.com}Observable-fbdadbd3-dc8f-4f21-8736-1123903a056f"
                        } ],
                        "condition" : "EQUALS",
                        "isRealized" : false,
                        "applyCondition" : "ANY"
                      }, {
                        "children" : [ {
                          "isRealized" : false,
                          "type" : "IPV_4_ADDR",
                          "value" : "ipAddressValue"
                        } ],
                        "condition" : "EQUALS",
                        "isRealized" : false,
                        "applyCondition" : "ANY"
                      }, {
                        "children" : [ {
                          "isRealized" : true,
                          "type" : "DomainNameObjectType",
                          "value" : "domainNameValue"
                        } ],
                        "condition" : "EQUALS",
                        "isRealized" : true,
                        "applyCondition" : "ANY"
                      } ],
                      "isRealized" : true,
                      "op" : "OR"
                    },
                    "indicatorName" : "Test Indicators 3",
                    "observations" : [ {
                      "count" : 1,
                      "elementName" : "elementName",
                      "elementId" : "elementUUID",
                      "type" : "observation",
                      "data" : {
                        "miscData" : {
                          "clientId" : "DNS",
                          "connectionSec" : "1498739586",
                          "counter" : "78",
                          "destIpAddress" : "ipAddressValue",
                          "destPort" : "53",
                          "destZone" : "AutomatedInlineSZ",
                          "dnsResponse" : "No Error",
                          "instanceId" : "1",
                          "protocol" : "UDP",
                          "srcIpAddress" : "ipAddressValue",
                          "srcPort" : "41641",
                          "srcZone" : "AutomatedInlineSZ",
                          "userId" : "No Authentication Required"
                        },
                        "actionTaken" : "none",
                        "type" : "DomainNameObjectType",
                        "value" : "domainNameValue"
                      },
                      "timestamp" : 1498739586
                    } ],
                    "indicatorId" : "indicatorUUID",
                    "feedId" : "feedUUID",
                    "realizedAt" : 1498739586,
                    "actionTaken" : "monitored",
                    "property" : {
                      "ttl" : 90,
                      "whitelist" : false,
                      "expirationTime" : 1506514581,
                      "publish" : true,
                      "action" : "monitor"
                    },
                    "status" : "new",
                    "links" : {
                      "self" : "/fmc_tid/v1/domain/domainUUID/tid/incident/incidentUUID"
                    },
                    "id" : "incidentUUID",
                    "type" : "incident",
                    "version" : "1.0.0"
                  }, {
                    "updatedAt" : 1499839877,
                    "sourceName" : "guest.dataForLast_7daysOnly",
                    "equation" : {
                      "children" : [ {
                        "children" : [ {
                          "isRealized" : false,
                          "type" : "LL_UNSUPPORTED_OBJECT_TYPE|Port",
                          "value" : "IDREF:{http://hailataxii.com}Observable-fbdadbd3-dc8f-4f21-8736-1123903a056f"
                        } ],
                        "condition" : "EQUALS",
                        "isRealized" : false,
                        "applyCondition" : "ANY"
                      }, {
                        "children" : [ {
                          "isRealized" : false,
                          "type" : "LL_UNSUPPORTED_OBJECT_TYPE|Port",
                          "value" : "IDREF:{http://hailataxii.com}Observable-ffed4f18-a648-4162-a088-a529f218ff96"
                        } ],
                        "condition" : "EQUALS",
                        "isRealized" : false,
                        "applyCondition" : "ANY"
                      }, {
                        "children" : [ {
                          "isRealized" : false,
                          "type" : "IPV_4_ADDR",
                          "value" : "ipAddressValue"
                        } ],
                        "condition" : "EQUALS",
                        "isRealized" : false,
                        "applyCondition" : "ANY"
                      }, {
                        "children" : [ {
                          "isRealized" : true,
                          "type" : "DomainNameObjectType",
                          "value" : "domainNameValue"
                        } ],
                        "condition" : "EQUALS",
                        "isRealized" : true,
                        "applyCondition" : "ANY"
                      } ],
                      "isRealized" : true,
                      "op" : "OR"
                    },
                    "indicatorName" : "Test Indicator 4",
                    "observations" : [ {
                      "count" : 1,
                      "elementName" : "elementName",
                      "elementId" : "elementUUID",
                      "type" : "observation",
                      "data" : {
                        "miscData" : {
                          "clientId" : "DNS",
                          "connectionSec" : "1498739571",
                          "counter" : "77",
                          "destIpAddress" : "ipAddressValue",
                          "destPort" : "53",
                          "destZone" : "AutomatedInlineSZ",
                          "dnsResponse" : "No Error",
                          "instanceId" : "1",
                          "protocol" : "UDP",
                          "srcIpAddress" : "ipAddressValue",
                          "srcPort" : "41207",
                          "srcZone" : "AutomatedInlineSZ",
                          "userId" : "No Authentication Required"
                        },
                        "actionTaken" : "none",
                        "type" : "DomainNameObjectType",
                        "value" : "domainNameValue"
                      },
                      "timestamp" : 1498739571
                    } ],
                    "indicatorId" : "indicatorUUID",
                    "feedId" : "feedUUID",
                    "realizedAt" : 1498739571,
                    "actionTaken" : "monitored",
                    "property" : {
                      "ttl" : 90,
                      "whitelist" : false,
                      "expirationTime" : 1506514581,
                      "publish" : true,
                      "action" : "monitor"
                    },
                    "status" : "new",
                    "links" : {
                      "self" : "/fmc_tid/v1/domain/domainUUID/tid/incident/incidentUUID"
                    },
                    "id" : "incidentUUID",
                    "type" : "incident",
                    "version" : "1.0.0"
                  }, {
                    "updatedAt" : 1499839877,
                    "sourceName" : "SHA256_feed",
                    "equation" : {
                      "children" : [ {
                        "children" : [ {
                          "children" : [ {
                            "isRealized" : true,
                            "type" : "SHA256",
                            "value" : "sha256Value"
                          } ],
                          "condition" : "EQUALS",
                          "isRealized" : true,
                          "applyCondition" : "ANY"
                        }, {
                          "children" : [ {
                            "isRealized" : false,
                            "type" : "SHA256",
                            "value" : "sha256Value"
                          } ],
                          "condition" : "EQUALS",
                          "isRealized" : false,
                          "applyCondition" : "ANY"
                        }, {
                          "children" : [ {
                            "isRealized" : false,
                            "type" : "SHA256",
                            "value" : "sha256Value"
                          } ],
                          "condition" : "EQUALS",
                          "isRealized" : false,
                          "applyCondition" : "ANY"
                        }, {
                          "children" : [ {
                            "isRealized" : false,
                            "type" : "SHA256",
                            "value" : "sha256Value"
                          } ],
                          "condition" : "EQUALS",
                          "isRealized" : false,
                          "applyCondition" : "ANY"
                        }, {
                          "children" : [ {
                            "isRealized" : false,
                            "type" : "SHA256",
                            "value" : "sha256Value"
                          } ],
                          "condition" : "EQUALS",
                          "isRealized" : false,
                          "applyCondition" : "ANY"
                        } ],
                        "isRealized" : false,
                        "op" : "AND"
                      }, {
                        "children" : [ {
                          "isRealized" : false,
                          "type" : "SHA256",
                          "value" : "sha256Value"
                        } ],
                        "condition" : "EQUALS",
                        "isRealized" : false,
                        "applyCondition" : "ANY"
                      }, {
                        "children" : [ {
                          "isRealized" : false,
                          "type" : "SHA256",
                          "value" : "sha256Value"
                        } ],
                        "condition" : "EQUALS",
                        "isRealized" : false,
                        "applyCondition" : "ANY"
                      }, {
                        "children" : [ {
                          "isRealized" : false,
                          "type" : "SHA256",
                          "value" : "sha256Value"
                        } ],
                        "condition" : "EQUALS",
                        "isRealized" : false,
                        "applyCondition" : "ANY"
                      }, {
                        "children" : [ {
                          "isRealized" : false,
                          "type" : "SHA256",
                          "value" : "sha256Value"
                        } ],
                        "condition" : "EQUALS",
                        "isRealized" : false,
                        "applyCondition" : "ANY"
                      }, {
                        "children" : [ {
                          "isRealized" : false,
                          "type" : "SHA256",
                          "value" : "sha256Value"
                        } ],
                        "condition" : "EQUALS",
                        "isRealized" : false,
                        "applyCondition" : "ANY"
                      } ],
                      "isRealized" : false,
                      "op" : "OR"
                    },
                    "indicatorName" : "Test Indicators 5",
                    "observations" : [ {
                      "count" : 1,
                      "elementName" : "elementName",
                      "elementId" : "elementUUID",
                      "type" : "observation",
                      "data" : {
                        "miscData" : {
                          "appId" : "HTTP",
                          "clientId" : "Wget",
                          "connectionSec" : "1498739289",
                          "counter" : "46",
                          "destIpAddress" : "ipAddressValue",
                          "destPort" : "80",
                          "instanceId" : "1",
                          "protocol" : "TCP",
                          "srcIpAddress" : "ipAddressValue",
                          "srcPort" : "39749",
                          "userId" : "No Authentication Required"
                        },
                        "actionTaken" : "none",
                        "type" : "SHA256",
                        "value" : "sha256Value"
                      },
                      "timestamp" : 1498739292
                    }, {
                      "count" : 2,
                      "elementName" : "elementName",
                      "elementId" : "elementUUID",
                      "type" : "observation",
                      "data" : {
                        "miscData" : {
                          "appId" : "HTTP",
                          "clientId" : "Wget",
                          "connectionSec" : "1498739351",
                          "counter" : "57",
                          "destIpAddress" : "ipAddressValue",
                          "destPort" : "80",
                          "instanceId" : "1",
                          "protocol" : "TCP",
                          "srcIpAddress" : "ipAddressValue",
                          "srcPort" : "39753",
                          "userId" : "No Authentication Required"
                        },
                        "actionTaken" : "blocked",
                        "type" : "SHA256",
                        "value" : "sha256Value"
                      },
                      "timestamp" : 1498739351
                    } ],
                    "indicatorId" : "indicatorUUID",
                    "feedId" : "feedUUID",
                    "realizedAt" : 0,
                    "actionTaken" : "partiallyBlocked",
                    "property" : {
                      "ttl" : 90,
                      "whitelist" : false,
                      "expirationTime" : 1506514284,
                      "publish" : true,
                      "action" : "monitor"
                    },
                    "status" : "new",
                    "links" : {
                      "self" : "/fmc_tid/v1/domain/domainUUID/tid/incident/incidentUUID"
                    },
                    "id" : "incidentUUID",
                    "type" : "incident",
                    "version" : "1.0.0"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 7,
                    "count" : 7,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_tid/v1/domain/{domainUUID}/tid/incident/{objectId}" : {
      "get" : {
        "tags" : [ "Intelligence" ],
        "description" : "**API Operations on Incident objects.**",
        "operationId" : "getRESTIncident",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the Incident.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/RESTIncident"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_tid/v1/domain/domainUUID/tid/incident/incidentUUID ( Example of GET by id )" : {
                  "updatedAt" : 1499839877,
                  "sourceName" : "Test URL Source",
                  "equation" : {
                    "children" : [ {
                      "children" : [ {
                        "children" : [ {
                          "isRealized" : true,
                          "type" : "SHA256",
                          "value" : "sha256Value"
                        } ],
                        "condition" : "EQUALS",
                        "isRealized" : true,
                        "applyCondition" : "ANY"
                      }, {
                        "children" : [ {
                          "isRealized" : false,
                          "type" : "SHA256",
                          "value" : "sha256Value"
                        } ],
                        "condition" : "EQUALS",
                        "isRealized" : false,
                        "applyCondition" : "ANY"
                      }, {
                        "children" : [ {
                          "isRealized" : false,
                          "type" : "SHA256",
                          "value" : "sha256Value"
                        } ],
                        "condition" : "EQUALS",
                        "isRealized" : false,
                        "applyCondition" : "ANY"
                      }, {
                        "children" : [ {
                          "isRealized" : false,
                          "type" : "SHA256",
                          "value" : "sha256Value"
                        } ],
                        "condition" : "EQUALS",
                        "isRealized" : false,
                        "applyCondition" : "ANY"
                      }, {
                        "children" : [ {
                          "isRealized" : false,
                          "type" : "SHA256",
                          "value" : "sha256Value"
                        } ],
                        "condition" : "EQUALS",
                        "isRealized" : false,
                        "applyCondition" : "ANY"
                      } ],
                      "isRealized" : false,
                      "op" : "AND"
                    }, {
                      "children" : [ {
                        "isRealized" : false,
                        "type" : "SHA256",
                        "value" : "sha256Value"
                      } ],
                      "condition" : "EQUALS",
                      "isRealized" : false,
                      "applyCondition" : "ANY"
                    }, {
                      "children" : [ {
                        "isRealized" : false,
                        "type" : "SHA256",
                        "value" : "sha256Value"
                      } ],
                      "condition" : "EQUALS",
                      "isRealized" : false,
                      "applyCondition" : "ANY"
                    }, {
                      "children" : [ {
                        "isRealized" : false,
                        "type" : "SHA256",
                        "value" : "sha256Value"
                      } ],
                      "condition" : "EQUALS",
                      "isRealized" : false,
                      "applyCondition" : "ANY"
                    }, {
                      "children" : [ {
                        "isRealized" : false,
                        "type" : "SHA256",
                        "value" : "sha256Value"
                      } ],
                      "condition" : "EQUALS",
                      "isRealized" : false,
                      "applyCondition" : "ANY"
                    }, {
                      "children" : [ {
                        "isRealized" : false,
                        "type" : "SHA256",
                        "value" : "sha256Value"
                      } ],
                      "condition" : "EQUALS",
                      "isRealized" : false,
                      "applyCondition" : "ANY"
                    } ],
                    "isRealized" : false,
                    "op" : "OR"
                  },
                  "indicatorName" : "Test Indicators",
                  "observations" : [ {
                    "count" : 1,
                    "elementName" : "elementName",
                    "elementId" : "elementUUID",
                    "type" : "observation",
                    "data" : {
                      "miscData" : {
                        "appId" : "HTTP",
                        "clientId" : "Wget",
                        "connectionSec" : "1498739289",
                        "counter" : "46",
                        "destIpAddress" : "ipAddressValue",
                        "destPort" : "80",
                        "instanceId" : "1",
                        "protocol" : "TCP",
                        "srcIpAddress" : "ipAddressValue",
                        "srcPort" : "39749",
                        "userId" : "No Authentication Required"
                      },
                      "actionTaken" : "none",
                      "type" : "SHA256",
                      "value" : "sha256Value"
                    },
                    "timestamp" : 1498739292
                  }, {
                    "count" : 2,
                    "elementName" : "elementName",
                    "elementId" : "elementUUID",
                    "type" : "observation",
                    "data" : {
                      "miscData" : {
                        "appId" : "HTTP",
                        "clientId" : "Wget",
                        "connectionSec" : "1498739351",
                        "counter" : "57",
                        "destIpAddress" : "ipAddressValue",
                        "destPort" : "80",
                        "instanceId" : "1",
                        "protocol" : "TCP",
                        "srcIpAddress" : "ipAddressValue",
                        "srcPort" : "39753",
                        "userId" : "No Authentication Required"
                      },
                      "actionTaken" : "blocked",
                      "type" : "SHA256",
                      "value" : "sha256Value"
                    },
                    "timestamp" : 1498739351
                  } ],
                  "indicatorId" : "indicatorUUID",
                  "feedId" : "feedUUID",
                  "realizedAt" : 0,
                  "actionTaken" : "partiallyBlocked",
                  "property" : {
                    "ttl" : 90,
                    "whitelist" : false,
                    "expirationTime" : 1506514284,
                    "publish" : true,
                    "action" : "monitor"
                  },
                  "status" : "new",
                  "links" : {
                    "self" : "/fmc_tid/v1/domain/domainUUID/tid/incident/incidentUUID"
                  },
                  "id" : "incidentUUID",
                  "type" : "incident",
                  "version" : "1.0.0"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Intelligence" ],
        "description" : "**API Operations on Incident objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateRESTIncident",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the Incident.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The input Incident object model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RESTIncident"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/RESTIncident"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_tid/v1/domain/domainUUID/tid/incident/incidentUUID ( Example of PUT for Incident (change name and status) )" : {
                  "updatedAt" : 1499839877,
                  "sourceName" : "Test STIX Feed",
                  "equation" : {
                    "children" : [ {
                      "children" : [ {
                        "isRealized" : false,
                        "type" : "LL_UNSUPPORTED_OBJECT_TYPE|Port",
                        "value" : "IDREF:{http://hailataxii.com}Observable-fbdadbd3-dc8f-4f21-8736-1123903a056f"
                      } ],
                      "condition" : "EQUALS",
                      "isRealized" : false,
                      "applyCondition" : "ANY"
                    }, {
                      "children" : [ {
                        "isRealized" : false,
                        "type" : "LL_UNSUPPORTED_OBJECT_TYPE|Port",
                        "value" : "IDREF:{http://hailataxii.com}Observable-ffed4f18-a648-4162-a088-a529f218ff96"
                      } ],
                      "condition" : "EQUALS",
                      "isRealized" : false,
                      "applyCondition" : "ANY"
                    }, {
                      "children" : [ {
                        "isRealized" : false,
                        "type" : "IPV_4_ADDR",
                        "value" : "ipAddressValue"
                      } ],
                      "condition" : "EQUALS",
                      "isRealized" : false,
                      "applyCondition" : "ANY"
                    }, {
                      "children" : [ {
                        "isRealized" : true,
                        "type" : "DomainNameObjectType",
                        "value" : "domainNameValue"
                      } ],
                      "condition" : "EQUALS",
                      "isRealized" : true,
                      "applyCondition" : "ANY"
                    } ],
                    "isRealized" : true,
                    "op" : "OR"
                  },
                  "indicatorName" : "Test Indicators",
                  "observations" : [ {
                    "count" : 1,
                    "elementName" : "elementName",
                    "elementId" : "elementUUID",
                    "type" : "observation",
                    "data" : {
                      "miscData" : {
                        "appId" : "DNS",
                        "clientId" : "DNS",
                        "connectionSec" : "1498739571",
                        "counter" : "77",
                        "destIpAddress" : "ipAddressValue",
                        "destPort" : "53",
                        "destZone" : "AutomatedInlineSZ",
                        "dnsResponse" : "No Error",
                        "instanceId" : "1",
                        "protocol" : "UDP",
                        "srcIpAddress" : "ipAddressValue",
                        "srcPort" : "41207",
                        "srcZone" : "AutomatedInlineSZ",
                        "userId" : "No Authentication Required"
                      },
                      "actionTaken" : "none",
                      "type" : "DomainNameObjectType",
                      "value" : "domainNameValue"
                    },
                    "timestamp" : 1498739571
                  } ],
                  "indicatorId" : "indicatorUUID",
                  "feedId" : "feedUUID",
                  "realizedAt" : 1498739604,
                  "actionTaken" : "monitored",
                  "property" : {
                    "ttl" : 90,
                    "whitelist" : false,
                    "expirationTime" : 1506514581,
                    "publish" : true,
                    "action" : "monitor"
                  },
                  "status" : "new",
                  "id" : "incidentUUID",
                  "type" : "incident",
                  "version" : "1.0.0",
                  "name" : "Incident"
                },
                "Response Example 1 :PUT /fmc_tid/v1/domain/domainUUID/tid/incident/incidentUUID ( Example of PUT for Incident (change name and status) )" : {
                  "updatedAt" : 1499840397,
                  "sourceName" : "Test STIX Feed",
                  "equation" : {
                    "children" : [ {
                      "children" : [ {
                        "isRealized" : false,
                        "type" : "LL_UNSUPPORTED_OBJECT_TYPE|Port",
                        "value" : "IDREF:{http://hailataxii.com}Observable-fbdadbd3-dc8f-4f21-8736-1123903a056f"
                      } ],
                      "condition" : "EQUALS",
                      "isRealized" : false,
                      "applyCondition" : "ANY"
                    }, {
                      "children" : [ {
                        "isRealized" : false,
                        "type" : "LL_UNSUPPORTED_OBJECT_TYPE|Port",
                        "value" : "IDREF:{http://hailataxii.com}Observable-ffed4f18-a648-4162-a088-a529f218ff96"
                      } ],
                      "condition" : "EQUALS",
                      "isRealized" : false,
                      "applyCondition" : "ANY"
                    }, {
                      "children" : [ {
                        "isRealized" : false,
                        "type" : "IPV_4_ADDR",
                        "value" : "ipAddressValue"
                      } ],
                      "condition" : "EQUALS",
                      "isRealized" : false,
                      "applyCondition" : "ANY"
                    }, {
                      "children" : [ {
                        "isRealized" : true,
                        "type" : "DomainNameObjectType",
                        "value" : "domainNameValue"
                      } ],
                      "condition" : "EQUALS",
                      "isRealized" : true,
                      "applyCondition" : "ANY"
                    } ],
                    "isRealized" : true,
                    "op" : "OR"
                  },
                  "indicatorName" : "Test Indicators",
                  "observations" : [ {
                    "count" : 1,
                    "elementName" : "elementName",
                    "elementId" : "elementUUID",
                    "type" : "observation",
                    "data" : {
                      "miscData" : {
                        "appId" : "DNS",
                        "clientId" : "DNS",
                        "connectionSec" : "1498739571",
                        "counter" : "77",
                        "destIpAddress" : "ipAddressValue",
                        "destPort" : "53",
                        "destZone" : "AutomatedInlineSZ",
                        "dnsResponse" : "No Error",
                        "instanceId" : "1",
                        "protocol" : "UDP",
                        "srcIpAddress" : "ipAddressValue",
                        "srcPort" : "41207",
                        "srcZone" : "AutomatedInlineSZ",
                        "userId" : "No Authentication Required"
                      },
                      "actionTaken" : "none",
                      "type" : "DomainNameObjectType",
                      "value" : "domainNameValue"
                    },
                    "timestamp" : 1498739571
                  } ],
                  "indicatorId" : "indicatorUUID",
                  "feedId" : "feedUUID",
                  "realizedAt" : 1498739604,
                  "actionTaken" : "monitored",
                  "property" : {
                    "ttl" : 90,
                    "whitelist" : false,
                    "expirationTime" : 1506514581,
                    "publish" : true,
                    "action" : "monitor"
                  },
                  "status" : "closed",
                  "links" : {
                    "self" : "/fmc_tid/v1/domain/domainUUID/tid/incident/incidentUUID"
                  },
                  "id" : "incidentUUID",
                  "type" : "incident",
                  "version" : "1.0.0",
                  "name" : "Incident Closed"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/RESTIncident"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Intelligence" ],
        "description" : "**API Operations on Incident objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteRESTIncident",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the Incident.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/RESTIncident"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /fmc_tid/v1/domain/domainUUID/tid/incident/incidentUUID ( Example of DELETE by id )" : {
                  "updatedAt" : 1499839877,
                  "sourceName" : "Test URL Source",
                  "equation" : {
                    "children" : [ {
                      "children" : [ {
                        "children" : [ {
                          "isRealized" : true,
                          "type" : "SHA256",
                          "value" : "sha256Value"
                        } ],
                        "condition" : "EQUALS",
                        "isRealized" : true,
                        "applyCondition" : "ANY"
                      }, {
                        "children" : [ {
                          "isRealized" : false,
                          "type" : "SHA256",
                          "value" : "sha256Value"
                        } ],
                        "condition" : "EQUALS",
                        "isRealized" : false,
                        "applyCondition" : "ANY"
                      }, {
                        "children" : [ {
                          "isRealized" : false,
                          "type" : "SHA256",
                          "value" : "sha256Value"
                        } ],
                        "condition" : "EQUALS",
                        "isRealized" : false,
                        "applyCondition" : "ANY"
                      }, {
                        "children" : [ {
                          "isRealized" : false,
                          "type" : "SHA256",
                          "value" : "sha256Value"
                        } ],
                        "condition" : "EQUALS",
                        "isRealized" : false,
                        "applyCondition" : "ANY"
                      }, {
                        "children" : [ {
                          "isRealized" : false,
                          "type" : "SHA256",
                          "value" : "sha256Value"
                        } ],
                        "condition" : "EQUALS",
                        "isRealized" : false,
                        "applyCondition" : "ANY"
                      } ],
                      "isRealized" : false,
                      "op" : "AND"
                    }, {
                      "children" : [ {
                        "isRealized" : false,
                        "type" : "SHA256",
                        "value" : "sha256Value"
                      } ],
                      "condition" : "EQUALS",
                      "isRealized" : false,
                      "applyCondition" : "ANY"
                    }, {
                      "children" : [ {
                        "isRealized" : false,
                        "type" : "SHA256",
                        "value" : "sha256Value"
                      } ],
                      "condition" : "EQUALS",
                      "isRealized" : false,
                      "applyCondition" : "ANY"
                    }, {
                      "children" : [ {
                        "isRealized" : false,
                        "type" : "SHA256",
                        "value" : "sha256Value"
                      } ],
                      "condition" : "EQUALS",
                      "isRealized" : false,
                      "applyCondition" : "ANY"
                    }, {
                      "children" : [ {
                        "isRealized" : false,
                        "type" : "SHA256",
                        "value" : "sha256Value"
                      } ],
                      "condition" : "EQUALS",
                      "isRealized" : false,
                      "applyCondition" : "ANY"
                    }, {
                      "children" : [ {
                        "isRealized" : false,
                        "type" : "SHA256",
                        "value" : "sha256Value"
                      } ],
                      "condition" : "EQUALS",
                      "isRealized" : false,
                      "applyCondition" : "ANY"
                    } ],
                    "isRealized" : false,
                    "op" : "OR"
                  },
                  "indicatorName" : "Test Indicators",
                  "observations" : [ {
                    "count" : 1,
                    "elementName" : "elementName",
                    "elementId" : "elementUUID",
                    "type" : "observation",
                    "data" : {
                      "miscData" : {
                        "appId" : "HTTP",
                        "clientId" : "Wget",
                        "connectionSec" : "1498739289",
                        "counter" : "46",
                        "destIpAddress" : "ipAddressValue",
                        "destPort" : "80",
                        "instanceId" : "1",
                        "protocol" : "TCP",
                        "srcIpAddress" : "ipAddressValue",
                        "srcPort" : "39749",
                        "userId" : "No Authentication Required"
                      },
                      "actionTaken" : "none",
                      "type" : "SHA256",
                      "value" : "sha256Value"
                    },
                    "timestamp" : 1498739292
                  }, {
                    "count" : 2,
                    "elementName" : "elementName",
                    "elementId" : "elementUUID",
                    "type" : "observation",
                    "data" : {
                      "miscData" : {
                        "appId" : "HTTP",
                        "clientId" : "Wget",
                        "connectionSec" : "1498739351",
                        "counter" : "57",
                        "destIpAddress" : "ipAddressValue",
                        "destPort" : "80",
                        "instanceId" : "1",
                        "protocol" : "TCP",
                        "srcIpAddress" : "ipAddressValue",
                        "srcPort" : "39753",
                        "userId" : "No Authentication Required"
                      },
                      "actionTaken" : "blocked",
                      "type" : "SHA256",
                      "value" : "sha256Value"
                    },
                    "timestamp" : 1498739351
                  } ],
                  "indicatorId" : "indicatorUUID",
                  "feedId" : "feedUUID",
                  "realizedAt" : 0,
                  "actionTaken" : "partiallyBlocked",
                  "property" : {
                    "ttl" : 90,
                    "whitelist" : false,
                    "expirationTime" : 1506514284,
                    "publish" : true,
                    "action" : "monitor"
                  },
                  "status" : "new",
                  "links" : {
                    "self" : "/fmc_tid/v1/domain/domainUUID/tid/incident/incidentUUID"
                  },
                  "id" : "incidentUUID",
                  "type" : "incident",
                  "version" : "1.0.0"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_tid/v1/domain/{domainUUID}/tid/indicator" : {
      "get" : {
        "tags" : [ "Intelligence" ],
        "description" : "**API Operations on Indicator objects.**",
        "operationId" : "getAllRESTIndicator",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/RESTIndicatorListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_tid/v1/domain/domainUUID/tid/indicator ( Get all Indicator instances. )" : {
                  "links" : {
                    "self" : "/fmc_tid/v1/domain/domainUUID/tid/indicator"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "/fmc_tid/v1/domain/domainUUID/tid/indicator/indicatorUUID"
                    },
                    "id" : "indicatorUUID",
                    "type" : "indicator",
                    "name" : "Sample Indicator"
                  }, {
                    "links" : {
                      "self" : "/fmc_tid/v1/domain/domainUUID/tid/indicator/indicatorUUID"
                    },
                    "id" : "indicatorUUID",
                    "type" : "indicator",
                    "name" : "Sample Indicator 2"
                  }, {
                    "links" : {
                      "self" : "/fmc_tid/v1/domain/domainUUID/tid/indicator/indicatorUUID"
                    },
                    "id" : "indicatorUUID",
                    "type" : "indicator",
                    "name" : "Sample Indicator 3"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 3,
                    "count" : 3,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_tid/v1/domain/{domainUUID}/tid/indicator/{objectId}" : {
      "get" : {
        "tags" : [ "Intelligence" ],
        "description" : "**API Operations on Indicator objects.**",
        "operationId" : "getRESTIndicator",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the Indicator.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/RESTIndicator"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_tid/v1/domain/domainUUID/tid/indicator/indicatorUUID ( Get a single Indicator instance )" : {
                  "inheritedProperty" : {
                    "ttl" : 90,
                    "publish" : true,
                    "whitelist" : false,
                    "expirationTime" : 1506280028,
                    "action" : "monitor"
                  },
                  "effectiveProperty" : {
                    "ttl" : 90,
                    "publish" : true,
                    "whitelist" : false,
                    "expirationTime" : 1506280028,
                    "action" : "monitor"
                  },
                  "customProperty" : {
                    "publish" : true,
                    "action" : "monitor"
                  },
                  "feedId" : "feedUUID",
                  "equation" : {
                    "children" : [ {
                      "children" : [ {
                        "isRealized" : false,
                        "type" : "IPV_4_ADDR",
                        "value" : "IPV_4_ADDR:c4a098d02ba0407e165c14996f8eae6b65a119a2"
                      } ],
                      "condition" : "EQUALS",
                      "applyCondition" : "ANY",
                      "isRealized" : false
                    } ],
                    "isRealized" : false,
                    "op" : "OR"
                  },
                  "updatedAt" : 1499842559,
                  "sourceName" : "Test Flat File IPV4",
                  "containsUnsupported" : false,
                  "containsInvalid" : false,
                  "observables" : [ {
                    "inheritedProperty" : {
                      "ttl" : 90,
                      "publish" : true,
                      "whitelist" : false,
                      "expirationTime" : 1506280028,
                      "action" : "monitor"
                    },
                    "effectiveProperty" : {
                      "ttl" : 90,
                      "publish" : true,
                      "whitelist" : false,
                      "expirationTime" : 1506280028,
                      "action" : "monitor"
                    },
                    "indicatorCount" : 1,
                    "observableType" : "IPV_4_ADDR",
                    "updatedAt" : 1498504028,
                    "value" : "ipAddressValue",
                    "id" : "IPV_4_ADDR:c4a098d02ba0407e165c14996f8eae6b65a119a2",
                    "type" : "observable",
                    "name" : "Observable",
                    "version" : "1.0.0"
                  } ],
                  "indicatorVersion" : "1.0.0",
                  "noRealizedIncidents" : 0,
                  "noPartialIncidents" : 0,
                  "links" : {
                    "self" : "/fmc_tid/v1/domain/domainUUID/tid/indicator/indicatorUUID"
                  },
                  "id" : "indicatorUUID",
                  "type" : "indicator",
                  "name" : "Sample Indicator",
                  "version" : "1.0.0",
                  "description" : "Indicator description"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Intelligence" ],
        "description" : "**API Operations on Indicator objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateRESTIndicator",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the Indicator.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The input Indicator object model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RESTIndicator"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/RESTIndicator"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_tid/v1/domain/domainUUID/tid/indicator/indicatorUUID ( PUT Example for Indicator )" : {
                  "inheritedProperty" : {
                    "ttl" : 90,
                    "publish" : true,
                    "whitelist" : false,
                    "expirationTime" : 1506280028,
                    "action" : "monitor"
                  },
                  "effectiveProperty" : {
                    "ttl" : 90,
                    "publish" : true,
                    "whitelist" : false,
                    "expirationTime" : 1506280028,
                    "action" : "monitor"
                  },
                  "customProperty" : {
                    "publish" : true,
                    "action" : "block"
                  },
                  "feedId" : "feedUUID",
                  "equation" : {
                    "children" : [ {
                      "children" : [ {
                        "isRealized" : false,
                        "type" : "IPV_4_ADDR",
                        "value" : "IPV_4_ADDR:c4a098d02ba0407e165c14996f8eae6b65a119a2"
                      } ],
                      "condition" : "EQUALS",
                      "applyCondition" : "ANY",
                      "isRealized" : false
                    } ],
                    "isRealized" : false,
                    "op" : "OR"
                  },
                  "updatedAt" : 1499842559,
                  "sourceName" : "Test Flat File IPV4",
                  "containsUnsupported" : false,
                  "containsInvalid" : false,
                  "observables" : [ {
                    "inheritedProperty" : {
                      "ttl" : 90,
                      "publish" : true,
                      "whitelist" : false,
                      "expirationTime" : 1506280028,
                      "action" : "monitor"
                    },
                    "effectiveProperty" : {
                      "ttl" : 90,
                      "publish" : true,
                      "whitelist" : false,
                      "expirationTime" : 1506280028,
                      "action" : "monitor"
                    },
                    "indicatorCount" : 1,
                    "observableType" : "IPV_4_ADDR",
                    "updatedAt" : 1498504028,
                    "value" : "ipAddressValue",
                    "id" : "IPV_4_ADDR:c4a098d02ba0407e165c14996f8eae6b65a119a2",
                    "type" : "observable",
                    "name" : "Observable",
                    "version" : "1.0.0"
                  } ],
                  "indicatorVersion" : "1.0.0",
                  "noRealizedIncidents" : 0,
                  "noPartialIncidents" : 0,
                  "id" : "indicatorUUID",
                  "type" : "indicator",
                  "name" : "Sample Indicator IPV4",
                  "version" : "1.0.0",
                  "description" : "Indicator description changed"
                },
                "Response Example 1 :PUT /fmc_tid/v1/domain/domainUUID/tid/indicator/indicatorUUID ( PUT Example for Indicator )" : {
                  "inheritedProperty" : {
                    "ttl" : 90,
                    "publish" : true,
                    "whitelist" : false,
                    "expirationTime" : 1506280028,
                    "action" : "monitor"
                  },
                  "effectiveProperty" : {
                    "ttl" : 90,
                    "publish" : true,
                    "whitelist" : false,
                    "expirationTime" : 1506280028,
                    "action" : "block"
                  },
                  "customProperty" : {
                    "publish" : true,
                    "action" : "block"
                  },
                  "feedId" : "feedUUID",
                  "equation" : {
                    "children" : [ {
                      "children" : [ {
                        "isRealized" : false,
                        "type" : "IPV_4_ADDR",
                        "value" : "IPV_4_ADDR:c4a098d02ba0407e165c14996f8eae6b65a119a2"
                      } ],
                      "condition" : "EQUALS",
                      "applyCondition" : "ANY",
                      "isRealized" : false
                    } ],
                    "isRealized" : false,
                    "op" : "OR"
                  },
                  "updatedAt" : 1499843144,
                  "sourceName" : "Test Flat File IPV4",
                  "containsUnsupported" : false,
                  "containsInvalid" : false,
                  "observables" : [ {
                    "inheritedProperty" : {
                      "ttl" : 90,
                      "publish" : true,
                      "whitelist" : false,
                      "expirationTime" : 1506280028,
                      "action" : "monitor"
                    },
                    "effectiveProperty" : {
                      "ttl" : 90,
                      "publish" : true,
                      "whitelist" : false,
                      "expirationTime" : 1506280028,
                      "action" : "monitor"
                    },
                    "indicatorCount" : 1,
                    "observableType" : "IPV_4_ADDR",
                    "updatedAt" : 1498504028,
                    "value" : "ipAddressValue",
                    "id" : "IPV_4_ADDR:c4a098d02ba0407e165c14996f8eae6b65a119a2",
                    "type" : "observable",
                    "name" : "Observable",
                    "version" : "1.0.0"
                  } ],
                  "indicatorVersion" : "1.0.0",
                  "noRealizedIncidents" : 0,
                  "noPartialIncidents" : 0,
                  "links" : {
                    "self" : "/fmc_tid/v1/domain/domainUUID/tid/indicator/indicatorUUID"
                  },
                  "id" : "indicatorUUID",
                  "type" : "indicator",
                  "name" : "Sample Indicator IPV4",
                  "version" : "1.0.0",
                  "description" : "Indicator description changed"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/RESTIndicator"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_tid/v1/domain/{domainUUID}/tid/observable" : {
      "get" : {
        "tags" : [ "Intelligence" ],
        "description" : "**API Operations on Observable objects.**",
        "operationId" : "getAllRESTObservable",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/RESTObservableListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_tid/v1/domain/domainUUID/tid/observable ( Get all Observable instances. )" : {
                  "links" : {
                    "self" : "/fmc_tid/v1/domain/domainUUID/tid/observable"
                  },
                  "items" : [ {
                    "links" : {
                      "self" : "/fmc_tid/v1/domain/domainUUID/tid/observable/observableUUID"
                    },
                    "type" : "observable",
                    "name" : "Observable name 1"
                  }, {
                    "links" : {
                      "self" : "/fmc_tid/v1/domain/domainUUID/tid/observable/observableUUID"
                    },
                    "type" : "observable",
                    "name" : "Observable name 2"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 2,
                    "count" : 2,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/fmc_tid/v1/domain/{domainUUID}/tid/observable/{objectId}" : {
      "get" : {
        "tags" : [ "Intelligence" ],
        "description" : "**API Operations on Observable objects.**",
        "operationId" : "getRESTObservable",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the Observable.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/RESTObservable"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_tid/v1/domain/domainUUID/tid/observable/observableUUID ( Get a single Observable instance )" : {
                  "inheritedProperty" : {
                    "publish" : true,
                    "expirationTime" : 1493929252,
                    "whitelist" : false,
                    "action" : "monitor",
                    "ttl" : 90
                  },
                  "observableType" : "IPV_4_ADDR",
                  "effectiveProperty" : {
                    "publish" : true,
                    "expirationTime" : 1493929252,
                    "whitelist" : false,
                    "action" : "monitor",
                    "ttl" : 90
                  },
                  "indicatorCount" : 1,
                  "updatedAt" : 1486153252,
                  "value" : "ipAddressValue",
                  "links" : {
                    "self" : "/fmc_tid/v1/domain/domainUUID/tid/observable/observableUUID"
                  },
                  "id" : "observableUUID",
                  "type" : "observable",
                  "name" : "Observable name",
                  "version" : "1.0.0"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Intelligence" ],
        "description" : "**API Operations on Observable objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateRESTObservable",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the Observable.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The input Observable object model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RESTObservable"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/RESTObservable"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_tid/v1/domain/domainUUID/tid/observable/observableUUID ( PUT Observable instance )" : {
                  "inheritedProperty" : {
                    "publish" : true,
                    "expirationTime" : 1493929252,
                    "whitelist" : false,
                    "action" : "monitor",
                    "ttl" : 90
                  },
                  "observableType" : "IPV_4_ADDR",
                  "effectiveProperty" : {
                    "publish" : true,
                    "expirationTime" : 1493929252,
                    "whitelist" : false,
                    "action" : "monitor",
                    "ttl" : 90
                  },
                  "indicatorCount" : 1,
                  "updatedAt" : 1486153252,
                  "value" : "ipAddressValue",
                  "id" : "observableUUID",
                  "type" : "observable",
                  "name" : "Observable name 2",
                  "version" : "1.0.0",
                  "customProperty" : {
                    "whitelist" : true
                  }
                },
                "Response Example 1 :PUT /fmc_tid/v1/domain/domainUUID/tid/observable/observableUUID ( PUT Observable instance )" : {
                  "inheritedProperty" : {
                    "publish" : true,
                    "expirationTime" : 1493929252,
                    "whitelist" : false,
                    "action" : "monitor",
                    "ttl" : 90
                  },
                  "observableType" : "IPV_4_ADDR",
                  "effectiveProperty" : {
                    "publish" : true,
                    "expirationTime" : 1493929252,
                    "whitelist" : false,
                    "action" : "monitor",
                    "ttl" : 90
                  },
                  "indicatorCount" : 1,
                  "updatedAt" : 1486153252,
                  "value" : "ipAddressValue",
                  "links" : {
                    "self" : "/fmc_tid/v1/domain/domainUUID/tid/observable/observableUUID"
                  },
                  "id" : "observableUUID",
                  "type" : "observable",
                  "name" : "Observable name 2",
                  "version" : "1.0.0",
                  "customProperty" : {
                    "whitelist" : true
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/RESTObservable"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_tid/v1/domain/{domainUUID}/tid/settings/{objectId}" : {
      "get" : {
        "tags" : [ "Intelligence" ],
        "description" : "**API Operations on Settings objects.**",
        "operationId" : "getRESTSettings",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the Settings object.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/RESTSettings"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_tid/v1/domain/domainUUID/tid/settings/publish_observables ( Get a single Settings instance )" : {
                  "id" : "publish_observables",
                  "type" : "settings",
                  "version" : "1.0.0",
                  "settings" : {
                    "publish_observables" : true
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Intelligence" ],
        "description" : "**API Operations on Settings objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateRESTSettings",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the Settings object.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The input Settings object model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RESTSettings"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/RESTSettings"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_tid/v1/domain/domainUUID/tid/settings/publish_observables ( PUT operation on Settings model )" : {
                  "id" : "publish_observables",
                  "type" : "settings",
                  "settings" : {
                    "publish_observables" : false
                  }
                },
                "Response Example 1 :PUT /fmc_tid/v1/domain/domainUUID/tid/settings/publish_observables ( PUT operation on Settings model )" : {
                  "id" : "publish_observables",
                  "type" : "settings",
                  "settings" : {
                    "publish_observables" : false
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/RESTSettings"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_tid/v1/domain/{domainUUID}/tid/source" : {
      "get" : {
        "tags" : [ "Intelligence" ],
        "description" : "**API Operations on Source objects.**",
        "operationId" : "getAllRESTTidSource",
        "parameters" : [ {
          "$ref" : "#/parameters/domainUUID"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/expanded"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/RESTTidSourceListContainer"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 : GET /fmc_tid/v1/domain/domainUUID/tid/source ( Example of GET all sources (concise view) )" : {
                  "links" : {
                    "self" : "/fmc_tid/v1/domain/domainUUID/tid/source"
                  },
                  "items" : [ {
                    "id" : "sourceUUID",
                    "type" : "source",
                    "name" : "Test URL Feed"
                  }, {
                    "id" : "sourceUUID",
                    "type" : "source",
                    "name" : "Test Flat File Domain Feed"
                  }, {
                    "id" : "sourceUUID",
                    "type" : "source",
                    "name" : "Test TAXII Feed"
                  }, {
                    "id" : "sourceUUID",
                    "type" : "source",
                    "name" : "Test TAXII Feed 2"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 4,
                    "count" : 4,
                    "pages" : 1
                  }
                },
                "Response Example 2 : GET /fmc_tid/v1/domain/domainUUID/tid/source?expanded=true ( Example of GET all sources (expanded view) )" : {
                  "links" : {
                    "self" : "/fmc_tid/v1/domain/domainUUID/tid/source?expanded=true"
                  },
                  "items" : [ {
                    "uri" : "MzQwYWEyYjYxZjg4YmE1MTczNDNjYzk4ZTg0NDNlNGQwMzgyZWJlMw",
                    "params" : {
                      "selfSignedServerCertificate" : "false",
                      "hostnameVerifier" : "allow_all",
                      "job" : "831f07f3-a0d2-481c-8eb8-5fbf22fe5ab1"
                    },
                    "statusMsg" : {
                      "0" : {
                        "info" : "Operation completed successfully."
                      }
                    },
                    "nextRun" : 0,
                    "consumedUnsupportedObservables" : 0,
                    "checksum" : "204CCA8536F620B6B97396C464EA4E2F06DA998F8A855FCC8B1DC486598F698D",
                    "lastRun" : 1498738283,
                    "totalUnsupportedObservables" : 0,
                    "totalInvalidObservables" : 0,
                    "downloadOn" : false,
                    "runNow" : false,
                    "feedStatus" : "completed",
                    "finishTime" : 1498738400,
                    "consumedIndicators" : 1,
                    "totalIndicators" : 1,
                    "discardedIndicators" : 0,
                    "totalDiscardedIndicators" : 0,
                    "totalObservables" : 0,
                    "invalidObservables" : 0,
                    "consumedObservables" : 10,
                    "feedType" : "stix",
                    "feedContent" : "stix",
                    "delivery" : "upload",
                    "refresh" : 0,
                    "property" : {
                      "ttl" : 90,
                      "whitelist" : false,
                      "expirationTime" : 1506514283,
                      "publish" : true,
                      "action" : "monitor"
                    },
                    "id" : "sourceUUID",
                    "type" : "source",
                    "name" : "Test URL Feed"
                  }, {
                    "uri" : "OWRmMWU2YmNmMzIzMDZjMjZjNGQxYTA4OThkNmIyZmU1ZmUzM2EwNQ",
                    "params" : {
                      "selfSignedServerCertificate" : "false",
                      "hostnameVerifier" : "allow_all",
                      "job" : "152d9e2b-b7d1-414a-8b73-25f44230b634"
                    },
                    "statusMsg" : {
                      "0" : {
                        "info" : "Operation completed successfully."
                      }
                    },
                    "nextRun" : 0,
                    "consumedUnsupportedObservables" : 0,
                    "checksum" : "D1BC2C02D0C0B50BD9CC73BB1C1FF4F2FB25E2ECE7C3520E85508996DF11929F",
                    "lastRun" : 1498738253,
                    "totalUnsupportedObservables" : 0,
                    "totalInvalidObservables" : 0,
                    "downloadOn" : false,
                    "runNow" : false,
                    "feedStatus" : "completed",
                    "finishTime" : 1498738400,
                    "consumedIndicators" : 17695,
                    "totalIndicators" : 17695,
                    "discardedIndicators" : 0,
                    "totalDiscardedIndicators" : 0,
                    "totalObservables" : 0,
                    "invalidObservables" : 0,
                    "consumedObservables" : 17695,
                    "feedType" : "flatfile",
                    "feedContent" : "DomainNameObjectType",
                    "delivery" : "upload",
                    "refresh" : 0,
                    "property" : {
                      "ttl" : 90,
                      "whitelist" : false,
                      "expirationTime" : 1506514253,
                      "publish" : true,
                      "action" : "block"
                    },
                    "id" : "sourceUUID",
                    "type" : "source",
                    "name" : "Test Flat File Domain Feed"
                  }, {
                    "uri" : "http://hailataxii.com/taxii-discovery-service",
                    "params" : {
                      "selfSignedServerCertificate" : "false",
                      "hostnameVerifier" : "allow_all",
                      "job" : "e06aa9fc-a6f3-4079-b384-0acf310efa85"
                    },
                    "nextRun" : 1499922000,
                    "consumedUnsupportedObservables" : 0,
                    "lastRun" : 1499835668,
                    "totalUnsupportedObservables" : 0,
                    "totalInvalidObservables" : 0,
                    "subscribedCollections" : [ {
                      "collectionPollIntervalInMinutes" : 0,
                      "collectionName" : "guest.EmergingThreats_rules",
                      "collectionDescription" : "guest.EmergingThreats_rules",
                      "collectionProtocolBinding" : "urn:taxii.mitre.org:protocol:https:1.0",
                      "collectionAddress" : "http://hailataxii.com:80/taxii-data",
                      "collectionMessageBinding" : "[urn:taxii.mitre.org:message:xml:1.1]",
                      "type" : "taxii_collections"
                    } ],
                    "downloadOn" : true,
                    "runNow" : false,
                    "feedStatus" : "downloading",
                    "consumedIndicators" : 0,
                    "totalIndicators" : 0,
                    "discardedIndicators" : 0,
                    "totalDiscardedIndicators" : 0,
                    "totalObservables" : 0,
                    "invalidObservables" : 0,
                    "consumedObservables" : 0,
                    "feedType" : "stix",
                    "feedContent" : "stix",
                    "delivery" : "taxii",
                    "refresh" : 1440,
                    "passwd" : "password",
                    "property" : {
                      "ttl" : 90,
                      "whitelist" : false,
                      "expirationTime" : 1507611664,
                      "publish" : true,
                      "action" : "monitor"
                    },
                    "username" : "username",
                    "id" : "sourceUUID",
                    "type" : "source",
                    "name" : "Test TAXII Feed",
                    "description" : "Test TAXII Feed"
                  }, {
                    "uri" : "http://hailataxii.com/taxii-discovery-service",
                    "params" : {
                      "selfSignedServerCertificate" : "false",
                      "hostnameVerifier" : "allow_all",
                      "job" : "b5618ed7-e029-4ae3-a616-eda7f538d678",
                      "pollInterval" : "86400",
                      "pollTimeStamp" : "1498738348"
                    },
                    "statusMsg" : {
                      "305" : {
                        "info" : "Source Parser: Invalid observable(s)."
                      },
                      "308" : {
                        "info" : "Source Parser: Unsupported observable type."
                      }
                    },
                    "nextRun" : 1498824000,
                    "consumedUnsupportedObservables" : 9335,
                    "lastRun" : 1498738346,
                    "totalUnsupportedObservables" : 9335,
                    "totalInvalidObservables" : 274,
                    "subscribedCollections" : [ {
                      "collectionPollIntervalInMinutes" : 0,
                      "collectionName" : "guest.dataForLast_7daysOnly",
                      "collectionDescription" : "guest.dataForLast_7daysOnly",
                      "collectionProtocolBinding" : "urn:taxii.mitre.org:protocol:https:1.0",
                      "collectionAddress" : "http://hailataxii.com:80/taxii-data",
                      "collectionMessageBinding" : "[urn:taxii.mitre.org:message:xml:1.1]",
                      "type" : "taxii_collections"
                    } ],
                    "downloadOn" : false,
                    "runNow" : false,
                    "feedStatus" : "completed_with_errors",
                    "finishTime" : 1498756750,
                    "consumedIndicators" : 66052,
                    "totalIndicators" : 66052,
                    "discardedIndicators" : 0,
                    "totalDiscardedIndicators" : 0,
                    "totalObservables" : 0,
                    "invalidObservables" : 274,
                    "consumedObservables" : 103919,
                    "feedType" : "stix",
                    "feedContent" : "stix",
                    "delivery" : "taxii",
                    "refresh" : 1440,
                    "username" : "username",
                    "password" : "password",
                    "property" : {
                      "ttl" : 90,
                      "whitelist" : false,
                      "expirationTime" : 1506514346,
                      "publish" : true,
                      "action" : "monitor"
                    },
                    "id" : "sourceUUID",
                    "type" : "source",
                    "name" : "Test TAXII Feed 2",
                    "description" : "Test TAXII Feed 2"
                  } ],
                  "paging" : {
                    "offset" : 0,
                    "limit" : 4,
                    "count" : 4,
                    "pages" : 1
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Intelligence" ],
        "description" : "**API Operations on Source objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "createRESTTidSource",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The input Source object model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RESTTidSource"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/RESTTidSource"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : POST /fmc_tid/v1/domain/domainUUID/tid/source ( POST example with taxii )" : {
                  "startHour" : 2,
                  "name" : "Sample TAXII Feed",
                  "description" : "Sample TAXII Feed",
                  "feedType" : "stix",
                  "feedContent" : "stix",
                  "delivery" : "taxii",
                  "uri" : "http://hailataxii.com/taxii-discovery-service",
                  "username" : "username",
                  "passwd" : "password",
                  "refresh" : 1440,
                  "version" : "1.0.0",
                  "downloadOn" : true,
                  "subscribedCollections" : [ {
                    "collectionPollIntervalInMinutes" : 0,
                    "collectionName" : "guest.MalwareDomainList_Hostlist",
                    "collectionDescription" : "guest.MalwareDomainList_Hostlist",
                    "collectionProtocolBinding" : "urn:taxii.mitre.org:protocol:https:1.0",
                    "collectionAddress" : "http://hailataxii.com:80/taxii-data",
                    "collectionMessageBinding" : "[urn:taxii.mitre.org:message:xml:1.1]",
                    "type" : "taxii_collections"
                  } ],
                  "params" : {
                    "selfSignedServerCertificate" : "false",
                    "hostnameVerifier" : "allow_all"
                  },
                  "property" : {
                    "ttl" : 90,
                    "publish" : true,
                    "action" : "monitor"
                  }
                },
                "Request example 2 : POST /fmc_tid/v1/domain/domainUUID/tid/source ( POST example with URL )" : {
                  "startHour" : 2,
                  "name" : "Test URL Source",
                  "description" : "",
                  "feedType" : "flatfile",
                  "feedContent" : "DomainNameObjectType",
                  "delivery" : "url",
                  "uri" : "http://somehost/feeds/domain.txt",
                  "refresh" : 1440,
                  "version" : "1.0.0",
                  "downloadOn" : true,
                  "params" : {
                    "selfSignedServerCertificate" : "false",
                    "hostnameVerifier" : "allow_all"
                  },
                  "property" : {
                    "ttl" : 90,
                    "publish" : true,
                    "action" : "monitor"
                  }
                },
                "Request example 3 : POST /fmc_tid/v1/domain/domainUUID/tid/source ( POST example with HTTPS URL )" : {
                  "startHour" : 2,
                  "name" : "Test URL HTTPS",
                  "description" : "Test URL HTTPS",
                  "feedType" : "flatfile",
                  "feedContent" : "IPV_4_ADDR",
                  "delivery" : "url",
                  "uri" : "https://somehost/feeds/ipv4.block.txt",
                  "caCert" : "ca_cert_here - optional",
                  "clientCert" : "client_cert_here - optional",
                  "clientPrivateKey" : "key_cert_here - optional",
                  "refresh" : 1440,
                  "version" : "1.0.0",
                  "downloadOn" : true,
                  "params" : {
                    "selfSignedServerCertificate" : "true",
                    "hostnameVerifier" : "allow_all"
                  },
                  "property" : {
                    "ttl" : 90,
                    "publish" : true,
                    "action" : "block"
                  }
                },
                "Response Example 1 :POST /fmc_tid/v1/domain/domainUUID/tid/source ( POST example with taxii )" : {
                  "uri" : "http://hailataxii.com/taxii-discovery-service",
                  "params" : {
                    "selfSignedServerCertificate" : "false",
                    "hostnameVerifier" : "allow_all"
                  },
                  "nextRun" : 0,
                  "consumedUnsupportedObservables" : 0,
                  "lastRun" : 0,
                  "totalUnsupportedObservables" : 0,
                  "totalInvalidObservables" : 0,
                  "subscribedCollections" : [ {
                    "collectionPollIntervalInMinutes" : 0,
                    "collectionName" : "guest.MalwareDomainList_Hostlist",
                    "collectionDescription" : "guest.MalwareDomainList_Hostlist",
                    "collectionProtocolBinding" : "urn:taxii.mitre.org:protocol:https:1.0",
                    "collectionAddress" : "http://hailataxii.com:80/taxii-data",
                    "collectionMessageBinding" : "[urn:taxii.mitre.org:message:xml:1.1]",
                    "type" : "taxii_collections"
                  } ],
                  "downloadOn" : true,
                  "runNow" : false,
                  "feedStatus" : "new",
                  "consumedIndicators" : 0,
                  "totalIndicators" : 0,
                  "discardedIndicators" : 0,
                  "totalDiscardedIndicators" : 0,
                  "totalObservables" : 0,
                  "invalidObservables" : 0,
                  "consumedObservables" : 0,
                  "feedType" : "stix",
                  "feedContent" : "stix",
                  "delivery" : "taxii",
                  "refresh" : 1440,
                  "property" : {
                    "ttl" : 90,
                    "whitelist" : false,
                    "expirationTime" : 1507613046,
                    "publish" : true,
                    "action" : "monitor"
                  },
                  "username" : "username",
                  "links" : {
                    "self" : "/fmc_tid/v1/domain/domainUUID/tid/source/sourceUUID"
                  },
                  "description" : "Sample TAXII Feed",
                  "id" : "sourceUUID",
                  "type" : "source",
                  "name" : "Sample TAXII Feed"
                },
                "Response Example 2 :POST /fmc_tid/v1/domain/domainUUID/tid/source ( POST example with URL )" : {
                  "uri" : "http://somehost/feeds/domain.txt",
                  "params" : {
                    "selfSignedServerCertificate" : "false",
                    "hostnameVerifier" : "allow_all"
                  },
                  "nextRun" : 0,
                  "consumedUnsupportedObservables" : 0,
                  "lastRun" : 0,
                  "totalUnsupportedObservables" : 0,
                  "totalInvalidObservables" : 0,
                  "downloadOn" : true,
                  "runNow" : false,
                  "feedStatus" : "new",
                  "consumedIndicators" : 0,
                  "totalIndicators" : 0,
                  "discardedIndicators" : 0,
                  "totalDiscardedIndicators" : 0,
                  "totalObservables" : 0,
                  "invalidObservables" : 0,
                  "consumedObservables" : 0,
                  "feedType" : "flatfile",
                  "feedContent" : "DomainNameObjectType",
                  "delivery" : "url",
                  "refresh" : 1440,
                  "property" : {
                    "ttl" : 90,
                    "whitelist" : false,
                    "expirationTime" : 1507612829,
                    "publish" : true,
                    "action" : "monitor"
                  },
                  "links" : {
                    "self" : "/fmc_tid/v1/domain/domainUUID/tid/source/sourceUUID"
                  },
                  "id" : "sourceUUID",
                  "type" : "source",
                  "name" : "Test URL Source"
                },
                "Response Example 3 :POST /fmc_tid/v1/domain/domainUUID/tid/source ( POST example with HTTPS URL )" : {
                  "uri" : "https://somehost/feeds/ipv4.block.txt",
                  "params" : {
                    "selfSignedServerCertificate" : "true",
                    "hostnameVerifier" : "allow_all"
                  },
                  "nextRun" : 0,
                  "consumedUnsupportedObservables" : 0,
                  "lastRun" : 0,
                  "totalUnsupportedObservables" : 0,
                  "totalInvalidObservables" : 0,
                  "downloadOn" : true,
                  "runNow" : false,
                  "feedStatus" : "new",
                  "consumedIndicators" : 0,
                  "totalIndicators" : 0,
                  "discardedIndicators" : 0,
                  "totalDiscardedIndicators" : 0,
                  "totalObservables" : 0,
                  "invalidObservables" : 0,
                  "consumedObservables" : 0,
                  "feedType" : "flatfile",
                  "feedContent" : "IPV_4_ADDR",
                  "delivery" : "url",
                  "refresh" : 1440,
                  "property" : {
                    "ttl" : 90,
                    "whitelist" : false,
                    "expirationTime" : 1507614000,
                    "publish" : true,
                    "action" : "block"
                  },
                  "links" : {
                    "self" : "/fmc_tid/v1/domain/domainUUID/tid/source/sourceUUID"
                  },
                  "caCert" : "ca_cert_here - optional",
                  "clientCert" : "client_cert_here - optional",
                  "clientPrivateKey" : "key_cert_here - optional",
                  "description" : "Test URL HTTPS",
                  "id" : "sourceUUID",
                  "type" : "source",
                  "name" : "Test URL HTTPS"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/RESTTidSource"
            },
            "examples" : { }
          }
        }
      }
    },
    "/api/fmc_tid/v1/domain/{domainUUID}/tid/source/{objectId}" : {
      "get" : {
        "tags" : [ "Intelligence" ],
        "description" : "**API Operations on Source objects.**",
        "operationId" : "getRESTTidSource",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the Source.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/RESTTidSource"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :GET /fmc_tid/v1/domain/domainUUID/tid/source/sourceUUID ( Example of GET by id )" : {
                  "uri" : "http://somehost/feeds/domain.txt",
                  "params" : {
                    "selfSignedServerCertificate" : "false",
                    "hostnameVerifier" : "allow_all",
                    "pollInterval" : "86400"
                  },
                  "nextRun" : 1499922000,
                  "consumedUnsupportedObservables" : 0,
                  "checksum" : "6A330EFFD42314B74C030C0038BAB3352F70CC5344D6CE24774BD04EFDEDB7BD",
                  "lastRun" : 1499836832,
                  "totalUnsupportedObservables" : 0,
                  "totalInvalidObservables" : 0,
                  "downloadOn" : true,
                  "runNow" : false,
                  "feedStatus" : "parsing",
                  "consumedIndicators" : 0,
                  "totalIndicators" : 0,
                  "discardedIndicators" : 0,
                  "totalDiscardedIndicators" : 0,
                  "totalObservables" : 0,
                  "invalidObservables" : 0,
                  "consumedObservables" : 501,
                  "feedType" : "flatfile",
                  "feedContent" : "DomainNameObjectType",
                  "delivery" : "url",
                  "refresh" : 1440,
                  "property" : {
                    "ttl" : 80,
                    "whitelist" : false,
                    "expirationTime" : 1506749351,
                    "publish" : true,
                    "action" : "block"
                  },
                  "id" : "sourceUUID",
                  "type" : "source",
                  "name" : "Test URL Source",
                  "description" : "Test URL Source"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Intelligence" ],
        "description" : "**API Operations on Source objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "updateRESTTidSource",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the Source.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The input Source object model.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RESTTidSource"
          }
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/RESTTidSource"
            },
            "examples" : {
              "application/json" : {
                "Request example 1 : PUT /fmc_tid/v1/domain/domainUUID/tid/source/sourceUUID ( Example of PUT )" : {
                  "uri" : "http://somehost/feeds/domain.txt",
                  "params" : {
                    "selfSignedServerCertificate" : "false",
                    "hostnameVerifier" : "allow_all"
                  },
                  "nextRun" : 1499922000,
                  "consumedUnsupportedObservables" : 0,
                  "checksum" : "6A330EFFD42314B74C030C0038BAB3352F70CC5344D6CE24774BD04EFDEDB7BD",
                  "lastRun" : 1499836832,
                  "totalUnsupportedObservables" : 0,
                  "totalInvalidObservables" : 0,
                  "downloadOn" : true,
                  "runNow" : false,
                  "feedStatus" : "parsing",
                  "consumedIndicators" : 0,
                  "totalIndicators" : 0,
                  "discardedIndicators" : 0,
                  "totalDiscardedIndicators" : 0,
                  "totalObservables" : 0,
                  "invalidObservables" : 0,
                  "consumedObservables" : 501,
                  "feedType" : "flatfile",
                  "feedContent" : "DomainNameObjectType",
                  "delivery" : "url",
                  "refresh" : 1440,
                  "property" : {
                    "ttl" : "80",
                    "publish" : true,
                    "action" : "block"
                  },
                  "id" : "sourceUUID",
                  "type" : "source",
                  "name" : "Test URL Source",
                  "description" : "Test URL Source",
                  "caCert" : ""
                },
                "Response Example 1 :PUT /fmc_tid/v1/domain/domainUUID/tid/source/sourceUUID ( Example of PUT )" : {
                  "uri" : "http://somehost/feeds/domain.txt",
                  "params" : {
                    "selfSignedServerCertificate" : "false",
                    "hostnameVerifier" : "allow_all",
                    "pollInterval" : "86400"
                  },
                  "nextRun" : 1499922000,
                  "consumedUnsupportedObservables" : 0,
                  "checksum" : "6A330EFFD42314B74C030C0038BAB3352F70CC5344D6CE24774BD04EFDEDB7BD",
                  "lastRun" : 1499836832,
                  "totalUnsupportedObservables" : 0,
                  "totalInvalidObservables" : 0,
                  "downloadOn" : true,
                  "runNow" : false,
                  "feedStatus" : "parsing",
                  "consumedIndicators" : 0,
                  "totalIndicators" : 0,
                  "discardedIndicators" : 0,
                  "totalDiscardedIndicators" : 0,
                  "totalObservables" : 0,
                  "invalidObservables" : 0,
                  "consumedObservables" : 501,
                  "feedType" : "flatfile",
                  "feedContent" : "DomainNameObjectType",
                  "delivery" : "url",
                  "refresh" : 1440,
                  "property" : {
                    "ttl" : 80,
                    "whitelist" : false,
                    "expirationTime" : 1506749351,
                    "publish" : true,
                    "action" : "block"
                  },
                  "links" : {
                    "self" : "/fmc_tid/v1/domain/domainUUID/tid/source/sourceUUID"
                  },
                  "description" : "Test URL Source",
                  "id" : "sourceUUID",
                  "type" : "source",
                  "name" : "Test URL Source"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "$ref" : "#/definitions/RESTTidSource"
            },
            "examples" : { }
          }
        }
      },
      "delete" : {
        "tags" : [ "Intelligence" ],
        "description" : "**API Operations on Source objects. _Check the response section for applicable examples (if any)._**",
        "operationId" : "deleteRESTTidSource",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "Unique identifier of the Source.",
          "required" : true,
          "type" : "string"
        }, {
          "$ref" : "#/parameters/domainUUID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/RESTTidSource"
            },
            "examples" : {
              "application/json" : {
                "Response Example 1 :DELETE /fmc_tid/v1/domain/domainUUID/tid/source/sourceUUID ( Example of DELETE by id )" : {
                  "uri" : "NTAyNTVjOTJjNjAzYWUzOWNlOTE3N2UyNzkxMTI4YTE5YzUzODU3MQ",
                  "params" : {
                    "selfSignedServerCertificate" : "false",
                    "hostnameVerifier" : "allow_all",
                    "job" : "85eaa1fb-7250-4db5-865e-622030a155d7"
                  },
                  "statusMsg" : {
                    "0" : {
                      "info" : "Operation completed successfully."
                    }
                  },
                  "nextRun" : 0,
                  "consumedUnsupportedObservables" : 0,
                  "checksum" : "AD8E91B35B7F2EA8F99996EF49C1C9A43A86D6A271AE19782D5D31BF834BEE2A",
                  "lastRun" : 1499836436,
                  "totalUnsupportedObservables" : 0,
                  "totalInvalidObservables" : 0,
                  "downloadOn" : false,
                  "runNow" : false,
                  "feedStatus" : "completed",
                  "finishTime" : 1499836437,
                  "consumedIndicators" : 1,
                  "totalIndicators" : 1,
                  "discardedIndicators" : 0,
                  "totalDiscardedIndicators" : 0,
                  "totalObservables" : 0,
                  "invalidObservables" : 0,
                  "consumedObservables" : 1,
                  "feedType" : "flatfile",
                  "feedContent" : "IPV_4_ADDR",
                  "delivery" : "upload",
                  "refresh" : 0,
                  "property" : {
                    "ttl" : 90,
                    "whitelist" : false,
                    "expirationTime" : 1507612436,
                    "publish" : true,
                    "action" : "monitor"
                  },
                  "username" : "username",
                  "id" : "sourceUUID",
                  "type" : "source",
                  "name" : "Test STIX Source"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "ILinks" : {
      "type" : "object",
      "properties" : {
        "parent" : {
          "type" : "string",
          "description" : "Full resource URL path to reference the parent (if any) for this resource."
        },
        "self" : {
          "type" : "string",
          "description" : "Full resource URL path to reference this particular resource."
        }
      },
      "description" : "This defines the self referencing links for the given resource."
    },
    "SSOServerOverrideListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SSOServerOverride"
          }
        }
      }
    },
    "PrefilterPolicy" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata attributes for the prefilter policy.",
          "$ref" : "#/definitions/Metadata"
        },
        "defaultAction" : {
          "description" : "Object representing the default action (PrefilterPolicyDefaultAction). The default action determines how the system handles and logs traffic not handled by any other prefilter rules. For more information, see the defaultactions service.",
          "$ref" : "#/definitions/IPrefilterPolicyDefaultAction"
        },
        "name" : {
          "type" : "string",
          "description" : "User-specified name of the prefilter policy."
        },
        "description" : {
          "type" : "string",
          "description" : "User provided resource description."
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/Links"
        },
        "rules" : {
          "type" : "object",
          "description" : "Object containing a list of rules in the prefilter policy."
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier (UUID) representing the prefilter policy."
        },
        "type" : {
          "type" : "string",
          "description" : "Type of the prefilter policy; this value is always PrefilterPolicy."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        }
      },
      "description" : "Description of Prefilter Policy."
    },
    "StandardCommunityList" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/Metadata"
        },
        "entries" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IStandardCommunityListEntry"
          }
        },
        "name" : {
          "type" : "string"
        },
        "overridable" : {
          "type" : "boolean"
        },
        "links" : {
          "$ref" : "#/definitions/Links"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "IAdvertisement" : {
      "type" : "object",
      "properties" : {
        "autoConfig" : {
          "type" : "boolean"
        },
        "offlink" : {
          "type" : "boolean"
        },
        "preferLifeTime" : {
          "$ref" : "#/definitions/PreferLifeTime"
        }
      }
    },
    "VlanTagGroupOverrideListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/VlanTagGroupOverride"
          }
        }
      }
    },
    "IOspfv3Area" : {
      "type" : "object",
      "properties" : {
        "defaultCost" : {
          "type" : "integer",
          "format" : "int32"
        },
        "routeSummary" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IOspfv3RouteSummary"
          }
        },
        "areaId" : {
          "type" : "string"
        },
        "neighbors" : {
          "$ref" : "#/definitions/IOspfv3Neighbor"
        },
        "areaType" : {
          "$ref" : "#/definitions/IOspfAreaType"
        },
        "virtualLinks" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IOspfv3VirtualLinks"
          }
        }
      }
    },
    "NetworkOverrideListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/NetworkOverride"
          }
        }
      }
    },
    "IVirtualSwitch" : {
      "type" : "object",
      "properties" : {
        "dropBPDU" : {
          "type" : "boolean"
        },
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "sensorPolicy" : {
          "$ref" : "#/definitions/IAccessPolicyModel"
        },
        "description" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "strictTCPEnforcement" : {
          "type" : "boolean"
        },
        "version" : {
          "type" : "string"
        },
        "domainId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "staticMacEntries" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IStaticMacEntry"
          }
        },
        "name" : {
          "type" : "string"
        },
        "switchedInterfaces" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IInterface"
          }
        },
        "enableSpanningTreeProtocol" : {
          "type" : "boolean"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "hybridInterface" : {
          "$ref" : "#/definitions/IInterface"
        }
      }
    },
    "SSOServerListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SSOServer"
          }
        }
      }
    },
    "AccessPolicyCategory" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata attributes for the access policy category.",
          "$ref" : "#/definitions/AccessPolicyCategoryMetadata"
        },
        "name" : {
          "type" : "string",
          "description" : "User-specified name of the access policy category."
        },
        "description" : {
          "type" : "string",
          "description" : "Description of access policy category."
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier (UUID) representing the access policy category."
        },
        "type" : {
          "type" : "string",
          "description" : "Type of the access control policy category; this value is always AccessPolicyCategory."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        }
      },
      "description" : "Description of Access Policy Category."
    },
    "Snort3IntrusionRuleGroupsListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Snort3IntrusionRuleGroups"
          }
        }
      }
    },
    "FTDS2SVpnModelListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FTDS2SVpnModel"
          }
        }
      }
    },
    "SecurexConfig" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "clientId" : {
          "type" : "string",
          "description" : "Field represents Client ID of the FMC generated from the Securex. If clientId is present in the PUT request, clientPassword has to be present."
        },
        "name" : {
          "type" : "string",
          "description" : "Field represents Securex Configuration name. This is a predefined constant in the configuration."
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string",
          "description" : "This is a predefined pseudo id of the Securex Configuration object"
        },
        "type" : {
          "type" : "string",
          "description" : "Field represents Securex Configuration object type. This is a constant defined in the model."
        },
        "version" : {
          "type" : "string"
        },
        "clientPassword" : {
          "type" : "string",
          "description" : "Field represents Client Password for the Client ID generated for the FMC from Securex. If clientPassword is present in the PUT request, clientId has to be present."
        },
        "enabled" : {
          "type" : "boolean",
          "description" : "Field represents whether Securex Configuration is enabled or not. This is a required field in the PUT configuration."
        }
      },
      "description" : "Defines Securex Configuration Object. This is a singleton configuration object to update configuration on System->Users->Securex page, that supports GET and PUT APIs."
    },
    "GlobalObjectSearch" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata properties of response object.",
          "$ref" : "#/definitions/IMetadata"
        },
        "searchCriteria" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string",
          "description" : "User chosen resource name."
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "description" : "Object containing related links.",
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of resource."
        },
        "type" : {
          "type" : "string",
          "description" : "Type of resource."
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ISearchResult"
          }
        },
        "version" : {
          "type" : "string"
        }
      },
      "description" : "A model representing global object search response."
    },
    "InterfaceObject" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "interfaces" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IFTDInterface"
          }
        },
        "devices" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IInterfaceDeviceModel"
          }
        },
        "name" : {
          "type" : "string"
        },
        "overridable" : {
          "type" : "boolean"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "IIPv4Container" : {
      "type" : "object",
      "properties" : {
        "static" : {
          "$ref" : "#/definitions/IStaticIPContainer"
        },
        "pppoe" : {
          "$ref" : "#/definitions/IPPPoEContianer"
        },
        "dhcp" : {
          "$ref" : "#/definitions/IDHCPContainer"
        }
      }
    },
    "ISourceZoneObject" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "name" : {
          "type" : "string"
        },
        "overridable" : {
          "type" : "boolean"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "PolicyListListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PolicyList"
          }
        }
      }
    },
    "IUrlBase" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "overridable" : {
          "type" : "boolean"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "AuthRoles" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "INeighborAdvertiseMaps" : {
      "type" : "object",
      "properties" : {
        "routeMap" : {
          "$ref" : "#/definitions/IRouteMap"
        },
        "name" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "existRouteMap" : {
          "$ref" : "#/definitions/IRouteMap"
        },
        "id" : {
          "type" : "string"
        },
        "existMap" : {
          "type" : "boolean"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "FilePolicyListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FilePolicy"
          }
        }
      }
    },
    "SyslogConfigListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SyslogConfig"
          }
        }
      }
    },
    "RESTDiscoveryInfo" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "caCert" : {
          "type" : "string"
        },
        "feedContent" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "invalidObservables" : {
          "type" : "integer",
          "format" : "int32"
        },
        "feedStatus" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "downloadOn" : {
          "type" : "boolean"
        },
        "nextRun" : {
          "type" : "integer",
          "format" : "int32"
        },
        "consumedIndicators" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalObservables" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalIndicators" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalUnsupportedObservables" : {
          "type" : "integer",
          "format" : "int32"
        },
        "property" : {
          "$ref" : "#/definitions/RESTFeedProperty"
        },
        "checksum" : {
          "type" : "string"
        },
        "llfeedConfig" : {
          "$ref" : "#/definitions/LLFeedConfig"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "clientPrivateKey" : {
          "type" : "string"
        },
        "subscribedCollections" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RESTCollectionTopic"
          }
        },
        "clientCert" : {
          "type" : "string"
        },
        "delivery" : {
          "type" : "string"
        },
        "finishTime" : {
          "type" : "integer",
          "format" : "int32"
        },
        "availableCollections" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RESTCollectionTopic"
          }
        },
        "lastRun" : {
          "type" : "integer",
          "format" : "int32"
        },
        "runNow" : {
          "type" : "boolean"
        },
        "totalDiscardedIndicators" : {
          "type" : "integer",
          "format" : "int32"
        },
        "consumedObservables" : {
          "type" : "integer",
          "format" : "int32"
        },
        "refresh" : {
          "type" : "integer",
          "format" : "int32"
        },
        "params" : {
          "$ref" : "#/definitions/LLParams"
        },
        "uri" : {
          "type" : "string"
        },
        "feedConfig" : {
          "$ref" : "#/definitions/LLFeedConfig"
        },
        "version" : {
          "type" : "string"
        },
        "discoveryInfo" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RESTCollectionTopic"
          }
        },
        "totalInvalidObservables" : {
          "type" : "integer",
          "format" : "int32"
        },
        "statusMsg" : {
          "$ref" : "#/definitions/LLStatusMsg"
        },
        "passwd" : {
          "type" : "string"
        },
        "startHour" : {
          "type" : "integer",
          "format" : "int32"
        },
        "discardedIndicators" : {
          "type" : "integer",
          "format" : "int32"
        },
        "consumedUnsupportedObservables" : {
          "type" : "integer",
          "format" : "int32"
        },
        "feedType" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "username" : {
          "type" : "string"
        }
      }
    },
    "VrfOspfPolicyModelListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/VrfOspfPolicyModel"
          }
        }
      }
    },
    "SecurityZoneObject" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata properties of response object.",
          "$ref" : "#/definitions/IMetadata"
        },
        "interfaces" : {
          "type" : "array",
          "description" : "Objects representing interfaces belonging to security zone.",
          "items" : {
            "$ref" : "#/definitions/IFTDInterface"
          }
        },
        "interfaceMode" : {
          "type" : "string",
          "enum" : [ "PASSIVE", "INLINE", "SWITCHED", "ROUTED", "ASA" ]
        },
        "devices" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IInterfaceDeviceModel"
          }
        },
        "name" : {
          "type" : "string",
          "description" : "User chosen resource name."
        },
        "overridable" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether object values can be overridden."
        },
        "description" : {
          "type" : "string",
          "description" : "User provided resource description."
        },
        "links" : {
          "description" : "Object containing related links.",
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of response object."
        },
        "overrides" : {
          "description" : "An object override allows you to define an alternate value for an object on a device or domain.",
          "$ref" : "#/definitions/IOverride"
        },
        "type" : {
          "type" : "string",
          "description" : "Type associated with resource: SecurityZone."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        }
      },
      "description" : "A model representing zone object definition."
    },
    "AccessRule" : {
      "type" : "object",
      "required" : [ "action" ],
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata attributes for the access rule.",
          "$ref" : "#/definitions/AccessRuleMetadata"
        },
        "snmpConfig" : {
          "description" : "Object representing the SNMP alert associated with the access rule.",
          "$ref" : "#/definitions/ISNMPConfig"
        },
        "timeRangeObjects" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ITimeRangeModel"
          }
        },
        "sourceNetworks" : {
          "description" : "Object representing source networks selected for the access rule.",
          "$ref" : "#/definitions/INetworkObjectsContainer"
        },
        "syslogSeverity" : {
          "type" : "string",
          "description" : "Specifies the Override Severity if alerts are being sent to default syslog configuration. One of: ALERT | CRIT | DEBUG | EMERG | ERR | INFO | NOTICE | WARNING.",
          "enum" : [ "ALERT", "CRIT", "DEBUG", "EMERG", "ERR", "INFO", "NOTICE", "WARNING" ]
        },
        "sourceZones" : {
          "description" : "Object representing source zones selected for the access rule.",
          "$ref" : "#/definitions/ISourceZoneContainer"
        },
        "destinationZones" : {
          "description" : "Object representing destination zones selected for the access rule.",
          "$ref" : "#/definitions/ISecurityZoneContainer"
        },
        "destinationDynamicObjects" : {
          "description" : "Object representing destination dynamic objects selected for the access rule.",
          "$ref" : "#/definitions/IDynamicObjectsContainer"
        },
        "description" : {
          "type" : "string",
          "description" : "User provided resource description. "
        },
        "originalSourceNetworks" : {
          "$ref" : "#/definitions/INetworkObjectsContainer"
        },
        "type" : {
          "type" : "string",
          "description" : "Type of the response object. This value is always AccessRule."
        },
        "enableSyslog" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether the alerts associated with the access rule are sent to default syslog configuration in Access Control Logging."
        },
        "safeSearch" : {
          "description" : "Object representing the SafeSearch attribute (specified on the Applications tab of the Editing Rule dialog).",
          "$ref" : "#/definitions/ISafeSearch"
        },
        "enabled" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether the access rule is in effect (true) or not (false). Default is true."
        },
        "destSGTTypes" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "syslogConfig" : {
          "description" : "Object representing the syslog alert associated with the access rule.",
          "$ref" : "#/definitions/ISyslogConfig"
        },
        "urls" : {
          "description" : "Object representing the URLs and categories selected for the rule.",
          "$ref" : "#/definitions/IUrlObjectsContainer"
        },
        "endPointDeviceTypes" : {
          "type" : "array",
          "description" : "Object representing the Endpoint Device Types (specified on the SGT/ISE Attributes tab of the Editing Rule dialog).",
          "items" : {
            "$ref" : "#/definitions/IEndPointDeviceType"
          }
        },
        "youTube" : {
          "description" : "Object representing the YouTubeEDU attribute (specified on the Applications tab of the Editing Rule dialog).",
          "$ref" : "#/definitions/IYouTube"
        },
        "destinationNetworks" : {
          "description" : "Object representing destination networks selected for the access rule.",
          "$ref" : "#/definitions/INetworkObjectsContainer"
        },
        "action" : {
          "type" : "string",
          "description" : "Specifies the action to take when the conditions defined by the rule are met. One of: ALLOW | TRUST | BLOCK | MONITOR | BLOCK_RESET | BLOCK_INTERACTIVE | BLOCK_RESET_INTERACTIVE.",
          "enum" : [ "ALLOW", "TRUST", "BLOCK", "MONITOR", "BLOCK_RESET", "BLOCK_INTERACTIVE", "BLOCK_RESET_INTERACTIVE" ]
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/ILinks"
        },
        "networkAccessDeviceIPs" : {
          "description" : "Object representing the Network Access Device IPs (specified on the SGT/ISE Attributes tab of the Editing Rule dialog).",
          "$ref" : "#/definitions/INetworkObjectsContainer"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier (UUID) for the access rule."
        },
        "sourceSecurityGroupTags" : {
          "description" : "Object representing the Security Group Tag (specified on the Dynamic Attributes tab of the Editing Rule dialog).",
          "$ref" : "#/definitions/ISecurityGroupTagContainer"
        },
        "destinationSecurityGroupTags" : {
          "$ref" : "#/definitions/ISecurityGroupTagContainer"
        },
        "logEnd" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether the device will log events at the end of the connection. Default is false. If 'MONITOR' action is selected for access rule, logEnd will always be true."
        },
        "logBegin" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether the device will log events at the beginning of the connection. Default is false. If 'MONITOR' action is selected for access rule, logBegin will always be false."
        },
        "sendEventsToFMC" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether the device will send events to the Firepower Management Center event viewer. Default is false. If 'MONITOR' action is selected for access rule, sendEventsToFMC will always be true."
        },
        "destinationPorts" : {
          "description" : "Object representing destination ports selected for the rule.",
          "$ref" : "#/definitions/IPortObjectsContainer"
        },
        "sourcePorts" : {
          "description" : "Object representing source ports selected for the rule.",
          "$ref" : "#/definitions/IPortObjectsContainer"
        },
        "ipsPolicy" : {
          "description" : "Object representing the intrusion policy settings for the rule action (specified on the Inspection tab). For more information on intrusion policies, see \"Access Control Using Intrusion and File Policies\" in the Firepower Management Center Configuration Guide.",
          "$ref" : "#/definitions/IIntrusionPolicyModel"
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        },
        "variableSet" : {
          "description" : "Object representing the variable set associated with the access rule.",
          "$ref" : "#/definitions/IVariableSet"
        },
        "users" : {
          "description" : "Object representing users selected for the rule. ",
          "$ref" : "#/definitions/IUsersContainer"
        },
        "logFiles" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether the device will log file events. Default is false."
        },
        "filePolicy" : {
          "description" : "Object representing the file policy settings for the rule action.",
          "$ref" : "#/definitions/IFilePolicy"
        },
        "commentHistoryList" : {
          "type" : "array",
          "description" : "List of comments in the access rule's comment history.",
          "items" : {
            "$ref" : "#/definitions/ICommentHistory"
          }
        },
        "name" : {
          "type" : "string",
          "description" : "User-specified name of the access rule."
        },
        "sourceDynamicObjects" : {
          "description" : "Object representing source dynamic objects selected for the access rule.",
          "$ref" : "#/definitions/IDynamicObjectsContainer"
        },
        "vlanTags" : {
          "description" : "Object representing the VLAN tag set associated with the access rule.",
          "$ref" : "#/definitions/IVLanTagsContainer"
        },
        "applications" : {
          "description" : "Object representing applications selected in the content restriction settings (on the Applications tab of the Editing Rule dialog). This includes the Safe Search and YouTube EDU services.",
          "$ref" : "#/definitions/IApplicationsContainer"
        }
      },
      "description" : "Represents Access Rule contained within an Access Policy.",
      "example": {
        "sendEventsToFMC": false,
        "enabled": false,
        "action": "ALLOW",
        "name": "accessrule1",
        "type": "AccessRule",
        "id": "42010A0A-0E0A-0ed3-0000-000268434531",
        "logFiles": false,
        "sourceDynamicObjects": {},
        "destinationDynamicObjects": {},
        "logBegin": false,
        "logEnd": false,
        "variableSet": {
            "name": "Default-Set",
            "id": "76fa83ea-c972-11e2-8be8-8e45bb1343c0",
            "type": "VariableSet"
        },
        "enableSyslog": false,
        "vlanTags": {}
      }
    },
    "IPv6AddressPoolListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IPv6AddressPool"
          }
        }
      }
    },
    "VpnPKIEnrollmentModel" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/Metadata"
        },
        "name" : {
          "type" : "string"
        },
        "overridable" : {
          "type" : "boolean"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/Links"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "IOspfNsfGracefulRestart" : {
      "type" : "object",
      "properties" : {
        "nsfEnable" : {
          "type" : "boolean"
        },
        "nsfMechanism" : {
          "type" : "string",
          "enum" : [ "CISCO", "IETF", "NONE" ]
        },
        "nsfHelper" : {
          "type" : "boolean"
        },
        "nsfRestartIntraval" : {
          "type" : "integer",
          "format" : "int32"
        },
        "nsfCapability" : {
          "type" : "boolean"
        },
        "nsfEnforceGlobal" : {
          "type" : "boolean"
        }
      }
    },
    "HealthMonitorModel" : {
      "type" : "object",
      "properties" : {
        "dateTime" : {
          "type" : "string"
        },
        "healthMonitorMetric" : {
          "$ref" : "#/definitions/IHealthMonitorMetric"
        },
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "metric" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "IPatOptionsContainer" : {
      "type" : "object",
      "properties" : {
        "blockAllocation" : {
          "type" : "boolean"
        },
        "patPoolAddress" : {
          "$ref" : "#/definitions/INetworkAddress"
        },
        "includeReserve" : {
          "type" : "boolean"
        },
        "flatPortRange" : {
          "type" : "boolean"
        },
        "interfacePat" : {
          "type" : "boolean"
        },
        "extendedPat" : {
          "type" : "boolean"
        },
        "roundRobin" : {
          "type" : "boolean"
        }
      }
    },
    "IOspfv3Timers" : {
      "type" : "object",
      "properties" : {
        "spfThrottleTimer" : {
          "$ref" : "#/definitions/ISpfThrottleTimer"
        },
        "lsaThrottleTimer" : {
          "$ref" : "#/definitions/ILsaThrottleTimer"
        },
        "lsaGroup" : {
          "type" : "integer",
          "format" : "int32"
        },
        "retransmission" : {
          "type" : "integer",
          "format" : "int32"
        },
        "lsaArrival" : {
          "type" : "integer",
          "format" : "int32"
        },
        "floodPacing" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "HostScanPackageObject" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/Metadata"
        },
        "fileName" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "overridable" : {
          "type" : "boolean"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/Links"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "Snort3IPSRulesFileUpload" : {
      "type" : "object",
      "properties" : {
        "summary" : {
          "description" : "Object representing details of Deleted,Added,Unassociated,Updated,Skipped rules.",
          "$ref" : "#/definitions/RuleImportSummary"
        },
        "ruleGroups" : {
          "type" : "object",
          "description" : "Indicates the comma separated List of rule groups to which rules should be associated."
        },
        "validateOnly" : {
          "type" : "boolean",
          "description" : "Specifies if rules should be validated or validated and imported. Default value is true."
        },
        "ruleImportMode" : {
          "type" : "string",
          "description" : "Indicates the rule Import mode. Can be either MERGE or REPLACE.",
          "enum" : [ "MERGE", "REPLACE" ]
        },
        "files" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IFileWrapper"
          }
        }
      },
      "description" : "An object that represents the details for Snort3 custom rule import."
    },
    "IPolicyModel" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "ApplicationProductivityListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ApplicationProductivity"
          }
        }
      }
    },
    "Snort3IPSRules" : {
      "type" : "object",
      "properties" : {
        "msg" : {
          "type" : "string",
          "description" : "User provided rule description."
        },
        "metadata" : {
          "description" : "Object representing metadata attributes for the intrusion rule.",
          "$ref" : "#/definitions/Metadata"
        },
        "ruleGroups" : {
          "type" : "array",
          "description" : "Object containing a list of rules groups associated with the rule.",
          "items" : {
            "$ref" : "#/definitions/IReference"
          }
        },
        "gid" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Generator Identifier used to identify the part of Snort which generates an event."
        },
        "overrideState" : {
          "type" : "string",
          "description" : "User override state of the rule. One of: DROP | BLOCK | ALERT | DISABLE | DEFAULT",
          "enum" : [ "DROP", "BLOCK", "ALERT", "DISABLE", "DEFAULT" ]
        },
        "defaultState" : {
          "type" : "string",
          "description" : "Default State of the rule. One of: DROP | BLOCK | ALERT | DISABLE | DEFAULT",
          "enum" : [ "DROP", "BLOCK", "ALERT", "DISABLE", "DEFAULT" ]
        },
        "description" : {
          "type" : "string",
          "description" : "User provided resource description."
        },
        "threshold" : {
          "description" : "This field is disabled.",
          "$ref" : "#/definitions/IIntrusionRuleThreshold"
        },
        "type" : {
          "type" : "string",
          "description" : "Type of the response object. This value is always IntrusionRule."
        },
        "version" : {
          "type" : "string"
        },
        "sid" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Snort Identifier used to uniquely identify Snort rules."
        },
        "revision" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ruleAction" : {
          "type" : "array",
          "description" : "This field is disabled.",
          "items" : {
            "$ref" : "#/definitions/IRuleAction"
          }
        },
        "newComments" : {
          "type" : "array",
          "description" : "Object representing the new comments provided in this resource.",
          "items" : {
            "type" : "string"
          }
        },
        "isSystemDefined" : {
          "type" : "boolean",
          "description" : "Read-only field indicating if the rule is system-defined (i.e., Talos provided). If value is false, then rule is user-defined."
        },
        "commentHistoryList" : {
          "type" : "array",
          "description" : "This is a read-only list of all comments added to this resource.",
          "items" : {
            "$ref" : "#/definitions/ICommentHistory"
          }
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the intrusion rule."
        },
        "suppression" : {
          "description" : "List of rule suppressions. Object containing configuration which allows users to suppress events for a rule for specific trusted IP addresses.  Will be returned when rules are fetched globally and without any specific policy.",
          "$ref" : "#/definitions/IIntrusionRuleSuppression"
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier (UUID) for the intrusion rule."
        },
        "ruleData" : {
          "type" : "string",
          "description" : "Details of the rule based on which rule created or updated."
        }
      },
      "description" : "Object representing the per-policy behaviour of a specified intrusion rule for a target intrusion policy."
    },
    "CommunityList" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/Metadata"
        },
        "expandedEntries" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IExpandedCommunityListEntry"
          }
        },
        "overridable" : {
          "type" : "boolean"
        },
        "name" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/Links"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "standardEntries" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IStandardCommunityListEntry"
          }
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "LocalRealmUserListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LocalRealmUser"
          }
        }
      }
    },
    "FTDHADeviceContainerListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FTDHADeviceContainer"
          }
        }
      }
    },
    "FPPhysicalInterface" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "description" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "enabled" : {
          "type" : "integer",
          "format" : "int32"
        },
        "mtu" : {
          "type" : "integer",
          "format" : "int32"
        },
        "mode" : {
          "type" : "string"
        },
        "interfaceType" : {
          "type" : "string",
          "enum" : [ "NONE", "MANAGEMENT", "PASSIVE", "INLINE", "SWITCHED", "ROUTED", "HA_LINK", "ASA" ]
        },
        "mdi" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "staticArpEntries" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IStaticArpEntry"
          }
        },
        "links" : {
          "$ref" : "#/definitions/Links"
        },
        "ipAddresses" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "id" : {
          "type" : "string"
        }
      }
    },
    "IRadiusServers" : {
      "type" : "object",
      "required" : [ "authenticationPort", "host", "secretKey" ],
      "properties" : {
        "accountingPort" : {
          "type" : "integer",
          "format" : "int32"
        },
        "useRoutingToSelectInterface" : {
          "type" : "boolean",
          "description" : "Specify the routing table or the interface to be used to connect the radius server"
        },
        "secretKey" : {
          "type" : "string"
        },
        "host" : {
          "type" : "string",
          "description" : "IP Address or the FQDN Name of the Radius Server"
        },
        "interface" : {
          "description" : "Interface to connect the Radius Server.",
          "$ref" : "#/definitions/IReference"
        },
        "timeout" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Time in seconds that FTD waits for Radius Server's response."
        },
        "authenticationPort" : {
          "type" : "integer",
          "format" : "int32"
        },
        "redirectACL" : {
          "description" : "Acl that needed to be applied for dynamic authorization.",
          "$ref" : "#/definitions/IReference"
        }
      },
      "description" : "Radius servers are used to authenticate users logging in through Remote Access VPN connections."
    },
    "NetworkGroupOverride" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata properties of response object.",
          "$ref" : "#/definitions/Metadata"
        },
        "overridable" : {
          "type" : "boolean",
          "description" : "Always returns false of overrides."
        },
        "name" : {
          "type" : "string",
          "description" : "User chosen resource name."
        },
        "description" : {
          "type" : "string",
          "description" : "User provided description."
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/Links"
        },
        "overrides" : {
          "description" : "An object override allows you to define an alternate value for an object.",
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier representing resource."
        },
        "type" : {
          "type" : "string",
          "description" : "Type associated with resource."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        }
      },
      "description" : "A model representing Network group override definition."
    },
    "INeighborMaximumPrefix" : {
      "type" : "object",
      "properties" : {
        "maxPrefixLimit" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        },
        "warningOnly" : {
          "type" : "boolean"
        },
        "thresholdValue" : {
          "type" : "integer",
          "format" : "int32"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "restartInterval" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "IPv6StaticRouteModelListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IPv6StaticRouteModel"
          }
        }
      }
    },
    "DNSServerGroupObject" : {
      "type" : "object",
      "properties" : {
        "defaultdomain" : {
          "type" : "string"
        },
        "metadata" : {
          "$ref" : "#/definitions/Metadata"
        },
        "dnsservers" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/INameServer"
          }
        },
        "description" : {
          "type" : "string"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "timeout" : {
          "type" : "integer",
          "format" : "int32"
        },
        "overrideTargetId" : {
          "type" : "string"
        },
        "retries" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        },
        "overridable" : {
          "type" : "boolean"
        },
        "links" : {
          "$ref" : "#/definitions/Links"
        },
        "id" : {
          "type" : "string"
        }
      }
    },
    "FTDNatPolicyListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FTDNatPolicy"
          }
        }
      }
    },
    "INeighborHaMode" : {
      "type" : "object",
      "properties" : {
        "disable" : {
          "type" : "boolean"
        },
        "name" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "IFMCServerInfo" : {
      "type" : "object",
      "properties" : {
        "modelName" : {
          "type" : "string"
        },
        "role" : {
          "type" : "string"
        },
        "swVersion" : {
          "type" : "string"
        },
        "modelId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ipAddress" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "hwRole" : {
          "type" : "string"
        }
      }
    },
    "IUrlCategoryAndReputation" : {
      "type" : "object",
      "properties" : {
        "reputation" : {
          "type" : "string",
          "enum" : [ "ANY_EXCEPT_UNKNOWN", "TRUSTED", "FAVORABLE", "NEUTRAL", "QUESTIONABLE", "UNTRUSTED", "ANY_AND_UNKNOWN", "TRUSTED_AND_UNKNOWN", "FAVORABLE_AND_UNKNOWN", "NEUTRAL_AND_UNKNOWN", "QUESTIONABLE_AND_UNKNOWN", "UNTRUSTED_AND_UNKNOWN" ]
        },
        "type" : {
          "type" : "string"
        },
        "category" : {
          "$ref" : "#/definitions/IURLCategory"
        }
      }
    },
    "ICMPV6ObjectOverrideListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ICMPV6ObjectOverride"
          }
        }
      }
    },
    "ApplicationFilter" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata attributes for the application filter.",
          "$ref" : "#/definitions/IMetadata"
        },
        "name" : {
          "type" : "string",
          "description" : "User-specified name of the application filter."
        },
        "overridable" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether object values can be overridden."
        },
        "description" : {
          "type" : "string",
          "description" : "This field is deprecated and should not be used."
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier (UUID) for the application filter."
        },
        "appConditions" : {
          "type" : "array",
          "description" : "List of objects representing application conditions.",
          "items" : {
            "$ref" : "#/definitions/IAppCondition"
          }
        },
        "overrides" : {
          "description" : "An object override allows you to define an alternate value for an object on a device or domain.",
          "$ref" : "#/definitions/IOverride"
        },
        "type" : {
          "type" : "string",
          "description" : "Type of the response object. This value is always ApplicationFilter."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        },
        "applications" : {
          "type" : "array",
          "description" : "List of objects representing applications.",
          "items" : {
            "$ref" : "#/definitions/IApplicationModel"
          }
        }
      },
      "description" : "Represents an ApplicationFilter containing various Conditions and Applications."
    },
    "LLHashMap" : {
      "type" : "object",
      "additionalProperties" : {
        "type" : "string"
      }
    },
    "HealthMetricListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/HealthMetric"
          }
        }
      }
    },
    "DynamicAccessPolicyListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DynamicAccessPolicy"
          }
        }
      }
    },
    "VlanTag" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata properties of response object.",
          "$ref" : "#/definitions/Metadata"
        },
        "data" : {
          "description" : "Object containing starting and ending VLAN identifier (VID) specifying the VLAN to which the frame belongs.",
          "$ref" : "#/definitions/IVlanTagLiteral"
        },
        "overridable" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether object values can be overridden."
        },
        "name" : {
          "type" : "string",
          "description" : "User assigned resource name."
        },
        "description" : {
          "type" : "string",
          "description" : "User provided resource description."
        },
        "links" : {
          "description" : "Object containing related links.",
          "$ref" : "#/definitions/Links"
        },
        "overrides" : {
          "description" : "An object override allows you to define an alternate value for an object.",
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier representing response object."
        },
        "type" : {
          "type" : "string",
          "description" : "Type associated with resource."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        },
        "overrideTargetId" : {
          "type" : "string",
          "description" : "Unique identifier of domain or device when override assigned to child domain. Used as path parameter to GET override details for a specific object on a specific target (device or domain)."
        }
      },
      "description" : "A model representing tag object definition."
    },
    "RESTSettings" : {
      "type" : "object",
      "properties" : {
        "settings" : {
          "$ref" : "#/definitions/LLSettings"
        },
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "IReference" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "User chosen resource name."
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier representing resource."
        },
        "type" : {
          "type" : "string",
          "description" : "Response object associated with resource."
        }
      },
      "description" : "Contains reference information."
    },
    "ISpfThrottleTimer" : {
      "type" : "object",
      "properties" : {
        "minimumHoldTime" : {
          "type" : "integer",
          "format" : "int32"
        },
        "maximumWaitTime" : {
          "type" : "integer",
          "format" : "int32"
        },
        "initialDelay" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "FTDHADeviceContainer" : {
      "type" : "object",
      "required" : [ "ftdHABootstrap", "primary", "secondary" ],
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata properties",
          "$ref" : "#/definitions/IMetadata"
        },
        "modelId" : {
          "type" : "string",
          "description" : "Model ID of the FTD Devices used in FTD HA pair."
        },
        "advanced" : {
          "description" : "Object representing Device Advanced Configuration.",
          "$ref" : "#/definitions/IAdvanced"
        },
        "description" : {
          "type" : "string",
          "description" : "Retrieves or modifies the FTD HA record associated with the specified ID. Creates or breaks or deletes a FTD HA pair. If no ID is specified for a GET, retrieves list of all FTD HA pairs."
        },
        "ftdHAFailoverTriggerCriteria" : {
          "description" : "Conditions on which HA failover would be triggered.",
          "$ref" : "#/definitions/IFTDHAFailoverInterfacePolicyTrigger"
        },
        "modelType" : {
          "type" : "string",
          "description" : "Model type of the FTD Devices used in FTD HA pair."
        },
        "type" : {
          "type" : "string",
          "description" : "DeviceHAPair."
        },
        "version" : {
          "type" : "string",
          "description" : "FTD HA model version."
        },
        "ftdHABootstrap" : {
          "description" : "FTD HA Bootstrap object used during POST operation.",
          "$ref" : "#/definitions/IFTDDeviceHABootStrap"
        },
        "sw_version" : {
          "type" : "string",
          "description" : "FTD HA device version."
        },
        "secondary" : {
          "description" : "Represents the secondary device.",
          "$ref" : "#/definitions/IBaseDevice"
        },
        "healthStatus" : {
          "type" : "string",
          "description" : "Health status of the FTD Devices used in FTD HA pair."
        },
        "healthPolicy" : {
          "description" : "Health Policy of the FTD Devices used in FTD HA pair.",
          "$ref" : "#/definitions/IHealthPolicy"
        },
        "name" : {
          "type" : "string",
          "description" : "User-chosen name."
        },
        "action" : {
          "type" : "string",
          "description" : "FTD HA PUT operation action. Specifically used for breaking FTD HA or manual switch.",
          "enum" : [ "SWITCH", "HABREAK" ]
        },
        "links" : {
          "description" : "Object containing related links.",
          "$ref" : "#/definitions/ILinks"
        },
        "model" : {
          "type" : "string",
          "description" : "FTDHADeviceContainer"
        },
        "modelNumber" : {
          "type" : "string",
          "description" : "Model Number of the FTD Devices used in FTD HA pair."
        },
        "forceBreak" : {
          "type" : "boolean",
          "description" : "FTD HA Force Break option."
        },
        "id" : {
          "type" : "string",
          "description" : "FTD HA container UUID."
        },
        "accessPolicy" : {
          "description" : "Object representing the access control policy associated with device",
          "$ref" : "#/definitions/IPolicyModel"
        },
        "primary" : {
          "description" : "Primary Device object for FTD HA.",
          "$ref" : "#/definitions/IBaseDevice"
        }
      },
      "description" : "Input representation of FTD HA pair."
    },
    "DynamicObjectMappingsListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DynamicObjectMappings"
          }
        }
      }
    },
    "SSOConfigListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SSOConfig"
          }
        }
      }
    },
    "CountryObjectListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CountryObject"
          }
        }
      }
    },
    "ExternalLookupListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ExternalLookup"
          }
        }
      }
    },
    "PendingChanges" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "entityUUID" : {
          "type" : "string",
          "description" : " An identifier of entity which does not change with time."
        },
        "entityType" : {
          "type" : "string",
          "description" : "An Entity type type that has been modified."
        },
        "valueUpdated" : {
          "type" : "array",
          "description" : "Values that were specified compared to its other state. ",
          "items" : {
            "$ref" : "#/definitions/IValueUpdate"
          }
        },
        "message" : {
          "type" : "string",
          "description" : "In case for an entity there is no diff, due to no modification or some error during generation proper message will be given for that entity."
        },
        "version" : {
          "type" : "string"
        },
        "valueDeleted" : {
          "type" : "array",
          "description" : "Values that were deleted compared to its other state.",
          "items" : {
            "$ref" : "#/definitions/IValueDelete"
          }
        },
        "parentUUID" : {
          "type" : "string",
          "description" : "UUID of the entity to which this entity is grouped to. If it's empty, it means the entity is the parent entity."
        },
        "referencesDeleted" : {
          "type" : "array",
          "description" : "References that were deleted compared to its other state.",
          "items" : {
            "$ref" : "#/definitions/IReferenceUpdate"
          }
        },
        "valueAdded" : {
          "type" : "array",
          "description" : "Values that were added compared to its other state. ",
          "items" : {
            "$ref" : "#/definitions/IValueAdd"
          }
        },
        "entityName" : {
          "type" : "string",
          "description" : "A name field value of modified Entity. "
        },
        "lastUpdatedByUsers" : {
          "type" : "array",
          "description" : "List of users who have modified the entity after last successful deployment.",
          "items" : {
            "type" : "string"
          }
        },
        "action" : {
          "type" : "string",
          "description" : "Action done on the entity",
          "enum" : [ "ADD", "DELETE", "UPDATE" ]
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "referencesAdded" : {
          "type" : "array",
          "description" : "References that were added compared to its other state.",
          "items" : {
            "$ref" : "#/definitions/IReferenceUpdate"
          }
        }
      },
      "description" : "Retrieves list changes between the last successful deployment and current saved configuration for the device,."
    },
    "IUrlLiteral" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string"
        }
      }
    },
    "ISISettings" : {
      "type" : "object",
      "properties" : {
        "blocklist" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ISIObject"
          }
        },
        "allowlist" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ISIObject"
          }
        },
        "blocklistLogging" : {
          "$ref" : "#/definitions/ISILogging"
        }
      }
    },
    "FTDRAVpnModelListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FTDRAVpnModel"
          }
        }
      }
    },
    "FTDHAInterfaceMACAddressesListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FTDHAInterfaceMACAddresses"
          }
        }
      }
    },
    "FTDAutoNatRuleListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FTDAutoNatRule"
          }
        }
      }
    },
    "IInterfaceGroupObjectModel" : {
      "type" : "object",
      "properties" : {
        "interfaceMode" : {
          "type" : "string",
          "enum" : [ "PASSIVE", "INLINE", "SWITCHED", "ROUTED" ]
        },
        "interfaces" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IFTDInterface"
          }
        },
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "devices" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IInterfaceDeviceModel"
          }
        },
        "name" : {
          "type" : "string"
        },
        "overridable" : {
          "type" : "boolean"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "AccessPolicyInheritanceSettingListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AccessPolicyInheritanceSetting"
          }
        }
      }
    },
    "DynamicObjectListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DynamicObject"
          }
        }
      }
    },
    "GroupPolicyModelListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/GroupPolicyModel"
          }
        }
      }
    },
    "ISubTask" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "type" : "string"
        },
        "target" : {
          "$ref" : "#/definitions/ITarget"
        },
        "status" : {
          "type" : "string"
        }
      }
    },
    "UrlGroupOverrideListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/UrlGroupOverride"
          }
        }
      }
    },
    "TunnelTagsListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TunnelTags"
          }
        }
      }
    },
    "NetworkAddress" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata properties of response object.",
          "$ref" : "#/definitions/Metadata"
        },
        "overridable" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether object values can be overridden."
        },
        "name" : {
          "type" : "string",
          "description" : "User chosen resource name."
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "description" : "Object containing related links.",
          "$ref" : "#/definitions/Links"
        },
        "overrides" : {
          "description" : "An object override allows you to define an alternate value for an object.",
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of response object."
        },
        "type" : {
          "type" : "string",
          "description" : "Subtype of NetworkAddress (Host | Network | Range | NetworkGroup)."
        },
        "value" : {
          "type" : "string",
          "description" : "Actual value of child object."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        },
        "overrideTargetId" : {
          "type" : "string",
          "description" : "Unique identifier of domain or device when override assigned to child domain. Used as path parameter to GET override details for a specific object on a specific target (device or domain)."
        }
      },
      "description" : "A model representing Network Address definition representing parent of Network sub types."
    },
    "GroupPolicyModel" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata attributes for the Group Policy",
          "$ref" : "#/definitions/Metadata"
        },
        "enableSSLProtocol" : {
          "type" : "boolean",
          "description" : "Enable SSL type of Remote Access VPN tunnel that can be used when applying this group policy"
        },
        "advancedSettings" : {
          "$ref" : "#/definitions/IGroupPolicyAdvancedSettingsModel"
        },
        "name" : {
          "type" : "string",
          "description" : " Identifies the Group Policy Object so that can be referred to other configurations"
        },
        "generalSettings" : {
          "$ref" : "#/definitions/IGroupPolicyGeneralSettingsModel"
        },
        "description" : {
          "type" : "string",
          "description" : "Represents the Group Policy configuration for RA VPN. It is a collation of Attribute and value pairs that determines parameters for the functionality of RA VPN"
        },
        "enableIPsecIKEv2Protocol" : {
          "type" : "boolean",
          "description" : "Enable IPSec IKEv2 type of Remote Access VPN tunnel that can be used when applying this group policy"
        },
        "links" : {
          "description" : "Specifies links to this object.",
          "$ref" : "#/definitions/Links"
        },
        "id" : {
          "type" : "string",
          "description" : "Specifies Unique identifier (UUID) representing the Group Policy object"
        },
        "type" : {
          "type" : "string",
          "description" : "Specifies unique type of the Group Policy."
        },
        "version" : {
          "type" : "string"
        },
        "anyConnectSettings" : {
          "$ref" : "#/definitions/IGroupPolicyAnyConnectSettingsModel"
        }
      },
      "description" : "Model representing the Group Policy configuration for RA VPN."
    },
    "IOspfv3NeighborPriority" : {
      "type" : "object",
      "properties" : {
        "pollInterval" : {
          "type" : "integer",
          "format" : "int32"
        },
        "priority" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "FTDHAInterfaceMACAddresses" : {
      "type" : "object",
      "required" : [ "failoverActiveMac", "failoverStandbyMac", "physicalInterface" ],
      "properties" : {
        "failoverActiveMac" : {
          "type" : "string",
          "description" : "Interface MAC address in H.H.H format, where H is a 16-bit hexadecimal digit. For example, the MAC address 00-0C-F1-42-4C-DE would be entered as 000C.F142.4CDE"
        },
        "metadata" : {
          "description" : "Object representing metadata properties",
          "$ref" : "#/definitions/IMetadata"
        },
        "failoverStandbyMac" : {
          "type" : "string",
          "description" : "Standby MAC Address"
        },
        "physicalInterface" : {
          "description" : "User chosen physical interface",
          "$ref" : "#/definitions/FTDBaseInterface"
        },
        "name" : {
          "type" : "string",
          "description" : "System chosen name"
        },
        "description" : {
          "type" : "string",
          "description" : "User provided resource description"
        },
        "links" : {
          "description" : "Object containing related links",
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string",
          "description" : "Identifier of a Firepower Threat Defense high availability failover interface MAC address"
        },
        "type" : {
          "type" : "string",
          "description" : "Type of the Firepower Threat Defense high availability failover interface MAC address"
        },
        "version" : {
          "type" : "string",
          "description" : "version"
        }
      },
      "description" : "Input Representation of Firepower Threat Defense high availability failover interface MAC addresses record associated with the specified FTD HA pair"
    },
    "HealthAlertModel" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "moduleUUID" : {
          "type" : "string",
          "description" : "UUID of the module on which the alert is raised"
        },
        "description" : {
          "type" : "string"
        },
        "params" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "description" : "Type of the alert. This will always be Alert"
        },
        "version" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "details" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "moduleID" : {
          "type" : "string",
          "description" : "ID of the module, it is one of APPLICATION_BYPASS, CARD_RESET, CPU, CPU_LINA, CPU_SNORT, CPU_SYSTEM, DISK_USAGE, EVENT_STREAM, HEALTH_MONITOR, HEARTBEAT, INTERFACE, HARDWARE_ALARM, POWER_SUPPLY, LIC, LIC_MONITOR, LINKSTATE_PROPAGATION, MEMORY_USAGE, MEMORY_USAGE_LINA, MEMORY_USAGE_SNORT, PEP, PROCESS, DISCOVERY_HEALTH, HOST_LIMIT, RRD_SERVER, SENSOR_HUB, INTRUSION_FILE_STATS, TEST, TIME_SYNC, TIME_SERIES_DATA_MONITOR, URLFILTER, SECURITY_INTELLIGENCE, AMP_FOR_ENDPOINTS, USER_AGENT, SMART_LICENSE, VPN, HIGH_AVAILABILITY, DATABASE, PLATFORM_FAULTS, THREAT_DATA_UPDATES, REALM, ISE, SNORT_IDENTITY_MEMORY_USAGE, MALWARE, DISK_STATUS, BACKLOG, STATIC_ANALYSIS, CLUSTER, INLINELINK_ALARM, RECONFIG_DETECTION, CONNECTIONS, CRITICAL_PROCESS, DEPLOYED_CONFIGURATION, SNORT_STATS and FTD_HA",
          "enum" : [ "APPLICATION_BYPASS", "CARD_RESET", "CPU", "CPU_LINA", "CPU_SNORT", "CPU_SYSTEM", "DISK_USAGE", "EVENT_STREAM", "HEALTH_MONITOR", "HEARTBEAT", "INTERFACE", "HARDWARE_ALARM", "POWER_SUPPLY", "LICENSE", "LICENSE_MONITOR", "LINKSTATE_PROPAGATION", "MEMORY_USAGE", "MEMORY_USAGE_LINA", "MEMORY_USAGE_SNORT", "PEP", "PROCESS", "DISCOVERY_HEALTH", "HOST_LIMIT", "RRD_SERVER", "APPLIANCE_HEARTBEAT", "INTRUSION_FILE_STATS", "TEST", "TIME_SYNC", "TIME_SERIES_DATA_MONITOR", "URLFILTER", "SECURITY_INTELLIGENCE", "AMP_FOR_ENDPOINTS", "USER_AGENT", "SMART_LICENSE", "VPN", "HIGH_AVAILABILITY", "DATABASE", "PLATFORM_FAULTS", "THREAT_DATA_UPDATES", "REALM", "ISE", "SNORT_IDENTITY_MEMORY_USAGE", "AMP_FOR_FIREPOWER_STATUS", "DISK_STATUS", "BACKLOG", "LOCAL_MALWARE_ANALYSIS", "CLUSTER", "INLINELINK_ALARM", "RECONFIG_DETECTION", "CONNECTIONS", "CRITICAL_PROCESS", "DEPLOYED_CONFIGURATION", "SNORT_STATS", "FTD_HA", "FILE_SYSTEM_INTEGRITY_CHECK", "ASP_DROP", "HIT_COUNT", "NTP_SERVER", "ROUTING_STATS", "UNRESOLVED_GROUPS_MONITOR", "CONN_STATUS_SSE", "CONN_STATUS_AMP", "FLOW_OFFLOAD", "CHASSIS_STATUS_FTD", "ADVANCED_SNORT_STATS", "OUT_OF_BAND_CHANGES", "FTD_CONFIG_RESOURCE_UTILISATION", "SYBASE_STATUS", "MYSQL", "VPN_STATS", "RABBITMQ", "EVENT" ]
        },
        "deviceUUID" : {
          "type" : "string",
          "description" : "UUID of the device on which the alert is raised"
        },
        "timestamp" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Time in seconds at which the alert is raised, timestamp is in unix format"
        },
        "status" : {
          "type" : "string",
          "description" : "Status of the alert, it is one of GREEN, RED, YELLOW, DISABLED and RECOVERED",
          "enum" : [ "GREEN", "DISABLED", "RECOVERED", "RED", "ERROR", "YELLOW" ]
        }
      },
      "description" : "An object representing the health alert."
    },
    "IInlinePair" : {
      "type" : "object",
      "properties" : {
        "first" : {
          "$ref" : "#/definitions/IInterface"
        },
        "second" : {
          "$ref" : "#/definitions/IInterface"
        }
      }
    },
    "VrfStaticRouteModelListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/VrfStaticRouteModel"
          }
        }
      }
    },
    "IOspfTimers" : {
      "type" : "object",
      "properties" : {
        "spfThrottleTimer" : {
          "$ref" : "#/definitions/ISpfThrottleTimer"
        },
        "lsaThrottleTimer" : {
          "$ref" : "#/definitions/ILsaThrottleTimer"
        },
        "lsaGroup" : {
          "type" : "integer",
          "format" : "int32"
        },
        "retransmission" : {
          "type" : "integer",
          "format" : "int32"
        },
        "lsaArrival" : {
          "type" : "integer",
          "format" : "int32"
        },
        "floodPacing" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "ISafeSearch" : {
      "type" : "object",
      "properties" : {
        "actionForNonSupportedEngines" : {
          "type" : "string",
          "enum" : [ "ALLOW", "BLOCK", "BLOCK_WITH_RESET" ]
        },
        "enabled" : {
          "type" : "boolean"
        }
      }
    },
    "VrfOspfInterfacePolicyModelListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/VrfOspfInterfacePolicyModel"
          }
        }
      }
    },
    "IRedistributeProtocolBase" : {
      "type" : "object",
      "properties" : {
        "tagNumber" : {
          "type" : "integer",
          "format" : "int32"
        },
        "routeMap" : {
          "$ref" : "#/definitions/IRouteMap"
        },
        "routeMetric" : {
          "$ref" : "#/definitions/IOspfRouteMetric"
        },
        "subnets" : {
          "type" : "boolean"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "VpnAdvancedSettingsListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/VpnAdvancedSettings"
          }
        }
      }
    },
    "RealmMetadata" : {
      "type" : "object",
      "properties" : {
        "lastUser" : {
          "$ref" : "#/definitions/MetadataUser"
        },
        "hasUnresolvedReferences" : {
          "type" : "boolean",
          "description" : "Field represents whether this `Realm` has unresolved references."
        },
        "isDownloading" : {
          "type" : "boolean",
          "description" : "Field represents whether a download task is in progress."
        },
        "domain" : {
          "$ref" : "#/definitions/Domain"
        },
        "readOnly" : {
          "$ref" : "#/definitions/ReadOnly"
        },
        "systemDefined" : {
          "type" : "boolean",
          "description" : "Field represents whether this `Realm` can be seen by other policies."
        },
        "duplicatedDomain" : {
          "type" : "boolean",
          "description" : "Field represents whether an imported realm has 'adPrimaryDomain' that conflicts with an existing realm on the system. A realm with this flag set can not be enabled until the condition has been cleared."
        },
        "timestamp" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "description" : "An object representing the metadata of the realm."
    },
    "OspfInterfacePolicyModel" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/Metadata"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "deviceInterface" : {
          "$ref" : "#/definitions/IFTDInterface"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "ospfProtocolConfiguration" : {
          "$ref" : "#/definitions/IOspfProtocolConfiguration"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "IApplicationRisk" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata attributes for the application risk.",
          "$ref" : "#/definitions/IMetadata"
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the application risk."
        },
        "overridable" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether object values can be overridden."
        },
        "description" : {
          "type" : "string",
          "description" : "Application risk resource description."
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/ILinks"
        },
        "overrides" : {
          "description" : "An object override allows you to define an alternate value for an object on a device or domain.",
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier for the application risk."
        },
        "type" : {
          "type" : "string",
          "description" : "Type of the response object. This value is always ApplicationRisk."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        }
      },
      "description" : "Represents an ApplicationRisk."
    },
    "CertificateMapModelListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CertificateMapModel"
          }
        }
      }
    },
    "IPv4PrefixList" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/Metadata"
        },
        "entries" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IIPvPrefixListEntry"
          }
        },
        "name" : {
          "type" : "string"
        },
        "overridable" : {
          "type" : "boolean"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/Links"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "IFTDDeviceHAFailoverLink" : {
      "type" : "object",
      "required" : [ "activeIP", "interfaceObject", "logicalName", "standbyIP" ],
      "properties" : {
        "interfaceObject" : {
          "$ref" : "#/definitions/IFTDBaseInterface"
        },
        "useIPv6Address" : {
          "type" : "boolean"
        },
        "standbyIP" : {
          "type" : "string"
        },
        "activeIP" : {
          "type" : "string"
        },
        "logicalName" : {
          "type" : "string"
        },
        "subnetMask" : {
          "type" : "string"
        }
      }
    },
    "RESTFeedProperty" : {
      "type" : "object",
      "properties" : {
        "llfeedProperty" : {
          "$ref" : "#/definitions/LLFeedProperty"
        },
        "expirationTime" : {
          "type" : "integer",
          "format" : "int32"
        },
        "publish" : {
          "type" : "boolean"
        },
        "action" : {
          "type" : "string"
        },
        "whitelist" : {
          "type" : "boolean"
        },
        "ttl" : {
          "type" : "integer",
          "format" : "int32"
        },
        "tags" : {
          "$ref" : "#/definitions/LLTags"
        }
      }
    },
    "INeighborFiltering" : {
      "type" : "object",
      "properties" : {
        "neighborMaximumPrefix" : {
          "$ref" : "#/definitions/INeighborMaximumPrefix"
        },
        "neighborDistributeLists" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/INeighborDistributeLists"
          }
        },
        "neighborFilterList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/INeighborFilterList"
          }
        },
        "neighborRouteMap" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/INeighborRouteMap"
          }
        },
        "name" : {
          "type" : "string"
        },
        "ipv6PrefixListFilter" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IIpvPrefixListFilter"
          }
        },
        "neighborDefaultOriginate" : {
          "$ref" : "#/definitions/INeighborDefaultOriginate"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "ipv4PrefixListFilter" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IIpvPrefixListFilter"
          }
        }
      }
    },
    "IFTDBaseInterface" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "description" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "enabled" : {
          "type" : "boolean"
        },
        "MTU" : {
          "type" : "integer",
          "format" : "int32"
        },
        "mode" : {
          "type" : "string",
          "enum" : [ "INLINE", "PASSIVE", "TAP", "ERSPAN", "NONE", "SWITCHPORT" ]
        },
        "fmcAccessConfig" : {
          "$ref" : "#/definitions/IFMCAccessConfig"
        },
        "arpConfig" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IARPConfigContainer"
          }
        },
        "ipv4" : {
          "$ref" : "#/definitions/IIPv4Container"
        },
        "ifname" : {
          "type" : "string"
        },
        "ipv6" : {
          "$ref" : "#/definitions/IIPv6Container"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "enableSGTPropagate" : {
          "type" : "boolean"
        },
        "macLearn" : {
          "type" : "boolean"
        },
        "managementOnly" : {
          "type" : "boolean"
        },
        "enableAntiSpoofing" : {
          "type" : "boolean"
        },
        "securityZone" : {
          "$ref" : "#/definitions/ISecurityZoneObjectModel"
        },
        "activeMACAddress" : {
          "type" : "string"
        },
        "fragmentReassembly" : {
          "type" : "boolean"
        },
        "macTable" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "standbyMACAddress" : {
          "type" : "string"
        },
        "enableDNSLookup" : {
          "type" : "boolean"
        },
        "overrideDefaultFragmentSetting" : {
          "$ref" : "#/definitions/IOverrideDefaultFragmentSetting"
        },
        "version" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        }
      }
    },
    "ICountryModel" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata attributes for the country.",
          "$ref" : "#/definitions/IMetadata"
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the Country."
        },
        "overridable" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether object values can be overridden."
        },
        "description" : {
          "type" : "string",
          "description" : "This field is deprecated and should not be used."
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/ILinks"
        },
        "overrides" : {
          "description" : "An object override allows you to define an alternate value for an object on a device or domain.",
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string",
          "description" : "Identifier matching country from geolocation database."
        },
        "iso2" : {
          "type" : "string",
          "description" : "ISO2 country code string."
        },
        "type" : {
          "type" : "string",
          "description" : "Type of the response object. This value is always Country."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        },
        "iso3" : {
          "type" : "string",
          "description" : "ISO3 country code string."
        }
      },
      "description" : "Represents a Country."
    },
    "FTDNatPolicy" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/Metadata"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/Links"
        },
        "rules" : {
          "type" : "object"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "IGroupPolicyAdvancedSettingsModel" : {
      "type" : "object",
      "properties" : {
        "restrictVPNToVLANId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Optional. Specifies the egress VLAN for remote access VPN sessions assigned to this group policy. The range is 1-4094.There is no default value."
        },
        "vpnTrafficFilterACL" : {
          "description" : "Optional. Represents vpn-filter acl to post-decrypted traffic after it exits a tunnel and pre-encrypted traffic before it enters a tunnel. The ACL should be configured with the client assigned IP addresses as source and local network ip as destination in ACL.",
          "$ref" : "#/definitions/IReference"
        },
        "sessionSettings" : {
          "description" : "Optional. Configures Session paramaters for VPN",
          "$ref" : "#/definitions/IGroupPolicySessionSettingsModel"
        }
      },
      "description" : "Model representiing the Configurations for Advanced Settings for Group Policy."
    },
    "AnyConnectCustomAttributeModel" : {
      "type" : "object",
      "required" : [ "anyConnectAttribute" ],
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata attributes for the AnyConnect Package.",
          "$ref" : "#/definitions/Metadata"
        },
        "anyConnectAttribute" : {
          "type" : "string",
          "description" : "Name of the added AnyConnect custom attribute variable"
        },
        "overridable" : {
          "type" : "boolean"
        },
        "name" : {
          "type" : "string",
          "description" : "User provided resource name."
        },
        "description" : {
          "type" : "string",
          "description" : "User provided resource description."
        },
        "links" : {
          "description" : "Object containing related links.",
          "$ref" : "#/definitions/Links"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier representing the AnyConnect Package object."
        },
        "type" : {
          "type" : "string",
          "description" : "Type associated with resource: AnyConnectPackage."
        },
        "version" : {
          "type" : "string"
        }
      },
      "description" : "AnyConnect Custom Attribute objects represent custom attribute used in configurations, typically for remote access VPN policies. They can contain custom attribute in AnyConnect."
    },
    "IContinentModel" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata attributes for the continent.",
          "$ref" : "#/definitions/IMetadata"
        },
        "code" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "This field is deprecated and should not be used."
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the Continent."
        },
        "overridable" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether object values can be overridden."
        },
        "description" : {
          "type" : "string",
          "description" : "This field is deprecated and should not be used."
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/ILinks"
        },
        "countries" : {
          "type" : "array",
          "description" : "List of objects representing countries.",
          "items" : {
            "$ref" : "#/definitions/ICountryModel"
          }
        },
        "overrides" : {
          "description" : "An object override allows you to define an alternate value for an object on a device or domain.",
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string",
          "description" : "Identifier matching contient from geolocation database."
        },
        "type" : {
          "type" : "string",
          "description" : "Type of the response object. This value is always Continent."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        }
      },
      "description" : "Represents a Continent."
    },
    "ErrorResponse" : {
      "type" : "object",
      "properties" : {
        "severity" : {
          "type" : "string",
          "enum" : [ "ERROR", "WARN" ]
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ErrorMessagesContainer"
          }
        },
        "category" : {
          "type" : "string",
          "enum" : [ "FRAMEWORK", "OTHER", "VALIDATION" ]
        }
      }
    },
    "DeploymentDetail" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "policyList" : {
          "type" : "array",
          "description" : "Details of policies which were deployed to the device.",
          "items" : {
            "$ref" : "#/definitions/IPolicyModel"
          }
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the deployment job "
        },
        "description" : {
          "type" : "string"
        },
        "startTime" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Time in seconds at which the deployment was started, timestamp is in unix format"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "endTime" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Time in seconds at which the deployment ended, timestamp is in unix format"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string",
          "description" : "Status of the deployment, can be one of DEPLOYING, SUCCEEDED, PARTIALLY_SUCCEEDED, FAILED, SSP_SUCCEEDED, SSP_FAILED, SSP_PRIMARY_BOOTSTRAP_SUCCEEDED, SSP_PRIMARY_BOOTSTRAP_FAILED, SSP_SECONDARY_BOOTSTRAP_SUCCEEDED, SSP_SECONDARY_BOOTSTRAP_FAILED, PRIMARY_BOOTSTRAP_SUCCEEDED, PRIMARY_BOOTSTRAP_FAILED, SECONDARY_BOOTSTRAP_SUCCEEDED, SECONDARY_BOOTSTRAP_FAILED, BREAK_SUCCEEDED, BREAK_FAILED, PRIMARY_BOOTSTRAP_PARTIALLY_SUCCEEDED, SECONDARY_BOOTSTRAP_PARTIALLY_SUCCEEDED, SSP_PRIMARY_BOOTSTRAP_PARTIALLY_SUCCEEDED, SSP_SECONDARY_BOOTSTRAP_PARTIALLY_SUCCEEDED, BREAK_PARTIALLY_SUCCEEDED, CANCELLED and NONE ",
          "enum" : [ "DEPLOYING", "SUCCEEDED", "PARTIALLY_SUCCEEDED", "FAILED", "SSP_SUCCEEDED", "SSP_FAILED", "SSP_PRIMARY_BOOTSTRAP_SUCCEEDED", "SSP_PRIMARY_BOOTSTRAP_FAILED", "SSP_SECONDARY_BOOTSTRAP_SUCCEEDED", "SSP_SECONDARY_BOOTSTRAP_FAILED", "PRIMARY_BOOTSTRAP_SUCCEEDED", "PRIMARY_BOOTSTRAP_FAILED", "SECONDARY_BOOTSTRAP_SUCCEEDED", "SECONDARY_BOOTSTRAP_FAILED", "BREAK_SUCCEEDED", "BREAK_FAILED", "PRIMARY_BOOTSTRAP_PARTIALLY_SUCCEEDED", "SECONDARY_BOOTSTRAP_PARTIALLY_SUCCEEDED", "SSP_PRIMARY_BOOTSTRAP_PARTIALLY_SUCCEEDED", "SSP_SECONDARY_BOOTSTRAP_PARTIALLY_SUCCEEDED", "BREAK_PARTIALLY_SUCCEEDED", "CANCELLED", "NONE" ]
        }
      },
      "description" : "An object representing the deployment details on a device"
    },
    "ProtocolPortObjectListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProtocolPortObject"
          }
        }
      }
    },
    "CloudRegionListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CloudRegion"
          }
        }
      }
    },
    "IUrlObjectsContainer" : {
      "type" : "object",
      "properties" : {
        "objects" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IUrlBase"
          }
        },
        "literals" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IUrlLiteral"
          }
        },
        "urlCategoriesWithReputation" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IUrlCategoryAndReputation"
          }
        }
      }
    },
    "INameServer" : {
      "type" : "object",
      "properties" : {
        "name-server" : {
          "type" : "string"
        }
      }
    },
    "RESTIndicatorListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RESTIndicator"
          }
        }
      }
    },
    "AccessPolicySecurityIntelligencePolicyListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AccessPolicySecurityIntelligencePolicy"
          }
        }
      }
    },
    "IRollbackDeviceListEntry" : {
      "type" : "object",
      "properties" : {
        "deviceList" : {
          "type" : "array",
          "description" : "List of device UUIDs which are part of deployment job id.",
          "items" : {
            "type" : "string"
          }
        },
        "deploymentJobId" : {
          "type" : "string",
          "description" : "Deployment job UUID."
        }
      },
      "description" : "Part of request body which contains deployment job ids and list of devices for config rollback."
    },
    "IGroupPolicyConnectionSettingsModel" : {
      "type" : "object",
      "properties" : {
        "keepAliveMessageInterval" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Optional.Specifies the interval for Keep-Alive messsage. Default is 20 seconds. Valid range is from 15 - 600 seconds."
        },
        "gatewayDPDInterval" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Optional. When enableGatewayDPD is enabled, interval is specified from 5 to 3600 seconds, with which the security appliance performs gateway dead peer detection.Default is 30 secs"
        },
        "clientFirewallPrivateNetworkRules" : {
          "description" : "Optional. If the split tunnel is configured the private network rule is the rule applied to the VPN virtual adapter interface on the client",
          "$ref" : "#/definitions/IReference"
        },
        "rekeyMethod" : {
          "type" : "string",
          "description" : "Optional. If SSL rekey is enabled, specifies if new tunnel has to be established or existing one has to be renegotiated. Default is NEW_TUNNEL",
          "enum" : [ "NEW_TUNNEL", "EXISTING_TUNNEL" ]
        },
        "bypassUnsupportProtocol" : {
          "type" : "boolean",
          "description" : "Optional. Enables to determine whether to drop network traffic for which the FTD did not assign an IP address,or allow that traffic to bypass the FTD and be sent from the client unencrypted or in the clear. Default is False"
        },
        "rekeyInterval" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Optional. Specifies the number of minutes from the start of the session until the re-key takes place. Range is 4-10080. Default is 4 minutes"
        },
        "enableClientDPD" : {
          "type" : "boolean",
          "description" : "Optional. Enables client to quickly detect a condition where the peer is not responding, and the connection has failed."
        },
        "enableKeepAliveMessages" : {
          "type" : "boolean",
          "description" : "Optional. Enables connection through a proxy, firewall, or NAT device remains open. Default is True"
        },
        "enableGatewayDPD" : {
          "type" : "boolean",
          "description" : "Optional. Enables that the security appliance (gateway) can quickly detect a condition where the peer is not responding, and the connection has failed."
        },
        "clientFirewallPublicNetworkRules" : {
          "description" : "Optional. If the split tunnel is configured, the public network rule is the rule applied to other non-vpn interfaces on the client.",
          "$ref" : "#/definitions/IReference"
        },
        "enableSSLRekey" : {
          "type" : "boolean"
        },
        "clientDPDInterval" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Optional. Specifies the DDPD interval from 5 to 3600 seconds, with which the client performs DPD. Default is 30 sec"
        }
      },
      "description" : "Model representing the Configuration of Connection Settings for a Group Policy."
    },
    "IApplicationProductivity" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata attributes for the application productivity.",
          "$ref" : "#/definitions/IMetadata"
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the application productivity."
        },
        "overridable" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether object values can be overridden."
        },
        "description" : {
          "type" : "string",
          "description" : "Application productivity resource description."
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/ILinks"
        },
        "overrides" : {
          "description" : "An object override allows you to define an alternate value for an object on a device or domain.",
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier for the application productivity."
        },
        "type" : {
          "type" : "string",
          "description" : "Type of the response object. This value is always ApplicationProductivity."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        }
      },
      "description" : "Represents an ApplicationProductivity."
    },
    "IVariableSet" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "name" : {
          "type" : "string"
        },
        "overridable" : {
          "type" : "boolean"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "RESTIndicator" : {
      "type" : "object",
      "properties" : {
        "indicator" : {
          "$ref" : "#/definitions/LLIndicator"
        },
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "pending" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "description" : {
          "type" : "string"
        },
        "rawData" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "noRealizedIncidents" : {
          "type" : "integer",
          "format" : "int32"
        },
        "observables" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RESTObservable"
          }
        },
        "feedId" : {
          "type" : "string"
        },
        "effectiveProperty" : {
          "$ref" : "#/definitions/RESTFeedProperty"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "noPartialIncidents" : {
          "type" : "integer",
          "format" : "int32"
        },
        "customProperty" : {
          "$ref" : "#/definitions/RESTFeedProperty"
        },
        "updatedAt" : {
          "type" : "integer",
          "format" : "int32"
        },
        "equation" : {
          "$ref" : "#/definitions/RESTIndicatorEquationNode"
        },
        "containsUnsupported" : {
          "type" : "boolean"
        },
        "version" : {
          "type" : "string"
        },
        "iteratorId" : {
          "type" : "string"
        },
        "indicatorVersion" : {
          "type" : "string"
        },
        "containsInvalid" : {
          "type" : "boolean"
        },
        "name" : {
          "type" : "string"
        },
        "sourceName" : {
          "type" : "string"
        },
        "inheritedProperty" : {
          "$ref" : "#/definitions/RESTFeedProperty"
        },
        "fileId" : {
          "type" : "string"
        }
      }
    },
    "FQDNOverrideListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FQDNOverride"
          }
        }
      }
    },
    "CloudEventsListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CloudEvents"
          }
        }
      }
    },
    "URLGroupObjectListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/URLGroupObject"
          }
        }
      }
    },
    "AllowDNSRuleListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AllowDNSRule"
          }
        }
      }
    },
    "IDevice" : {
      "type" : "object",
      "required" : [ "hostName", "license_caps", "regKey" ],
      "properties" : {
        "hostName" : {
          "type" : "string"
        },
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "modelId" : {
          "type" : "string"
        },
        "advanced" : {
          "$ref" : "#/definitions/IAdvanced"
        },
        "natID" : {
          "type" : "string"
        },
        "license_caps" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "description" : {
          "type" : "string"
        },
        "ftdMode" : {
          "type" : "string",
          "enum" : [ "ROUTED", "TRANSPARENT" ]
        },
        "type" : {
          "type" : "string"
        },
        "snortEngine" : {
          "type" : "string",
          "enum" : [ "SNORT2", "SNORT3" ]
        },
        "healthPolicy" : {
          "$ref" : "#/definitions/IHealthPolicy"
        },
        "model" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "prohibitPacketTransfer" : {
          "type" : "boolean"
        },
        "modelType" : {
          "type" : "string"
        },
        "regKey" : {
          "type" : "string"
        },
        "keepLocalEvents" : {
          "type" : "boolean"
        },
        "version" : {
          "type" : "string"
        },
        "sw_version" : {
          "type" : "string"
        },
        "performanceTier" : {
          "type" : "string"
        },
        "healthStatus" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "modelNumber" : {
          "type" : "string"
        },
        "accessPolicy" : {
          "$ref" : "#/definitions/IPolicyModel"
        },
        "deviceGroup" : {
          "$ref" : "#/definitions/IDeviceGroup"
        }
      }
    },
    "RuleImportSummary" : {
      "type" : "object",
      "properties" : {
        "deleted" : {
          "description" : "Specifies the details of deleted rule.",
          "$ref" : "#/definitions/RuleImportSummaryEntry"
        },
        "added" : {
          "description" : "Specifies the details of added rule.",
          "$ref" : "#/definitions/RuleImportSummaryEntry"
        },
        "unassociated" : {
          "description" : "Specifies the details of unassociated rule.",
          "$ref" : "#/definitions/RuleImportSummaryEntry"
        },
        "type" : {
          "type" : "string",
          "description" : "Type of the response object. This value is always ruleimportsummary."
        },
        "updated" : {
          "description" : "Specifies the details of updated rule.",
          "$ref" : "#/definitions/RuleImportSummaryEntry"
        },
        "skipped" : {
          "description" : "Specifies the details of skipped rule.",
          "$ref" : "#/definitions/RuleImportSummaryEntry"
        }
      },
      "description" : "An object that represents the details for imported Snort3 custom rules."
    },
    "INeighborHops" : {
      "type" : "object",
      "properties" : {
        "neighborTtlSecurityHops" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        },
        "maxHopCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "disableConnectedCheck" : {
          "type" : "boolean"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "Upgrade" : {
      "type" : "object",
      "properties" : {
        "autoUpgradeCancel" : {
          "type" : "boolean",
          "description" : "If set to True, the upgrade will be automatically canceled and go back to the original starting point upon an upgrade failure, otherwise the device will stay at the current state where it failed."
        },
        "metadata" : {
          "description" : "Object representing metadata attributes for the triggered task.",
          "$ref" : "#/definitions/IMetadata"
        },
        "readinessCheckOnly" : {
          "type" : "boolean",
          "description" : "Set to True if performing readiness check only, otherwise the device will start a real upgrade procedure. When both readinessCheckOnly and pushUpgradeFileOnly are set to true, readinessCheckOnly will take the precedence."
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the upgrade."
        },
        "description" : {
          "type" : "string",
          "description" : "More information about the upgrade."
        },
        "links" : {
          "description" : "Object representing this resource.",
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique ID of this operation."
        },
        "pushUpgradeFileOnly" : {
          "type" : "boolean",
          "description" : "Set to True if pushing the upgrade file to device(s) only, otherwise actual upgrade will also be triggered. When both readinessCheckOnly and pushUpgradeFileOnly are set to true, readinessCheckOnly will take the precedence."
        },
        "type" : {
          "type" : "string",
          "description" : "Upgrade"
        },
        "targets" : {
          "type" : "array",
          "description" : "A list of FTD devices.",
          "items" : {
            "$ref" : "#/definitions/ITarget"
          }
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        },
        "upgradePackage" : {
          "description" : "Object representing the upgrade package.",
          "$ref" : "#/definitions/UpgradePackage"
        }
      },
      "description" : "This API is to trigger an upgrade/readinesscheck on a list of devices or just push an upgrade file to a list of devices."
    },
    "VrfIPv4StaticRouteModel" : {
      "type" : "object",
      "required" : [ "gateway", "interfaceName", "metricValue", "selectedNetworks" ],
      "properties" : {
        "routeTracking" : {
          "$ref" : "#/definitions/ISLAMonitorModel"
        },
        "metadata" : {
          "$ref" : "#/definitions/Metadata"
        },
        "selectedNetworks" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/INetworkAddress"
          }
        },
        "metricValue" : {
          "type" : "integer",
          "format" : "int32"
        },
        "description" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "isTunneled" : {
          "type" : "boolean"
        },
        "interfaceName" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "gateway" : {
          "$ref" : "#/definitions/IHostObjectContainer"
        }
      }
    },
    "ExpandedCommunityList" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/Metadata"
        },
        "entries" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IExpandedCommunityListEntry"
          }
        },
        "name" : {
          "type" : "string"
        },
        "overridable" : {
          "type" : "boolean"
        },
        "links" : {
          "$ref" : "#/definitions/Links"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "AnyConnectPackageModelListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AnyConnectPackageModel"
          }
        }
      }
    },
    "IHealthMonitorMetric" : {
      "type" : "object",
      "properties" : {
        "unit" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "value" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "PrefilterHitCountListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "description" : "List of all hit count entries for given filter query on prefilter policy.",
          "items" : {
            "$ref" : "#/definitions/PrefilterHitCount"
          }
        }
      },
      "description" : "List of all hit count entries for given filter query on prefilter policy."
    },
    "IInterfaceObjectModel" : {
      "type" : "object",
      "properties" : {
        "interfaces" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IFTDInterface"
          }
        },
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "devices" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IInterfaceDeviceModel"
          }
        },
        "name" : {
          "type" : "string"
        },
        "overridable" : {
          "type" : "boolean"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "IOspfAreaType" : {
      "type" : "object",
      "properties" : {
        "routeMetric" : {
          "$ref" : "#/definitions/IOspfRouteMetric"
        },
        "name" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "noSummary" : {
          "type" : "boolean"
        },
        "noRedistribution" : {
          "type" : "boolean"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "IOverrideDefaultFragmentSetting" : {
      "type" : "object",
      "properties" : {
        "chain" : {
          "type" : "integer",
          "format" : "int32"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "timeout" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "Ospfv3PolicyModelListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Ospfv3PolicyModel"
          }
        }
      }
    },
    "IPortObject" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "overridable" : {
          "type" : "boolean"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "IPolicyStatus" : {
      "type" : "object",
      "properties" : {
        "trafficInterrupting" : {
          "type" : "boolean",
          "description" : "Boolean indicating a deployment can cause traffic interruption."
        },
        "upToDate" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether the policy is out-of-date."
        },
        "versionTimeStamp" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Epoch time, indicating last modified time of the policy."
        },
        "modifiedUserInfoList" : {
          "type" : "array",
          "description" : "List of ModifiedUserInfo objects containing LastModifiedTime and UserName.",
          "items" : {
            "$ref" : "#/definitions/IModifiedUserInfo"
          }
        },
        "referredPolicyList" : {
          "type" : "array",
          "description" : "List of PolicyStatus objects which are referred by the policy.",
          "items" : {
            "$ref" : "#/definitions/IPolicyStatus"
          }
        },
        "policy" : {
          "description" : "Object which contains Policy Information such as id, name and policy type.",
          "$ref" : "#/definitions/IPolicyModel"
        }
      }
    },
    "LocalRealmUser" : {
      "type" : "object",
      "properties" : {
        "password" : {
          "type" : "string",
          "description" : "Password for the user."
        },
        "metadata" : {
          "description" : "Object representing metadata properties of Local Realm Object.",
          "$ref" : "#/definitions/Metadata"
        },
        "name" : {
          "type" : "string",
          "description" : "Name for the user"
        },
        "description" : {
          "type" : "string",
          "description" : "User provided resource description."
        },
        "realm" : {
          "description" : "Realm Object under which the user has to be added.",
          "$ref" : "#/definitions/IReference"
        },
        "links" : {
          "$ref" : "#/definitions/Links"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of Local Realm User"
        },
        "type" : {
          "type" : "string",
          "description" : "Type associated with resource: LocalRealmUser."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        }
      },
      "description" : "Defines Local Realm User"
    },
    "InterfaceGroupObjectListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/InterfaceGroupObject"
          }
        }
      }
    },
    "IInterface" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "HostOverrideListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/HostOverride"
          }
        }
      }
    },
    "Duration" : {
      "type" : "object",
      "properties" : {
        "validLifeTime" : {
          "type" : "integer",
          "format" : "int32"
        },
        "preferLifeTime" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "IKeyChainObject" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "keys" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IKeyObject"
          }
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "Snort3IPSRulesObjectListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Snort3IPSRulesObject"
          }
        }
      }
    },
    "RealmUserListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RealmUser"
          }
        }
      }
    },
    "IPFSSettings" : {
      "type" : "object",
      "properties" : {
        "enabled" : {
          "type" : "boolean"
        },
        "modulusGroup" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "IVpnIkev1Settings" : {
      "type" : "object",
      "properties" : {
        "automaticPreSharedKeyLength" : {
          "type" : "integer",
          "format" : "int32"
        },
        "certificateAuth" : {
          "description" : "Signing authority used for the VPN certificate.",
          "$ref" : "#/definitions/IReference"
        },
        "authenticationType" : {
          "type" : "string",
          "description" : "Type of authentication used for the VPN.",
          "enum" : [ "MANUAL_PRE_SHARED_KEY", "AUTOMATIC_PRE_SHARED_KEY", "CERTIFICATE" ]
        },
        "manualPreSharedKey" : {
          "type" : "string",
          "description" : "Contains the manual pre-shared key for the VPN, if any."
        },
        "policy" : {
          "description" : "VPN policy.",
          "$ref" : "#/definitions/IReference"
        }
      },
      "description" : "Contains information about Internet Key Exchange version 1 settings for VPNs."
    },
    "SSOServer" : {
      "type" : "object",
      "required" : [ "identityProviderCert", "idpEntityId", "ssoURL" ],
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata properties of response object.",
          "$ref" : "#/definitions/Metadata"
        },
        "requestSignatureType" : {
          "type" : "string",
          "description" : " Possible values include NO_SIGNATURE|RSA_SHA1|RSA_SHA256|RSA_SHA384|RSA_SHA512"
        },
        "ssoURL" : {
          "type" : "string",
          "description" : "URL or IP address at which the SAML provider will accept incoming requests to authenticate a user"
        },
        "serverOnInternalNetwork" : {
          "type" : "boolean",
          "description" : "Indicates the SAML provider in on an inside network, default value is false"
        },
        "description" : {
          "type" : "string",
          "description" : "User provided resource description."
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "type" : {
          "type" : "string",
          "description" : "Type associated with resource: SSOServer."
        },
        "reAuthAtLogin" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether users are required to reauthenticate when logging into the SAML server."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        },
        "overrideTargetId" : {
          "type" : "string"
        },
        "idpEntityId" : {
          "type" : "string",
          "description" : "SAML Identity Provider entityID"
        },
        "baseUrl" : {
          "type" : "string",
          "description" : "URL provided to third-party IdPs to redirect end users back to the ASA"
        },
        "logoutURL" : {
          "type" : "string",
          "description" : "URL or IP address at which the SAML provider will accept incoming requests to log out. "
        },
        "overridable" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether object values can be overridden."
        },
        "name" : {
          "type" : "string",
          "description" : "User chosen resource name."
        },
        "links" : {
          "$ref" : "#/definitions/Links"
        },
        "identityProviderCert" : {
          "$ref" : "#/definitions/IReference"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of response object.."
        },
        "serviceProviderCert" : {
          "$ref" : "#/definitions/IReference"
        },
        "requestTimeout" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Timeout set by the provider. Allowed range is 1-7200 seconds. Default value is 0"
        }
      },
      "description" : "A model representing SSO Server Object definition."
    },
    "VlanOverride" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata properties of response object.",
          "$ref" : "#/definitions/Metadata"
        },
        "overridable" : {
          "type" : "boolean",
          "description" : "Always returns false for overrides."
        },
        "name" : {
          "type" : "string",
          "description" : "User chosen resource name."
        },
        "description" : {
          "type" : "string",
          "description" : "User provided description."
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/Links"
        },
        "overrides" : {
          "description" : "An object override allows you to define an alternate value for an object.",
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier representing resource."
        },
        "type" : {
          "type" : "string",
          "description" : "Type associated with resource."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        }
      },
      "description" : "A model representing vlan tag override definition."
    },
    "CommunityListListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CommunityList"
          }
        }
      }
    },
    "IStaticArpEntry" : {
      "type" : "object",
      "properties" : {
        "ip" : {
          "type" : "string"
        },
        "mac" : {
          "type" : "string"
        }
      }
    },
    "AnyConnectProfileModel" : {
      "type" : "object",
      "required" : [ "fileName", "fileType" ],
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata properties of response object.",
          "$ref" : "#/definitions/Metadata"
        },
        "fileName" : {
          "type" : "string",
          "description" : "Name of the AnyConnect client file"
        },
        "name" : {
          "type" : "string",
          "description" : "User provided resource name."
        },
        "description" : {
          "type" : "string",
          "description" : "User provided resource description."
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/Links"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier representing this resource."
        },
        "type" : {
          "type" : "string",
          "description" : "Type associated with resource: AnyConnectProfile."
        },
        "version" : {
          "type" : "string"
        },
        "fileType" : {
          "type" : "string",
          "description" : "Type of the AnyConnect file",
          "enum" : [ "ANYCONNECT_VPN_PROFILE", "ANYCONNECT_MANAGEMENT_VPN_PROFILE", "AMP_ENABLER", "FEEDBACK", "ISE_POSTURE", "NETWORK_ACCESS_MANAGER", "NETWORK_VISIBILITY", "UMBRELLA_ROAMING", "WEB_SECURITY" ]
        }
      },
      "description" : "File objects represent AnyConnect Client Profile files."
    },
    "IOspfv3NeighborProperties" : {
      "type" : "object",
      "properties" : {
        "neighborCost" : {
          "$ref" : "#/definitions/IOspfv3NeighborCost"
        },
        "neighborPriority" : {
          "$ref" : "#/definitions/IOspfv3NeighborPriority"
        }
      }
    },
    "RESTCollectionTopic" : {
      "type" : "object",
      "properties" : {
        "collectionSubType" : {
          "type" : "string"
        },
        "collectionAddress" : {
          "type" : "string"
        },
        "collectionContentBinding" : {
          "type" : "string"
        },
        "collectionPollIntervalInMinutes" : {
          "type" : "integer",
          "format" : "int32"
        },
        "llcollectionTopic" : {
          "$ref" : "#/definitions/LLCollectionTopic"
        },
        "collectionDescription" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "collectionProtocolBinding" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "collectionMessageBinding" : {
          "type" : "string"
        },
        "collectionName" : {
          "type" : "string"
        }
      }
    },
    "INeighbors" : {
      "type" : "object",
      "properties" : {
        "neighborTimers" : {
          "$ref" : "#/definitions/INeighborTimers"
        },
        "ipv6Address" : {
          "type" : "string"
        },
        "neighborHaMode" : {
          "$ref" : "#/definitions/INeighborHaMode"
        },
        "ipv4Address" : {
          "type" : "string"
        },
        "neighborAdvanced" : {
          "$ref" : "#/definitions/INeighborAdvanced"
        },
        "neighborRoutes" : {
          "$ref" : "#/definitions/INeighborRoutes"
        },
        "type" : {
          "type" : "string"
        },
        "neighborFiltering" : {
          "$ref" : "#/definitions/INeighborFiltering"
        },
        "neighborLocalAs" : {
          "$ref" : "#/definitions/INeighborLocalAs"
        },
        "remoteAs" : {
          "type" : "string"
        },
        "linkLocalInterface" : {
          "$ref" : "#/definitions/IFTDInterface"
        },
        "name" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "neighborGeneral" : {
          "$ref" : "#/definitions/INeighborGeneral"
        }
      }
    },
    "VrfOspfPolicyModel" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/Metadata"
        },
        "filterRules" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IOspfFilterRule"
          }
        },
        "logAdjacencyChanges" : {
          "$ref" : "#/definitions/IOspfLogAdjChanges"
        },
        "description" : {
          "type" : "string"
        },
        "enableProcess" : {
          "type" : "string",
          "enum" : [ "PROCESS_1", "PROCESS_2" ]
        },
        "areas" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IOspfArea"
          }
        },
        "summaryAddresses" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IOspfSummaryAddresses"
          }
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "processId" : {
          "type" : "string"
        },
        "neighbors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IOspfNeighbors"
          }
        },
        "processConfiguration" : {
          "$ref" : "#/definitions/IOspfProcessModel"
        },
        "name" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "redistributeProtocols" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IRedistributeProtocolBase"
          }
        },
        "id" : {
          "type" : "string"
        }
      }
    },
    "ISnort3PolicyRuleCount" : {
      "type" : "object",
      "properties" : {
        "alert" : {
          "type" : "integer",
          "format" : "int32"
        },
        "disabled" : {
          "type" : "integer",
          "format" : "int32"
        },
        "block" : {
          "type" : "integer",
          "format" : "int32"
        },
        "overridden" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "PagingContainer" : {
      "type" : "object",
      "properties" : {
        "pages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "offset" : {
          "type" : "integer",
          "format" : "int32"
        },
        "limit" : {
          "type" : "integer",
          "format" : "int32"
        },
        "count" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "FTDVTIInterface" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "tunnelSource" : {
          "$ref" : "#/definitions/IInterface"
        },
        "description" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "tunnelSrcIPv6IntfAddr" : {
          "type" : "string"
        },
        "enabled" : {
          "type" : "boolean"
        },
        "MTU" : {
          "type" : "integer",
          "format" : "int32"
        },
        "mode" : {
          "type" : "string",
          "enum" : [ "INLINE", "PASSIVE", "TAP", "ERSPAN", "NONE", "SWITCHPORT" ]
        },
        "fmcAccessConfig" : {
          "$ref" : "#/definitions/IFMCAccessConfig"
        },
        "arpConfig" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IARPConfigContainer"
          }
        },
        "ipv4" : {
          "$ref" : "#/definitions/IIPv4Container"
        },
        "ifname" : {
          "type" : "string"
        },
        "ipv6" : {
          "$ref" : "#/definitions/IIPv6Container"
        },
        "tunnelId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "enableSGTPropagate" : {
          "type" : "boolean"
        },
        "macLearn" : {
          "type" : "boolean"
        },
        "managementOnly" : {
          "type" : "boolean"
        },
        "enableAntiSpoofing" : {
          "type" : "boolean"
        },
        "securityZone" : {
          "$ref" : "#/definitions/ISecurityZoneObjectModel"
        },
        "activeMACAddress" : {
          "type" : "string"
        },
        "fragmentReassembly" : {
          "type" : "boolean"
        },
        "macTable" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "standbyMACAddress" : {
          "type" : "string"
        },
        "enableDNSLookup" : {
          "type" : "boolean"
        },
        "overrideDefaultFragmentSetting" : {
          "$ref" : "#/definitions/IOverrideDefaultFragmentSetting"
        },
        "version" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "ipsecMode" : {
          "type" : "string"
        }
      }
    },
    "ISecurityGroupTagLiteral" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "tag" : {
          "type" : "integer",
          "format" : "int32"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "SIURLFeedListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SIURLFeed"
          }
        }
      }
    },
    "FTDBridgeGroupInterfaceListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FTDBridgeGroupInterface"
          }
        }
      }
    },
    "IHardwareContainer" : {
      "type" : "object",
      "properties" : {
        "duplex" : {
          "type" : "string",
          "enum" : [ "AUTO", "FULL", "HALF" ]
        },
        "speed" : {
          "type" : "string",
          "enum" : [ "AUTO", "TEN", "HUNDRED", "THOUSAND", "TEN_THOUSAND", "TWENTY_FIVE_THOUSAND", "FORTY_THOUSAND", "HUNDRED_THOUSAND" ]
        }
      }
    },
    "IPv4AddressPoolOverrideListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IPv4AddressPoolOverride"
          }
        }
      }
    },
    "IS2SIkeAdvanceSettingModel" : {
      "type" : "object",
      "properties" : {
        "peerIdentityValidation" : {
          "type" : "string",
          "enum" : [ "DO_NOT_CHECK", "REQUIRED", "IF_SUPPORTED_BY_CERT" ]
        },
        "enableNotificationOnTunnelDisconnect" : {
          "type" : "boolean"
        },
        "thresholdToChallengeIncomingCookies" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ikeKeepaliveSettings" : {
          "$ref" : "#/definitions/IIkeKeepaliveSettings"
        },
        "identitySentToPeer" : {
          "type" : "string",
          "enum" : [ "IP_ADDRESS", "HOST_NAME", "AUTO_OR_DN" ]
        },
        "cookieChallenge" : {
          "type" : "string",
          "enum" : [ "CUSTOM", "ALWAYS", "NEVER" ]
        },
        "enableAggressiveMode" : {
          "type" : "boolean"
        },
        "percentageOfSAsAllowedInNegotiation" : {
          "type" : "integer",
          "format" : "int32"
        },
        "maximumNumberOfSAsAllowed" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "IFTDRAVpnCertToConnectionProfileMap" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "connectionProfile" : {
          "$ref" : "#/definitions/IReference"
        },
        "certificateMap" : {
          "$ref" : "#/definitions/IReference"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "FTDRAVpnConnectionProfileModelListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FTDRAVpnConnectionProfileModel"
          }
        }
      }
    },
    "PolicyList" : {
      "type" : "object",
      "required" : [ "action", "name" ],
      "properties" : {
        "standardAccessListRouteSources" : {
          "type" : "array",
          "description" : "Routes that have been advertised by routers and access servers at the address specified by the access lists.",
          "items" : {
            "$ref" : "#/definitions/IReference"
          }
        },
        "metadata" : {
          "$ref" : "#/definitions/Metadata"
        },
        "interfaces" : {
          "type" : "array",
          "description" : "Add the Security zones/Interface groups that contain the interfaces through which the device communicates with the management station",
          "items" : {
            "$ref" : "#/definitions/IReference"
          }
        },
        "ipv4PrefixListRouteSources" : {
          "type" : "array",
          "description" : "Routes that have been advertised by routers and access servers at the address specified by the prefix lists.",
          "items" : {
            "$ref" : "#/definitions/IReference"
          }
        },
        "standardAccessListNextHops" : {
          "type" : "array",
          "description" : "A next hop router address passed by one of the access lists specified. (standardAccessListNextHops and ipv4PrefixListAddresses are mutually exclusive)",
          "items" : {
            "$ref" : "#/definitions/IReference"
          }
        },
        "description" : {
          "type" : "string"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "type" : {
          "type" : "string",
          "description" : "PolicyList - type of this object"
        },
        "interfaceNames" : {
          "type" : "array",
          "description" : "Interface logical names associated with this object",
          "items" : {
            "type" : "string"
          }
        },
        "ipv4PrefixListAddresses" : {
          "type" : "array",
          "description" : "A destination address that is permitted by a prefix list (standardAccessListAddresses and ipv4PrefixListAddresses are mutually exclusive)",
          "items" : {
            "$ref" : "#/definitions/IReference"
          }
        },
        "version" : {
          "type" : "string"
        },
        "standardAccessListAddresses" : {
          "type" : "array",
          "description" : "A destination address that is permitted by a standard access list (standardAccessListAddresses and ipv4PrefixListAddresses are mutually exclusive)",
          "items" : {
            "$ref" : "#/definitions/IReference"
          }
        },
        "matchCommunityExactly" : {
          "type" : "boolean",
          "description" : "Match the BGP community exactly with the specified community"
        },
        "metric" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "This setting allows you to match any routes that have a specified metric. The metric values can range from 0 to 4294967295."
        },
        "communityLists" : {
          "type" : "array",
          "description" : "The route can match either community",
          "items" : {
            "$ref" : "#/definitions/IReference"
          }
        },
        "ipv4PrefixListNexthops" : {
          "type" : "array",
          "description" : "A next hop router address passed by one of the prefix lists specified.(standardAccessListNextHops and ipv4PrefixListAddresses are mutually exclusive)",
          "items" : {
            "$ref" : "#/definitions/IReference"
          }
        },
        "name" : {
          "type" : "string",
          "description" : "Name for the policy list object"
        },
        "overridable" : {
          "type" : "boolean"
        },
        "action" : {
          "type" : "string",
          "description" : "Action to take for this matching criteria: PERMIT or DENY",
          "enum" : [ "PERMIT", "DENY" ]
        },
        "links" : {
          "$ref" : "#/definitions/Links"
        },
        "tag" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "This setting allows you to match any routes that have a specified security group tag. The tag values can range from 0 to 4294967295"
        },
        "asPathLists" : {
          "type" : "array",
          "description" : "BGP autonomous system path for matching criteria.",
          "items" : {
            "$ref" : "#/definitions/IReference"
          }
        },
        "id" : {
          "type" : "string",
          "description" : "unique object identifier"
        }
      },
      "description" : "A policy list for use in a route map for Border Gateway Protocol (BGP)."
    },
    "LLObservation" : {
      "type" : "object",
      "properties" : {
        "elementId" : {
          "type" : "string"
        },
        "data" : {
          "$ref" : "#/definitions/LLObservationData"
        },
        "count" : {
          "type" : "integer",
          "format" : "int32"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "elementName" : {
          "type" : "string"
        },
        "timestamp" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "PortObject" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata properties of response object.",
          "$ref" : "#/definitions/PortMetadata"
        },
        "overridable" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether object values can be overridden."
        },
        "name" : {
          "type" : "string",
          "description" : "User chosen resource name."
        },
        "description" : {
          "type" : "string",
          "description" : "User provided description."
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/Links"
        },
        "overrides" : {
          "description" : "An object override allows you to define an alternate value for an object on a device or domain.",
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier representing resource."
        },
        "type" : {
          "type" : "string",
          "description" : "Type associated with resource."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        },
        "overrideTargetId" : {
          "type" : "string",
          "description" : "Unique identifier of domain or device when override assigned to child domain. Used as path parameter to GET override details for a specific object on a specific target (device or domain)."
        }
      },
      "description" : "A model representing port object definition."
    },
    "VpnAdvancedSettings" : {
      "type" : "object",
      "properties" : {
        "advancedIkeSetting" : {
          "$ref" : "#/definitions/IS2SIkeAdvanceSettingModel"
        },
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "name" : {
          "type" : "string"
        },
        "advancedTunnelSetting" : {
          "$ref" : "#/definitions/IS2STunnelAdvanceSettingModel"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "advancedIpsecSetting" : {
          "$ref" : "#/definitions/IS2SIpSecAdvanceSettingModel"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "VrfOspfInterfacePolicyModel" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/Metadata"
        },
        "name" : {
          "type" : "string"
        },
        "deviceInterface" : {
          "$ref" : "#/definitions/IFTDInterface"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "ospfProtocolConfiguration" : {
          "$ref" : "#/definitions/IOspfProtocolConfiguration"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "InspectorConfigListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/InspectorConfig"
          }
        }
      }
    },
    "RealmListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Realm"
          }
        }
      }
    },
    "IIntrusionUsage" : {
      "type" : "object",
      "properties" : {
        "devices" : {
          "type" : "integer",
          "format" : "int32"
        },
        "asscoiatedAcPolicies" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IReference"
          }
        },
        "accesspolicy" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "IS2SIpSecAdvanceSettingModel" : {
      "type" : "object",
      "properties" : {
        "enableFragmentationBeforeEncryption" : {
          "type" : "boolean",
          "description" : "Indicates whether to enable transmission unit fragmentation before encryption."
        },
        "maximumTransmissionUnitAging" : {
          "description" : "Duration of the MTU aging window.",
          "$ref" : "#/definitions/IMaximumTransmissionUnitAging"
        }
      },
      "description" : "Contains site-to-site IPSec advanced settings."
    },
    "VrfIPv6StaticRouteModelListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/VrfIPv6StaticRouteModel"
          }
        }
      }
    },
    "RealmUserGroup" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Metadata object of the RealmUserGroup.",
          "$ref" : "#/definitions/RealmUserGroupMetadata"
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the RealmUserGroup."
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "realm" : {
          "description" : "Realm object for the group.",
          "$ref" : "#/definitions/IRealm"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique Identifier of the group."
        },
        "type" : {
          "type" : "string",
          "description" : "Value is 'RealmUserGroup'. Read-only fixed value."
        }
      },
      "description" : "Defines Identity RealmUserGroup Object."
    },
    "IFPPhysicalInterface" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "description" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "enabled" : {
          "type" : "integer",
          "format" : "int32"
        },
        "mtu" : {
          "type" : "integer",
          "format" : "int32"
        },
        "mode" : {
          "type" : "string"
        },
        "interfaceType" : {
          "type" : "string",
          "enum" : [ "NONE", "MANAGEMENT", "PASSIVE", "INLINE", "SWITCHED", "ROUTED", "HA_LINK", "ASA" ]
        },
        "mdi" : {
          "type" : "string"
        },
        "staticArpEntries" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IStaticArpEntry"
          }
        },
        "name" : {
          "type" : "string"
        },
        "ipAddresses" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        }
      }
    },
    "GlobalObjectSearchListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/GlobalObjectSearch"
          }
        }
      }
    },
    "IFilePolicy" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "IIntrusionRuleThreshold" : {
      "type" : "object",
      "properties" : {
        "seconds" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Time in seconds for which the rule is matched before generating an event."
        },
        "trackBy" : {
          "type" : "string",
          "description" : "Value describing the attribute by which configuration generates the event. One of: SOURCE | DESTINATION",
          "enum" : [ "SOURCE", "DESTINATION" ]
        },
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "count" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of seconds to match before generating an event."
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "thresholdType" : {
          "type" : "string",
          "description" : "Rate which must be exceeded by a source or destination host before a rule can generate an event. One of: LIMIT | THRESHOLD | BOTH",
          "enum" : [ "LIMIT", "THRESHOLD", "BOTH" ]
        }
      },
      "description" : "Model representing intrusion rule threshold setting."
    },
    "URLObject" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata properties of response object.",
          "$ref" : "#/definitions/Metadata"
        },
        "overridable" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether object values can be overridden."
        },
        "name" : {
          "type" : "string",
          "description" : "User chosen resource name."
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "description" : "Object containing related links.",
          "$ref" : "#/definitions/Links"
        },
        "overrides" : {
          "description" : "An object override allows you to define an alternate value for an object.",
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of response object."
        },
        "type" : {
          "type" : "string",
          "description" : "Type associated with resource: URL."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        },
        "url" : {
          "type" : "string",
          "description" : "Actual URL of object."
        },
        "overrideTargetId" : {
          "type" : "string",
          "description" : "Unique identifier of domain or device when override assigned to child domain. Used as path parameter to GET override details for a specific object on a specific target (device or domain)."
        }
      },
      "description" : "A model representing url object definition."
    },
    "AccessPolicyLoggingSettingModel" : {
      "type" : "object",
      "properties" : {
        "fileAndMalwareSyslogConfig" : {
          "$ref" : "#/definitions/ISyslogConfig"
        },
        "syslogConfigFromPlatformSetting" : {
          "type" : "boolean"
        },
        "metadata" : {
          "$ref" : "#/definitions/Metadata"
        },
        "ipsSyslogSeverity" : {
          "type" : "string",
          "enum" : [ "ALERT", "CRIT", "DEBUG", "EMERG", "ERR", "INFO", "NOTICE", "WARNING" ]
        },
        "description" : {
          "type" : "string"
        },
        "enableFileAndMalwareSyslog" : {
          "type" : "boolean"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "syslogConfig" : {
          "$ref" : "#/definitions/ISyslogConfig"
        },
        "name" : {
          "type" : "string"
        },
        "fileAndMalwareSyslogSeverity" : {
          "type" : "string",
          "enum" : [ "ALERT", "CRIT", "DEBUG", "EMERG", "ERR", "INFO", "NOTICE", "WARNING" ]
        },
        "severityForPlatformSettingSyslogConfig" : {
          "type" : "string",
          "enum" : [ "ALERT", "CRIT", "DEBUG", "EMERG", "ERR", "INFO", "NOTICE", "WARNING" ]
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "ipsSyslogConfig" : {
          "$ref" : "#/definitions/ISyslogConfig"
        },
        "enableipsSyslog" : {
          "type" : "boolean"
        }
      }
    },
    "GeoLocationObject" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata attributes for the geolocation.",
          "$ref" : "#/definitions/Metadata"
        },
        "description" : {
          "type" : "string",
          "description" : "This field is deprecated and should not be used."
        },
        "continentUUID" : {
          "type" : "string",
          "description" : "This field is deprecated and should not be used."
        },
        "countries" : {
          "type" : "array",
          "description" : "List of objects representing countries.",
          "items" : {
            "$ref" : "#/definitions/ICountryModel"
          }
        },
        "overrides" : {
          "description" : "An object override allows you to define an alternate value for an object on a device or domain.",
          "$ref" : "#/definitions/IOverride"
        },
        "type" : {
          "type" : "string",
          "description" : "Type of the response object. This value is always GeoLocationObject."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        },
        "continents" : {
          "type" : "array",
          "description" : "List of objects representing continents.",
          "items" : {
            "$ref" : "#/definitions/IContinentModel"
          }
        },
        "continentId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "This field is deprecated and should not be used."
        },
        "name" : {
          "type" : "string",
          "description" : "User-specified name of the geolocation."
        },
        "overridable" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether object values can be overridden."
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier (UUID) for the geolocation."
        }
      },
      "description" : "Represents a GeoLocation containing various Countries and Continents."
    },
    "FTDManualNatRule" : {
      "type" : "object",
      "required" : [ "natType", "originalSource" ],
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/Metadata"
        },
        "translatedDestinationPort" : {
          "$ref" : "#/definitions/IProtocolPortObject"
        },
        "fallThrough" : {
          "type" : "boolean"
        },
        "natType" : {
          "type" : "string",
          "enum" : [ "STATIC", "DYNAMIC" ]
        },
        "targetIndex" : {
          "type" : "integer",
          "format" : "int32"
        },
        "translatedDestination" : {
          "$ref" : "#/definitions/INetworkAddress"
        },
        "translatedSourcePort" : {
          "$ref" : "#/definitions/IProtocolPortObject"
        },
        "description" : {
          "type" : "string"
        },
        "section" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "enabled" : {
          "type" : "boolean"
        },
        "originalSourcePort" : {
          "$ref" : "#/definitions/IProtocolPortObject"
        },
        "sourceInterface" : {
          "$ref" : "#/definitions/IInterfaceObjectModel"
        },
        "interfaceInOriginalDestination" : {
          "type" : "boolean"
        },
        "netToNet" : {
          "type" : "boolean"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "originalSource" : {
          "$ref" : "#/definitions/INetworkAddress"
        },
        "dns" : {
          "type" : "boolean"
        },
        "patOptions" : {
          "$ref" : "#/definitions/IPatOptionsContainer"
        },
        "version" : {
          "type" : "string"
        },
        "noProxyArp" : {
          "type" : "boolean"
        },
        "translatedSource" : {
          "$ref" : "#/definitions/INetworkAddress"
        },
        "interfaceInTranslatedSource" : {
          "type" : "boolean"
        },
        "routeLookup" : {
          "type" : "boolean"
        },
        "originalDestination" : {
          "$ref" : "#/definitions/INetworkAddress"
        },
        "unidirectional" : {
          "type" : "boolean"
        },
        "name" : {
          "type" : "string"
        },
        "destinationInterface" : {
          "$ref" : "#/definitions/IInterfaceObjectModel"
        },
        "originalDestinationPort" : {
          "$ref" : "#/definitions/IProtocolPortObject"
        },
        "interfaceIpv6" : {
          "type" : "boolean"
        }
      },
      "example": {
        "id": "42010A0A-0E0A-0ed3-0000-004294997678",
        "type": "FTDManualNatRule",
        "unidirectional": false,
        "interfaceInTranslatedSource": true,
        "originalSourceNotFound": {
            "type": "Network",
            "overridable": false,
            "name": "any-ipv4",
            "id": "cb7116e8-66a6-480b-8f9b-295191a0940a"
        },
        "interfaceInOriginalDestination": false,
        "natType": "INVALID",
        "fallThrough": false,
        "dns": false,
        "routeLookup": false,
        "noProxyArp": false,
        "netToNet": false,
        "sourceInterface": {
            "name": "IGNW-seczone-switch-2",
            "id": "ab36d952-c26e-11ec-bae9-cd5b2acac649",
            "type": "SecurityZone"
        },
        "interfaceIpv6": false,
        "destinationInterface": {
            "name": "IGNW-seczone-switch-1",
            "id": "9388c4fa-c26e-11ec-bae9-cd5b2acac649",
            "type": "SecurityZone"
        }
      }
    },
    "IS2STunnelAdvanceSettingModel" : {
      "type" : "object",
      "properties" : {
        "natKeepaliveMessageTraversal" : {
          "description" : "Object representing keepalive message traversal information.",
          "$ref" : "#/definitions/INatKeepaliveTraversal"
        },
        "certificateMapSettings" : {
          "description" : "Contains certificate map settings.",
          "$ref" : "#/definitions/ICertificateMapSettings"
        },
        "enableSpokeToSpokeConnectivityThroughHub" : {
          "type" : "boolean",
          "description" : "Indicates whether spoke-to-spoke connectivity is enabled through the hub."
        },
        "bypassAccessControlTrafficForDecryptedTraffic" : {
          "type" : "boolean",
          "description" : "Indicates whether to bypass access control for decrypted traffic."
        }
      },
      "description" : "Contains advanced site-to-site tunnel settings."
    },
    "Ikev2PolicyObject" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/Metadata"
        },
        "encryptionAlgorithms" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "description" : {
          "type" : "string"
        },
        "priority" : {
          "type" : "integer",
          "format" : "int32"
        },
        "type" : {
          "type" : "string"
        },
        "diffieHellmanGroups" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "version" : {
          "type" : "string"
        },
        "prfIntegrityAlgorithms" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "name" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/Links"
        },
        "lifetimeInSeconds" : {
          "type" : "integer",
          "format" : "int32"
        },
        "id" : {
          "type" : "string"
        },
        "integrityAlgorithms" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "Ikev1PolicyObject" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/Metadata"
        },
        "description" : {
          "type" : "string"
        },
        "priority" : {
          "type" : "integer",
          "format" : "int32"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "encryption" : {
          "type" : "string"
        },
        "diffieHellmanGroup" : {
          "type" : "integer",
          "format" : "int32"
        },
        "authenticationMethod" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/Links"
        },
        "lifetimeInSeconds" : {
          "type" : "integer",
          "format" : "int32"
        },
        "id" : {
          "type" : "string"
        },
        "hash" : {
          "type" : "string"
        }
      }
    },
    "RESTElementListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RESTElement"
          }
        }
      }
    },
    "NetworkGroupListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/NetworkGroup"
          }
        }
      }
    },
    "IVpnBackupInterface" : {
      "type" : "object",
      "properties" : {
        "publicIpAddress" : {
          "type" : "string"
        },
        "interface" : {
          "$ref" : "#/definitions/IReference"
        }
      }
    },
    "IMaximumTransmissionUnitAging" : {
      "type" : "object",
      "properties" : {
        "resetIntervalMinutes" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Interval before resetting the MTU."
        },
        "enabled" : {
          "type" : "boolean",
          "description" : "Indicates whether MTU aging is enabled."
        }
      },
      "description" : "Contains information about Maximum Transmission UNit aging."
    },
    "LLInspectorOverrideConfig" : {
      "type" : "object",
      "description" : "The schema of this payload is dynamic and based on the OpenAPI schema received from the latest installed Lightweight Security Package.",
      "additionalProperties" : {
        "type" : "object"
      }
    },
    "VirtualSwitchListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/VirtualSwitch"
          }
        }
      }
    },
    "IOspfv3GracefulRestartHelper" : {
      "type" : "object",
      "properties" : {
        "enableLSA" : {
          "type" : "boolean"
        }
      }
    },
    "IApplicationFilter" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata attributes for the application filter.",
          "$ref" : "#/definitions/IMetadata"
        },
        "name" : {
          "type" : "string",
          "description" : "User-specified name of the application filter."
        },
        "overridable" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether object values can be overridden."
        },
        "description" : {
          "type" : "string",
          "description" : "This field is deprecated and should not be used."
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/ILinks"
        },
        "appConditions" : {
          "type" : "array",
          "description" : "List of objects representing application conditions.",
          "items" : {
            "$ref" : "#/definitions/IAppCondition"
          }
        },
        "overrides" : {
          "description" : "An object override allows you to define an alternate value for an object on a device or domain.",
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier (UUID) for the application filter."
        },
        "type" : {
          "type" : "string",
          "description" : "Type of the response object. This value is always ApplicationFilter."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        },
        "applications" : {
          "type" : "array",
          "description" : "List of objects representing applications.",
          "items" : {
            "$ref" : "#/definitions/IApplicationModel"
          }
        }
      },
      "description" : "Represents an ApplicationFilter containing various Conditions and Applications."
    },
    "TimeRangeListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TimeRange"
          }
        }
      }
    },
    "FPInterfaceStatistics" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "rxBytes" : {
          "type" : "integer",
          "format" : "int32"
        },
        "txBytes" : {
          "type" : "integer",
          "format" : "int32"
        },
        "interfaceUuid" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/Links"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "droppedPackets" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "Snort3IPSRulesListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Snort3IPSRules"
          }
        }
      }
    },
    "ICMPV4ObjectOverrideListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ICMPV4ObjectOverride"
          }
        }
      }
    },
    "FTDSubInterface" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "description" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "enabled" : {
          "type" : "boolean"
        },
        "MTU" : {
          "type" : "integer",
          "format" : "int32"
        },
        "mode" : {
          "type" : "string",
          "enum" : [ "INLINE", "PASSIVE", "TAP", "ERSPAN", "NONE", "SWITCHPORT" ]
        },
        "subIntfId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "fmcAccessConfig" : {
          "$ref" : "#/definitions/IFMCAccessConfig"
        },
        "arpConfig" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IARPConfigContainer"
          }
        },
        "ipv4" : {
          "$ref" : "#/definitions/IIPv4Container"
        },
        "ifname" : {
          "type" : "string"
        },
        "ipv6" : {
          "$ref" : "#/definitions/IIPv6Container"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "enableSGTPropagate" : {
          "type" : "boolean"
        },
        "macLearn" : {
          "type" : "boolean"
        },
        "managementOnly" : {
          "type" : "boolean"
        },
        "enableAntiSpoofing" : {
          "type" : "boolean"
        },
        "securityZone" : {
          "$ref" : "#/definitions/ISecurityZoneObjectModel"
        },
        "activeMACAddress" : {
          "type" : "string"
        },
        "vlanId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "fragmentReassembly" : {
          "type" : "boolean"
        },
        "macTable" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "standbyMACAddress" : {
          "type" : "string"
        },
        "enableDNSLookup" : {
          "type" : "boolean"
        },
        "overrideDefaultFragmentSetting" : {
          "$ref" : "#/definitions/IOverrideDefaultFragmentSetting"
        },
        "version" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        }
      }
    },
    "SecurityGroupTagListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SecurityGroupTag"
          }
        }
      }
    },
    "ExpirationLifeTime" : {
      "type" : "object",
      "properties" : {
        "preferDateTime" : {
          "type" : "string"
        },
        "validDateTime" : {
          "type" : "string"
        }
      }
    },
    "ISIDNSPolicy" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "blocklistLogging" : {
          "$ref" : "#/definitions/ISILogging"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "IAppCondition" : {
      "type" : "object",
      "properties" : {
        "filter" : {
          "type" : "string",
          "description" : "User-specified filter string."
        },
        "search" : {
          "type" : "string",
          "description" : "String representation of the application condition."
        },
        "risks" : {
          "type" : "array",
          "description" : "List of objects representing application risks.",
          "items" : {
            "$ref" : "#/definitions/IApplicationRisk"
          }
        },
        "productivities" : {
          "type" : "array",
          "description" : "List of objects representing application productivities.",
          "items" : {
            "$ref" : "#/definitions/IApplicationProductivity"
          }
        },
        "applicationTypes" : {
          "type" : "array",
          "description" : "List of objects representing application types.",
          "items" : {
            "$ref" : "#/definitions/IApplicationType"
          }
        },
        "categories" : {
          "type" : "array",
          "description" : "List of objects representing application categories.",
          "items" : {
            "$ref" : "#/definitions/IApplicationCategory"
          }
        },
        "type" : {
          "type" : "string",
          "description" : "Type of the response object. This value is always ApplicationFilterCondition."
        },
        "tags" : {
          "type" : "array",
          "description" : "List of objects representing application tags.",
          "items" : {
            "$ref" : "#/definitions/IApplicationTag"
          }
        }
      },
      "description" : "Represents an AppCondition containing Application Types, Tags, Productivities, Risks, and Categories."
    },
    "FilePolicy" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/Links"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "HostOverride" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata properties of response object.",
          "$ref" : "#/definitions/Metadata"
        },
        "overridable" : {
          "type" : "boolean",
          "description" : "Always return false for overrides."
        },
        "name" : {
          "type" : "string",
          "description" : "User chosen resource name."
        },
        "description" : {
          "type" : "string",
          "description" : "User provided description."
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/Links"
        },
        "overrides" : {
          "description" : "An object override allows you to define an alternate value for an object on a device or domain.",
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier representing resource."
        },
        "type" : {
          "type" : "string",
          "description" : "Type associated with resource."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        }
      },
      "description" : "A model representing Host network override definition."
    },
    "OspfPolicyModelListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OspfPolicyModel"
          }
        }
      }
    },
    "StaticRouteModel" : {
      "type" : "object",
      "required" : [ "gateway", "interfaceName", "metricValue", "selectedNetworks" ],
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/Metadata"
        },
        "selectedNetworks" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/INetworkAddress"
          }
        },
        "metricValue" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "isTunneled" : {
          "type" : "boolean"
        },
        "interfaceName" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "gateway" : {
          "$ref" : "#/definitions/IHostObjectContainer"
        }
      }
    },
    "FTDNatRule" : {
      "type" : "object",
      "required" : [ "natType" ],
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/Metadata"
        },
        "fallThrough" : {
          "type" : "boolean"
        },
        "natType" : {
          "type" : "string",
          "enum" : [ "STATIC", "DYNAMIC" ]
        },
        "dns" : {
          "type" : "boolean"
        },
        "description" : {
          "type" : "string"
        },
        "section" : {
          "type" : "string"
        },
        "patOptions" : {
          "$ref" : "#/definitions/IPatOptionsContainer"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "noProxyArp" : {
          "type" : "boolean"
        },
        "sourceInterface" : {
          "$ref" : "#/definitions/IInterfaceObjectModel"
        },
        "routeLookup" : {
          "type" : "boolean"
        },
        "name" : {
          "type" : "string"
        },
        "netToNet" : {
          "type" : "boolean"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "destinationInterface" : {
          "$ref" : "#/definitions/IInterfaceObjectModel"
        },
        "id" : {
          "type" : "string"
        },
        "interfaceIpv6" : {
          "type" : "boolean"
        }
      }
    },
    "IConnectionProfileGroupUrl" : {
      "type" : "object",
      "properties" : {
        "aliasUrl" : {
          "description" : "URL object containing the url.",
          "$ref" : "#/definitions/IReference"
        },
        "enabled" : {
          "type" : "boolean",
          "description" : "User can connect to the connection profile directly using the alias url."
        }
      },
      "description" : "Identifies group URLs to automatically connect to the connection profile."
    },
    "HostScanPackageObjectListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/HostScanPackageObject"
          }
        }
      }
    },
    "LLEquationNode" : {
      "type" : "object",
      "properties" : {
        "op" : {
          "type" : "string"
        },
        "condition" : {
          "type" : "string"
        },
        "isRealized" : {
          "type" : "boolean"
        },
        "children" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LLEquationNode"
          }
        },
        "type" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "applyCondition" : {
          "type" : "string"
        }
      }
    },
    "IOspfHelloMultiplierMechanism" : {
      "type" : "object",
      "properties" : {
        "helloMultiplier" : {
          "type" : "integer",
          "format" : "int32"
        },
        "neighborDetectionType" : {
          "type" : "string"
        }
      }
    },
    "IDeviceListEntry" : {
      "type" : "object",
      "properties" : {
        "containerUUID" : {
          "type" : "string",
          "description" : "UUID of the container"
        },
        "deploymentStatus" : {
          "type" : "string",
          "description" : "Deployment status of the device in the deployment job",
          "enum" : [ "DEPLOYING", "SUCCEEDED", "PARTIALLY_SUCCEEDED", "FAILED", "SSP_SUCCEEDED", "SSP_FAILED", "SSP_PRIMARY_BOOTSTRAP_SUCCEEDED", "SSP_PRIMARY_BOOTSTRAP_FAILED", "SSP_SECONDARY_BOOTSTRAP_SUCCEEDED", "SSP_SECONDARY_BOOTSTRAP_FAILED", "PRIMARY_BOOTSTRAP_SUCCEEDED", "PRIMARY_BOOTSTRAP_FAILED", "SECONDARY_BOOTSTRAP_SUCCEEDED", "SECONDARY_BOOTSTRAP_FAILED", "BREAK_SUCCEEDED", "BREAK_FAILED", "PRIMARY_BOOTSTRAP_PARTIALLY_SUCCEEDED", "SECONDARY_BOOTSTRAP_PARTIALLY_SUCCEEDED", "SSP_PRIMARY_BOOTSTRAP_PARTIALLY_SUCCEEDED", "SSP_SECONDARY_BOOTSTRAP_PARTIALLY_SUCCEEDED", "BREAK_PARTIALLY_SUCCEEDED", "CANCELLED", "NONE" ]
        },
        "containerName" : {
          "type" : "string",
          "description" : "Name of the container. This will still be displayed after deletion."
        },
        "canRollback" : {
          "type" : "boolean",
          "description" : "Indicates whether the deployed version to device in the deployment job is rollback capable. This field is available only if context filter parameter has value as RollbackApplicable."
        },
        "deviceName" : {
          "type" : "string",
          "description" : "Name of the device"
        },
        "deviceUUID" : {
          "type" : "string",
          "description" : "UUID of the device"
        },
        "deployedVersion" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Config version of the device in the deployment job"
        }
      }
    },
    "LLStatusMsg" : {
      "type" : "object",
      "additionalProperties" : {
        "$ref" : "#/definitions/LLAdditionalProperties"
      }
    },
    "RESTObservation" : {
      "type" : "object",
      "properties" : {
        "elementId" : {
          "type" : "string"
        },
        "data" : {
          "$ref" : "#/definitions/RESTObservationData"
        },
        "count" : {
          "type" : "integer",
          "format" : "int32"
        },
        "type" : {
          "type" : "string"
        },
        "timestamp" : {
          "type" : "integer",
          "format" : "int32"
        },
        "elementName" : {
          "type" : "string"
        },
        "llobservation" : {
          "$ref" : "#/definitions/LLObservation"
        }
      }
    },
    "ISnort3IntrusionRuleGroupsModel" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "overrideSecurityLevel" : {
          "type" : "string",
          "enum" : [ "DISABLED", "LEVEL_1", "LEVEL_2", "LEVEL_3", "LEVEL_4" ]
        },
        "isSystemDefined" : {
          "type" : "boolean"
        },
        "name" : {
          "type" : "string"
        },
        "childGroups" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ISnort3IntrusionRuleGroupsModel"
          }
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "defaultSecurityLevel" : {
          "type" : "string",
          "enum" : [ "DISABLED", "LEVEL_1", "LEVEL_2", "LEVEL_3", "LEVEL_4" ]
        }
      }
    },
    "IKEv1IPsecProposalListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IKEv1IPsecProposal"
          }
        }
      }
    },
    "INeighborTimers" : {
      "type" : "object",
      "properties" : {
        "keepAliveInterval" : {
          "type" : "integer",
          "format" : "int32"
        },
        "minimumHoldTime" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "holdTime" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "VariableSetListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/VariableSet"
          }
        }
      }
    },
    "Application" : {
      "type" : "object",
      "properties" : {
        "applicationTags" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IApplicationTag"
          }
        },
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "appProductivity" : {
          "$ref" : "#/definitions/ApplicationProductivity"
        },
        "deprecated" : {
          "type" : "boolean"
        },
        "description" : {
          "type" : "string"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "type" : {
          "type" : "string"
        },
        "decrypted" : {
          "type" : "boolean"
        },
        "version" : {
          "type" : "string"
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IApplicationTag"
          }
        },
        "productivity" : {
          "$ref" : "#/definitions/IApplicationProductivity"
        },
        "appId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "appCategories" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IApplicationCategory"
          }
        },
        "name" : {
          "type" : "string"
        },
        "overridable" : {
          "type" : "boolean"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "risk" : {
          "$ref" : "#/definitions/IApplicationRisk"
        },
        "applicationTypes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IApplicationType"
          }
        },
        "id" : {
          "type" : "string"
        },
        "categories" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IApplicationCategory"
          }
        }
      }
    },
    "ExternalLookup" : {
      "type" : "object",
      "properties" : {
        "template" : {
          "type" : "string"
        },
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "intValue" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "longValue" : {
          "type" : "integer",
          "format" : "int32"
        },
        "enabled" : {
          "type" : "boolean"
        },
        "network" : {
          "$ref" : "#/definitions/NetworkObject"
        }
      }
    },
    "IOspfv3Neighbor" : {
      "type" : "object",
      "required" : [ "configurations", "deviceInterface" ],
      "properties" : {
        "configurations" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IOspfv3NeighborConfiguration"
          }
        },
        "deviceInterface" : {
          "$ref" : "#/definitions/IFTDInterface"
        }
      }
    },
    "ExternalStorageListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ExternalStorage"
          }
        }
      }
    },
    "PrefilterHitCount" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata attributes for the hit count entry.",
          "$ref" : "#/definitions/HitCountMetadata"
        },
        "lastFetchTimeStamp" : {
          "type" : "string",
          "description" : "Indicates the last time (in ISO 8601 format) the hit count was retrieved for the mentioned rule."
        },
        "hitCount" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Indicates the number of times the prefilter rule was hit on the target device. It is based on the data from the last FMC hit count refresh operation."
        },
        "firstHitTimeStamp" : {
          "type" : "string",
          "description" : "Indicates the time (in ISO 8601 format) when the hit count was first hit for the mentioned rule."
        },
        "rule" : {
          "description" : "Object representing the prefilter rule against which the hit count information is retrieved.",
          "$ref" : "#/definitions/IPolicyModel"
        },
        "lastHitTimeStamp" : {
          "type" : "string",
          "description" : "Indicates the time (in ISO 8601 format) when the hit count was last hit for the mentioned rule."
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/ILinks"
        },
        "type" : {
          "type" : "string",
          "description" : "Type must be PrefilterHitCount."
        },
        "version" : {
          "type" : "string"
        }
      },
      "description" : "Model of HitCount entry for a prefilter rule."
    },
    "ServerVersion" : {
      "type" : "object",
      "properties" : {
        "serverVersion" : {
          "type" : "string"
        },
        "vdbVersion" : {
          "type" : "string"
        },
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "lspVersion" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "geoVersion" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "sruVersion" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "ServerVersionListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ServerVersion"
          }
        }
      }
    },
    "PrefilterDefaultAction" : {
      "type" : "object",
      "properties" : {
        "logEnd" : {
          "type" : "boolean"
        },
        "metadata" : {
          "$ref" : "#/definitions/Metadata"
        },
        "logBegin" : {
          "type" : "boolean"
        },
        "snmpConfig" : {
          "$ref" : "#/definitions/IReference"
        },
        "sendEventsToFMC" : {
          "type" : "boolean"
        },
        "description" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "syslogConfig" : {
          "$ref" : "#/definitions/IReference"
        },
        "name" : {
          "type" : "string"
        },
        "action" : {
          "type" : "string",
          "enum" : [ "BLOCK_TUNNELS", "ANALYZE_TUNNELS" ]
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        }
      }
    },
    "FTDHAMonitoredInterfacesListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FTDHAMonitoredInterfaces"
          }
        }
      }
    },
    "IIPvPrefixListEntry" : {
      "type" : "object",
      "required" : [ "sequence" ],
      "properties" : {
        "sequence" : {
          "type" : "integer",
          "format" : "int32"
        },
        "minPrefixLenth" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ipAddress" : {
          "type" : "string"
        },
        "maxPrefixLength" : {
          "type" : "integer",
          "format" : "int32"
        },
        "action" : {
          "type" : "string",
          "enum" : [ "PERMIT", "DENY" ]
        }
      }
    },
    "LLObservable" : {
      "type" : "object",
      "properties" : {
        "miscData" : {
          "$ref" : "#/definitions/LLMiscData"
        },
        "type" : {
          "type" : "string"
        },
        "observableType" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "unEncryptedDBId" : {
          "type" : "string"
        },
        "indicatorCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "effectiveProperty" : {
          "$ref" : "#/definitions/LLFeedProperty"
        },
        "dbid" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "inheritedProperty" : {
          "$ref" : "#/definitions/LLFeedProperty"
        },
        "customProperty" : {
          "$ref" : "#/definitions/LLFeedProperty"
        },
        "updatedAt" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "FTDRedundantInterface" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "description" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "enabled" : {
          "type" : "boolean"
        },
        "MTU" : {
          "type" : "integer",
          "format" : "int32"
        },
        "mode" : {
          "type" : "string",
          "enum" : [ "INLINE", "PASSIVE", "TAP", "ERSPAN", "NONE", "SWITCHPORT" ]
        },
        "fmcAccessConfig" : {
          "$ref" : "#/definitions/IFMCAccessConfig"
        },
        "arpConfig" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IARPConfigContainer"
          }
        },
        "ipv4" : {
          "$ref" : "#/definitions/IIPv4Container"
        },
        "ifname" : {
          "type" : "string"
        },
        "ipv6" : {
          "$ref" : "#/definitions/IIPv6Container"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "primaryInterface" : {
          "$ref" : "#/definitions/IInterface"
        },
        "id" : {
          "type" : "string"
        },
        "enableSGTPropagate" : {
          "type" : "boolean"
        },
        "macLearn" : {
          "type" : "boolean"
        },
        "managementOnly" : {
          "type" : "boolean"
        },
        "enableAntiSpoofing" : {
          "type" : "boolean"
        },
        "securityZone" : {
          "$ref" : "#/definitions/ISecurityZoneObjectModel"
        },
        "activeMACAddress" : {
          "type" : "string"
        },
        "fragmentReassembly" : {
          "type" : "boolean"
        },
        "macTable" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "standbyMACAddress" : {
          "type" : "string"
        },
        "enableDNSLookup" : {
          "type" : "boolean"
        },
        "overrideDefaultFragmentSetting" : {
          "$ref" : "#/definitions/IOverrideDefaultFragmentSetting"
        },
        "version" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "redundantId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "secondaryInterface" : {
          "$ref" : "#/definitions/IInterface"
        }
      }
    },
    "LLMiscData" : {
      "type" : "object",
      "additionalProperties" : {
        "type" : "string"
      }
    },
    "IBaseDevice" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "modelId" : {
          "type" : "string"
        },
        "advanced" : {
          "$ref" : "#/definitions/IAdvanced"
        },
        "description" : {
          "type" : "string"
        },
        "modelType" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "sw_version" : {
          "type" : "string"
        },
        "healthPolicy" : {
          "$ref" : "#/definitions/IHealthPolicy"
        },
        "healthStatus" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "model" : {
          "type" : "string"
        },
        "modelNumber" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "accessPolicy" : {
          "$ref" : "#/definitions/IPolicyModel"
        },
        "id" : {
          "type" : "string"
        }
      }
    },
    "Snort3NetworkAnalysisPolicyListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Snort3NetworkAnalysisPolicy"
          }
        }
      }
    },
    "FTDPhysicalInterfaceListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FTDPhysicalInterface"
          }
        }
      }
    },
    "ApplicationRiskListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ApplicationRisk"
          }
        }
      }
    },
    "SLAMonitorObjectModel" : {
      "type" : "object",
      "required" : [ "interfaceObjects", "monitorAddress", "slaId" ],
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/Metadata"
        },
        "noOfPackets" : {
          "type" : "integer",
          "format" : "int32"
        },
        "slaId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "dataSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "description" : {
          "type" : "string"
        },
        "threshold" : {
          "type" : "integer",
          "format" : "int32"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "interfaceNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "timeout" : {
          "type" : "integer",
          "format" : "int32"
        },
        "interfaceObjects" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IInterfaceObjectModel"
          }
        },
        "frequency" : {
          "type" : "integer",
          "format" : "int32"
        },
        "monitorAddress" : {
          "type" : "string"
        },
        "overridable" : {
          "type" : "boolean"
        },
        "name" : {
          "type" : "string"
        },
        "tos" : {
          "type" : "integer",
          "format" : "int32"
        },
        "links" : {
          "$ref" : "#/definitions/Links"
        },
        "id" : {
          "type" : "string"
        }
      }
    },
    "IStaticIPContainer" : {
      "type" : "object",
      "properties" : {
        "address" : {
          "type" : "string"
        },
        "netmask" : {
          "type" : "string"
        }
      }
    },
    "INatKeepaliveTraversal" : {
      "type" : "object",
      "properties" : {
        "enabled" : {
          "type" : "boolean"
        },
        "intervalSeconds" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "BGPIPvAddressFamilyModelListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BGPIPvAddressFamilyModel"
          }
        }
      }
    },
    "Commands" : {
      "type" : "object",
      "properties" : {
        "commandOutput" : {
          "type" : "string"
        },
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "commandInput" : {
          "type" : "string"
        }
      }
    },
    "DNSServerGroupOverrideListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DNSServerGroupOverride"
          }
        }
      }
    },
    "LLIncident" : {
      "type" : "object",
      "properties" : {
        "indicatorName" : {
          "type" : "string"
        },
        "equation" : {
          "$ref" : "#/definitions/LLEquationNode"
        },
        "description" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "indicatorId" : {
          "type" : "string"
        },
        "actionTaken" : {
          "type" : "string"
        },
        "feedId" : {
          "type" : "string"
        },
        "observations" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LLObservation"
          }
        },
        "publish" : {
          "type" : "boolean"
        },
        "name" : {
          "type" : "string"
        },
        "property" : {
          "$ref" : "#/definitions/LLFeedProperty"
        },
        "id" : {
          "type" : "string"
        },
        "sourceName" : {
          "type" : "string"
        },
        "realizedAt" : {
          "type" : "integer",
          "format" : "int32"
        },
        "status" : {
          "type" : "string"
        },
        "updatedAt" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "ISESecurityGroupTagListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ISESecurityGroupTag"
          }
        }
      }
    },
    "IMetadataUser" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "ObjectUsageListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ObjectUsage"
          }
        }
      }
    },
    "IIkeKeepaliveSettings" : {
      "type" : "object",
      "properties" : {
        "threshold" : {
          "type" : "integer",
          "format" : "int32"
        },
        "retryInterval" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ikeKeepalive" : {
          "type" : "string",
          "enum" : [ "DISABLED", "ENABLED", "ENABLED_INFINITE" ]
        }
      }
    },
    "SIURLList" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/SIListMetadata"
        },
        "fileName" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "overridable" : {
          "type" : "boolean"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "UpgradePackage" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "ISSORole" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "map" : {
          "type" : "string"
        }
      }
    },
    "FTDEtherChannelInterfaceListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FTDEtherChannelInterface"
          }
        }
      }
    },
    "StandardACLListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/StandardACL"
          }
        }
      }
    },
    "TaskStatus" : {
      "type" : "object",
      "properties" : {
        "taskType" : {
          "type" : "string",
          "enum" : [ "DEVICE_REGISTRATION", "DEVICE_DEPLOYMENT", "DEVICE_ROLLBACK", "NGFWHA_OPERATIONS", "COPY_CONFIG_REQUEST", "HIT_COUNT_REFRESH", "FTD_CLUSTER_BOOTSTRAP", "FTD_CLUSTER_BREAK" ]
        },
        "subTasks" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ISubTask"
          }
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "message" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        }
      }
    },
    "SINetworkFeed" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/SIFeedMetadata"
        },
        "feedURL" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "overridable" : {
          "type" : "boolean"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "checksumURL" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "type" : {
          "type" : "string"
        },
        "updateFrequency" : {
          "type" : "integer",
          "format" : "int32"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "IOspfv3SummaryPrefix" : {
      "type" : "object",
      "properties" : {
        "tag" : {
          "type" : "string"
        },
        "ipv6Prefix" : {
          "$ref" : "#/definitions/INetworkAddress"
        },
        "advertise" : {
          "type" : "boolean"
        }
      }
    },
    "AnyConnectPackageModel" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata properties of response object.",
          "$ref" : "#/definitions/Metadata"
        },
        "fileName" : {
          "type" : "string",
          "description" : "Name of the AnyConnect client image."
        },
        "name" : {
          "type" : "string",
          "description" : "User provided resource name."
        },
        "description" : {
          "type" : "string",
          "description" : "User provided resource description."
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/Links"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier representing this resource."
        },
        "type" : {
          "type" : "string",
          "description" : "Type associated with resource: AnyConnectPackage."
        },
        "version" : {
          "type" : "string"
        }
      },
      "description" : "File objects represent AnyConnect Client Image files."
    },
    "ICertificateMapSettings" : {
      "type" : "object",
      "properties" : {
        "useCertMapConfiguredInEndpointToDetermineTunnel" : {
          "type" : "boolean"
        },
        "usePeerIpAddressToDetermineTunnel" : {
          "type" : "boolean"
        },
        "useCertificateOuToDetermineTunnel" : {
          "type" : "boolean"
        },
        "useIkeIdentityOuToDetermineTunnel" : {
          "type" : "boolean"
        }
      }
    },
    "ProtocolPortObjectOverrideListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProtocolPortObjectOverride"
          }
        }
      }
    },
    "RESTTaxiiCollection" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "caCert" : {
          "type" : "string"
        },
        "feedContent" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "invalidObservables" : {
          "type" : "integer",
          "format" : "int32"
        },
        "feedStatus" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "downloadOn" : {
          "type" : "boolean"
        },
        "nextRun" : {
          "type" : "integer",
          "format" : "int32"
        },
        "consumedIndicators" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalObservables" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalIndicators" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalUnsupportedObservables" : {
          "type" : "integer",
          "format" : "int32"
        },
        "property" : {
          "$ref" : "#/definitions/RESTFeedProperty"
        },
        "checksum" : {
          "type" : "string"
        },
        "llfeedConfig" : {
          "$ref" : "#/definitions/LLFeedConfig"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "clientPrivateKey" : {
          "type" : "string"
        },
        "subscribedCollections" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RESTCollectionTopic"
          }
        },
        "clientCert" : {
          "type" : "string"
        },
        "delivery" : {
          "type" : "string"
        },
        "finishTime" : {
          "type" : "integer",
          "format" : "int32"
        },
        "availableCollections" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RESTCollectionTopic"
          }
        },
        "lastRun" : {
          "type" : "integer",
          "format" : "int32"
        },
        "runNow" : {
          "type" : "boolean"
        },
        "totalDiscardedIndicators" : {
          "type" : "integer",
          "format" : "int32"
        },
        "consumedObservables" : {
          "type" : "integer",
          "format" : "int32"
        },
        "refresh" : {
          "type" : "integer",
          "format" : "int32"
        },
        "params" : {
          "$ref" : "#/definitions/LLParams"
        },
        "uri" : {
          "type" : "string"
        },
        "feedConfig" : {
          "$ref" : "#/definitions/LLFeedConfig"
        },
        "version" : {
          "type" : "string"
        },
        "discoveryInfo" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RESTCollectionTopic"
          }
        },
        "totalInvalidObservables" : {
          "type" : "integer",
          "format" : "int32"
        },
        "statusMsg" : {
          "$ref" : "#/definitions/LLStatusMsg"
        },
        "passwd" : {
          "type" : "string"
        },
        "startHour" : {
          "type" : "integer",
          "format" : "int32"
        },
        "discardedIndicators" : {
          "type" : "integer",
          "format" : "int32"
        },
        "consumedUnsupportedObservables" : {
          "type" : "integer",
          "format" : "int32"
        },
        "feedType" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "username" : {
          "type" : "string"
        }
      }
    },
    "IntrusionPolicyListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IntrusionPolicy"
          }
        }
      }
    },
    "IOspfv3VirtualLinks" : {
      "type" : "object",
      "properties" : {
        "retransmitInterval" : {
          "type" : "integer",
          "format" : "int32"
        },
        "deadInterval" : {
          "type" : "integer",
          "format" : "int32"
        },
        "routerId" : {
          "type" : "string"
        },
        "helloInterval" : {
          "type" : "integer",
          "format" : "int32"
        },
        "transmitDelay" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ttlSecurity" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "PortObjectListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PortObject"
          }
        }
      }
    },
    "IDynamicObjectBase" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "ApplicationProductivity" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "name" : {
          "type" : "string"
        },
        "overridable" : {
          "type" : "boolean"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "ProtocolPortObjectOverride" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata properties of response object.",
          "$ref" : "#/definitions/Metadata"
        },
        "overridable" : {
          "type" : "boolean",
          "description" : "Always returns false for overrides."
        },
        "name" : {
          "type" : "string",
          "description" : "User chosen resource name."
        },
        "description" : {
          "type" : "string",
          "description" : "User provided description."
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/Links"
        },
        "overrides" : {
          "description" : "An object override allows you to define an alternate value for an object.",
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier representing resource."
        },
        "type" : {
          "type" : "string",
          "description" : "Type associated with resource."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        }
      },
      "description" : "A model representing protocol port object override definition."
    },
    "IDeviceInventoryData" : {
      "type" : "object",
      "properties" : {
        "cpuType" : {
          "type" : "string"
        },
        "cpuCores" : {
          "type" : "string"
        },
        "memoryInMB" : {
          "type" : "string"
        },
        "storageInGB" : {
          "type" : "string"
        }
      }
    },
    "DeviceMetadata" : {
      "type" : "object",
      "properties" : {
        "lastUser" : {
          "description" : "The last user who modified this instance.",
          "$ref" : "#/definitions/MetadataUser"
        },
        "isPartOfContainer" : {
          "type" : "boolean",
          "description" : "This field indicates whether it is part of any cluster. This will be true for a device which is part of NGFWHA, NGFW cluster and firepower devices which is part of Stack."
        },
        "lspVersion" : {
          "type" : "string"
        },
        "inventoryDetails" : {
          "$ref" : "#/definitions/IDeviceInventoryData"
        },
        "readOnly" : {
          "description" : "Details regarding the read only status of this instance.",
          "$ref" : "#/definitions/ReadOnly"
        },
        "inventoryData" : {
          "description" : "Inventory details of the device.",
          "$ref" : "#/definitions/DeviceInventoryData"
        },
        "isSnort3" : {
          "type" : "boolean"
        },
        "sruVersion" : {
          "type" : "string",
          "description" : "SRU version of a particular device."
        },
        "deviceSerialNumber" : {
          "type" : "string"
        },
        "chassisDetails" : {
          "$ref" : "#/definitions/IDeviceChassisData"
        },
        "vdbVersion" : {
          "type" : "string",
          "description" : "VDB version of a particular device."
        },
        "task" : {
          "$ref" : "#/definitions/ITaskStatus"
        },
        "domain" : {
          "description" : "Lists the domains to which this instance belongs if applicable.",
          "$ref" : "#/definitions/Domain"
        },
        "chassisData" : {
          "description" : "This field holds information related to chassis.",
          "$ref" : "#/definitions/DeviceChassisData"
        },
        "isMultiInstance" : {
          "type" : "boolean",
          "description" : "Indicated if the device is in multiinstance or native mode."
        },
        "containerDetails" : {
          "description" : "If 'isPartOfContainer' field is true then this field will hold the information of container.",
          "$ref" : "#/definitions/IBaseDevice"
        },
        "snortVersion" : {
          "type" : "string",
          "description" : "Snort version of a particular device."
        },
        "timestamp" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The last updated timestamp."
        }
      }
    },
    "IKEv1IPsecProposal" : {
      "type" : "object",
      "properties" : {
        "espEncryption" : {
          "type" : "string"
        },
        "metadata" : {
          "$ref" : "#/definitions/Metadata"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/Links"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "espHash" : {
          "type" : "string"
        }
      }
    },
    "Snort3IntrusionRuleGroups" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata properties of Snort 3 intrusion rulegroup.",
          "$ref" : "#/definitions/IMetadata"
        },
        "overrideSecurityLevel" : {
          "type" : "string",
          "description" : "Override level in context of a policy. Allowed only for custom intrusion policy. One of: DISABLED | LEVEL_1 | LEVEL_2 | LEVEL_3 | LEVEL_4.",
          "enum" : [ "DISABLED", "LEVEL_1", "LEVEL_2", "LEVEL_3", "LEVEL_4" ]
        },
        "isSystemDefined" : {
          "type" : "boolean",
          "description" : "Read-only field indicating if the rulegroup is system-defined (i.e., Talos provided). If value is false, then rule is user-defined."
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the Snort 3 intrusion rulegroup."
        },
        "description" : {
          "type" : "string",
          "description" : "Description of the Snort 3 intrusion rulegroup."
        },
        "childGroups" : {
          "type" : "array",
          "description" : "List of rulegroups associated with the parent rulegroup.",
          "items" : {
            "$ref" : "#/definitions/ISnort3IntrusionRuleGroupsModel"
          }
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of the Snort 3 intrusion rulegroup."
        },
        "type" : {
          "type" : "string",
          "description" : "Type of the response object. This value is always IntrusionRuleGroup."
        },
        "version" : {
          "type" : "string"
        },
        "defaultSecurityLevel" : {
          "type" : "string",
          "description" : "Default level in context of a policy. One of: DISABLED | LEVEL_1 | LEVEL_2 | LEVEL_3 | LEVEL_4.",
          "enum" : [ "DISABLED", "LEVEL_1", "LEVEL_2", "LEVEL_3", "LEVEL_4" ]
        }
      },
      "description" : "Object representing the per-policy behaviour of a specified intrusion rulegroup for a target intrusion policy."
    },
    "StandardCommunityListListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/StandardCommunityList"
          }
        }
      }
    },
    "IPv4AddressPoolListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IPv4AddressPool"
          }
        }
      }
    },
    "IDeviceChassisData" : {
      "type" : "object",
      "properties" : {
        "securityModuleNo" : {
          "type" : "integer",
          "format" : "int32"
        },
        "chassisUrl" : {
          "type" : "string"
        },
        "securityModuleSN" : {
          "type" : "string"
        },
        "chassisSerialNo" : {
          "type" : "string"
        }
      }
    },
    "BGPIPvAddressFamilyModel" : {
      "type" : "object",
      "required" : [ "routerId" ],
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/Metadata"
        },
        "routerId" : {
          "type" : "string"
        },
        "asNumber" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "addressFamilyIPv4" : {
          "$ref" : "#/definitions/IBGPAddressFamilyModel"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "addressFamilyIPv6" : {
          "$ref" : "#/definitions/IBGPAddressFamilyModel"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "VpnIPSecSettings" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/Metadata"
        },
        "ikeV1IpsecProposal" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IReference"
          }
        },
        "perfectForwardSecrecy" : {
          "$ref" : "#/definitions/IPFSSettings"
        },
        "lifetimeSeconds" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ikeV2IpsecProposal" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IReference"
          }
        },
        "tfcPackets" : {
          "$ref" : "#/definitions/ITFCPackets"
        },
        "ikeV2Mode" : {
          "type" : "string",
          "enum" : [ "TUNNEL", "TRANSPORT_PREFERRED", "TRANSPORT_REQUIRE" ]
        },
        "description" : {
          "type" : "string"
        },
        "enableSaStrengthEnforcement" : {
          "type" : "boolean"
        },
        "cryptoMapType" : {
          "type" : "string",
          "enum" : [ "STATIC", "DYNAMIC" ]
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "lifetimeKilobytes" : {
          "type" : "integer",
          "format" : "int32"
        },
        "validateIncomingIcmpErrorMessage" : {
          "type" : "boolean"
        },
        "doNotFragmentPolicy" : {
          "type" : "string",
          "enum" : [ "SET", "COPY", "CLEAR", "NONE" ]
        },
        "name" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "enableRRI" : {
          "type" : "boolean"
        }
      }
    },
    "IVlanTagLiteral" : {
      "type" : "object",
      "properties" : {
        "startTag" : {
          "type" : "integer",
          "format" : "int32"
        },
        "endTag" : {
          "type" : "integer",
          "format" : "int32"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "IGroupPolicyCustomAttributesModel" : {
      "type" : "object",
      "properties" : {
        "customAttributeObject" : {
          "description" : "Represents AnyConnect custom attribute object of selected type",
          "$ref" : "#/definitions/IReference"
        },
        "anyConnectAttribute" : {
          "type" : "string",
          "description" : "Represents values of  either (PER_APP_VPN|ALLOW_DEFER_UPDATE|DYNAMIC_SPLIT_TUNNELING|CUSTOM_TYPE) specifying type of AnyConnect custom attribute"
        }
      },
      "description" : "Model representing the configuration of Custom Attributes of the Group Policy"
    },
    "ILsaThrottleTimer" : {
      "type" : "object",
      "properties" : {
        "maximumDelay" : {
          "type" : "integer",
          "format" : "int32"
        },
        "initialDelay" : {
          "type" : "integer",
          "format" : "int32"
        },
        "minimumDelay" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "IBGPGSBestPath" : {
      "type" : "object",
      "properties" : {
        "deterministicMed" : {
          "type" : "boolean"
        },
        "defaultLocalPreferenceValue" : {
          "type" : "integer",
          "format" : "int32"
        },
        "alwaysCompareMed" : {
          "type" : "boolean"
        },
        "name" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "bestPathCompareRouterId" : {
          "type" : "boolean"
        },
        "bestPathMedMissingAsWorst" : {
          "type" : "boolean"
        }
      }
    },
    "IApplicationCategory" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata attributes for the application category.",
          "$ref" : "#/definitions/IMetadata"
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the application category."
        },
        "overridable" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether object values can be overridden."
        },
        "description" : {
          "type" : "string",
          "description" : "Application category resource description."
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/ILinks"
        },
        "overrides" : {
          "description" : "An object override allows you to define an alternate value for an object on a device or domain.",
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier for the application category."
        },
        "type" : {
          "type" : "string",
          "description" : "Type of the response object. This value is always ApplicationCategory."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        }
      },
      "description" : "Represents an ApplicationCategory."
    },
    "IBGPGSGracefulRestart" : {
      "type" : "object",
      "properties" : {
        "gracefulRestart" : {
          "type" : "boolean"
        },
        "gracefulRestartStalePathTime" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        },
        "gracefulRestartRestartTime" : {
          "type" : "integer",
          "format" : "int32"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "ISSOAdvancedConfig" : {
      "type" : "object",
      "properties" : {
        "defaultRole" : {
          "$ref" : "#/definitions/IReference"
        },
        "roles" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ISSORole"
          }
        },
        "memberAttr" : {
          "type" : "string"
        }
      }
    },
    "RealmUserMetadata" : {
      "type" : "object",
      "properties" : {
        "lastSynced" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Field representing timestamp of the last sync for the user."
        },
        "lastUser" : {
          "$ref" : "#/definitions/MetadataUser"
        },
        "lastSeen" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Field representing timestamp of the last login for the user."
        },
        "domain" : {
          "$ref" : "#/definitions/Domain"
        },
        "readOnly" : {
          "$ref" : "#/definitions/ReadOnly"
        },
        "resolved" : {
          "type" : "boolean",
          "description" : "Field representing if this can be resolved to a synced entity."
        },
        "timestamp" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "description" : "An object representing the metadata of the RealmUser."
    },
    "DapAuthorizationAttributes" : {
      "type" : "object",
      "properties" : {
        "networkACL" : {
          "$ref" : "#/definitions/IPolicyObjectModel"
        },
        "dapRecordName" : {
          "type" : "string"
        },
        "action" : {
          "type" : "string",
          "enum" : [ "CONTINUE", "TERMINATE", "QUARANTINE" ]
        },
        "message" : {
          "type" : "string"
        },
        "priority" : {
          "type" : "integer",
          "format" : "int32"
        },
        "anyConnectAttributes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IPolicyObjectModel"
          }
        }
      }
    },
    "IDomain" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "IOspfv3NeighborCost" : {
      "type" : "object",
      "properties" : {
        "cost" : {
          "type" : "integer",
          "format" : "int32"
        },
        "filterOutgoingLSA" : {
          "type" : "boolean"
        }
      }
    },
    "IRealmEntity" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "SecurexConfigListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SecurexConfig"
          }
        }
      }
    },
    "IOspfVirtualLinks" : {
      "type" : "object",
      "properties" : {
        "retransmitInterval" : {
          "type" : "integer",
          "format" : "int32"
        },
        "deadInterval" : {
          "type" : "integer",
          "format" : "int32"
        },
        "routerId" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "helloInterval" : {
          "type" : "integer",
          "format" : "int32"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "transmitDelay" : {
          "type" : "integer",
          "format" : "int32"
        },
        "authentication" : {
          "$ref" : "#/definitions/IOspfAuthentication"
        }
      }
    },
    "IExternalCACertificate" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "IIntrusionMappedPolicy" : {
      "type" : "object",
      "properties" : {
        "snortEngine" : {
          "type" : "string",
          "enum" : [ "SNORT2", "SNORT3" ]
        },
        "inspectionMode" : {
          "type" : "string",
          "enum" : [ "PREVENTION", "DETECTION" ]
        },
        "name" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "IAccessPolicyDefaultAction" : {
      "type" : "object",
      "required" : [ "action" ],
      "properties" : {
        "logEnd" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether the device will log events at the end of the connection. Default is false."
        },
        "logBegin" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether the device will log events at the beginning of the connection. Default is false."
        },
        "metadata" : {
          "description" : "Object representing metadata properties of response object.",
          "$ref" : "#/definitions/IMetadata"
        },
        "snmpConfig" : {
          "description" : "Object representing the SNMP alert associated with the access rule.",
          "$ref" : "#/definitions/IReference"
        },
        "intrusionPolicy" : {
          "$ref" : "#/definitions/IIntrusionPolicyModel"
        },
        "sendEventsToFMC" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether the device will send events to the Firepower Management Center event viewer. Default is false."
        },
        "description" : {
          "type" : "string",
          "description" : "User provided description."
        },
        "type" : {
          "type" : "string",
          "description" : "Response object associated with resource."
        },
        "variableSet" : {
          "description" : "Object representing the variable set associated with the access rule.",
          "$ref" : "#/definitions/IReference"
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        },
        "syslogConfig" : {
          "description" : "Object representing the syslog alert associated with the access rule.",
          "$ref" : "#/definitions/IReference"
        },
        "name" : {
          "type" : "string",
          "description" : "User chosen resource name."
        },
        "action" : {
          "type" : "string",
          "description" : "Specifies the action to take when the conditions defined by the rule are met. One of: BLOCK | TRUST | NETWORK_DISCOVERY | PERMIT | INHERIT_FROM_PARENT.",
          "enum" : [ "BLOCK", "TRUST", "PERMIT", "NETWORK_DISCOVERY", "INHERIT_FROM_PARENT" ]
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier representing resource."
        }
      }
    },
    "IPortObjectsContainer" : {
      "type" : "object",
      "properties" : {
        "objects" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IPortObject"
          }
        },
        "literals" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IBasePortLiteral"
          }
        }
      }
    },
    "INeighborGeneral" : {
      "type" : "object",
      "properties" : {
        "enableAddress" : {
          "type" : "boolean"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "fallOverBFD" : {
          "type" : "string",
          "enum" : [ "SINGLE_HOP", "MULTI_HOP" ]
        },
        "type" : {
          "type" : "string"
        },
        "shutdown" : {
          "type" : "boolean"
        }
      }
    },
    "PortMetadata" : {
      "type" : "object",
      "properties" : {
        "lastUser" : {
          "$ref" : "#/definitions/MetadataUser"
        },
        "domain" : {
          "$ref" : "#/definitions/Domain"
        },
        "readOnly" : {
          "$ref" : "#/definitions/ReadOnly"
        },
        "parentType" : {
          "type" : "string"
        },
        "timestamp" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "FPInterfaceStatisticsListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FPInterfaceStatistics"
          }
        }
      }
    },
    "IPv4AddressPool" : {
      "type" : "object",
      "required" : [ "ipAddressRange" ],
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata properties of response object.",
          "$ref" : "#/definitions/Metadata"
        },
        "ipAddressRange" : {
          "type" : "string",
          "description" : "Range of addresses available in the pool. Use dotted decimal notation and a dash between the beginning and the end address. Format: ipaddr-ipaddr e.g., 10.72.1.1-10.72.1.150."
        },
        "overridable" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether object values can be overridden."
        },
        "name" : {
          "type" : "string",
          "description" : "User chosen resource name."
        },
        "description" : {
          "type" : "string",
          "description" : "User provided resource description."
        },
        "links" : {
          "$ref" : "#/definitions/Links"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of response object."
        },
        "type" : {
          "type" : "string",
          "description" : "Type associated with resource: Ipv4AddressPool."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        },
        "overrideTargetId" : {
          "type" : "string"
        },
        "mask" : {
          "type" : "string",
          "description" : "Specifies a subnet mask for the pool of addresses in X.X.X.X format."
        }
      },
      "description" : "A model representing Ipv4AddressPool Object definition."
    },
    "RangeObjectListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RangeObject"
          }
        }
      }
    },
    "DynamicObjectWithMappingsBulk" : {
      "type" : "object",
      "properties" : {
        "mappings" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "dynamicObject" : {
          "$ref" : "#/definitions/DynamicObjectBulk"
        }
      }
    },
    "IOspfv3LogAdjacencyChanges" : {
      "type" : "object",
      "properties" : {
        "includeDetails" : {
          "type" : "boolean"
        }
      }
    },
    "IIntrusionRuleSuppression" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "sourceNetworks" : {
          "type" : "array",
          "description" : "Object representing source networks selected for the intrusion rule suppression setting.",
          "items" : {
            "$ref" : "#/definitions/INetworkAddress"
          }
        },
        "destinationNetworks" : {
          "type" : "array",
          "description" : "Object representing destination networks selected for the intrusion rule suppression setting.",
          "items" : {
            "$ref" : "#/definitions/INetworkAddress"
          }
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      },
      "description" : "Model representing intrusion rule suppression setting."
    },
    "IGroupPolicyClientModulesModel" : {
      "type" : "object",
      "properties" : {
        "moduleType" : {
          "type" : "string",
          "description" : "Specifies the type of the Client module package",
          "enum" : [ "AMP_ENABLER", "FEEDBACK", "ISE_POSTURE", "NETWORK_ACCESS_MANAGER", "NETWORK_VISIBILITY", "UMBRELLA_ROAMING", "WEB_SECURITY", "START_BEFORE_LOGIN", "DART" ]
        },
        "moduleProfile" : {
          "description" : "Represents VPN Client Profile Object",
          "$ref" : "#/definitions/IReference"
        },
        "enableModuleDownload" : {
          "type" : "boolean",
          "description" : "Specifies if the module has to be downloaded. Default is False"
        }
      },
      "description" : "Model representing the File configurations for AnyConnect Client Modules"
    },
    "InspectorOverrideConfigListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/InspectorOverrideConfig"
          }
        }
      }
    },
    "RealmUser" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Metadata object of the RealmUser.",
          "$ref" : "#/definitions/RealmUserMetadata"
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the RealmUser."
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "realm" : {
          "description" : "Realm object for the user.",
          "$ref" : "#/definitions/IRealm"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique Identifier of the user."
        },
        "type" : {
          "type" : "string",
          "description" : "Value is 'RealmUser'. Read-only fixed value."
        }
      },
      "description" : "Defines Identity RealmUser Object."
    },
    "IOspfNeighbors" : {
      "type" : "object",
      "properties" : {
        "neighborInterface" : {
          "$ref" : "#/definitions/IFTDInterface"
        },
        "ipAddress" : {
          "$ref" : "#/definitions/INetworkAddress"
        }
      }
    },
    "IOspfFilterList" : {
      "type" : "object",
      "properties" : {
        "prefixList" : {
          "$ref" : "#/definitions/IReference"
        },
        "filterDirection" : {
          "type" : "string",
          "enum" : [ "IN", "OUT" ]
        }
      }
    },
    "IGroupPolicyGeneralSettingsModel" : {
      "type" : "object",
      "properties" : {
        "primaryDNSServer" : {
          "description" : "Optional. Represents Network Object containing Primary DNS Server IP Address",
          "$ref" : "#/definitions/IReference"
        },
        "primaryWINSServer" : {
          "description" : "Optional. Represents Network Object containing Primary WINS Server IP Address",
          "$ref" : "#/definitions/IReference"
        },
        "secondaryWINSServer" : {
          "description" : "Optional. Represents Network Object containing Secondary WINS Server IP Address",
          "$ref" : "#/definitions/IReference"
        },
        "addressAssignment" : {
          "description" : "Optional. Represents Address Assignment details that will be assigned to the endhost",
          "$ref" : "#/definitions/IGroupPolicyAddressAssignmentModel"
        },
        "banner" : {
          "type" : "string",
          "description" : "Optional. Specifies the banner text to present to users at login"
        },
        "splitTunnelSettings" : {
          "description" : "Optional. Represents Split tunneling directs some network traffic through the VPN tunnel (encrypted) and the remaining network traffic outside the VPN tunnel (unencrypted)",
          "$ref" : "#/definitions/IGroupPolicySplitTunnelSettingsModel"
        },
        "secondaryDNSServer" : {
          "description" : "Optional. Represents Network Object containing Secondary DNS Server IP Address",
          "$ref" : "#/definitions/IReference"
        }
      },
      "description" : "Model represents General Settings of a Group Policy"
    },
    "FTDSubInterfaceListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FTDSubInterface"
          }
        }
      }
    },
    "ITarget" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the device."
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique ID of the device."
        },
        "type" : {
          "type" : "string",
          "description" : "Device"
        },
        "version" : {
          "type" : "string"
        }
      },
      "description" : "This is the target device."
    },
    "ISyslogConfig" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "RESTElement" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "capabilities" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "caCert" : {
          "type" : "string"
        },
        "miscData" : {
          "$ref" : "#/definitions/LLMiscData"
        },
        "description" : {
          "type" : "string"
        },
        "cert" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "registrationDate" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        },
        "host" : {
          "type" : "string"
        },
        "model" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "llelement" : {
          "$ref" : "#/definitions/LLElement"
        },
        "key" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        }
      }
    },
    "IPv6AddressPoolOverride" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata properties of response object.",
          "$ref" : "#/definitions/Metadata"
        },
        "overridable" : {
          "type" : "boolean",
          "description" : "Always returns false of overrides."
        },
        "name" : {
          "type" : "string",
          "description" : "User chosen resource name."
        },
        "description" : {
          "type" : "string",
          "description" : "User provided description."
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/Links"
        },
        "overrides" : {
          "description" : "An object override allows you to define an alternate value for an object.",
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier representing resource."
        },
        "type" : {
          "type" : "string",
          "description" : "Type associated with resource."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        }
      },
      "description" : "A model representing IPv6AddressPoolOverride definition."
    },
    "IReferenceContainer" : {
      "type" : "object",
      "properties" : {
        "objects" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IReference"
          }
        },
        "literals" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IValueLiteral"
          }
        }
      }
    },
    "NetworkObject" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata properties of NetworkObject.",
          "$ref" : "#/definitions/Metadata"
        },
        "overridable" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether object values can be overridden."
        },
        "name" : {
          "type" : "string",
          "description" : "User assigned resource name."
        },
        "description" : {
          "type" : "string",
          "description" : "User provided resource description. "
        },
        "links" : {
          "description" : "Object containing related links.",
          "$ref" : "#/definitions/Links"
        },
        "overrides" : {
          "description" : "An object override allows you to define an alternate value for an object on a device or domain.",
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier representing response object."
        },
        "type" : {
          "type" : "string",
          "description" : "Type associated with resource: NetworkObject."
        },
        "value" : {
          "type" : "string",
          "description" : "Actual value of the network."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        },
        "overrideTargetId" : {
          "type" : "string",
          "description" : "Unique identifier of domain or device when override assigned to child domain. Used as path parameter to GET override details for a specific object on a specific target (device or domain)."
        }
      },
      "description" : "A model representing Network object definition.",
      "example": {
        "id": "73ee665b-fbee-563d-92d0-c41d4e5fb7f2",
        "name": "Network2",
        "description": "Wavfu uk unlofu daefi ow fi te zebnah abaco so lodtiw kijeh upzesin kew zo eg.",
        "version": "d5877fad-91a9-5848-95bd-509fc9538ec7",
        "type": "networkobject",
        "value": "166.1.1.0/255.255.255.0"
      }
    },
    "DefaultAction" : {
      "type" : "object",
      "required" : [ "action" ],
      "properties" : {
        "logEnd" : {
          "type" : "boolean"
        },
        "metadata" : {
          "$ref" : "#/definitions/Metadata"
        },
        "logBegin" : {
          "type" : "boolean"
        },
        "snmpConfig" : {
          "$ref" : "#/definitions/IReference"
        },
        "intrusionPolicy" : {
          "$ref" : "#/definitions/IIntrusionPolicyModel"
        },
        "sendEventsToFMC" : {
          "type" : "boolean"
        },
        "description" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "variableSet" : {
          "$ref" : "#/definitions/IReference"
        },
        "version" : {
          "type" : "string"
        },
        "syslogConfig" : {
          "$ref" : "#/definitions/IReference"
        },
        "name" : {
          "type" : "string"
        },
        "action" : {
          "type" : "string",
          "enum" : [ "BLOCK", "TRUST", "PERMIT", "NETWORK_DISCOVERY", "INHERIT_FROM_PARENT" ]
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        }
      }
    },
    "RetryUpgrade" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata attributes for the triggered task.",
          "$ref" : "#/definitions/IMetadata"
        },
        "name" : {
          "type" : "string",
          "description" : "The name of the operation."
        },
        "description" : {
          "type" : "string",
          "description" : "More details about the operation."
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique Task ID of this request."
        },
        "type" : {
          "type" : "string",
          "description" : "RetryUpgrade"
        },
        "targets" : {
          "type" : "array",
          "description" : "A list of FTD devices.",
          "items" : {
            "$ref" : "#/definitions/ITarget"
          }
        },
        "version" : {
          "type" : "string"
        }
      },
      "description" : "This operation retries a failed upgrade."
    },
    "IHost" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "overridable" : {
          "type" : "boolean"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "FTDBridgeGroupInterface" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "description" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "enabled" : {
          "type" : "boolean"
        },
        "MTU" : {
          "type" : "integer",
          "format" : "int32"
        },
        "mode" : {
          "type" : "string",
          "enum" : [ "INLINE", "PASSIVE", "TAP", "ERSPAN", "NONE", "SWITCHPORT" ]
        },
        "fmcAccessConfig" : {
          "$ref" : "#/definitions/IFMCAccessConfig"
        },
        "arpConfig" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IARPConfigContainer"
          }
        },
        "selectedInterfaces" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IInterface"
          }
        },
        "ipv4" : {
          "$ref" : "#/definitions/IIPv4Container"
        },
        "ifname" : {
          "type" : "string"
        },
        "ipv6" : {
          "$ref" : "#/definitions/IIPv6Container"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "managementOnly" : {
          "type" : "boolean"
        },
        "enableSGTPropagate" : {
          "type" : "boolean"
        },
        "macLearn" : {
          "type" : "boolean"
        },
        "enableAntiSpoofing" : {
          "type" : "boolean"
        },
        "securityZone" : {
          "$ref" : "#/definitions/ISecurityZoneObjectModel"
        },
        "activeMACAddress" : {
          "type" : "string"
        },
        "fragmentReassembly" : {
          "type" : "boolean"
        },
        "macTable" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "bridgeGroupId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "standbyMACAddress" : {
          "type" : "string"
        },
        "ipAddress" : {
          "type" : "string"
        },
        "enableDNSLookup" : {
          "type" : "boolean"
        },
        "overrideDefaultFragmentSetting" : {
          "$ref" : "#/definitions/IOverrideDefaultFragmentSetting"
        },
        "version" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        }
      }
    },
    "AllowDNSRule" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/Metadata"
        },
        "dnsFeeds" : {
          "description" : "List of DNS Feed objects",
          "$ref" : "#/definitions/IReferenceContainer"
        },
        "sourceZones" : {
          "description" : "Contains a list or Security Zone objects referenced by the rule",
          "$ref" : "#/definitions/IReferenceContainer"
        },
        "description" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "description" : "Type of the DNS Policy Rule; this value is always AllowDNSRule."
        },
        "sinkhole" : {
          "description" : "If the action of the rule is SINKHOLE, then this attribute contains the sinkhole object referenced",
          "$ref" : "#/definitions/IReference"
        },
        "dnsLists" : {
          "description" : "List of DNS List objects",
          "$ref" : "#/definitions/IReferenceContainer"
        },
        "networks" : {
          "description" : "Contains network objects referenced by the rule. It is split in 2 separate lists: objects and literals",
          "$ref" : "#/definitions/IReferenceContainer"
        },
        "version" : {
          "type" : "string"
        },
        "enabled" : {
          "type" : "boolean",
          "description" : "Boolean property indicating if the rule is enabled"
        },
        "systemDefault" : {
          "type" : "boolean",
          "description" : "Boolean property indicating if the current rule is a system defined one"
        },
        "name" : {
          "type" : "string",
          "description" : "User-specified name of the DNS policy Rule."
        },
        "action" : {
          "type" : "string",
          "description" : "The type of the rule. Possible values are: ALLOW, BLOCK, MONITOR, SINKHOLE, NXDOMAIN",
          "enum" : [ "ALLOW", "MONITOR", "SINKHOLE", "BLOCK", "NXDOMAIN" ]
        },
        "vlanTags" : {
          "description" : "Contains VLAN tag objects referenced by the rule. It is split in 2 separate lists: objects and literals",
          "$ref" : "#/definitions/IReferenceContainer"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier (UUID) representing the DNS policy Rule."
        }
      },
      "description" : "Description of DNS Policy Rule."
    },
    "IAddressContainer" : {
      "type" : "object",
      "properties" : {
        "address" : {
          "type" : "string"
        },
        "enforceEUI64" : {
          "type" : "boolean"
        },
        "prefix" : {
          "type" : "string"
        }
      }
    },
    "IConnProfileCertificateUsernameSettings" : {
      "type" : "object",
      "properties" : {
        "mapPrimaryField" : {
          "type" : "string",
          "description" : "Field in the certificate that will be used as Primary attribute to authenticate. Default value is CN (Common Name)",
          "enum" : [ "CN_COMMMON_NAME", "C_COUNTRY", "DNQ_DN_QUALIFIER", "EA_EMAIL_ADDRESS", "GENQ_GENERATIONAL_QUALIFIER", "GN_GIVEN_NAME", "I_INITIAL", "L_LOCALITY", "N_NAME", "O_ORGANISATION", "OU_ORGANISATIONAL_UNIT", "SER_SERIAL_NUMBER", "SN_SURNAME", "SP_STATE_PROVINCE", "T_TITLE", "UID_USER_ID", "UPN_USER_PRINCIPAL_NAME", "NONE" ]
        },
        "mapEntireDNAsUsername" : {
          "type" : "boolean",
          "description" : "Use entire DN name to authenticate the certificate. Default is False."
        },
        "prefillUsernameFromCertificate" : {
          "type" : "boolean",
          "description" : "Prefill username from certificate when the user connects. Default is False."
        },
        "hideUsername" : {
          "type" : "boolean",
          "description" : "Hide prefilled username field so that the user cannot modify it. Default is False."
        },
        "mapSecondaryField" : {
          "type" : "string",
          "description" : "Field in the certificate that will be used as Secondary attribute to authenticate. Default value is OU (Organization Unit)",
          "enum" : [ "CN_COMMMON_NAME", "C_COUNTRY", "DNQ_DN_QUALIFIER", "EA_EMAIL_ADDRESS", "GENQ_GENERATIONAL_QUALIFIER", "GN_GIVEN_NAME", "I_INITIAL", "L_LOCALITY", "N_NAME", "O_ORGANISATION", "OU_ORGANISATIONAL_UNIT", "SER_SERIAL_NUMBER", "SN_SURNAME", "SP_STATE_PROVINCE", "T_TITLE", "UID_USER_ID", "UPN_USER_PRINCIPAL_NAME", "NONE" ]
        }
      },
      "description" : "Settings used when user is authenticated using certificate."
    },
    "IPv4StaticRouteModel" : {
      "type" : "object",
      "required" : [ "gateway", "interfaceName", "metricValue", "selectedNetworks" ],
      "properties" : {
        "routeTracking" : {
          "$ref" : "#/definitions/ISLAMonitorModel"
        },
        "metadata" : {
          "$ref" : "#/definitions/Metadata"
        },
        "selectedNetworks" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/INetworkAddress"
          }
        },
        "metricValue" : {
          "type" : "integer",
          "format" : "int32"
        },
        "description" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "isTunneled" : {
          "type" : "boolean"
        },
        "interfaceName" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "gateway" : {
          "$ref" : "#/definitions/IHostObjectContainer"
        }
      }
    },
    "ApplicationTypeListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ApplicationType"
          }
        }
      }
    },
    "ErrorMessagesContainer" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "errorCode" : {
          "type" : "string"
        },
        "location" : {
          "type" : "string"
        },
        "details" : {
          "type" : "string"
        }
      }
    },
    "IOverride" : {
      "type" : "object",
      "properties" : {
        "parent" : {
          "description" : "Link to the parent/global resource which is overriden.",
          "$ref" : "#/definitions/IReference"
        },
        "target" : {
          "description" : "The device or the domain target on which this override is enabled.",
          "$ref" : "#/definitions/IReference"
        }
      },
      "description" : "Defines the override details for this object."
    },
    "TimeZoneObjectListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TimeZoneObject"
          }
        }
      }
    },
    "IKEv2IPsecProposal" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/Metadata"
        },
        "encryptionAlgorithms" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/Links"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "integrityAlgorithms" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "DeviceChassisData" : {
      "type" : "object",
      "properties" : {
        "securityModuleNo" : {
          "type" : "integer",
          "format" : "int32"
        },
        "chassisUrl" : {
          "type" : "string"
        },
        "securityModuleSN" : {
          "type" : "string"
        },
        "chassisSerialNo" : {
          "type" : "string"
        }
      }
    },
    "JobHistoryListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/JobHistory"
          }
        }
      }
    },
    "IOspfLogAdjChanges" : {
      "type" : "object",
      "properties" : {
        "logType" : {
          "type" : "string",
          "enum" : [ "DEFAULT", "DETAILED" ]
        }
      }
    },
    "ExtendedAccessListModelListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ExtendedAccessListModel"
          }
        }
      }
    },
    "FTDEtherChannelInterface" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "minActivePhysicalInterface" : {
          "type" : "integer",
          "format" : "int32"
        },
        "description" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "enabled" : {
          "type" : "boolean"
        },
        "MTU" : {
          "type" : "integer",
          "format" : "int32"
        },
        "mode" : {
          "type" : "string",
          "enum" : [ "INLINE", "PASSIVE", "TAP", "ERSPAN", "NONE", "SWITCHPORT" ]
        },
        "fmcAccessConfig" : {
          "$ref" : "#/definitions/IFMCAccessConfig"
        },
        "arpConfig" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IARPConfigContainer"
          }
        },
        "selectedInterfaces" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IInterface"
          }
        },
        "etherChannelId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ipv4" : {
          "$ref" : "#/definitions/IIPv4Container"
        },
        "ifname" : {
          "type" : "string"
        },
        "ipv6" : {
          "$ref" : "#/definitions/IIPv6Container"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "lacpRate" : {
          "type" : "string",
          "enum" : [ "DEFAULT", "NORMAL", "FAST" ]
        },
        "hardware" : {
          "$ref" : "#/definitions/IHardwareContainer"
        },
        "lacpMode" : {
          "type" : "string",
          "enum" : [ "ACTIVE", "PASSIVE", "ON" ]
        },
        "enableSGTPropagate" : {
          "type" : "boolean"
        },
        "macLearn" : {
          "type" : "boolean"
        },
        "managementOnly" : {
          "type" : "boolean"
        },
        "enableAntiSpoofing" : {
          "type" : "boolean"
        },
        "securityZone" : {
          "$ref" : "#/definitions/ISecurityZoneObjectModel"
        },
        "activeMACAddress" : {
          "type" : "string"
        },
        "fragmentReassembly" : {
          "type" : "boolean"
        },
        "macTable" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "standbyMACAddress" : {
          "type" : "string"
        },
        "maxActivePhysicalInterface" : {
          "type" : "integer",
          "format" : "int32"
        },
        "enableDNSLookup" : {
          "type" : "boolean"
        },
        "overrideDefaultFragmentSetting" : {
          "$ref" : "#/definitions/IOverrideDefaultFragmentSetting"
        },
        "loadBalancing" : {
          "type" : "string",
          "enum" : [ "DST_IP", "DST_IP_PORT", "DST_PORT", "DST_MAC", "SRC_IP", "SRC_IP_PORT", "SRC_PORT", "SRC_MAC", "SRC_DST_IP", "SRC_DST_IP_PORT", "SRC_DST_PORT", "SRC_DST_MAC", "VLAN_DST_IP", "VLAN_DST_IP_PORT", "VLAN_SRC_IP", "VLAN_SRC_IP_PORT", "VLAN_SRC_DST_IP", "VLAN_SRC_DST_IP_PORT", "VLAN_ONLY" ]
        },
        "version" : {
          "type" : "string"
        },
        "erspanFlowId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "erspanSourceIP" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        }
      }
    },
    "ContinentObject" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata attributes for the continent.",
          "$ref" : "#/definitions/Metadata"
        },
        "code" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "This field is deprecated and should not be used."
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the Continent."
        },
        "overridable" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether object values can be overridden."
        },
        "description" : {
          "type" : "string",
          "description" : "This field is deprecated and should not be used."
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/Links"
        },
        "countries" : {
          "type" : "array",
          "description" : "List of objects representing countries.",
          "items" : {
            "$ref" : "#/definitions/ICountryModel"
          }
        },
        "id" : {
          "type" : "string",
          "description" : "Identifier matching continent from geolocation database."
        },
        "overrides" : {
          "description" : "An object override allows you to define an alternate value for an object on a device or domain.",
          "$ref" : "#/definitions/IOverride"
        },
        "type" : {
          "type" : "string",
          "description" : "Type of the response object. This value is always Continent."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        }
      },
      "description" : "Represents a Continent."
    },
    "DeployableDeviceListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DeployableDevice"
          }
        }
      }
    },
    "VlanTagGroup" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/Metadata"
        },
        "objects" : {
          "type" : "array",
          "description" : "List of member vlan tags in this group",
          "items" : {
            "$ref" : "#/definitions/IVlanModel"
          }
        },
        "literals" : {
          "type" : "array",
          "description" : "List of tag values in group.",
          "items" : {
            "$ref" : "#/definitions/IVlanTagLiteral"
          }
        },
        "overridable" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether object values can be overridden."
        },
        "name" : {
          "type" : "string",
          "description" : "User assigned resource name."
        },
        "description" : {
          "type" : "string",
          "description" : "User provided resource description."
        },
        "links" : {
          "description" : "Object containing related links.",
          "$ref" : "#/definitions/Links"
        },
        "overrides" : {
          "description" : "An object override allows you to define an alternate value for an object.",
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier representing resource."
        },
        "type" : {
          "type" : "string",
          "description" : "Type associated with resource: VlanTagGroup."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        },
        "overrideTargetId" : {
          "type" : "string",
          "description" : "Unique identifier of domain or device when override assigned to child domain. Used as path parameter to GET override details for a specific object on a specific target (device or domain)."
        }
      },
      "description" : "A model representing tag group definition."
    },
    "RollbackRequest" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata attributes for the rollback request entry.",
          "$ref" : "#/definitions/RollbackRequestMetadata"
        },
        "rollbackDeviceList" : {
          "type" : "array",
          "description" : "A list containing job UUID and device UUIDs combination for the rollback.",
          "items" : {
            "$ref" : "#/definitions/IRollbackDeviceListEntry"
          }
        },
        "type" : {
          "type" : "string",
          "description" : "Type must be RollbackRequest."
        }
      },
      "description" : "Represents the rollback request object which will be used for config rollback of a device."
    },
    "URLCategory" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "name" : {
          "type" : "string"
        },
        "overridable" : {
          "type" : "boolean"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "InterfaceObjectListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/InterfaceObject"
          }
        }
      }
    },
    "FTDRAVpnModel" : {
      "type" : "object",
      "required" : [ "accessInterfaceSettings", "addressAssignmentSettings", "anyConnectClientImages", "ravpnConnectionProfiles" ],
      "properties" : {
        "metadata" : {
          "description" : "Specifies metadata properties of RAVPN.",
          "$ref" : "#/definitions/IMetadata"
        },
        "anyConnectClientImages" : {
          "type" : "array",
          "description" : "Specifies a list of AnyConnect images and order of the image",
          "items" : {
            "$ref" : "#/definitions/IReference"
          }
        },
        "description" : {
          "type" : "string",
          "description" : "A model representing RAVPN definition."
        },
        "ravpnConnectionProfiles" : {
          "type" : "object",
          "description" : "Specifies a list of Connection Profiles"
        },
        "type" : {
          "type" : "string",
          "description" : "Type associated with resource: RAVPN."
        },
        "version" : {
          "type" : "string"
        },
        "accessInterfaceSettings" : {
          "description" : "Specifies the configuration for Access Interface Settings",
          "$ref" : "#/definitions/IReference"
        },
        "name" : {
          "type" : "string",
          "description" : "User assigned resource name."
        },
        "localRealmServer" : {
          "$ref" : "#/definitions/IReference"
        },
        "certificateMapSettings" : {
          "description" : "Specifies the certificate map settings",
          "$ref" : "#/definitions/IReference"
        },
        "links" : {
          "description" : "Specifies links to this object.",
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string",
          "description" : "Specifies Unique identifier (UUID) representing the RAVPN object"
        },
        "addressAssignmentSettings" : {
          "description" : "Specifies address assignments settings",
          "$ref" : "#/definitions/IReference"
        },
        "groupPolicies" : {
          "type" : "array",
          "description" : "Specifies a list of Group Policie",
          "items" : {
            "$ref" : "#/definitions/IReference"
          }
        }
      },
      "description" : "A model representing Remote Access VPN Policy"
    },
    "IACPolicyIdentityPolicySettings" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "identityPolicy" : {
          "$ref" : "#/definitions/IReference"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "VlanTagListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/VlanTag"
          }
        }
      }
    },
    "ITimeRangeModel" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "effectiveEndDateTime" : {
          "type" : "string"
        },
        "effectiveStartDateTime" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "recurrenceList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IRecurrence"
          }
        }
      }
    },
    "SNMPConfig" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/Links"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "ExternalStorage" : {
      "type" : "object",
      "properties" : {
        "template" : {
          "type" : "string"
        },
        "uiPort" : {
          "type" : "integer",
          "format" : "int32"
        },
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "intValue" : {
          "type" : "integer",
          "format" : "int32"
        },
        "doNotStoreConnectionEvents" : {
          "type" : "boolean"
        },
        "description" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "crossLaunchEnabled" : {
          "type" : "boolean"
        },
        "uiHost" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "longValue" : {
          "type" : "integer",
          "format" : "int32"
        },
        "enabled" : {
          "type" : "boolean"
        },
        "network" : {
          "$ref" : "#/definitions/NetworkObject"
        },
        "remoteQueryHost" : {
          "type" : "string"
        },
        "logHost" : {
          "type" : "string"
        },
        "isLinaLoggingEnabled" : {
          "type" : "boolean"
        },
        "name" : {
          "type" : "string"
        },
        "logPort" : {
          "type" : "integer",
          "format" : "int32"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "remoteQueryPort" : {
          "type" : "integer",
          "format" : "int32"
        },
        "remoteQueryCert" : {
          "type" : "string"
        }
      }
    },
    "DNSPolicy" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata attributes for the DNS policy.",
          "$ref" : "#/definitions/Metadata"
        },
        "name" : {
          "type" : "string",
          "description" : "User-specified name of the DNS policy."
        },
        "description" : {
          "type" : "string",
          "description" : "Description of DNS Policy"
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier (UUID) representing the DNS policy."
        },
        "type" : {
          "type" : "string",
          "description" : "Type of the DNS policy; this value is always DNSPolicy."
        },
        "version" : {
          "type" : "string"
        }
      },
      "description" : "Description of DNS Policy."
    },
    "DefaultActionListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DefaultAction"
          }
        }
      }
    },
    "DomainListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Domain"
          }
        }
      }
    },
    "ISecurityGroupTag" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "name" : {
          "type" : "string"
        },
        "overridable" : {
          "type" : "boolean"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "tag" : {
          "type" : "integer",
          "format" : "int32"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "VirtualSwitch" : {
      "type" : "object",
      "properties" : {
        "dropBPDU" : {
          "type" : "boolean"
        },
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "sensorPolicy" : {
          "$ref" : "#/definitions/IAccessPolicyModel"
        },
        "description" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "strictTCPEnforcement" : {
          "type" : "boolean"
        },
        "domainId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "staticMacEntries" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IStaticMacEntry"
          }
        },
        "name" : {
          "type" : "string"
        },
        "switchedInterfaces" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IInterface"
          }
        },
        "enableSpanningTreeProtocol" : {
          "type" : "boolean"
        },
        "links" : {
          "$ref" : "#/definitions/Links"
        },
        "id" : {
          "type" : "string"
        },
        "hybridInterface" : {
          "$ref" : "#/definitions/IInterface"
        }
      }
    },
    "SSOServerOverride" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata properties of response object.",
          "$ref" : "#/definitions/Metadata"
        },
        "overridable" : {
          "type" : "boolean",
          "description" : "Always returns false for overrides."
        },
        "name" : {
          "type" : "string",
          "description" : "User chosen resource name."
        },
        "description" : {
          "type" : "string",
          "description" : "User provided description."
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/Links"
        },
        "overrides" : {
          "description" : "An object override allows you to define an alternate value for an object on a device or domain.",
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique UUID representing resource."
        },
        "type" : {
          "type" : "string",
          "description" : "Type associated with resource."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        }
      },
      "description" : "A model representing SSOServerOverride object definition."
    },
    "AccessPolicyCategoryMetadata" : {
      "type" : "object",
      "properties" : {
        "startIndex" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Index of the first Access Rule inside the category. Index will be -1 if there are no rules in category"
        },
        "lastUser" : {
          "description" : "The last user who modified this instance.",
          "$ref" : "#/definitions/MetadataUser"
        },
        "endIndex" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Index of the last Access Rule inside the category. Index will be -1 if there are no rules in category"
        },
        "domain" : {
          "description" : "Object representing the domain under which the operation has been performed.",
          "$ref" : "#/definitions/Domain"
        },
        "readOnly" : {
          "description" : "Details regarding the read only status of this instance.",
          "$ref" : "#/definitions/ReadOnly"
        },
        "section" : {
          "type" : "string",
          "description" : "Specifies the section into which the rules will be added. Only 'mandatory' and 'default' are allowed values. If none of the parameters are specified category will be added to 'default' section"
        },
        "accessPolicy" : {
          "description" : "Object representing the access control containing the rule.",
          "$ref" : "#/definitions/IReference"
        },
        "timestamp" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The last updated timestamp."
        }
      },
      "description" : "Description of Access Policy Category Metadata."
    },
    "IApplicationType" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata attributes for the application type.",
          "$ref" : "#/definitions/IMetadata"
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the application type."
        },
        "overridable" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether object values can be overridden."
        },
        "description" : {
          "type" : "string",
          "description" : "Application type resource description."
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/ILinks"
        },
        "overrides" : {
          "description" : "An object override allows you to define an alternate value for an object on a device or domain.",
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier for the application type."
        },
        "type" : {
          "type" : "string",
          "description" : "Type of the response object. This value is always ApplicationType."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        }
      },
      "description" : "Represents an ApplicationType."
    },
    "IUsersContainer" : {
      "type" : "object",
      "properties" : {
        "objects" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IRealmEntity"
          }
        }
      }
    },
    "SSOConfig" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "ssoProvider" : {
          "type" : "string"
        },
        "ssoUrl" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "enabled" : {
          "type" : "boolean"
        },
        "rootUrl" : {
          "type" : "string"
        },
        "ssoCert" : {
          "type" : "string"
        },
        "advancedConfig" : {
          "$ref" : "#/definitions/ISSOAdvancedConfig"
        },
        "name" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "ssoIssuer" : {
          "type" : "string"
        }
      }
    },
    "InterfaceEvent" : {
      "type" : "object",
      "properties" : {
        "hasPendingChanges" : {
          "type" : "boolean"
        },
        "metadata" : {
          "$ref" : "#/definitions/Metadata"
        },
        "change" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "action" : {
          "type" : "string",
          "enum" : [ "SYNC_WITH_DEVICE", "ACCEPT_CHANGES" ]
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "state" : {
          "type" : "string",
          "enum" : [ "DISASSOCIATED", "ASSOCIATED", "MODIFIED" ]
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "DynamicObject" : {
      "type" : "object",
      "properties" : {
        "agentId" : {
          "type" : "string"
        },
        "metadata" : {
          "description" : "Object representing metadata properties of response object.",
          "$ref" : "#/definitions/DynamicObjectMetadata"
        },
        "name" : {
          "type" : "string",
          "description" : "User chosen resource name."
        },
        "description" : {
          "type" : "string",
          "description" : "User provided description."
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/Links"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier representing resource."
        },
        "type" : {
          "type" : "string",
          "description" : "Type of the Dynamic objects; this value is always DynamicObject."
        },
        "version" : {
          "type" : "string"
        },
        "objectType" : {
          "type" : "string",
          "description" : "Type of dynamic object mappings. Currently we support only 'IP'."
        }
      },
      "description" : "The details about the Dynamic Object."
    },
    "ISecurityZoneObjectModel" : {
      "type" : "object",
      "properties" : {
        "interfaceMode" : {
          "type" : "string",
          "enum" : [ "PASSIVE", "INLINE", "SWITCHED", "ROUTED", "ASA" ]
        },
        "interfaces" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IFTDInterface"
          }
        },
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "devices" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IInterfaceDeviceModel"
          }
        },
        "name" : {
          "type" : "string"
        },
        "overridable" : {
          "type" : "boolean"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "IOspfDeadIntervalMechanism" : {
      "type" : "object",
      "properties" : {
        "deadInterval" : {
          "type" : "integer",
          "format" : "int32"
        },
        "helloInterval" : {
          "type" : "integer",
          "format" : "int32"
        },
        "neighborDetectionType" : {
          "type" : "string"
        }
      }
    },
    "Snort3IntrusionRuleGroupsObjectListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Snort3IntrusionRuleGroupsObject"
          }
        }
      }
    },
    "IDistributeLists" : {
      "type" : "object",
      "properties" : {
        "protocol" : {
          "$ref" : "#/definitions/IFilterProtocol"
        },
        "accessList" : {
          "$ref" : "#/definitions/IStandardACL"
        },
        "name" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "IYouTube" : {
      "type" : "object",
      "properties" : {
        "siteKey" : {
          "type" : "string"
        },
        "enabled" : {
          "type" : "boolean"
        }
      }
    },
    "IOspfKeyChainAuth" : {
      "type" : "object",
      "properties" : {
        "authKey" : {
          "$ref" : "#/definitions/IKeyChainObject"
        },
        "authType" : {
          "type" : "string"
        }
      }
    },
    "SecurityZoneObjectListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SecurityZoneObject"
          }
        }
      }
    },
    "IPv6PrefixListListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IPv6PrefixList"
          }
        }
      }
    },
    "FTDHAIPv4Configuration" : {
      "type" : "object",
      "properties" : {
        "standbyIPv4Address" : {
          "type" : "string"
        },
        "activeIPv4Mask" : {
          "type" : "string"
        },
        "activeIPv4Address" : {
          "type" : "string"
        }
      }
    },
    "IExpandedCommunityListEntry" : {
      "type" : "object",
      "required" : [ "action", "regularExpression", "sequence" ],
      "properties" : {
        "sequence" : {
          "type" : "integer",
          "format" : "int32"
        },
        "regularExpression" : {
          "type" : "string"
        },
        "action" : {
          "type" : "string",
          "enum" : [ "PERMIT", "DENY" ]
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "AnyProtocolPortObject" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata properties.",
          "$ref" : "#/definitions/PortMetadata"
        },
        "overridable" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether object values can be overridden."
        },
        "name" : {
          "type" : "string",
          "description" : "User chosen resource name."
        },
        "description" : {
          "type" : "string",
          "description" : "User provided resource description. "
        },
        "links" : {
          "description" : "Object containing related links.",
          "$ref" : "#/definitions/Links"
        },
        "overrides" : {
          "description" : "Represents an alternate value for an object on a device or domain.",
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier."
        },
        "type" : {
          "type" : "string",
          "description" : "Type associated with resource: AnyProtocolPortObject."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        },
        "overrideTargetId" : {
          "type" : "string",
          "description" : "Unique identifier of domain or device when override assigned to child domain. Used as path parameter to GET override details for a specific object on a specific target (device or domain)."
        }
      },
      "description" : "A model representing Any portocol port object definition."
    },
    "LLFeedConfig" : {
      "type" : "object",
      "properties" : {
        "safeToUpdate" : {
          "type" : "boolean"
        },
        "feedContent" : {
          "type" : "string"
        },
        "updatedObservables" : {
          "type" : "integer",
          "format" : "int32"
        },
        "safeToDelete" : {
          "type" : "boolean"
        },
        "feedStatus" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "downloadOn" : {
          "type" : "boolean"
        },
        "nextRun" : {
          "type" : "integer",
          "format" : "int32"
        },
        "password" : {
          "type" : "string"
        },
        "totalUnsupportedObservables" : {
          "type" : "integer",
          "format" : "int32"
        },
        "property" : {
          "$ref" : "#/definitions/LLFeedProperty"
        },
        "id" : {
          "type" : "string"
        },
        "clientPrivateKey" : {
          "type" : "string"
        },
        "totalUpdatedObservables" : {
          "type" : "integer",
          "format" : "int32"
        },
        "clientCert" : {
          "type" : "string"
        },
        "subscribedCollections" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LLCollectionTopic"
          }
        },
        "discardedObservables" : {
          "type" : "integer",
          "format" : "int32"
        },
        "finishTime" : {
          "type" : "integer",
          "format" : "int32"
        },
        "availableCollections" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LLCollectionTopic"
          }
        },
        "lastRun" : {
          "type" : "integer",
          "format" : "int32"
        },
        "recurring" : {
          "type" : "boolean"
        },
        "refreshSec" : {
          "type" : "integer",
          "format" : "int32"
        },
        "refreshMin" : {
          "type" : "integer",
          "format" : "int32"
        },
        "consumedObservables" : {
          "type" : "integer",
          "format" : "int32"
        },
        "params" : {
          "$ref" : "#/definitions/LLParams"
        },
        "inRunningState" : {
          "type" : "boolean"
        },
        "version" : {
          "type" : "string"
        },
        "totalUpdatedIndicators" : {
          "type" : "integer",
          "format" : "int32"
        },
        "discoveryInfo" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LLCollectionTopic"
          }
        },
        "statusMsg" : {
          "$ref" : "#/definitions/LLStatusMsg"
        },
        "passwd" : {
          "type" : "string"
        },
        "discardedIndicators" : {
          "type" : "integer",
          "format" : "int32"
        },
        "consumedUnsupportedObservables" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        },
        "totalDiscardedObservables" : {
          "type" : "integer",
          "format" : "int32"
        },
        "caCert" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "consumedIndicators" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalIndicators" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalObservables" : {
          "type" : "integer",
          "format" : "int32"
        },
        "checksum" : {
          "type" : "string"
        },
        "delivery" : {
          "type" : "string"
        },
        "proxyURL" : {
          "type" : "string"
        },
        "runNow" : {
          "type" : "boolean"
        },
        "updatedIndicators" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalConsumedIndicators" : {
          "type" : "integer",
          "format" : "int32"
        },
        "refresh" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalDiscardedIndicators" : {
          "type" : "integer",
          "format" : "int32"
        },
        "uri" : {
          "type" : "string"
        },
        "passwdAsIs" : {
          "type" : "string"
        },
        "startHour" : {
          "type" : "integer",
          "format" : "int32"
        },
        "feedType" : {
          "type" : "string"
        },
        "totalConsumedObservables" : {
          "type" : "integer",
          "format" : "int32"
        },
        "username" : {
          "type" : "string"
        }
      }
    },
    "TimeZoneObject" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata properties of the response object.",
          "$ref" : "#/definitions/Metadata"
        },
        "timeZoneId" : {
          "type" : "string",
          "description" : "Unique identifier of the global time zone from the IANA time zone (tz) database."
        },
        "timeZone" : {
          "type" : "string",
          "description" : "Read-only field containing description of the specified global time zone (timeZoneId)."
        },
        "description" : {
          "type" : "string",
          "description" : "User provided resource description. "
        },
        "overrides" : {
          "description" : "An object override allows you to define an alternate value for an object on a device or domain.",
          "$ref" : "#/definitions/IOverride"
        },
        "type" : {
          "type" : "string",
          "description" : "Type of the response object. This value is always TimeZoneObject."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        },
        "overrideTargetId" : {
          "type" : "string",
          "description" : "Unique identifier of domain or device when override assigned to child domain. Used as path parameter to GET override details for a specific object on a specific target (device or domain)."
        },
        "dstDateRange" : {
          "description" : "Object representing the daylight saving configuration by date range. Either dstDateRange or dstDayRecurrence field must be configured to enable daylight saving for the object.",
          "$ref" : "#/definitions/ITimeZoneDateRangeFragment"
        },
        "dstDayRecurrence" : {
          "description" : "Object representing the daylight saving configuration by day-based recurrence. Either dstDateRange or dstDayRecurrence field must be configured to enable daylight saving.",
          "$ref" : "#/definitions/ITimeZoneDayRecurrenceFragment"
        },
        "name" : {
          "type" : "string",
          "description" : "User assigned resource name."
        },
        "overridable" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether object values can be overridden."
        },
        "links" : {
          "description" : "Object containing related links.",
          "$ref" : "#/definitions/Links"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier representing response object."
        }
      },
      "description" : "Object representing a time zone object."
    },
    "URLCategoryListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/URLCategory"
          }
        }
      }
    },
    "IFilterProtocol" : {
      "type" : "object",
      "properties" : {
        "protocol" : {
          "type" : "string",
          "enum" : [ "CONNECTED", "BGP", "OSPF", "RIP", "STATIC" ]
        },
        "processId" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "PortObjectGroupOverrideListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PortObjectGroupOverride"
          }
        }
      }
    },
    "FTDHAMonitoredInterfaces" : {
      "type" : "object",
      "required" : [ "monitorForFailures" ],
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata properties",
          "$ref" : "#/definitions/IMetadata"
        },
        "monitorForFailures" : {
          "type" : "boolean",
          "description" : "Flag indicating failure for monitored interfaces"
        },
        "ipv6Configuration" : {
          "description" : "IPv6 Configuration",
          "$ref" : "#/definitions/FTDHAIPv6Configuration"
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the Firepower Threat Defense high availability monitored interface"
        },
        "description" : {
          "type" : "string",
          "description" : "Description of the Firepower Threat Defense high availability monitored interface"
        },
        "links" : {
          "description" : "URL of the Firepower Threat Defense high availability monitored interface",
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier (UUID) for the Firepower Threat Defense high availability monitored interface"
        },
        "type" : {
          "type" : "string",
          "description" : "Type of the Firepower Threat Defense high availability monitored interface"
        },
        "version" : {
          "type" : "string",
          "description" : "Firepower Threat Defense high availability monitored interface model version"
        },
        "ipv4Configuration" : {
          "description" : "Global",
          "$ref" : "#/definitions/FTDHAIPv4Configuration"
        }
      },
      "description" : "Input representation of Firepower Threat Defense high availability monitored interface"
    },
    "IDeviceGroup" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "members" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IBaseDevice"
          }
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "IRouteMapEntry" : {
      "type" : "object",
      "required" : [ "action", "sequence" ],
      "properties" : {
        "ipv4PrefixListRouteSources" : {
          "type" : "array",
          "description" : "Match IPv4 (routes/traffic) based on the advertising source address of the route. ",
          "items" : {
            "$ref" : "#/definitions/IReference"
          }
        },
        "metricBandwidth" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Metric value or bandwidth in Kbits per second"
        },
        "policyLists" : {
          "type" : "array",
          "description" : "Configure a route map to evaluate and process a BGP policy.",
          "items" : {
            "$ref" : "#/definitions/IReference"
          }
        },
        "ipv6AccessListRouteSources" : {
          "type" : "array",
          "description" : "Match IPv6 (routes/traffic) based on the advertising source address of route.",
          "items" : {
            "$ref" : "#/definitions/IReference"
          }
        },
        "ipv6AccessListAddresses" : {
          "type" : "array",
          "description" : "Match IPv6 (routes/traffic) based on the route address.",
          "items" : {
            "$ref" : "#/definitions/IReference"
          }
        },
        "ipv4AccessListAddresses" : {
          "type" : "array",
          "description" : "Match IPv4 (routes/traffic) based on the route address.",
          "items" : {
            "$ref" : "#/definitions/IReference"
          }
        },
        "routeTypeNSSAExternal1" : {
          "type" : "boolean",
          "description" : "Enable NSSA-External1 route type"
        },
        "routeTypeNSSAExternal2" : {
          "type" : "boolean",
          "description" : "Enable NSSA-External2 route type"
        },
        "ipv6PrefixListNexthops" : {
          "type" : "array",
          "description" : "Match IPv6 (routes/traffic) based on the next-hop address.",
          "items" : {
            "$ref" : "#/definitions/IReference"
          }
        },
        "nextHopIPV4Setting" : {
          "type" : "string",
          "description" : "Specify a next hop IPv4 address of the next hop to which packets are output.",
          "enum" : [ "USE_PEER_ADDRESS", "SPECIFIC_IP" ]
        },
        "metricType" : {
          "type" : "string",
          "description" : "Valid values are : internal, type-1, or type-2.",
          "enum" : [ "INTERNAL", "TYPE_1", "TYPE_2" ]
        },
        "nextHopIPV6Setting" : {
          "type" : "string",
          "description" : "Specify a next hop IPv6 address of the next hop to which packets are output.",
          "enum" : [ "USE_PEER_ADDRESS", "SPECIFIC_IP" ]
        },
        "ipv4AccessListNextHops" : {
          "type" : "array",
          "description" : "Match IPv4 (routes/traffic) based on the next-hop address.",
          "items" : {
            "$ref" : "#/definitions/IReference"
          }
        },
        "ipv4PrefixListNexthops" : {
          "type" : "array",
          "description" : "Match IPv4 (routes/traffic) based on the next-hop address.",
          "items" : {
            "$ref" : "#/definitions/IReference"
          }
        },
        "action" : {
          "type" : "string",
          "description" : "Indicate the redistribution access: PERMIT or DENY",
          "enum" : [ "PERMIT", "DENY" ]
        },
        "asPathLists" : {
          "type" : "array",
          "description" : "Enable matching the BGP autonomous system path access list with the specified path access list.",
          "items" : {
            "$ref" : "#/definitions/IReference"
          }
        },
        "tagValues" : {
          "type" : "array",
          "description" : "This setting allows you to match any routes that have a specified security group tag.",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "communityListSettingInternet" : {
          "type" : "boolean",
          "description" : "Internet: one of the well-known communities"
        },
        "communityListSetting" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Enable matching the BGP community with the specified community."
        },
        "ipv6AccessListNextHops" : {
          "type" : "array",
          "description" : "Match IPv6 (routes/traffic) based on the next-hop address.",
          "items" : {
            "$ref" : "#/definitions/IReference"
          }
        },
        "interfaces" : {
          "type" : "array",
          "description" : "Match traffic based on the (ingress/egress) interfaces. Input security Zones.",
          "items" : {
            "$ref" : "#/definitions/IReference"
          }
        },
        "originSetting" : {
          "type" : "string",
          "description" : "BGP origin code. Valid values are Local IGP Local IGP and Incomplete.",
          "enum" : [ "LOCAL_IGP", "INCOMPLETE" ]
        },
        "specificIPsIPV6Setting" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "communityListSettingNoExport" : {
          "type" : "boolean",
          "description" : "No-Export: One of the well-known communities"
        },
        "localPreferenceSetting" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Preference value for the autonomous system path"
        },
        "interfaceNames" : {
          "type" : "array",
          "description" : "Match traffic based on the (ingress/egress) interfaces. Logical names.",
          "items" : {
            "type" : "string"
          }
        },
        "automaticTagSetting" : {
          "type" : "boolean",
          "description" : "Automatically compute the tag value."
        },
        "ipv4PrefixListAddresses" : {
          "type" : "array",
          "description" : "Match IPv4 (routes/traffic) based on the route address.",
          "items" : {
            "$ref" : "#/definitions/IReference"
          }
        },
        "asPathPrependLastASToASPath" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Prepend the AS path with the last AS number."
        },
        "ipv6PrefixListAddresses" : {
          "type" : "array",
          "description" : "Match IPv6 (routes/traffic) based on the route address.",
          "items" : {
            "$ref" : "#/definitions/IReference"
          }
        },
        "ipv6PrefixListRouteSources" : {
          "type" : "array",
          "description" : "Match IPv6 (routes/traffic) based on the advertising source address of route.",
          "items" : {
            "$ref" : "#/definitions/IReference"
          }
        },
        "prefixListIPV6Setting" : {
          "description" : "Match IPv6 (routes/traffic) based on the route address.",
          "$ref" : "#/definitions/IReference"
        },
        "prefixListIPV4Setting" : {
          "description" : "Match IPv4 (routes/traffic) based on the route address.",
          "$ref" : "#/definitions/IReference"
        },
        "sequence" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Indicates the position a new route map entry will have in the list of route maps entries already configured for this route map object"
        },
        "routeTypeExternal2" : {
          "type" : "boolean",
          "description" : "Enable External2 route type"
        },
        "metricRouteValues" : {
          "type" : "array",
          "description" : "Enable matching the metric of a route",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "routeTypeExternal1" : {
          "type" : "boolean",
          "description" : "Enable External1 route type"
        },
        "communityListSettingNoAdvertise" : {
          "type" : "boolean",
          "description" : "No Advertise: one of the well-known communities"
        },
        "communityLists" : {
          "type" : "array",
          "description" : "Enable matching the BGP community with the specified community.",
          "items" : {
            "$ref" : "#/definitions/IReference"
          }
        },
        "specificIPsIPV4Setting" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "asPathPrependASPath" : {
          "type" : "array",
          "description" : "Prepend an arbitrary autonomous system path string to BGP routes.",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "ipv4AccessListRouteSources" : {
          "type" : "array",
          "description" : "Match IPv4 (routes/traffic) based on the advertising source address of the route. ",
          "items" : {
            "$ref" : "#/definitions/IReference"
          }
        },
        "weightSetting" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "BGP weight for the routing table"
        },
        "routeTypeLocal" : {
          "type" : "boolean",
          "description" : "Enable Local route type"
        }
      },
      "description" : "List of route maps entries already configured for this route map object."
    },
    "IRouteMap" : {
      "type" : "object",
      "required" : [ "entries", "name" ],
      "properties" : {
        "entries" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IRouteMapEntry"
          }
        },
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "name" : {
          "type" : "string"
        },
        "overridable" : {
          "type" : "boolean"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "IOspfAuthentication" : {
      "type" : "object",
      "properties" : {
        "passwdAuth" : {
          "$ref" : "#/definitions/IOspfPasswdAuth"
        },
        "md5AuthList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IOspfMD5Auth"
          }
        },
        "keyChain" : {
          "$ref" : "#/definitions/IOspfKeyChainAuth"
        },
        "areaAuth" : {
          "$ref" : "#/definitions/IOspfAreaAuth"
        }
      }
    },
    "VrfStaticRouteModel" : {
      "type" : "object",
      "required" : [ "gateway", "interfaceName", "metricValue", "selectedNetworks" ],
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/Metadata"
        },
        "selectedNetworks" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/INetworkAddress"
          }
        },
        "metricValue" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "isTunneled" : {
          "type" : "boolean"
        },
        "interfaceName" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "gateway" : {
          "$ref" : "#/definitions/IHostObjectContainer"
        }
      }
    },
    "ICMPV6ObjectOverride" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/Metadata"
        },
        "overridable" : {
          "type" : "boolean"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/Links"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "INetworkObjectsContainer" : {
      "type" : "object",
      "properties" : {
        "objects" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/INetworkBase"
          }
        },
        "literals" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/INetworkAddressLiteral"
          }
        }
      }
    },
    "IMetadata" : {
      "type" : "object",
      "properties" : {
        "lastUser" : {
          "$ref" : "#/definitions/IMetadataUser"
        },
        "domain" : {
          "$ref" : "#/definitions/IDomain"
        },
        "readOnly" : {
          "$ref" : "#/definitions/IReadonly"
        },
        "timestamp" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "HostObject" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Defines read only details about the object - whether it is system defined, last user who modified the object etc.",
          "$ref" : "#/definitions/Metadata"
        },
        "overridable" : {
          "type" : "boolean",
          "description" : "Set to 'true' if the object can be overridden, 'false' otherwise."
        },
        "name" : {
          "type" : "string",
          "description" : " The unique name for the object."
        },
        "description" : {
          "type" : "string",
          "description" : "A description about the object."
        },
        "links" : {
          "description" : "Contains the full URL to the current object and its parent (if any)",
          "$ref" : "#/definitions/Links"
        },
        "overrides" : {
          "description" : "This is populated only if this object is an override and contains the parent (global) object id and whether this is an override on device or domain.",
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string",
          "description" : "The unique UUID of this object."
        },
        "type" : {
          "type" : "string",
          "description" : "The unique type of this object (fixed)."
        },
        "value" : {
          "type" : "string",
          "description" : "The Host IP address value for this object."
        },
        "version" : {
          "type" : "string",
          "description" : "The unique object version (if any)."
        },
        "overrideTargetId" : {
          "type" : "string",
          "description" : "The override target id either the device (UUID) or the domain (UUID) on which this override is created. Applicable only for overriden objects."
        }
      },
      "description" : "An object defining a Host Network object definition."
    },
    "ContinentObjectListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ContinentObject"
          }
        }
      }
    },
    "AsPathList" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/Metadata"
        },
        "entries" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IAsPathListEntry"
          }
        },
        "name" : {
          "type" : "integer",
          "format" : "int32"
        },
        "overridable" : {
          "type" : "boolean"
        },
        "links" : {
          "$ref" : "#/definitions/Links"
        },
        "id" : {
          "type" : "string"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "ISNMPConfig" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "DynamicObjectMappings" : {
      "type" : "object",
      "properties" : {
        "mappings" : {
          "type" : "array",
          "description" : "List of Hostname or Network which will be mapped or removed from Dynamic Object",
          "items" : {
            "type" : "string"
          }
        },
        "metadata" : {
          "$ref" : "#/definitions/Metadata"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/Links"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier representing Dynamic Object."
        },
        "type" : {
          "type" : "string",
          "description" : "Type of the Dynamic objects Mappings; this value is always DynamicObjectMappings."
        },
        "version" : {
          "type" : "string"
        }
      },
      "description" : "The details about the Dynamic Object Mappings."
    },
    "LLElement" : {
      "type" : "object",
      "properties" : {
        "capabilities" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "caCert" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "miscData" : {
          "$ref" : "#/definitions/LLMiscData"
        },
        "cert" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "registrationDate" : {
          "type" : "integer",
          "format" : "int32"
        },
        "action" : {
          "type" : "string"
        },
        "model" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "key" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        }
      }
    },
    "InspectorConfig" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "name" : {
          "type" : "string"
        },
        "inspectorConfig" : {
          "$ref" : "#/definitions/LLInspectorConfig"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "description" : "Type of the object. This value is always 'InspectorConfig'."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        }
      },
      "description" : "Object representing inspector settings for network analysis policy."
    },
    "IFMCAccessConfig" : {
      "type" : "object",
      "properties" : {
        "enableAccess" : {
          "type" : "boolean"
        },
        "allowedNetworks" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/INetworkAddress"
          }
        }
      }
    },
    "RESTIndicatorEquationNode" : {
      "type" : "object",
      "properties" : {
        "op" : {
          "type" : "string"
        },
        "item" : {
          "$ref" : "#/definitions/LLEquationNode"
        },
        "condition" : {
          "type" : "string"
        },
        "isRealized" : {
          "type" : "boolean"
        },
        "children" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RESTIndicatorEquationNode"
          }
        },
        "type" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "applyCondition" : {
          "type" : "string"
        }
      }
    },
    "HitCountListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "description" : "List of all HitCount entries for given filter query on Access Policy.",
          "items" : {
            "$ref" : "#/definitions/HitCount"
          }
        }
      },
      "description" : "List of all HitCount entries for given filter query on Access Policy."
    },
    "UrlGroupOverride" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata properties of response object.",
          "$ref" : "#/definitions/Metadata"
        },
        "overridable" : {
          "type" : "boolean",
          "description" : "Always returns false for overrides."
        },
        "name" : {
          "type" : "string",
          "description" : "User chosen resource name."
        },
        "description" : {
          "type" : "string",
          "description" : "User provided description."
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/Links"
        },
        "overrides" : {
          "description" : "An object override allows you to define an alternate value for an object.",
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier representing resource."
        },
        "type" : {
          "type" : "string",
          "description" : "Type associated with resource."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        }
      },
      "description" : "A model representing URL group override definition."
    },
    "IReadonly" : {
      "type" : "object",
      "properties" : {
        "reason" : {
          "type" : "string",
          "enum" : [ "RBAC", "SYSTEM", "DOMAIN" ]
        },
        "state" : {
          "type" : "boolean"
        }
      }
    },
    "BGPGeneralSettingModelListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BGPGeneralSettingModel"
          }
        }
      }
    },
    "FMCHAStatus" : {
      "type" : "object",
      "properties" : {
        "pendingDeviceInfo" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IPendingDeviceRegInfo"
          }
        },
        "fmcPrimary" : {
          "$ref" : "#/definitions/IFMCServerInfo"
        },
        "haOpInProgress" : {
          "type" : "boolean"
        },
        "id" : {
          "type" : "string"
        },
        "haStatusMessages" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "type" : {
          "type" : "string"
        },
        "fmcSecondary" : {
          "$ref" : "#/definitions/IFMCServerInfo"
        },
        "overallStatus" : {
          "type" : "string",
          "enum" : [ "GOOD", "DEGRADED", "SPLIT_BRAIN" ]
        },
        "syncStatus" : {
          "type" : "string",
          "enum" : [ "GOOD", "IN_PROGRESS", "PAUSED", "FAILED" ]
        }
      }
    },
    "FQDNObject" : {
      "type" : "object",
      "required" : [ "dnsResolution" ],
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/Metadata"
        },
        "dnsResolution" : {
          "type" : "string",
          "enum" : [ "IPV4_ONLY", "IPV6_ONLY", "IPV4_AND_IPV6" ]
        },
        "overridable" : {
          "type" : "boolean"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/Links"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "overrideTargetId" : {
          "type" : "string"
        }
      }
    },
    "IStandardCommunityListEntry" : {
      "type" : "object",
      "required" : [ "action", "communities", "sequence" ],
      "properties" : {
        "sequence" : {
          "type" : "integer",
          "format" : "int32"
        },
        "noExport" : {
          "type" : "boolean"
        },
        "action" : {
          "type" : "string",
          "enum" : [ "PERMIT", "DENY" ]
        },
        "type" : {
          "type" : "string"
        },
        "internet" : {
          "type" : "boolean"
        },
        "noAdvertise" : {
          "type" : "boolean"
        },
        "communities" : {
          "type" : "string"
        }
      }
    },
    "ApplicationRisk" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "name" : {
          "type" : "string"
        },
        "overridable" : {
          "type" : "boolean"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "IFTDHAFailoverInterfacePolicyTrigger" : {
      "type" : "object",
      "required" : [ "interfaceHoldTime", "interfacePollTime", "interfacePollTimeUnit", "peerHoldTime", "peerHoldTimeUnit", "peerPollTime", "peerPollTimeUnit" ],
      "properties" : {
        "percentFailedInterfaceExceed" : {
          "type" : "integer",
          "format" : "int32"
        },
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "peerHoldTimeUnit" : {
          "type" : "string",
          "enum" : [ "SEC", "MSEC" ]
        },
        "description" : {
          "type" : "string"
        },
        "peerHoldTime" : {
          "type" : "integer",
          "format" : "int32"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "interfacePollTime" : {
          "type" : "integer",
          "format" : "int32"
        },
        "noOfFailedInterfaceLimit" : {
          "type" : "integer",
          "format" : "int32"
        },
        "peerPollTime" : {
          "type" : "integer",
          "format" : "int32"
        },
        "interfaceHoldTime" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "peerPollTimeUnit" : {
          "type" : "string",
          "enum" : [ "SEC", "MSEC" ]
        },
        "interfacePollTimeUnit" : {
          "type" : "string",
          "enum" : [ "SEC", "MSEC" ]
        }
      }
    },
    "PrefilterDefaultActionListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PrefilterDefaultAction"
          }
        }
      }
    },
    "ISecurityZoneContainer" : {
      "type" : "object",
      "properties" : {
        "objects" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ISecurityZoneObjectModel"
          }
        }
      }
    },
    "FTDBaseInterface" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "description" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "enabled" : {
          "type" : "boolean"
        },
        "MTU" : {
          "type" : "integer",
          "format" : "int32"
        },
        "mode" : {
          "type" : "string",
          "enum" : [ "INLINE", "PASSIVE", "TAP", "ERSPAN", "NONE", "SWITCHPORT" ]
        },
        "fmcAccessConfig" : {
          "$ref" : "#/definitions/IFMCAccessConfig"
        },
        "arpConfig" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IARPConfigContainer"
          }
        },
        "ipv4" : {
          "$ref" : "#/definitions/IIPv4Container"
        },
        "ifname" : {
          "type" : "string"
        },
        "ipv6" : {
          "$ref" : "#/definitions/IIPv6Container"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "enableSGTPropagate" : {
          "type" : "boolean"
        },
        "macLearn" : {
          "type" : "boolean"
        },
        "managementOnly" : {
          "type" : "boolean"
        },
        "enableAntiSpoofing" : {
          "type" : "boolean"
        },
        "securityZone" : {
          "$ref" : "#/definitions/ISecurityZoneObjectModel"
        },
        "activeMACAddress" : {
          "type" : "string"
        },
        "fragmentReassembly" : {
          "type" : "boolean"
        },
        "macTable" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "standbyMACAddress" : {
          "type" : "string"
        },
        "enableDNSLookup" : {
          "type" : "boolean"
        },
        "overrideDefaultFragmentSetting" : {
          "$ref" : "#/definitions/IOverrideDefaultFragmentSetting"
        },
        "version" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        }
      }
    },
    "IPolicyObjectModel" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/Metadata"
        },
        "overridable" : {
          "type" : "boolean"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/Links"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "IDependentPolicy" : {
      "type" : "object",
      "properties" : {
        "dependentTypeList" : {
          "type" : "array",
          "description" : "List of out-of-date policies which are inter-dependent.",
          "items" : {
            "type" : "string"
          }
        },
        "dependencyReason" : {
          "type" : "string",
          "description" : "Describes the reason for the inter-dependency between the out-of-date policies."
        }
      },
      "description" : "Represents the inter-dependent out-of-date policies with the reason."
    },
    "FTDClusterDeviceContainer" : {
      "type" : "object",
      "required" : [ "masterDevice", "slaveDevices" ],
      "properties" : {
        "masterDevice" : {
          "description" : "Current master device ID",
          "$ref" : "#/definitions/IDevice"
        },
        "metadata" : {
          "description" : "Object representing metadata properties of response object.",
          "$ref" : "#/definitions/IMetadata"
        },
        "modelId" : {
          "type" : "string",
          "description" : "Model ID"
        },
        "advanced" : {
          "description" : "Object representing Device Advanced Configuration.",
          "$ref" : "#/definitions/IAdvanced"
        },
        "description" : {
          "type" : "string",
          "description" : "User provided resource description."
        },
        "slaveDevices" : {
          "type" : "array",
          "description" : "List of slave devices",
          "items" : {
            "$ref" : "#/definitions/IDevice"
          }
        },
        "modelType" : {
          "type" : "string",
          "description" : "Model type of the registered device cluster."
        },
        "type" : {
          "type" : "string",
          "description" : "Type associated with resource: DeviceCluster"
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        },
        "sw_version" : {
          "type" : "string",
          "description" : "FTD Cluster version"
        },
        "healthStatus" : {
          "type" : "string",
          "description" : "Current health status of the device, for e.g. green"
        },
        "healthPolicy" : {
          "description" : "Object representing the system health policy applied to the registered device cluster.",
          "$ref" : "#/definitions/IHealthPolicy"
        },
        "name" : {
          "type" : "string",
          "description" : "FTD Cluster name."
        },
        "links" : {
          "description" : "Object containing related links.",
          "$ref" : "#/definitions/ILinks"
        },
        "model" : {
          "type" : "string",
          "description" : "Cisco device model name, for e.g. Cisco Firepower 9000 Series SM-24 Threat Defense"
        },
        "modelNumber" : {
          "type" : "string",
          "description" : "Model number of the registered device."
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of response object."
        },
        "accessPolicy" : {
          "description" : "Object representing the currently assigned access control policy.",
          "$ref" : "#/definitions/IPolicyModel"
        }
      },
      "description" : "A model representing FTD Cluster Container"
    },
    "Snort3NetworkAnalysisPolicy" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata properties of Network Analysis Policy.",
          "$ref" : "#/definitions/IIntrusionPolicyMetadata"
        },
        "description" : {
          "type" : "string",
          "description" : "Description of the Network Analysis Policy"
        },
        "inspectorConfig" : {
          "description" : "Object representing inspector settings for Network Analysis Policy.",
          "$ref" : "#/definitions/IReference"
        },
        "type" : {
          "type" : "string",
          "description" : "Type must be NetworkAnalysisPolicy."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        },
        "snortEngine" : {
          "type" : "string",
          "description" : "Indicates the Snort engine version.",
          "enum" : [ "SNORT2", "SNORT3" ]
        },
        "inspectionMode" : {
          "type" : "string",
          "description" : "Indicates the inspection mode. Can be either DETECTION or PREVENTION. Only applicable for Snort 3 engine.",
          "enum" : [ "PREVENTION", "DETECTION" ]
        },
        "isSystemDefined" : {
          "type" : "boolean",
          "description" : "Specifies if the policy is system defined."
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the Network Analysis Policy"
        },
        "basePolicy" : {
          "description" : "Object representing the base policy of the Network Analysis Policy.",
          "$ref" : "#/definitions/IReference"
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of the Network Analysis Policy."
        },
        "inspectorOverrideConfig" : {
          "description" : "Object representing modified inspector settings for Network Analysis Policy.",
          "$ref" : "#/definitions/IReference"
        }
      },
      "description" : "An object that represents the details for Network Analysis Policy."
    },
    "IPv4StaticRouteModelListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IPv4StaticRouteModel"
          }
        }
      }
    },
    "IPv4AddressPoolOverride" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata properties of response object.",
          "$ref" : "#/definitions/Metadata"
        },
        "overridable" : {
          "type" : "boolean",
          "description" : "Always returns false of overrides."
        },
        "name" : {
          "type" : "string",
          "description" : "User chosen resource name."
        },
        "description" : {
          "type" : "string",
          "description" : "User provided description."
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/Links"
        },
        "overrides" : {
          "description" : "An object override allows you to define an alternate value for an object.",
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier representing resource."
        },
        "type" : {
          "type" : "string",
          "description" : "Type associated with resource."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        }
      },
      "description" : "A model representing IPv4AddressPoolOverride definition."
    },
    "Ospfv3PolicyModel" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/Metadata"
        },
        "processId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "processConfiguration" : {
          "$ref" : "#/definitions/IOspfv3ProcessModel"
        },
        "name" : {
          "type" : "string"
        },
        "summaryPrefix" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IOspfv3SummaryPrefix"
          }
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "areas" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IOspfv3Area"
          }
        },
        "redistributeProtocols" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IRedistributeProtocolBase"
          }
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "AccessPolicyInheritanceSetting" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata attributes for the access policy inheritance settings.",
          "$ref" : "#/definitions/Metadata"
        },
        "name" : {
          "type" : "string",
          "description" : "User-specified name of the access policy inheritance setting."
        },
        "basePolicy" : {
          "description" : "Object specifying the base access policy for inheritance setting",
          "$ref" : "#/definitions/IReference"
        },
        "description" : {
          "type" : "string",
          "description" : "Description of Access Policy Inheritance settings"
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier (UUID) representing the access policy inheritance setting."
        },
        "type" : {
          "type" : "string",
          "description" : "Type of the access control policy inheritance setting; this value is always AccessPolicyInheritanceSetting."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        }
      },
      "description" : "Description of Access Policy Inheritence Setting."
    },
    "IFileWrapper" : {
      "type" : "object",
      "properties" : {
        "path" : {
          "type" : "string"
        },
        "attrib" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "IVLanTagsContainer" : {
      "type" : "object",
      "properties" : {
        "objects" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IVlanBase"
          }
        },
        "literals" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IVlanTagLiteral"
          }
        }
      }
    },
    "BlockDNSRule" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/Metadata"
        },
        "dnsFeeds" : {
          "description" : "List of DNS Feed objects",
          "$ref" : "#/definitions/IReferenceContainer"
        },
        "sourceZones" : {
          "description" : "Contains a list or Security Zone objects referenced by the rule",
          "$ref" : "#/definitions/IReferenceContainer"
        },
        "description" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "description" : "Type of the DNS Policy Rule; this value is always BlockDNSRule."
        },
        "sinkhole" : {
          "description" : "If the action of the rule is SINKHOLE, then this attribute contains the sinkhole object referenced",
          "$ref" : "#/definitions/IReference"
        },
        "dnsLists" : {
          "description" : "List of DNS List objects",
          "$ref" : "#/definitions/IReferenceContainer"
        },
        "networks" : {
          "description" : "Contains network objects referenced by the rule. It is split in 2 separate lists: objects and literals",
          "$ref" : "#/definitions/IReferenceContainer"
        },
        "version" : {
          "type" : "string"
        },
        "enabled" : {
          "type" : "boolean",
          "description" : "Boolean property indicating if the rule is enabled"
        },
        "systemDefault" : {
          "type" : "boolean",
          "description" : "Boolean property indicating if the current rule is a system defined one"
        },
        "name" : {
          "type" : "string",
          "description" : "User-specified name of the DNS policy Rule."
        },
        "action" : {
          "type" : "string",
          "description" : "The type of the rule. Possible values are: ALLOW, BLOCK, MONITOR, SINKHOLE, NXDOMAIN",
          "enum" : [ "ALLOW", "MONITOR", "SINKHOLE", "BLOCK", "NXDOMAIN" ]
        },
        "vlanTags" : {
          "description" : "Contains VLAN tag objects referenced by the rule. It is split in 2 separate lists: objects and literals",
          "$ref" : "#/definitions/IReferenceContainer"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier (UUID) representing the DNS policy Rule."
        }
      },
      "description" : "Description of DNS Policy Rule."
    },
    "IMaximumPaths" : {
      "type" : "object",
      "properties" : {
        "ibgp" : {
          "type" : "boolean"
        },
        "name" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "value" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "InlineSet" : {
      "type" : "object",
      "properties" : {
        "macFiltering" : {
          "type" : "boolean"
        },
        "loadBalancingModeVlan" : {
          "type" : "string"
        },
        "tapMode" : {
          "type" : "boolean"
        },
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "standBy" : {
          "type" : "boolean"
        },
        "failOpenSnortBusy" : {
          "type" : "boolean"
        },
        "description" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "strictTCPEnforcement" : {
          "type" : "boolean"
        },
        "failopen" : {
          "type" : "boolean"
        },
        "mtu" : {
          "type" : "integer",
          "format" : "int32"
        },
        "bypass" : {
          "type" : "boolean"
        },
        "failSafe" : {
          "type" : "boolean"
        },
        "loadBalancingMode" : {
          "type" : "string"
        },
        "failOpenSnortDown" : {
          "type" : "boolean"
        },
        "inlinepairs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IInlinePair"
          }
        },
        "name" : {
          "type" : "string"
        },
        "propogateLinkState" : {
          "type" : "boolean"
        },
        "links" : {
          "$ref" : "#/definitions/Links"
        },
        "id" : {
          "type" : "string"
        }
      }
    },
    "VrfIPv6StaticRouteModel" : {
      "type" : "object",
      "required" : [ "gateway", "interfaceName", "metricValue", "selectedNetworks" ],
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/Metadata"
        },
        "selectedNetworks" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/INetworkAddress"
          }
        },
        "metricValue" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "isTunneled" : {
          "type" : "boolean"
        },
        "interfaceName" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "gateway" : {
          "$ref" : "#/definitions/IHostObjectContainer"
        }
      }
    },
    "IKeyObject" : {
      "type" : "object",
      "properties" : {
        "acceptLifeTime" : {
          "$ref" : "#/definitions/ILifeTime"
        },
        "authAlgorithm" : {
          "type" : "string"
        },
        "keyId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "authString" : {
          "$ref" : "#/definitions/IAuthTypeAndString"
        },
        "sendLifeTime" : {
          "$ref" : "#/definitions/ILifeTime"
        }
      }
    },
    "RouteMapListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RouteMap"
          }
        }
      }
    },
    "EndPointDeviceType" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "name" : {
          "type" : "string"
        },
        "overridable" : {
          "type" : "boolean"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "iseId" : {
          "type" : "string"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "type" : {
          "type" : "string"
        },
        "fqName" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "EndPointDeviceTypeListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/EndPointDeviceType"
          }
        }
      }
    },
    "GlobalSearchListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/GlobalSearch"
          }
        }
      }
    },
    "INeighborTransportPathMTUDiscovery" : {
      "type" : "object",
      "properties" : {
        "disable" : {
          "type" : "boolean"
        },
        "name" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "FTDRAVpnConnectionProfileModel" : {
      "type" : "object",
      "required" : [ "authenticationMethod", "groupPolicy" ],
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata properties of response object.",
          "$ref" : "#/definitions/Metadata"
        },
        "enableSecondaryAuthentication" : {
          "type" : "boolean"
        },
        "description" : {
          "type" : "string",
          "description" : "User provided resource description. "
        },
        "groupPolicy" : {
          "description" : "Default group policy for the connection profile.",
          "$ref" : "#/definitions/IReference"
        },
        "type" : {
          "type" : "string",
          "description" : "Type associated with resource: RaVpnConnectionProfile."
        },
        "secondaryAuthenticationSettings" : {
          "$ref" : "#/definitions/ISecondaryAuthenticationSettings"
        },
        "enablePrimaryAuthFallbackToLocal" : {
          "type" : "boolean"
        },
        "secondaryAuthenticationServer" : {
          "$ref" : "#/definitions/IReference"
        },
        "useLocalAsSecondaryAuthServer" : {
          "type" : "boolean"
        },
        "stripRealmFromUsername" : {
          "type" : "boolean",
          "description" : "If set to true, removes the realm from the username before passing the username on to the AAA server. Default is False"
        },
        "groupAlias" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IConnectionProfileGroupAlias"
          }
        },
        "primaryAuthenticationServer" : {
          "$ref" : "#/definitions/IReference"
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/ILinks"
        },
        "ipv4AddressPool" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IReference"
          }
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier representing this resource."
        },
        "groupUrl" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IConnectionProfileGroupUrl"
          }
        },
        "passwordExpirationNotificationPeriod" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of days to notify password expiry. Range is 0-180 days. Default is 14 days."
        },
        "allowConnectionOnlyIfAuthorized" : {
          "type" : "boolean",
          "description" : "Allow VPN Session only if the user is authorized. Default is False"
        },
        "authorizationServer" : {
          "$ref" : "#/definitions/IReference"
        },
        "enableMultipleCertificateAuthentication" : {
          "type" : "boolean",
          "description" : "Enable multiple certificate authentication."
        },
        "notifyUserOnPasswordExpiryDay" : {
          "type" : "boolean",
          "description" : "Notify ahead of the password expiry or on the day the password expires. Default is False."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        },
        "stripGroupFromUsername" : {
          "type" : "boolean",
          "description" : "If set to true, removes the group name from the username before passing the username on to the AAA server. Default is False"
        },
        "dhcpServersForAddressAssignment" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IReference"
          }
        },
        "enableSecondaryAuthFallbackToLocal" : {
          "type" : "boolean"
        },
        "useLocalAsPrimaryAuthServer" : {
          "type" : "boolean"
        },
        "enablePasswordManagement" : {
          "type" : "boolean",
          "description" : "Allows the user to change the password, if the password is expired. Default is False"
        },
        "accountingServer" : {
          "$ref" : "#/definitions/IReference"
        },
        "authenticationMethod" : {
          "type" : "string",
          "description" : "Method of authentication.",
          "enum" : [ "AAA_ONLY", "SAML", "CLIENT_CERTIFICATE_ONLY", "AAA_AND_CLIENT_CERTIFICATE" ]
        },
        "certificateUsernameSettings" : {
          "$ref" : "#/definitions/IConnProfileCertificateUsernameSettings"
        },
        "name" : {
          "type" : "string",
          "description" : "User assigned resource name."
        },
        "ipv6AddressPool" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IReference"
          }
        }
      },
      "description" : "A model representing Connection Profile definition."
    },
    "CommandsListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Commands"
          }
        }
      }
    },
    "DeploymentDetailListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DeploymentDetail"
          }
        }
      }
    },
    "Metadata" : {
      "type" : "object",
      "properties" : {
        "lastUser" : {
          "description" : "The last user who modified this instance.",
          "$ref" : "#/definitions/MetadataUser"
        },
        "domain" : {
          "description" : "Defines the domains this instance belongs to (if applicable).",
          "$ref" : "#/definitions/Domain"
        },
        "readOnly" : {
          "description" : "Details regarding the read only status of this instance",
          "$ref" : "#/definitions/ReadOnly"
        },
        "timestamp" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The last updated timestamp."
        }
      },
      "description" : "Defines read only details about the object - whether it is system defined, last user who modified the object etc."
    },
    "ISLAMonitorModel" : {
      "type" : "object",
      "required" : [ "interfaceObjects", "monitorAddress", "slaId" ],
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "noOfPackets" : {
          "type" : "integer",
          "format" : "int32"
        },
        "slaId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "dataSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "description" : {
          "type" : "string"
        },
        "threshold" : {
          "type" : "integer",
          "format" : "int32"
        },
        "interfaceNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "timeout" : {
          "type" : "integer",
          "format" : "int32"
        },
        "interfaceObjects" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IInterfaceObjectModel"
          }
        },
        "frequency" : {
          "type" : "integer",
          "format" : "int32"
        },
        "monitorAddress" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "tos" : {
          "type" : "integer",
          "format" : "int32"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        }
      }
    },
    "VrfIPv4StaticRouteModelListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/VrfIPv4StaticRouteModel"
          }
        }
      }
    },
    "RadiusServerGroupModel" : {
      "type" : "object",
      "required" : [ "radiusServers", "retryInterval" ],
      "properties" : {
        "dynamicAuthorizationPort" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "ASA will listen to the port for the CoA policy updates from ISE. Default is 1700, the range is 1024 to 65535."
        },
        "metadata" : {
          "description" : "Object representing metadata attributes for the CertificateMap.",
          "$ref" : "#/definitions/Metadata"
        },
        "description" : {
          "type" : "string",
          "description" : "User provided resource description."
        },
        "type" : {
          "type" : "string",
          "description" : "Type associated with resource: RadiusServerGroup."
        },
        "enableInterimAccountUpdate" : {
          "type" : "boolean",
          "description" : "Enable the periodic generation of Radius interim-accounting-update messages"
        },
        "version" : {
          "type" : "string"
        },
        "enableAuthorizeOnly" : {
          "type" : "boolean",
          "description" : "ISE server is used only for authorization when certificate authentication is enabled"
        },
        "enableDynamicAuthorization" : {
          "type" : "boolean",
          "description" : "Enable the Radius Dynamic Authorization (ISE Change of Authorization, CoA) services for the AAA server group"
        },
        "groupAccountingMode" : {
          "type" : "string",
          "description" : "Indicates whether accounting messages are sent to a single server (single mode) or sent to all servers in the group (simultaneous mode)",
          "enum" : [ "SINGLE", "MULTIPLE" ]
        },
        "name" : {
          "type" : "string",
          "description" : "User provided resource name"
        },
        "radiusServers" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IRadiusServers"
          }
        },
        "links" : {
          "description" : "Object containing related links.",
          "$ref" : "#/definitions/Links"
        },
        "realm" : {
          "$ref" : "#/definitions/IReference"
        },
        "retryInterval" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Specifies the retry interval (1-10 seconds) for the request"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier representing the CertificateMap object."
        },
        "interimAccountUpdateInterval" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Interval at which the accounting records are transmitted for every VPN session to the server group. Default 24 hours, Range 1-120 hours"
        }
      },
      "description" : "Radius Server Group objects contain one or more references to Radius servers. These servers are used to authenticate users logging in through Remote Access VPN connections."
    },
    "VrfBGPIPvAddressFamilyModel" : {
      "type" : "object",
      "required" : [ "routerId" ],
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/Metadata"
        },
        "routerId" : {
          "type" : "string"
        },
        "asNumber" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "addressFamilyIPv4" : {
          "$ref" : "#/definitions/IBGPAddressFamilyModel"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "addressFamilyIPv6" : {
          "$ref" : "#/definitions/IBGPAddressFamilyModel"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "IIPv6Container" : {
      "type" : "object",
      "properties" : {
        "linkLocalAddress" : {
          "type" : "string"
        },
        "addresses" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IAddressContainer"
          }
        },
        "raInterval" : {
          "type" : "integer",
          "format" : "int32"
        },
        "enableAutoConfig" : {
          "type" : "boolean"
        },
        "nsInterval" : {
          "type" : "integer",
          "format" : "int32"
        },
        "prefixes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IPrefixContainer"
          }
        },
        "enforceEUI64" : {
          "type" : "boolean"
        },
        "enableRA" : {
          "type" : "boolean"
        },
        "dadAttempts" : {
          "type" : "integer",
          "format" : "int32"
        },
        "enableDHCPAddrConfig" : {
          "type" : "boolean"
        },
        "enableDHCPNonAddrConfig" : {
          "type" : "boolean"
        },
        "raLifeTime" : {
          "type" : "integer",
          "format" : "int32"
        },
        "enableIPV6" : {
          "type" : "boolean"
        },
        "reachableTime" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "FTDVlanInterfaceListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FTDVlanInterface"
          }
        }
      }
    },
    "AccessRuleMetadata" : {
      "type" : "object",
      "properties" : {
        "lastUser" : {
          "$ref" : "#/definitions/MetadataUser"
        },
        "ruleIndex" : {
          "type" : "integer",
          "format" : "int32"
        },
        "domain" : {
          "$ref" : "#/definitions/Domain"
        },
        "readOnly" : {
          "$ref" : "#/definitions/ReadOnly"
        },
        "section" : {
          "type" : "string"
        },
        "accessPolicy" : {
          "$ref" : "#/definitions/IReference"
        },
        "category" : {
          "type" : "string"
        },
        "timestamp" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "IRecurrence" : {
      "type" : "object",
      "required" : [ "dailyEndTime", "dailyStartTime", "days", "rangeEndDay", "rangeEndTime", "rangeStartDay", "rangeStartTime", "recurrenceType" ],
      "properties" : {
        "rangeStartTime" : {
          "type" : "string",
          "description" : "Represents the time (in ISO 8601 format) at which the time range starts being effective. This field must be used if recurrenceType is specified as RANGE."
        },
        "rangeEndDay" : {
          "type" : "string",
          "description" : "Represents the time (in ISO 8601 format) at which the time range stops being effective. This field must be used if recurrenceType is specified as RANGE.",
          "enum" : [ "MON", "TUE", "WED", "THU", "FRI", "SAT", "SUN" ]
        },
        "rangeEndTime" : {
          "type" : "string",
          "description" : "Represents the day of week at which the time range stops being effective. This field must be used if recurrenceType is specified as RANGE."
        },
        "rangeStartDay" : {
          "type" : "string",
          "description" : "Represents the day of week at which the time range starts being effective. This field must be used if recurrenceType is specified as RANGE.",
          "enum" : [ "MON", "TUE", "WED", "THU", "FRI", "SAT", "SUN" ]
        },
        "dailyStartTime" : {
          "type" : "string",
          "description" : "Represents the time (in ISO 8601 format) at which the time range starts being effective on selected days. This field must be used if recurrenceType is specified as DAILY_INTERVAL."
        },
        "days" : {
          "type" : "array",
          "description" : "Represents the days of week on which the time range is effective. This field must be used if recurrenceType is specified as DAILY_INTERVAL.",
          "items" : {
            "type" : "string",
            "enum" : [ "MON", "TUE", "WED", "THU", "FRI", "SAT", "SUN" ]
          }
        },
        "dailyEndTime" : {
          "type" : "string",
          "description" : "Represents the time (in ISO 8601 format) at which the time range stops being effective on selected days. This field must be used if recurrenceType is specified as DAILY_INTERVAL."
        },
        "recurrenceType" : {
          "type" : "string",
          "description" : "Type of the recurrence interval. This value can be either DAILY_INTERVAL or RANGE.",
          "enum" : [ "DAILY_INTERVAL", "RANGE" ]
        }
      },
      "description" : "Object fragment that represents a recurrence interval. A recurrence interval specifies a duration that repeats on a weekly basis, during which the time range is effective. If recurrence interval is of type RANGE, the fragment represents a continuous duration of time that repeats every week. If recurrence interval is of type DAILY_INTERVAL, the fragment represents a period of time that repeats on selected days of week."
    },
    "IBGPGSTimers" : {
      "type" : "object",
      "properties" : {
        "keepAlive" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "minHoldTime" : {
          "type" : "integer",
          "format" : "int32"
        },
        "holdTime" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "DNSPolicyListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DNSPolicy"
          }
        }
      }
    },
    "IGroupPolicySessionSettingsModel" : {
      "type" : "object",
      "properties" : {
        "simultaneousLoginPerUser" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Optional. Specifies the number of simultaneous logins allowed for any user. The default value is 3. The range is 0-2147483647"
        },
        "maxConnectionTimeout" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Optional. Specifies a maximum amount of time for VPN connections. Range is 1-35791394 minutes. The default value for this attribute is null and its behaviour is unlimited time allowed per connection."
        },
        "vpnIdleTimeoutAlertInterval" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Optional. Specifies the time at which an idle timeout alert message is displayed to the user. This alert message tells users how many minutes they have left until their VPN session will be disconnected due to inactivity. The default alert interval is one minute. The range is from 1 - 30 minutes."
        },
        "accessHours" : {
          "description" : "Optional. Specifies the range of time this group policy is available to be applied to a remote access user",
          "$ref" : "#/definitions/IReference"
        },
        "vpnIdleTimeout" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Optional. Specifies a VPN idle timeout period. If there is no communication activity on the connection in this period, the ASA terminates the connection. The minimum time is 1 minute, the maximum time is 35791394 minutes, and the default is 30 minutes."
        },
        "maxConnectionTimeAlertInterval" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Optional. Specifies the time at which a session timeout alert message is displayed to the user. The default alert interval is one minute. The range is from 1 - 30 minutes."
        }
      },
      "description" : "Model representing the Configurations for AnyConnect Client Sessions."
    },
    "IApplicationsContainer" : {
      "type" : "object",
      "properties" : {
        "inlineApplicationFilters" : {
          "type" : "array",
          "description" : "List of objects representing application filters.",
          "items" : {
            "$ref" : "#/definitions/IAppCondition"
          }
        },
        "applicationFilters" : {
          "type" : "array",
          "description" : "List of objects representing pre-defined application filters.",
          "items" : {
            "$ref" : "#/definitions/IApplicationFilter"
          }
        },
        "applications" : {
          "type" : "array",
          "description" : "List of objects representing applications.",
          "items" : {
            "$ref" : "#/definitions/IApplicationModel"
          }
        }
      },
      "description" : "Represents an ApplicationsContainer containing application filters and applications."
    },
    "IOspfAdministrativeDistance" : {
      "type" : "object",
      "properties" : {
        "external" : {
          "type" : "integer",
          "format" : "int32"
        },
        "interArea" : {
          "type" : "integer",
          "format" : "int32"
        },
        "intraArea" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "NetworkGroup" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata properties of response object.",
          "$ref" : "#/definitions/Metadata"
        },
        "objects" : {
          "type" : "array",
          "description" : "The list of member network objects",
          "items" : {
            "$ref" : "#/definitions/INetworkAddress"
          }
        },
        "literals" : {
          "type" : "array",
          "description" : "List of network values in group.",
          "items" : {
            "$ref" : "#/definitions/INetworkAddressLiteral"
          }
        },
        "overridable" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether object values can be overridden."
        },
        "name" : {
          "type" : "string",
          "description" : "User chosen resource name."
        },
        "description" : {
          "type" : "string",
          "description" : "User provided resource description. "
        },
        "links" : {
          "description" : "Object containing related links.",
          "$ref" : "#/definitions/Links"
        },
        "overrides" : {
          "description" : "An object override allows you to define an alternate value for an object.",
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of response object."
        },
        "type" : {
          "type" : "string",
          "description" : "Type associated with resource: NetworkGroup."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        },
        "overrideTargetId" : {
          "type" : "string",
          "description" : "Unique identifier of domain or device when override assigned to child domain. Used as path parameter to GET override details for a specific object on a specific target (device or domain)."
        }
      },
      "description" : "A model representing Network group definition."
    },
    "RouteMap" : {
      "type" : "object",
      "required" : [ "entries", "name" ],
      "properties" : {
        "metadata" : {
          "description" : "Metadata associated with this object.",
          "$ref" : "#/definitions/Metadata"
        },
        "entries" : {
          "type" : "array",
          "description" : "The list of Route Map entries associated with this object.",
          "items" : {
            "$ref" : "#/definitions/IRouteMapEntry"
          }
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the Route Map"
        },
        "overridable" : {
          "type" : "boolean",
          "description" : "If set to true, this object can be overriden."
        },
        "description" : {
          "type" : "string",
          "description" : "The route map object."
        },
        "links" : {
          "$ref" : "#/definitions/Links"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier"
        },
        "type" : {
          "type" : "string",
          "description" : "RouteMap - type of this object"
        },
        "version" : {
          "type" : "string"
        }
      },
      "description" : "The route map object."
    },
    "HitCountMetadata" : {
      "type" : "object",
      "properties" : {
        "lastUser" : {
          "$ref" : "#/definitions/MetadataUser"
        },
        "task" : {
          "description" : "Object representing the task status of the hit count operation.",
          "$ref" : "#/definitions/ITaskStatus"
        },
        "ruleIndex" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Index number of the rule in the access control or prefilter policy list, against which the hit count information is retrieved."
        },
        "domain" : {
          "description" : "Object representing the domain under which the operation has been performed.",
          "$ref" : "#/definitions/Domain"
        },
        "deviceRuleId" : {
          "type" : "string",
          "description" : "ID of the rule on the target device console."
        },
        "timestamp" : {
          "type" : "integer",
          "format" : "int32"
        },
        "policy" : {
          "description" : "Object representing the access control or prefilter policy containing the rule.",
          "$ref" : "#/definitions/IPolicyModel"
        }
      }
    },
    "SIURLFeed" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/SIFeedMetadata"
        },
        "feedURL" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "overridable" : {
          "type" : "boolean"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "checksumURL" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "type" : {
          "type" : "string"
        },
        "updateFrequency" : {
          "type" : "integer",
          "format" : "int32"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "PreferLifeTime" : {
      "type" : "object",
      "properties" : {
        "duration" : {
          "$ref" : "#/definitions/Duration"
        },
        "expirationLifeTime" : {
          "$ref" : "#/definitions/ExpirationLifeTime"
        }
      }
    },
    "LLParams" : {
      "type" : "object",
      "additionalProperties" : {
        "type" : "string"
      }
    },
    "RESTTidSourceListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RESTTidSource"
          }
        }
      }
    },
    "IFTDHAIPv6ActiveStandbyPair" : {
      "type" : "object",
      "properties" : {
        "activeIPv6" : {
          "type" : "string"
        },
        "standbyIPv6" : {
          "type" : "string"
        }
      }
    },
    "ISwitchPortConfig" : {
      "type" : "object",
      "properties" : {
        "portMode" : {
          "type" : "string",
          "enum" : [ "ACCESS", "TRUNK" ]
        },
        "protectedEnabled" : {
          "type" : "boolean"
        },
        "trunkModeAllowedVlanIds" : {
          "type" : "string"
        },
        "accessModeVlanId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "trunkModeNativeVlanId" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "IHostObjectContainer" : {
      "type" : "object",
      "properties" : {
        "object" : {
          "$ref" : "#/definitions/IHost"
        },
        "literal" : {
          "$ref" : "#/definitions/INetworkAddressLiteral"
        }
      }
    },
    "IOspfv3NsfGracefulRestart" : {
      "type" : "object",
      "properties" : {
        "gracefulRestart" : {
          "$ref" : "#/definitions/IOspfv3GracefulRestart"
        },
        "gracefulRestartHelper" : {
          "$ref" : "#/definitions/IOspfv3GracefulRestartHelper"
        }
      }
    },
    "SINetworkList" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/SIListMetadata"
        },
        "fileName" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "overridable" : {
          "type" : "boolean"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "StandardACL" : {
      "type" : "object",
      "required" : [ "entries", "name" ],
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/Metadata"
        },
        "entries" : {
          "type" : "array",
          "description" : "Standard Access List Entries",
          "items" : {
            "$ref" : "#/definitions/IStandardACLEntry"
          }
        },
        "name" : {
          "type" : "string"
        },
        "overridable" : {
          "type" : "boolean"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/Links"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      },
      "description" : "Standard Access List"
    },
    "IOspfAreaAuth" : {
      "type" : "object",
      "properties" : {
        "passwdAuth" : {
          "$ref" : "#/definitions/IOspfPasswdAuth"
        },
        "md5AuthList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IOspfMD5Auth"
          }
        },
        "authType" : {
          "type" : "string"
        }
      }
    },
    "SIDNSList" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/SIListMetadata"
        },
        "fileName" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the Security Intelligence DNS List object."
        },
        "overridable" : {
          "type" : "boolean"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier representing Security Intelligence DNS list."
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "type" : {
          "type" : "string",
          "description" : "Type must be SIDNSList."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        }
      },
      "description" : "Object representing a static list of DNS servers uploaded by the user"
    },
    "IAccessPolicyModel" : {
      "type" : "object",
      "required" : [ "defaultAction" ],
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "defaultAction" : {
          "$ref" : "#/definitions/IAccessPolicyDefaultAction"
        },
        "name" : {
          "type" : "string"
        },
        "identityPolicySetting" : {
          "$ref" : "#/definitions/IACPolicyIdentityPolicySettings"
        },
        "description" : {
          "type" : "string"
        },
        "rules" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IReference"
          }
        },
        "securityIntelligence" : {
          "$ref" : "#/definitions/IReference"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "prefilterPolicySetting" : {
          "$ref" : "#/definitions/IAccessPolicyPrefilterPolicySettingModel"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "GlobalPolicySearch" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata properties of response object.",
          "$ref" : "#/definitions/IMetadata"
        },
        "searchCriteria" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string",
          "description" : "User chosen resource name."
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "description" : "Object containing related links.",
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of resource."
        },
        "type" : {
          "type" : "string",
          "description" : "Type of resource."
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ISearchResult"
          }
        },
        "version" : {
          "type" : "string"
        }
      },
      "description" : "A model representing global policy search response."
    },
    "IProtocolPortObject" : {
      "type" : "object",
      "properties" : {
        "protocol" : {
          "type" : "string"
        },
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "port" : {
          "type" : "string"
        },
        "overridable" : {
          "type" : "boolean"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "StaticRouteModelListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/StaticRouteModel"
          }
        }
      }
    },
    "IdentityPolicy" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata properties of response object.",
          "$ref" : "#/definitions/Metadata"
        },
        "name" : {
          "type" : "string",
          "description" : "User chosen resource name."
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier representing resource."
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string",
          "description" : "Version of the Object."
        }
      },
      "description" : "Contains information about the Identity Policy used by the Firepower Threat Defense device."
    },
    "IVpnIkev2Settings" : {
      "type" : "object",
      "properties" : {
        "automaticPreSharedKeyLength" : {
          "type" : "integer",
          "format" : "int32"
        },
        "certificateAuth" : {
          "description" : "Signing authority used for the VPN certificate.",
          "$ref" : "#/definitions/IReference"
        },
        "enforceHexBasedPreSharedKeyOnly" : {
          "type" : "boolean"
        },
        "authenticationType" : {
          "type" : "string",
          "description" : "Type of authentication used for the VPN.",
          "enum" : [ "MANUAL_PRE_SHARED_KEY", "AUTOMATIC_PRE_SHARED_KEY", "CERTIFICATE" ]
        },
        "manualPreSharedKey" : {
          "type" : "string",
          "description" : "Contains the manual pre-shared key for the VPN, if any."
        },
        "policy" : {
          "description" : "VPN policy.",
          "$ref" : "#/definitions/IReference"
        }
      },
      "description" : "Contains information about Internet Key Exchange version 2 settings for VPNs."
    },
    "IOspfProcessModel" : {
      "type" : "object",
      "properties" : {
        "ignoreLsaMospf" : {
          "type" : "boolean"
        },
        "timers" : {
          "$ref" : "#/definitions/IOspfTimers"
        },
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "description" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "nsfGracefulRestart" : {
          "$ref" : "#/definitions/IOspfNsfGracefulRestart"
        },
        "defaultInformationOriginate" : {
          "$ref" : "#/definitions/IOspfDefaultInfoOriginate"
        },
        "routerId" : {
          "type" : "string"
        },
        "rfc1583Compatible" : {
          "type" : "boolean"
        },
        "name" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "administrativeDistance" : {
          "$ref" : "#/definitions/IOspfAdministrativeDistance"
        }
      }
    },
    "FTDManualNatRuleListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FTDManualNatRule"
          }
        }
      }
    },
    "Snort3IPSRulesObject" : {
      "type" : "object",
      "properties" : {
        "msg" : {
          "type" : "string",
          "description" : "User provided rule description."
        },
        "metadata" : {
          "description" : "Object representing metadata attributes for the intrusion rule.",
          "$ref" : "#/definitions/Metadata"
        },
        "ruleGroups" : {
          "type" : "array",
          "description" : "Object containing a list of rules groups associated with the rule.",
          "items" : {
            "$ref" : "#/definitions/IReference"
          }
        },
        "gid" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Generator Identifier used to identify the part of Snort which generates an event."
        },
        "overrideState" : {
          "type" : "string",
          "description" : "User override state of the rule. One of: DROP | BLOCK | ALERT | DISABLE | DEFAULT",
          "enum" : [ "DROP", "BLOCK", "ALERT", "DISABLE", "DEFAULT" ]
        },
        "defaultState" : {
          "type" : "string",
          "description" : "Default State of the rule. One of: DROP | BLOCK | ALERT | DISABLE | DEFAULT",
          "enum" : [ "DROP", "BLOCK", "ALERT", "DISABLE", "DEFAULT" ]
        },
        "description" : {
          "type" : "string",
          "description" : "User provided resource description."
        },
        "threshold" : {
          "description" : "Object containing threshold configuration for the rule.",
          "$ref" : "#/definitions/IIntrusionRuleThreshold"
        },
        "type" : {
          "type" : "string",
          "description" : "Type of the response object. This value is always IntrusionRule."
        },
        "version" : {
          "type" : "string"
        },
        "sid" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Snort Identifier used to uniquely identify Snort rules."
        },
        "revision" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ruleAction" : {
          "type" : "array",
          "description" : "Object containing list of rule actions specified for all intrusion policies.",
          "items" : {
            "$ref" : "#/definitions/IRuleAction"
          }
        },
        "isSystemDefined" : {
          "type" : "boolean",
          "description" : "Read-only field indicating if the rule is system-defined (i.e., Talos provided). If value is false, then rule is user-defined."
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the intrusion rule."
        },
        "suppression" : {
          "description" : "Object containing configuration which allows users to suppress events for a rule for specific trusted IP addresses.",
          "$ref" : "#/definitions/IIntrusionRuleSuppression"
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier (UUID) for the intrusion rule."
        },
        "ruleData" : {
          "type" : "string",
          "description" : "Details of the rule based on which rule created or updated."
        }
      },
      "description" : "Object representing a Snort 3 intrusion rule."
    },
    "IRealm" : {
      "type" : "object",
      "properties" : {
        "adPrimaryDomain" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "directoryConfigurations" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IDirectoryConfiguration"
          }
        },
        "type" : {
          "type" : "string"
        },
        "enabled" : {
          "type" : "boolean"
        },
        "adJoinPassword" : {
          "type" : "string"
        },
        "authSessionTimeout" : {
          "type" : "integer",
          "format" : "int32"
        },
        "groupDn" : {
          "type" : "string"
        },
        "realmType" : {
          "type" : "string",
          "enum" : [ "AD", "LDAP", "LOCAL", "DISCOVERED", "SPECIAL" ]
        },
        "includedGroups" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "dirPassword" : {
          "type" : "string"
        },
        "updateHour" : {
          "type" : "integer",
          "format" : "int32"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "groupAttribute" : {
          "type" : "string"
        },
        "excludedUsers" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "realmId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "failedAuthSessionTimeout" : {
          "type" : "integer",
          "format" : "int32"
        },
        "adJoinUsername" : {
          "type" : "string"
        },
        "guestSessionTimeout" : {
          "type" : "integer",
          "format" : "int32"
        },
        "version" : {
          "type" : "string"
        },
        "excludedGroups" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "dirUsername" : {
          "type" : "string"
        },
        "updateInterval" : {
          "type" : "integer",
          "format" : "int32"
        },
        "includedUsers" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "activeAuthSessionTimeout" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        },
        "baseDn" : {
          "type" : "string"
        },
        "tsAgentSessionTimeout" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "RangeOverride" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata properties of response object.",
          "$ref" : "#/definitions/Metadata"
        },
        "overridable" : {
          "type" : "boolean",
          "description" : "Always returns false for overrides."
        },
        "name" : {
          "type" : "string",
          "description" : "User chosen resource name."
        },
        "description" : {
          "type" : "string",
          "description" : "User provided description."
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/Links"
        },
        "overrides" : {
          "description" : "An object override allows you to define an alternate value for an object on a device or domain.",
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier representing resource."
        },
        "type" : {
          "type" : "string",
          "description" : "Type associated with resource."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        }
      },
      "description" : "A model representing range object override definition."
    },
    "ISelectedPoliciesforDevices" : {
      "type" : "object",
      "properties" : {
        "selectedPolicies" : {
          "type" : "array",
          "description" : "List of Policy Types which have to be selectively deployed. Note: mandatoryDeployablePolicies should not be included in this list.",
          "items" : {
            "type" : "string"
          }
        },
        "deviceUUID" : {
          "type" : "string",
          "description" : "Corresponding device UUID for which the selection is mentioned."
        }
      },
      "description" : "Represents the object which is responsible for enabling the Selective Policy Deployment"
    },
    "AccessRuleListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AccessRule"
          }
        }
      }
    },
    "IOspfAreaRanges" : {
      "type" : "object",
      "properties" : {
        "addressNetwork" : {
          "$ref" : "#/definitions/INetworkAddress"
        },
        "advertise" : {
          "type" : "boolean"
        }
      }
    },
    "IOspfv3GracefulRestart" : {
      "type" : "object",
      "properties" : {
        "gracefulRestartInterval" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "IAsPathListEntry" : {
      "type" : "object",
      "required" : [ "sequence" ],
      "properties" : {
        "sequence" : {
          "type" : "integer",
          "format" : "int32"
        },
        "regularExpression" : {
          "type" : "string"
        },
        "action" : {
          "type" : "string",
          "enum" : [ "PERMIT", "DENY" ]
        }
      }
    },
    "IFTDInterface" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "ITimeZoneDayRecurrenceFragment" : {
      "type" : "object",
      "properties" : {
        "startWeek" : {
          "type" : "string",
          "description" : "An ordinal number, from 1-52, representing the week on which daylight saving will start.",
          "enum" : [ "FIRST", "SECOND", "THIRD", "FOURTH", "LAST" ]
        },
        "startDayOfWeek" : {
          "type" : "string",
          "description" : "Day of the week on which the daylight saving will start.",
          "enum" : [ "MON", "TUE", "WED", "THU", "FRI", "SAT", "SUN" ]
        },
        "offset" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number (in minutes) representing the offset from specified time zone. Offset value must be between 1-1440."
        },
        "startMonth" : {
          "type" : "string",
          "description" : "Month of the year on which the daylight saving will start.",
          "enum" : [ "JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC" ]
        },
        "startTime" : {
          "type" : "string",
          "description" : "Time of the day (in 24-hour HH:mm format) at which the daylight saving will start."
        },
        "endTime" : {
          "type" : "string",
          "description" : "Time of the day (in 24-hour HH:mm format) at which the daylight saving will end."
        },
        "endWeek" : {
          "type" : "string",
          "description" : "An ordinal number, from 1-52, representing the week on which the daylight saving will end.",
          "enum" : [ "FIRST", "SECOND", "THIRD", "FOURTH", "LAST" ]
        },
        "endMonth" : {
          "type" : "string",
          "description" : "Month of the year on which the daylight saving will end.",
          "enum" : [ "JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC" ]
        },
        "endDayOfWeek" : {
          "type" : "string",
          "description" : "Day of the week on which the daylight saving will end.",
          "enum" : [ "MON", "TUE", "WED", "THU", "FRI", "SAT", "SUN" ]
        }
      },
      "description" : "Object fragment to configure the daylight saving by day recurrence."
    },
    "IOspfv3ProcessModel" : {
      "type" : "object",
      "properties" : {
        "ignoreLsaMospf" : {
          "type" : "boolean"
        },
        "timers" : {
          "$ref" : "#/definitions/IOspfv3Timers"
        },
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "logAdjacencyChanges" : {
          "$ref" : "#/definitions/IOspfv3LogAdjacencyChanges"
        },
        "description" : {
          "type" : "string"
        },
        "passiveInterfaces" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IFTDInterface"
          }
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "nsfGracefulRestart" : {
          "$ref" : "#/definitions/IOspfv3NsfGracefulRestart"
        },
        "defaultInformationOriginate" : {
          "$ref" : "#/definitions/IOspfv3DefaultInfoOriginate"
        },
        "routerId" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "administrativeDistance" : {
          "$ref" : "#/definitions/IOspfAdministrativeDistance"
        }
      }
    },
    "TimeZoneObjectOverrideListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TimeZoneObjectOverride"
          }
        }
      }
    },
    "INeighborRouteMap" : {
      "type" : "object",
      "properties" : {
        "routeMap" : {
          "$ref" : "#/definitions/IRouteMap"
        },
        "filterUpdateAction" : {
          "type" : "string",
          "enum" : [ "IN", "OUT" ]
        },
        "name" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "SLAMonitorObjectModelListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SLAMonitorObjectModel"
          }
        }
      }
    },
    "CancelUpgrade" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string",
          "description" : "Cancel a failed upgrade."
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique Task ID of this request."
        },
        "forceCancel" : {
          "type" : "boolean",
          "description" : "Set to True if cancelling an ongoing upgrade by force, False otherwise."
        },
        "type" : {
          "type" : "string",
          "description" : "CancelUpgrade"
        },
        "upgradeId" : {
          "type" : "string"
        },
        "targets" : {
          "type" : "array",
          "description" : "A list of FTD devices",
          "items" : {
            "$ref" : "#/definitions/ITarget"
          }
        },
        "version" : {
          "type" : "string"
        }
      },
      "description" : "This operation is to cancel a failed upgrade."
    },
    "DeploymentRequestMetadata" : {
      "type" : "object",
      "properties" : {
        "lastUser" : {
          "$ref" : "#/definitions/MetadataUser"
        },
        "task" : {
          "$ref" : "#/definitions/TaskStatus"
        },
        "domain" : {
          "$ref" : "#/definitions/Domain"
        },
        "readOnly" : {
          "$ref" : "#/definitions/ReadOnly"
        },
        "timestamp" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "IIpvPrefixListFilter" : {
      "type" : "object",
      "properties" : {
        "ipv6PrefixList" : {
          "$ref" : "#/definitions/IReference"
        },
        "filterUpdateAction" : {
          "type" : "string",
          "enum" : [ "IN", "OUT" ]
        },
        "name" : {
          "type" : "string"
        },
        "ipv4PrefixList" : {
          "$ref" : "#/definitions/IReference"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "AuditModelListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AuditModel"
          }
        }
      }
    },
    "AuditModel" : {
      "type" : "object",
      "properties" : {
        "auditId" : {
          "type" : "string"
        },
        "metadata" : {
          "$ref" : "#/definitions/Metadata"
        },
        "snapshotId" : {
          "type" : "string"
        },
        "subSystem" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "source" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "message" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "domain" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "startTime" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "endTime" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "time" : {
          "type" : "integer",
          "format" : "int32"
        },
        "username" : {
          "type" : "string"
        }
      }
    },
    "FTDPhysicalInterface" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "description" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "enabled" : {
          "type" : "boolean"
        },
        "MTU" : {
          "type" : "integer",
          "format" : "int32"
        },
        "mode" : {
          "type" : "string",
          "enum" : [ "INLINE", "PASSIVE", "TAP", "ERSPAN", "NONE", "SWITCHPORT" ]
        },
        "fmcAccessConfig" : {
          "$ref" : "#/definitions/IFMCAccessConfig"
        },
        "arpConfig" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IARPConfigContainer"
          }
        },
        "ipv4" : {
          "$ref" : "#/definitions/IIPv4Container"
        },
        "ifname" : {
          "type" : "string"
        },
        "ipv6" : {
          "$ref" : "#/definitions/IIPv6Container"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "hardware" : {
          "$ref" : "#/definitions/IHardwareContainer"
        },
        "lacpMode" : {
          "type" : "string",
          "enum" : [ "ACTIVE", "PASSIVE", "ON" ]
        },
        "enableSGTPropagate" : {
          "type" : "boolean"
        },
        "macLearn" : {
          "type" : "boolean"
        },
        "managementOnly" : {
          "type" : "boolean"
        },
        "channelGroupId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "enableAntiSpoofing" : {
          "type" : "boolean"
        },
        "switchPortConfig" : {
          "$ref" : "#/definitions/ISwitchPortConfig"
        },
        "securityZone" : {
          "$ref" : "#/definitions/ISecurityZoneObjectModel"
        },
        "isRedundantMember" : {
          "type" : "boolean"
        },
        "activeMACAddress" : {
          "type" : "string"
        },
        "fragmentReassembly" : {
          "type" : "boolean"
        },
        "macTable" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "standbyMACAddress" : {
          "type" : "string"
        },
        "powerOverEthernet" : {
          "$ref" : "#/definitions/IPoeConfig"
        },
        "enableDNSLookup" : {
          "type" : "boolean"
        },
        "overrideDefaultFragmentSetting" : {
          "$ref" : "#/definitions/IOverrideDefaultFragmentSetting"
        },
        "version" : {
          "type" : "string"
        },
        "erspanFlowId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        },
        "erspanSourceIP" : {
          "type" : "string"
        }
      }
    },
    "BlockDNSRuleListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BlockDNSRule"
          }
        }
      }
    },
    "ReadOnly" : {
      "type" : "object",
      "properties" : {
        "reason" : {
          "type" : "string",
          "description" : "Reason the resource is read only - SYSTEM (if it is system defined), RBAC (if user RBAC permissions make it read only) or DOMAIN (if resource is read only in current domain).",
          "enum" : [ "RBAC", "SYSTEM", "DOMAIN" ]
        },
        "state" : {
          "type" : "boolean",
          "description" : "True if this resource us read only and false otherwise."
        }
      },
      "description" : "Defines the read only conditions if the referenced resource is read only."
    },
    "IPrefilterPolicyDefaultAction" : {
      "type" : "object",
      "properties" : {
        "logEnd" : {
          "type" : "boolean"
        },
        "logBegin" : {
          "type" : "boolean"
        },
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "snmpConfig" : {
          "$ref" : "#/definitions/IReference"
        },
        "sendEventsToFMC" : {
          "type" : "boolean"
        },
        "description" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "syslogConfig" : {
          "$ref" : "#/definitions/IReference"
        },
        "name" : {
          "type" : "string"
        },
        "action" : {
          "type" : "string",
          "enum" : [ "BLOCK_TUNNELS", "ANALYZE_TUNNELS" ]
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        }
      }
    },
    "AccessPolicyCategoryListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AccessPolicyCategory"
          }
        }
      }
    },
    "NetworkGroupOverrideListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/NetworkGroupOverride"
          }
        }
      }
    },
    "INeighborLocalAs" : {
      "type" : "object",
      "properties" : {
        "noPrepend" : {
          "type" : "boolean"
        },
        "asNumber" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "replaceAs" : {
          "type" : "boolean"
        },
        "type" : {
          "type" : "string"
        },
        "dualAs" : {
          "type" : "boolean"
        }
      }
    },
    "FPPhysicalInterfaceListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FPPhysicalInterface"
          }
        }
      }
    },
    "DeviceInventoryData" : {
      "type" : "object",
      "properties" : {
        "cpuType" : {
          "type" : "string"
        },
        "cpuCores" : {
          "type" : "string"
        },
        "memoryInMB" : {
          "type" : "string"
        },
        "storageInGB" : {
          "type" : "string"
        }
      }
    },
    "IFTDDeviceHABootStrap" : {
      "type" : "object",
      "required" : [ "lanFailover", "statefulFailover", "useSameLinkForFailovers" ],
      "properties" : {
        "sharedKey" : {
          "type" : "string"
        },
        "lanFailover" : {
          "$ref" : "#/definitions/IFTDDeviceHAFailoverLink"
        },
        "encKeyGenerationScheme" : {
          "type" : "string",
          "enum" : [ "AUTO", "CUSTOM" ]
        },
        "useSameLinkForFailovers" : {
          "type" : "boolean"
        },
        "statefulFailover" : {
          "$ref" : "#/definitions/IFTDDeviceHAFailoverLink"
        },
        "isEncryptionEnabled" : {
          "type" : "boolean"
        }
      }
    },
    "DeviceListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Device"
          }
        }
      }
    },
    "DynamicObjectBulk" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "ISecondaryAuthenticationSettings" : {
      "type" : "object",
      "properties" : {
        "useSecondaryUsernameforSession" : {
          "type" : "boolean",
          "description" : "Secondary username is used for reporting user activity."
        },
        "promptUsername" : {
          "type" : "boolean",
          "description" : "Allow user to enter Username and Password."
        },
        "certificateUsernameSettings" : {
          "$ref" : "#/definitions/IConnProfileCertificateUsernameSettings"
        },
        "usePrimaryUsername" : {
          "type" : "boolean",
          "description" : "Use the same username that is used with Primary Authentication Server."
        },
        "mapUsernameFromCertificate" : {
          "type" : "boolean",
          "description" : "Use the username from Certificate."
        }
      },
      "description" : "Secondary authentication settings if double authentication enabled."
    },
    "VpnEndpointListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/VpnEndpoint"
          }
        }
      }
    },
    "ICMPV6Object" : {
      "type" : "object",
      "properties" : {
        "icmpType" : {
          "type" : "string",
          "description" : "ICMP type number."
        },
        "metadata" : {
          "description" : "Object representing metadata properties of response object.",
          "$ref" : "#/definitions/PortMetadata"
        },
        "code" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "ICMP code number."
        },
        "overridable" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether object values can be overridden."
        },
        "name" : {
          "type" : "string",
          "description" : "User chosen resource name."
        },
        "description" : {
          "type" : "string",
          "description" : "User provided resource description."
        },
        "links" : {
          "description" : "Object containing related links.",
          "$ref" : "#/definitions/Links"
        },
        "overrides" : {
          "description" : "An object override allows you to define an alternate value for an object.",
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier."
        },
        "type" : {
          "type" : "string",
          "description" : "Type associated with resource: ICMPV6Object."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        },
        "overrideTargetId" : {
          "type" : "string",
          "description" : "Unique identifier of domain or device when override assigned to child domain. Used as path parameter to GET override details for a specific object on a specific target (device or domain)."
        }
      },
      "description" : "An object defining a ICMPv6 Port object definition."
    },
    "PendingChangesListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PendingChanges"
          }
        }
      }
    },
    "IPoeConfig" : {
      "type" : "object",
      "properties" : {
        "consumptionWattage" : {
          "type" : "integer",
          "format" : "int32"
        },
        "state" : {
          "type" : "boolean"
        }
      }
    },
    "LLObservationData" : {
      "type" : "object",
      "properties" : {
        "actionTaken" : {
          "type" : "string"
        },
        "miscData" : {
          "$ref" : "#/definitions/LLMiscData"
        },
        "type" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "CountryObject" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata attributes for the country.",
          "$ref" : "#/definitions/Metadata"
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the Country."
        },
        "overridable" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether object values can be overridden."
        },
        "description" : {
          "type" : "string",
          "description" : "This field is deprecated and should not be used."
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/Links"
        },
        "id" : {
          "type" : "string",
          "description" : "Identifier matching country from geolocation database."
        },
        "overrides" : {
          "description" : "An object override allows you to define an alternate value for an object on a device or domain.",
          "$ref" : "#/definitions/IOverride"
        },
        "iso2" : {
          "type" : "string",
          "description" : "ISO2 country code string."
        },
        "type" : {
          "type" : "string",
          "description" : "Type of the response object. This value is always Country."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        },
        "iso3" : {
          "type" : "string",
          "description" : "ISO3 country code string."
        }
      },
      "description" : "Represents a Country."
    },
    "AnyConnectProfileModelListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AnyConnectProfileModel"
          }
        }
      }
    },
    "ApplicationType" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "name" : {
          "type" : "string"
        },
        "overridable" : {
          "type" : "boolean"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "TimeRange" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata properties of the response object.",
          "$ref" : "#/definitions/Metadata"
        },
        "effectiveEndDateTime" : {
          "type" : "string",
          "description" : "Represents the absolute date and time (in ISO 8601 format) at which the time range object stops being effective. If not specified, value is considered, 'never ends'."
        },
        "effectiveStartDateTime" : {
          "type" : "string",
          "description" : "Represents the absolute date and time (in ISO 8601 format) at which the time range object starts being effective. If not specified, value is considered, 'starts now'."
        },
        "name" : {
          "type" : "string",
          "description" : "User assigned resource name."
        },
        "description" : {
          "type" : "string",
          "description" : "User provided resource description."
        },
        "links" : {
          "description" : "Object containing related links.",
          "$ref" : "#/definitions/Links"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier representing response object."
        },
        "type" : {
          "type" : "string",
          "description" : "Type of the response object. This value is always TimeRange."
        },
        "recurrenceList" : {
          "type" : "array",
          "description" : "Represents the list of recurring intervals during which the time range is effective. These intervals are valid only between effectiveStartDateTime and effectiveEndDateTime.",
          "items" : {
            "$ref" : "#/definitions/IRecurrence"
          }
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        }
      },
      "description" : "Object representing a time range object."
    },
    "SIListMetadata" : {
      "type" : "object",
      "properties" : {
        "lastUser" : {
          "$ref" : "#/definitions/MetadataUser"
        },
        "entryCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "domain" : {
          "$ref" : "#/definitions/Domain"
        },
        "readOnly" : {
          "$ref" : "#/definitions/ReadOnly"
        },
        "listUpdateTime" : {
          "type" : "integer",
          "format" : "int32"
        },
        "timestamp" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "LLSettings" : {
      "type" : "object",
      "additionalProperties" : {
        "type" : "object"
      }
    },
    "DeploymentRequest" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/DeploymentRequestMetadata"
        },
        "forceDeploy" : {
          "type" : "boolean",
          "description" : "Boolean indicating the deployment is force deploy or not. Value set to `true` only if device is not out-of-date and user wants to force a deployment. This should not be used unless needed. Default is `false`."
        },
        "selectedPoliciesforDevices" : {
          "type" : "array",
          "description" : "List of devices for Selective Policy Deployment. </br> The devices mentioned here should be part of the 'devicelist' attribute.",
          "items" : {
            "$ref" : "#/definitions/ISelectedPoliciesforDevices"
          }
        },
        "name" : {
          "type" : "string",
          "description" : "String represents the name to the device."
        },
        "deviceList" : {
          "type" : "array",
          "description" : "List of device UUIDs for which the deployment has to triggered.",
          "items" : {
            "type" : "string"
          }
        },
        "ignoreWarning" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether the warnings needs to be ignored during the prevalidation of deployment job. Default is `false`."
        },
        "description" : {
          "type" : "string",
          "description" : "User provided description of the object."
        },
        "links" : {
          "description" : "Link to the deployment request with the job id.",
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string",
          "description" : "Id created as part of the deployment."
        },
        "type" : {
          "type" : "string",
          "description" : "Type of the Request object. This value is always DeploymentRequest."
        },
        "version" : {
          "type" : "string",
          "description" : "Integer indicating the version to which the deployment should be done."
        },
        "deploymentNote" : {
          "type" : "string",
          "description" : "User provided job note with max of 512 characters"
        }
      },
      "description" : "Represents the deployment request object which will be used for policy deployment of a device."
    },
    "ApplicableDevice" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "isPartOfContainer" : {
          "type" : "string"
        },
        "modelId" : {
          "type" : "string"
        },
        "advanced" : {
          "$ref" : "#/definitions/IAdvanced"
        },
        "containerType" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "modelType" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "upgradePackage" : {
          "$ref" : "#/definitions/UpgradePackage"
        },
        "sw_version" : {
          "type" : "string"
        },
        "healthStatus" : {
          "type" : "string"
        },
        "healthPolicy" : {
          "$ref" : "#/definitions/IHealthPolicy"
        },
        "name" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "model" : {
          "type" : "string"
        },
        "modelNumber" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "accessPolicy" : {
          "$ref" : "#/definitions/IPolicyModel"
        }
      }
    },
    "InterfaceGroupObject" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "interfaces" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IFTDInterface"
          }
        },
        "interfaceMode" : {
          "type" : "string",
          "enum" : [ "PASSIVE", "INLINE", "SWITCHED", "ROUTED" ]
        },
        "devices" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IInterfaceDeviceModel"
          }
        },
        "description" : {
          "type" : "string"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "interfaceGroup" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        },
        "overridable" : {
          "type" : "boolean"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        }
      }
    },
    "FTDRAVpnCertificateMapSettings" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata properties of Certificate Map Settings.",
          "$ref" : "#/definitions/Metadata"
        },
        "enableCertificateToConnectionProfileMapping" : {
          "type" : "boolean",
          "description" : "Specifies if connection profile should be selected based on matching certificate map rules. Default value is False."
        },
        "name" : {
          "type" : "string",
          "description" : "User assigned resource name."
        },
        "description" : {
          "type" : "string",
          "description" : "User provided resource description. "
        },
        "links" : {
          "description" : "Object containing related links.",
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier representing response object."
        },
        "useGroupURL" : {
          "type" : "boolean",
          "description" : "If certificate map matches different connection profile than the one specified in group url, Default value is False"
        },
        "type" : {
          "type" : "string",
          "description" : "Type associated with resource: RaVPNCertificateMapSetting."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        },
        "certificateToConnectionProfileMap" : {
          "type" : "array",
          "description" : "List of Rules mapping the certificate map to connection profile. If enableCertificateToConnectionProfileMapping is True then atleast one rule is mandatory.",
          "items" : {
            "$ref" : "#/definitions/IFTDRAVpnCertToConnectionProfileMap"
          }
        }
      },
      "description" : "A model representing Certificate Map Settings definition."
    },
    "Domain" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "Name of the domain."
        },
        "links" : {
          "description" : "Links to the domain resource URLs.",
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique UUID of this domain"
        },
        "type" : {
          "type" : "string",
          "description" : "Domain type definition (fixed)."
        },
        "uuid" : {
          "type" : "string"
        }
      },
      "description" : "The details about the domain."
    },
    "RealmUserGroupListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RealmUserGroup"
          }
        }
      }
    },
    "IARPConfigContainer" : {
      "type" : "object",
      "properties" : {
        "macAddress" : {
          "type" : "string"
        },
        "enableAlias" : {
          "type" : "boolean"
        },
        "ipAddress" : {
          "type" : "string"
        }
      }
    },
    "INetworkAddressLiteral" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "VpnPKIEnrollmentModelListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/VpnPKIEnrollmentModel"
          }
        }
      }
    },
    "INetworkObjectsOnly" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "overridable" : {
          "type" : "boolean"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "AccessPolicyLoggingSettingModelListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AccessPolicyLoggingSettingModel"
          }
        }
      }
    },
    "IValueUpdate" : {
      "type" : "object",
      "properties" : {
        "newValue" : {
          "type" : "string"
        },
        "fieldName" : {
          "type" : "string"
        },
        "oldValue" : {
          "type" : "string"
        }
      }
    },
    "HitCount" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata attributes for the hit count entry.",
          "$ref" : "#/definitions/HitCountMetadata"
        },
        "lastFetchTimeStamp" : {
          "type" : "string",
          "description" : "Indicates the last time (in ISO 8601 format) the hit count was retrieved for the mentioned rule."
        },
        "hitCount" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Indicates the number of times the access control rule was hit on the target device. It is based on the data from the last FMC hit count refresh operation."
        },
        "firstHitTimeStamp" : {
          "type" : "string",
          "description" : "Indicates the time (in ISO 8601 format) when the hit count was first hit for the mentioned rule."
        },
        "rule" : {
          "description" : "Object representing the access control rule against which the hit count information is retrieved.",
          "$ref" : "#/definitions/IPolicyModel"
        },
        "lastHitTimeStamp" : {
          "type" : "string",
          "description" : "Indicates the time (in ISO 8601 format) when the hit count was last hit for the mentioned rule."
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/ILinks"
        },
        "type" : {
          "type" : "string",
          "description" : "Type must be HitCount."
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "KeyChainObjectOverrideListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/KeyChainObjectOverride"
          }
        }
      }
    },
    "IOspfv3RouteSummary" : {
      "type" : "object",
      "properties" : {
        "cost" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ipv6Prefix" : {
          "$ref" : "#/definitions/INetworkAddress"
        },
        "advertise" : {
          "type" : "boolean"
        }
      }
    },
    "Snort3IntrusionRuleGroupsObject" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata properties of Snort 3 intrusion rulegroup.",
          "$ref" : "#/definitions/IMetadata"
        },
        "overrideSecurityLevel" : {
          "type" : "string",
          "enum" : [ "DISABLED", "LEVEL_1", "LEVEL_2", "LEVEL_3", "LEVEL_4" ]
        },
        "isSystemDefined" : {
          "type" : "boolean",
          "description" : "Read-only field indicating if the rulegroup is system-defined (i.e., Talos provided). If value is false, then rule is user-defined."
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the Snort 3 intrusion rulegroup."
        },
        "description" : {
          "type" : "string",
          "description" : "Description of the Snort 3 intrusion rulegroup."
        },
        "childGroups" : {
          "type" : "array",
          "description" : "List of IntrusionRuleGroups associated with the parent rulegroup.",
          "items" : {
            "$ref" : "#/definitions/ISnort3IntrusionRuleGroupsModel"
          }
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of the Snort 3 intrusion rulegroup."
        },
        "type" : {
          "type" : "string",
          "description" : "Type of the response object. This value is always IntrusionRuleGroup."
        },
        "version" : {
          "type" : "string"
        },
        "defaultSecurityLevel" : {
          "type" : "string",
          "enum" : [ "DISABLED", "LEVEL_1", "LEVEL_2", "LEVEL_3", "LEVEL_4" ]
        }
      },
      "description" : "Object representing details for Snort 3 intrusion rulegroup."
    },
    "ITimeZoneDateRangeFragment" : {
      "type" : "object",
      "properties" : {
        "startDateTime" : {
          "type" : "string",
          "description" : "Represents the date and time (in ISO 8601 format) at which the daylight saving will start."
        },
        "offset" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number (in minutes) representing the offset from specified time zone. Offset value must be between 1-1440."
        },
        "endDateTime" : {
          "type" : "string",
          "description" : "Represents the date and time (in ISO 8601 format) at which the daylight saving with end."
        }
      },
      "description" : "Object fragment to configure the daylight saving by date range."
    },
    "UrlOverride" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata properties of response object.",
          "$ref" : "#/definitions/Metadata"
        },
        "overridable" : {
          "type" : "boolean",
          "description" : "Always returns false for overrides."
        },
        "name" : {
          "type" : "string",
          "description" : "User chosen resource name."
        },
        "description" : {
          "type" : "string",
          "description" : "User provided description."
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/Links"
        },
        "overrides" : {
          "description" : "An object override allows you to define an alternate value for an object on device or domain.",
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier representing resource."
        },
        "type" : {
          "type" : "string",
          "description" : "Type associated with resource."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        }
      },
      "description" : "A model representing URL object override definition."
    },
    "AccessPolicyListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AccessPolicy"
          }
        }
      }
    },
    "ITaskStatus" : {
      "type" : "object",
      "properties" : {
        "taskType" : {
          "type" : "string",
          "enum" : [ "DEVICE_REGISTRATION", "DEVICE_DEPLOYMENT", "DEVICE_ROLLBACK", "NGFWHA_OPERATIONS", "COPY_CONFIG_REQUEST", "HIT_COUNT_REFRESH", "FTD_CLUSTER_BOOTSTRAP", "FTD_CLUSTER_BREAK" ]
        },
        "subTasks" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ISubTask"
          }
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "message" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        }
      }
    },
    "HealthMetric" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/Metadata"
        },
        "metric" : {
          "type" : "string",
          "description" : "Name of the metric."
        },
        "regexFilter" : {
          "type" : "string",
          "description" : "Regular expression as filter to be applied on the metric. Supports RE2 Syntax documented here : https://github.com/google/re2/wiki/Syntax. Example regexFilter for fetching metrics for cpu for only CPU01 would be cpu=~\"CPU01\" "
        },
        "response" : {
          "type" : "string",
          "description" : "Response containing the values for the metric specified meeting the criteria for the regular expression between the start time and end time at every step interval specified."
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "description" : "Type of the health metric; this value is always Metric."
        },
        "version" : {
          "type" : "string"
        },
        "deviceUUID" : {
          "type" : "string",
          "description" : "UUID of the device associated with this metric."
        }
      }
    },
    "IGroupDependencyDetailEntry" : {
      "type" : "object",
      "properties" : {
        "selectivelyDeployablePolicies" : {
          "type" : "array",
          "description" : "List of out-of-date policies which can be selectively deployed.",
          "items" : {
            "type" : "string"
          }
        },
        "mandatoryDeployablePolicies" : {
          "type" : "array",
          "description" : "List of out-of-date policies which must get deployed always in the upcoming deployment. These policies will get added into the deployment by default.",
          "items" : {
            "type" : "string"
          }
        },
        "dependentPolicyList" : {
          "type" : "array",
          "description" : "Describes the dependency between the out-of-date policies with the reason",
          "items" : {
            "$ref" : "#/definitions/IDependentPolicy"
          }
        }
      },
      "description" : "Represents the dependency information between out-of-date policies"
    },
    "GlobalPolicySearchListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/GlobalPolicySearch"
          }
        }
      }
    },
    "GlobalSearch" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata properties of response object.",
          "$ref" : "#/definitions/IMetadata"
        },
        "searchCriteria" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string",
          "description" : "User chosen resource name."
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "description" : "Object containing related links.",
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of resource."
        },
        "type" : {
          "type" : "string",
          "description" : "Type of resource."
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ISearchResult"
          }
        },
        "version" : {
          "type" : "string"
        }
      },
      "description" : "A model representing global object search response."
    },
    "Ikev1PolicyObjectListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Ikev1PolicyObject"
          }
        }
      }
    },
    "IGroupPolicySSLSettingsModel" : {
      "type" : "object",
      "properties" : {
        "dtlsCompression" : {
          "type" : "string",
          "description" : "Specifies DTLS Compression method (DISABLED,LZS). Default is DISABLED",
          "enum" : [ "DISABLED", "LZS" ]
        },
        "sslCompression" : {
          "type" : "string",
          "description" : "Specifies SSL Compression method (DEFLATE,DISABLED,LZS). Default is DISABLED",
          "enum" : [ "DISABLED", "DEFLATE", "LZS" ]
        },
        "ignoreDFBit" : {
          "type" : "boolean",
          "description" : "Optional. Specifies to ignore the Don't Fragment (DF) bit in packets that need fragmentation.Allows the forced fragmentation of packets that have the DF bit set, allowing them to pass through the tunnel. Default is False"
        },
        "mtuSize" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Optional. Specifies the maximum transmission unit (MTU) size for SSL VPN connections established by the Cisco AnyConnect VPN Client.Default is 1406 Bytes, valid range is 576 to 1462 Bytes."
        }
      },
      "description" : "Model representing the Configuration of SSL parameters to be used when connecting to the Client."
    },
    "DeviceGroupListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DeviceGroup"
          }
        }
      }
    },
    "VRFInterfaceEntry" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "logicalName" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "type" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "literal" : {
          "type" : "boolean"
        }
      }
    },
    "RESTTidSource" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "caCert" : {
          "type" : "string"
        },
        "feedContent" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "invalidObservables" : {
          "type" : "integer",
          "format" : "int32"
        },
        "feedStatus" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "downloadOn" : {
          "type" : "boolean"
        },
        "nextRun" : {
          "type" : "integer",
          "format" : "int32"
        },
        "consumedIndicators" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalObservables" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalIndicators" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalUnsupportedObservables" : {
          "type" : "integer",
          "format" : "int32"
        },
        "property" : {
          "$ref" : "#/definitions/RESTFeedProperty"
        },
        "checksum" : {
          "type" : "string"
        },
        "llfeedConfig" : {
          "$ref" : "#/definitions/LLFeedConfig"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "clientPrivateKey" : {
          "type" : "string"
        },
        "subscribedCollections" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RESTCollectionTopic"
          }
        },
        "clientCert" : {
          "type" : "string"
        },
        "delivery" : {
          "type" : "string"
        },
        "finishTime" : {
          "type" : "integer",
          "format" : "int32"
        },
        "availableCollections" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RESTCollectionTopic"
          }
        },
        "lastRun" : {
          "type" : "integer",
          "format" : "int32"
        },
        "runNow" : {
          "type" : "boolean"
        },
        "totalDiscardedIndicators" : {
          "type" : "integer",
          "format" : "int32"
        },
        "consumedObservables" : {
          "type" : "integer",
          "format" : "int32"
        },
        "refresh" : {
          "type" : "integer",
          "format" : "int32"
        },
        "params" : {
          "$ref" : "#/definitions/LLParams"
        },
        "uri" : {
          "type" : "string"
        },
        "feedConfig" : {
          "$ref" : "#/definitions/LLFeedConfig"
        },
        "version" : {
          "type" : "string"
        },
        "discoveryInfo" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RESTCollectionTopic"
          }
        },
        "totalInvalidObservables" : {
          "type" : "integer",
          "format" : "int32"
        },
        "statusMsg" : {
          "$ref" : "#/definitions/LLStatusMsg"
        },
        "passwd" : {
          "type" : "string"
        },
        "startHour" : {
          "type" : "integer",
          "format" : "int32"
        },
        "discardedIndicators" : {
          "type" : "integer",
          "format" : "int32"
        },
        "consumedUnsupportedObservables" : {
          "type" : "integer",
          "format" : "int32"
        },
        "feedType" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "username" : {
          "type" : "string"
        }
      }
    },
    "LLFeedProperty" : {
      "type" : "object",
      "properties" : {
        "expirationTime" : {
          "type" : "integer",
          "format" : "int32"
        },
        "publish" : {
          "type" : "boolean"
        },
        "action" : {
          "type" : "string"
        },
        "whitelist" : {
          "type" : "boolean"
        },
        "ttl" : {
          "type" : "integer",
          "format" : "int32"
        },
        "tags" : {
          "$ref" : "#/definitions/LLTags"
        }
      }
    },
    "LLIndicator" : {
      "type" : "object",
      "properties" : {
        "pending" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "description" : {
          "type" : "string"
        },
        "rawData" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "noRealizedIncidents" : {
          "type" : "integer",
          "format" : "int32"
        },
        "observables" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LLObservable"
          }
        },
        "stale" : {
          "type" : "boolean"
        },
        "unsupported" : {
          "type" : "boolean"
        },
        "feedId" : {
          "type" : "string"
        },
        "effectiveProperty" : {
          "$ref" : "#/definitions/LLFeedProperty"
        },
        "action" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "noPartialIncidents" : {
          "type" : "integer",
          "format" : "int32"
        },
        "customProperty" : {
          "$ref" : "#/definitions/LLFeedProperty"
        },
        "updatedAt" : {
          "type" : "integer",
          "format" : "int32"
        },
        "equation" : {
          "$ref" : "#/definitions/LLEquationNode"
        },
        "version" : {
          "type" : "string"
        },
        "ttl" : {
          "type" : "integer",
          "format" : "int32"
        },
        "tags" : {
          "$ref" : "#/definitions/LLTags"
        },
        "indicatorVersion" : {
          "type" : "string"
        },
        "expirationTime" : {
          "type" : "integer",
          "format" : "int32"
        },
        "publish" : {
          "type" : "boolean"
        },
        "name" : {
          "type" : "string"
        },
        "invalid" : {
          "type" : "boolean"
        },
        "sourceName" : {
          "type" : "string"
        },
        "inheritedProperty" : {
          "$ref" : "#/definitions/LLFeedProperty"
        },
        "fileId" : {
          "type" : "string"
        }
      }
    },
    "PortObjectGroupListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PortObjectGroup"
          }
        }
      }
    },
    "IStaticMacEntry" : {
      "type" : "object",
      "properties" : {
        "interface" : {
          "$ref" : "#/definitions/IInterface"
        },
        "mac" : {
          "type" : "string"
        }
      }
    },
    "VpnIPSecSettingsListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/VpnIPSecSettings"
          }
        }
      }
    },
    "Realm" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Metadata object of the realm",
          "$ref" : "#/definitions/RealmMetadata"
        },
        "adPrimaryDomain" : {
          "type" : "string",
          "description" : "Field to specify the domain served by Active Directory. Sessions with users that match this domain will be associated with this realm. It must be unique. If this field is empty, first Directory Server will be queried for its value. If query fails, user must provide a value."
        },
        "description" : {
          "type" : "string",
          "description" : "Description of the realm.  Field is not guaranteed to be safe to display in the UI without escaping HTML characters."
        },
        "directoryConfigurations" : {
          "type" : "array",
          "description" : "Represents all known directory server connections.  They are expected to return the same results, and if one server cannot be contacted, then the next one will be used.",
          "items" : {
            "$ref" : "#/definitions/IDirectoryConfiguration"
          }
        },
        "type" : {
          "type" : "string",
          "description" : "Value is 'Realm'. Read only fixed value."
        },
        "adJoinPassword" : {
          "type" : "string",
          "description" : "Field to specify the password corresponding to the user in `ad_join_username` when joining an Active Directory domain.  Used only for active authentication / captive portal sessions when Kerberos authentication is being used. It must not be empty when 'adJoinUsername' is set. It will be shown as '*********' (nine asterisks), If a field contains '*********' (nine asterisks) on a PUT, we will try to load the password from the existing object."
        },
        "authSessionTimeout" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Field for the amount of time in minutes a user session is held onto without receiving another login event for sessions from ISE. Allowed values are from 0 to 35791394. Default value is 1440."
        },
        "enabled" : {
          "type" : "boolean",
          "description" : "Field represents whether this `Realm` can be used by other policies."
        },
        "groupDn" : {
          "type" : "string",
          "description" : "Field that specifies the distinguished name (DN) where we start the search for groups from the directory server. If this field is empty, first Directory Server will be queried for its value. If query fails, user must provide a value"
        },
        "realmType" : {
          "type" : "string",
          "description" : "Type of the realm. User-specified values can be 'AD' or 'LDAP'. System-specified values may also include Special and Discovered. Once realmType has been set during object creation, it cannot be changed.",
          "enum" : [ "AD", "LDAP", "LOCAL", "DISCOVERED", "SPECIAL" ]
        },
        "includedGroups" : {
          "type" : "array",
          "description" : "Fields of the user names that are configured to be included in the download.",
          "items" : {
            "type" : "string"
          }
        },
        "dirPassword" : {
          "type" : "string",
          "description" : "Field to specify the password corresponding to the user in ldapUsername used when sync'ing (downloading) user directory information. Must not be empty for POST. It will be shown as '*********' (nine asterisks), If a field contains '*********n (nine asterisks) on a PUT, we will try to load the password from the existing object."
        },
        "updateHour" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Field for the hour where the sync (download) from the directory starts. Allowed values are from 0 to 23. Default value is 0."
        },
        "links" : {
          "description" : "Self link",
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique Identifier, in `UUID` format, of the realm. This field is required for PUT but cannot be included in a POST request."
        },
        "groupAttribute" : {
          "type" : "string",
          "description" : "Field that specifies which `LDAP` attribute we use to determine group membership."
        },
        "failedAuthSessionTimeout" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Field for the amount of time in minutes a user session is held onto without receiving another login event for failed authentication sessions. Allowed values are from 0 to 35791394. Default value is 1440."
        },
        "excludedUsers" : {
          "type" : "array",
          "description" : "Fields of the user names that are configured to be excluded in the download.",
          "items" : {
            "type" : "string"
          }
        },
        "realmId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Field for the internal id of the realm. It is a read-only field, not to be set for any operation."
        },
        "adJoinUsername" : {
          "type" : "string",
          "description" : "Field to specify the username when joining an Active Directory domain.  Used only for active authentication / captive portal sessions when Kerberos authentication is being used."
        },
        "guestSessionTimeout" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Field for the amount of time in minutes a user session is held onto without receiving another login event for guest user sessions. Allowed values are from 0 to 35791394. Default value is 1440."
        },
        "version" : {
          "type" : "string",
          "description" : "Revision, in `UUID` format, of the realm. Must be present for PUT, but not for POST. IT must be the same as last saved objecti for PUT."
        },
        "excludedGroups" : {
          "type" : "array",
          "description" : "Fields of the group names that are configured to be excluded in the download.",
          "items" : {
            "type" : "string"
          }
        },
        "dirUsername" : {
          "type" : "string",
          "description" : "Field to specify the username used when sync'ing (downloading) user directory information. Must not be empty for POST."
        },
        "updateInterval" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Field for the frequency in hours of the sync (download). Allowed values are 1,2,3,4,8,12 or 24. Default value is 24."
        },
        "activeAuthSessionTimeout" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Field for the amount of time in minutes a user session is held onto without receiving another login event for sessions from captive portal. Allowed values are from 0 to 35791394. Default value is 1440."
        },
        "includedUsers" : {
          "type" : "array",
          "description" : "Fields of the user names that are configured to be included in the download.",
          "items" : {
            "type" : "string"
          }
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the realm. It must be unique and must not be empty for POST. It is not guaranteed to be safe to display in the UI without escaping HTML characters."
        },
        "baseDn" : {
          "type" : "string",
          "description" : "Field that specifies the distinguished name (DN) where we start the search for users and groups from the directory server. If this field is empty, first Directory Server will be queried for its value. If query fails, user must provide a value."
        },
        "tsAgentSessionTimeout" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Field for the amount of time in minutes a user session is held onto without receiving another login event for sessions from TSAgent. Allowed values are from 0 to 35791394. Default value is 1440."
        }
      },
      "description" : "Defines Identity Realm Object."
    },
    "ApplicationFilterListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ApplicationFilter"
          }
        }
      }
    },
    "FTDVlanInterface" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "description" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "enabled" : {
          "type" : "boolean"
        },
        "MTU" : {
          "type" : "integer",
          "format" : "int32"
        },
        "mode" : {
          "type" : "string",
          "enum" : [ "INLINE", "PASSIVE", "TAP", "ERSPAN", "NONE", "SWITCHPORT" ]
        },
        "fmcAccessConfig" : {
          "$ref" : "#/definitions/IFMCAccessConfig"
        },
        "arpConfig" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IARPConfigContainer"
          }
        },
        "ipv4" : {
          "$ref" : "#/definitions/IIPv4Container"
        },
        "ifname" : {
          "type" : "string"
        },
        "ipv6" : {
          "$ref" : "#/definitions/IIPv6Container"
        },
        "disablePortForwardOnVlan" : {
          "$ref" : "#/definitions/IInterface"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "enableSGTPropagate" : {
          "type" : "boolean"
        },
        "macLearn" : {
          "type" : "boolean"
        },
        "managementOnly" : {
          "type" : "boolean"
        },
        "enableAntiSpoofing" : {
          "type" : "boolean"
        },
        "securityZone" : {
          "$ref" : "#/definitions/ISecurityZoneObjectModel"
        },
        "activeMACAddress" : {
          "type" : "string"
        },
        "vlanId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "fragmentReassembly" : {
          "type" : "boolean"
        },
        "macTable" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "standbyMACAddress" : {
          "type" : "string"
        },
        "enableDNSLookup" : {
          "type" : "boolean"
        },
        "overrideDefaultFragmentSetting" : {
          "$ref" : "#/definitions/IOverrideDefaultFragmentSetting"
        },
        "version" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        }
      }
    },
    "IAggregateAddresses" : {
      "type" : "object",
      "properties" : {
        "summaryOnly" : {
          "type" : "boolean"
        },
        "ipv6AggregateNetwork" : {
          "$ref" : "#/definitions/INetworkAddress"
        },
        "ipv4AggregateNetwork" : {
          "$ref" : "#/definitions/INetworkAddress"
        },
        "attributeMap" : {
          "$ref" : "#/definitions/IRouteMap"
        },
        "name" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "asSet" : {
          "type" : "boolean"
        },
        "suppressMap" : {
          "$ref" : "#/definitions/IRouteMap"
        },
        "type" : {
          "type" : "string"
        },
        "advertiseMap" : {
          "$ref" : "#/definitions/IRouteMap"
        }
      }
    },
    "PrefilterRule" : {
      "type" : "object",
      "required" : [ "action", "ruleType" ],
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata attributes for the prefilter rule.",
          "$ref" : "#/definitions/Metadata"
        },
        "bidirectional" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether the rule is bidirectional."
        },
        "sourceInterfaces" : {
          "description" : "Object representing source interfaces for prefilter rule.",
          "$ref" : "#/definitions/ISecurityZoneContainer"
        },
        "snmpConfig" : {
          "description" : "Object representing the SNMP alert associated with the prefilter rule.",
          "$ref" : "#/definitions/ISNMPConfig"
        },
        "encapsulationPorts" : {
          "type" : "array",
          "description" : "Object representing the encapsulation ports to be used in prefilter rule.",
          "items" : {
            "type" : "string",
            "enum" : [ "GRE", "IP_IN_IP", "IPV6_IN_IP", "TEREDO" ]
          }
        },
        "timeRangeObjects" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ITimeRangeModel"
          }
        },
        "sourceNetworks" : {
          "description" : "Object representing source networks selected for the prefilter rule.",
          "$ref" : "#/definitions/INetworkObjectsContainer"
        },
        "syslogSeverity" : {
          "type" : "string",
          "description" : "Specifies the Override Severity if alerts are being sent to default syslog configuration. One of: ALERT | CRIT | DEBUG | EMERG | ERR | INFO | NOTICE | WARNING.",
          "enum" : [ "ALERT", "CRIT", "DEBUG", "EMERG", "ERR", "INFO", "NOTICE", "WARNING" ]
        },
        "destinationInterfaces" : {
          "description" : "Object representing destination interfaces for prefilter rule.",
          "$ref" : "#/definitions/ISecurityZoneContainer"
        },
        "tunnelZone" : {
          "description" : "Object Representing tunnel zones for prefilter rule.",
          "$ref" : "#/definitions/ISourceZoneContainer"
        },
        "type" : {
          "type" : "string",
          "description" : "Type must be PrefilterRule."
        },
        "enableSyslog" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether the alerts associated with the prefilter rule are sent to default syslog configuration in Prefilter Logging."
        },
        "enabled" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether the prefilter rule is in effect (true) or not (false). Default is true."
        },
        "syslogConfig" : {
          "description" : "Object representing the syslog alert associated with the prefilter rule.",
          "$ref" : "#/definitions/ISyslogConfig"
        },
        "ruleType" : {
          "type" : "string",
          "description" : "Object indicating if the Rule is Prefilter Rule or Tunnel Rule.",
          "enum" : [ "PREFILTER", "TUNNEL" ]
        },
        "destinationNetworks" : {
          "description" : "Object representing destination networks selected for the prefilter rule.",
          "$ref" : "#/definitions/INetworkObjectsContainer"
        },
        "action" : {
          "type" : "string",
          "description" : "Specifies the action to take when the conditions defined by the rule are met. One of: BLOCK | TRUST | NETWORK_DISCOVERY | PERMIT.",
          "enum" : [ "ANALYZE", "BLOCK", "FASTPATH" ]
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier (UUID) for the prefilter rule."
        },
        "logEnd" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether the device will log events at the end of the connection. Default is false."
        },
        "logBegin" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether the device will log events at the beginning of the connection. Default is false."
        },
        "sendEventsToFMC" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether the device will send events to the Firepower Management Center event viewer. Default is false."
        },
        "destinationPorts" : {
          "description" : "Object representing destination ports selected for the rule.",
          "$ref" : "#/definitions/IPortObjectsContainer"
        },
        "sourcePorts" : {
          "description" : "Object representing source ports selected for the rule.",
          "$ref" : "#/definitions/IPortObjectsContainer"
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        },
        "newComments" : {
          "type" : "array",
          "description" : "Object representing the new comments provided in prefilter rule.",
          "items" : {
            "type" : "string"
          }
        },
        "commentHistoryList" : {
          "type" : "array",
          "description" : "List of comments in the prefilter rule's comment history.",
          "items" : {
            "$ref" : "#/definitions/ICommentHistory"
          }
        },
        "name" : {
          "type" : "string",
          "description" : "User-specified name of the prefilter rule."
        },
        "vlanTags" : {
          "description" : "Object representing the VLAN tag set associated with the prefilter rule.",
          "$ref" : "#/definitions/IVLanTagsContainer"
        }
      },
      "description" : "Represents Prefilter Rule contained within a Prefilter Policy."
    },
    "AsPathListListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AsPathList"
          }
        }
      }
    },
    "IOspfRouteMetric" : {
      "type" : "object",
      "properties" : {
        "metricType" : {
          "type" : "string",
          "enum" : [ "TYPE_1", "TYPE_2" ]
        },
        "metricValue" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "IRouteInjection" : {
      "type" : "object",
      "properties" : {
        "injectMap" : {
          "$ref" : "#/definitions/IRouteMap"
        },
        "name" : {
          "type" : "string"
        },
        "copyAttributes" : {
          "type" : "boolean"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "existMap" : {
          "$ref" : "#/definitions/IRouteMap"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "GlobalTimeZone" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "timeZone" : {
          "type" : "string",
          "description" : "Description of the time zone with its UTC offset."
        },
        "links" : {
          "description" : "Object containing related links.",
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of the global time zone from the IANA time zone (tz) database."
        },
        "type" : {
          "type" : "string",
          "description" : "Type of the response object. This value is always GlobalTimeZone."
        }
      },
      "description" : "Object representing a global time zone from IANA time zone (tz) database."
    },
    "GlobalTimeZoneListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/GlobalTimeZone"
          }
        }
      }
    },
    "IUrlModel" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "overridable" : {
          "type" : "boolean"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string"
        }
      }
    },
    "SIDNSListListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SIDNSList"
          }
        }
      }
    },
    "VRFPolicyEntry" : {
      "type" : "object",
      "properties" : {
        "l2SwitchingEnabled" : {
          "type" : "boolean"
        },
        "tooltip" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "readOnly" : {
          "type" : "boolean"
        },
        "type" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "mandatory" : {
          "type" : "boolean"
        },
        "enabled" : {
          "type" : "boolean"
        },
        "literal" : {
          "type" : "boolean"
        },
        "name" : {
          "type" : "string"
        },
        "subType" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object"
        },
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "position" : {
          "type" : "integer",
          "format" : "int32"
        },
        "interfaceEntryList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/VRFInterfaceEntry"
          }
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "ApplicationCategoryListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ApplicationCategory"
          }
        }
      }
    },
    "TimeZoneObjectOverride" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/Metadata"
        },
        "overridable" : {
          "type" : "boolean"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/Links"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "IVpnExtranetInfo" : {
      "type" : "object",
      "properties" : {
        "isDynamicIP" : {
          "type" : "boolean",
          "description" : "Indicates whether the VPN endpoint has a dynamic IP."
        },
        "name" : {
          "type" : "string",
          "description" : "User chosen resource name."
        },
        "ipAddress" : {
          "type" : "string",
          "description" : "IP address of the VPN endpoint."
        }
      },
      "description" : "Contains VPN extranet information."
    },
    "IdentityPolicyListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IdentityPolicy"
          }
        }
      }
    },
    "ISecurityGroupTagContainer" : {
      "type" : "object",
      "properties" : {
        "objects" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ISecurityGroupTag"
          }
        },
        "literals" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ISecurityGroupTagLiteral"
          }
        }
      }
    },
    "FTDNatRuleListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FTDNatRule"
          }
        }
      }
    },
    "AnyConnectCustomAttributeOverrideListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AnyConnectCustomAttributeOverride"
          }
        }
      }
    },
    "RuleImportSummaryEntry" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Specifies the count of added,udpated,deleted,skipped,unassociated rules.By default shows 0"
        },
        "rules" : {
          "type" : "array",
          "description" : "Specifies the rule details in the format GID:SID for the imported rules.",
          "items" : {
            "type" : "string"
          }
        },
        "type" : {
          "type" : "string",
          "description" : "Type of the response object. This value is always ruleimportsummaryentry."
        }
      },
      "description" : "An object that represents rule import summary details."
    },
    "FTDHAIPv6Configuration" : {
      "type" : "object",
      "properties" : {
        "ipv6ActiveStandbyPair" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IFTDHAIPv6ActiveStandbyPair"
          }
        },
        "activeIPv6LinkLocalAddress" : {
          "type" : "string"
        },
        "standbyIPv6LinkLocalAddress" : {
          "type" : "string"
        }
      }
    },
    "IOspfv3InterfaceConfiguration" : {
      "type" : "object",
      "properties" : {
        "retransmitInterval" : {
          "type" : "integer",
          "format" : "int32"
        },
        "deadInterval" : {
          "type" : "integer",
          "format" : "int32"
        },
        "floodReduction" : {
          "type" : "boolean"
        },
        "ignoreMtuMismatch" : {
          "type" : "boolean"
        },
        "helloInterval" : {
          "type" : "integer",
          "format" : "int32"
        },
        "filterOutgoingLSA" : {
          "type" : "boolean"
        },
        "priority" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ptpNonBroadcast" : {
          "type" : "boolean"
        },
        "transmitDelay" : {
          "type" : "integer",
          "format" : "int32"
        },
        "packetCost" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "DynamicObjectMetadata" : {
      "type" : "object",
      "properties" : {
        "lastUser" : {
          "$ref" : "#/definitions/MetadataUser"
        },
        "mappingsCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "domain" : {
          "$ref" : "#/definitions/Domain"
        },
        "readOnly" : {
          "$ref" : "#/definitions/ReadOnly"
        },
        "timestamp" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "DeployableDevice" : {
      "type" : "object",
      "properties" : {
        "deviceMembers" : {
          "type" : "array",
          "description" : "Describes the member information of the Device.",
          "items" : {
            "$ref" : "#/definitions/IDevice"
          }
        },
        "canBeDeployed" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether the device can be deployed."
        },
        "policyStatusList" : {
          "type" : "array",
          "description" : "List of policy objects which are part of the device.",
          "items" : {
            "$ref" : "#/definitions/IPolicyStatus"
          }
        },
        "message" : {
          "type" : "string",
          "description" : "Describes the reason for not allowing the deployment for a device."
        },
        "type" : {
          "type" : "string",
          "description" : "Type of the Response object. This value is always DeployableDevice."
        },
        "version" : {
          "type" : "string",
          "description" : "Integer, indicating the latest deployed version of the device."
        },
        "upToDate" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether the device has any out-of-date policies."
        },
        "domain" : {
          "description" : "Object indicating the domain information of the device.",
          "$ref" : "#/definitions/IDomain"
        },
        "isDeploying" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether the deployment operation for the device is in progress."
        },
        "name" : {
          "type" : "string",
          "description" : "String indicating the device name."
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string",
          "description" : "String indicating the id of the device."
        },
        "trafficInterruption" : {
          "type" : "string",
          "description" : "Boolean indicating a deployment can cause traffic interruption.",
          "enum" : [ "YES", "NO", "UNDETERMINED", "ERROR" ]
        },
        "groupDependencyDetails" : {
          "$ref" : "#/definitions/IGroupDependencyDetailEntry"
        },
        "device" : {
          "description" : "Object indicating the device object.",
          "$ref" : "#/definitions/IDevice"
        }
      },
      "description" : "Represents the Deployable Device Object."
    },
    "ISearchResult" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "domainUuid" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "subType" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "category" : {
          "type" : "string",
          "enum" : [ "GLOBALSEARCH", "GLOBAL", "OBJECT", "POLICY", "DEVICE" ]
        },
        "type" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "IValueLiteral" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "RadiusServerGroupModelListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RadiusServerGroupModel"
          }
        }
      }
    },
    "FTDClusterDeviceContainerListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FTDClusterDeviceContainer"
          }
        }
      }
    },
    "INeighborDefaultOriginate" : {
      "type" : "object",
      "properties" : {
        "routeMap" : {
          "$ref" : "#/definitions/IRouteMap"
        },
        "name" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "IAdvanced" : {
      "type" : "object",
      "properties" : {
        "enableOGS" : {
          "type" : "boolean"
        }
      }
    },
    "ISourceZoneContainer" : {
      "type" : "object",
      "properties" : {
        "objects" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ISourceZoneObject"
          }
        }
      }
    },
    "SecurityGroupTag" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "name" : {
          "type" : "string"
        },
        "overridable" : {
          "type" : "boolean"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "tag" : {
          "type" : "integer",
          "format" : "int32"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "IPrefixContainer" : {
      "type" : "object",
      "properties" : {
        "default" : {
          "type" : "boolean"
        },
        "address" : {
          "type" : "string"
        },
        "advertisement" : {
          "$ref" : "#/definitions/IAdvertisement"
        }
      }
    },
    "SNMPConfigListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SNMPConfig"
          }
        }
      }
    },
    "IOspfv3InterfaceAuthenticationBase" : {
      "type" : "object",
      "required" : [ "type" ],
      "properties" : {
        "type" : {
          "type" : "string"
        }
      }
    },
    "IOspfMD5Auth" : {
      "type" : "object",
      "properties" : {
        "md5Key" : {
          "type" : "string"
        },
        "authType" : {
          "type" : "string"
        },
        "md5KeyId" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "DNSServerGroupObjectListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DNSServerGroupObject"
          }
        }
      }
    },
    "AnyConnectCustomAttributeOverride" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata attributes for the AnyConnect Package.",
          "$ref" : "#/definitions/Metadata"
        },
        "overridable" : {
          "type" : "boolean"
        },
        "name" : {
          "type" : "string",
          "description" : "User provided resource name."
        },
        "description" : {
          "type" : "string",
          "description" : "User provided resource description."
        },
        "links" : {
          "description" : "Object containing related links.",
          "$ref" : "#/definitions/Links"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier representing the AnyConnect Package object."
        },
        "type" : {
          "type" : "string",
          "description" : "Type associated with resource: AnyConnectPackage."
        },
        "version" : {
          "type" : "string"
        }
      },
      "description" : "AnyConnect Custom Attribute override objects represent custom attribute used in configurations, typically for remote access VPN policies. They can contain override custom attribute in AnyConnect."
    },
    "IRuleAction" : {
      "type" : "object",
      "properties" : {
        "default" : {
          "type" : "string",
          "description" : "Default state of the rule for the specified intrusion policy. One of: DROP | BLOCK | ALERT | DISABLE | DEFAULT | PASS | REJECT | REACT | REWRITE",
          "enum" : [ "DROP", "BLOCK", "ALERT", "DISABLE", "DEFAULT" ]
        },
        "override" : {
          "type" : "string",
          "description" : "Override state of the rule for the specified intrusion policy. One of: DROP | BLOCK | ALERT | DISABLE | DEFAULT | PASS | REJECT | REACT | REWRITE",
          "enum" : [ "DROP", "BLOCK", "ALERT", "DISABLE", "DEFAULT" ]
        },
        "policy" : {
          "description" : "Object representing the intrusion policy.",
          "$ref" : "#/definitions/IIntrusionPolicyModel"
        }
      },
      "description" : "Object representing the rule action specified for an intrusion policy."
    },
    "KeyChainObjectOverride" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/Metadata"
        },
        "overridable" : {
          "type" : "boolean"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/Links"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "IDynamicObjectsContainer" : {
      "type" : "object",
      "properties" : {
        "objects" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IDynamicObjectBase"
          }
        }
      }
    },
    "RESTIncident" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "indicatorName" : {
          "type" : "string"
        },
        "equation" : {
          "$ref" : "#/definitions/RESTIndicatorEquationNode"
        },
        "description" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "iteratorId" : {
          "type" : "string"
        },
        "indicatorId" : {
          "type" : "string"
        },
        "actionTaken" : {
          "type" : "string"
        },
        "feedId" : {
          "type" : "string"
        },
        "observations" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RESTObservation"
          }
        },
        "property" : {
          "$ref" : "#/definitions/RESTFeedProperty"
        },
        "name" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "sourceName" : {
          "type" : "string"
        },
        "realizedAt" : {
          "type" : "integer",
          "format" : "int32"
        },
        "llincident" : {
          "$ref" : "#/definitions/LLIncident"
        },
        "id" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "updatedAt" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "IPPPoEContianer" : {
      "type" : "object",
      "properties" : {
        "pppoePassword" : {
          "type" : "string"
        },
        "pppoeRouteMetric" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ipAddress" : {
          "type" : "string"
        },
        "pppAuth" : {
          "type" : "string",
          "enum" : [ "PAP", "CHAP", "MSCHAP" ]
        },
        "vpdnGroupName" : {
          "type" : "string"
        },
        "enableRouteSettings" : {
          "type" : "boolean"
        },
        "storeCredsInFlash" : {
          "type" : "boolean"
        },
        "pppoeUser" : {
          "type" : "string"
        }
      }
    },
    "ApplicableDeviceListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ApplicableDevice"
          }
        }
      }
    },
    "IDHCPContainer" : {
      "type" : "object",
      "properties" : {
        "dhcpRouteMetric" : {
          "type" : "integer",
          "format" : "int32"
        },
        "enableDefaultRouteDHCP" : {
          "type" : "boolean"
        }
      }
    },
    "IGroupPolicySplitTunnelSettingsModel" : {
      "type" : "object",
      "properties" : {
        "splitDNSRequestPolicy" : {
          "type" : "string",
          "enum" : [ "USE_SPLIT_TUNNEL_SETTING", "TUNNEL_ALL", "TUNNEL_SPECIFIED_DOMAINS" ]
        },
        "splitTunnelACL" : {
          "description" : "If Split tunnel option is selected as TUNNEL_SPECIFIED or EXCLUDE_SPECIFIED_OVER_TUNNEL, splitTunnelACL is Mandatory. Standard access list or Extended Access List specifies matching traffic",
          "$ref" : "#/definitions/IReference"
        },
        "ipv6SplitTunnelPolicy" : {
          "type" : "string",
          "enum" : [ "TUNNEL_ALL", "TUNNEL_SPECIFIED", "EXCLUDE_SPECIFIED_OVER_TUNNEL" ]
        },
        "splitDNSDomainList" : {
          "type" : "string",
          "description" : "Optional. Specifies List of domain names applicable for splitDNS configuration"
        },
        "ipv4SplitTunnelPolicy" : {
          "type" : "string",
          "enum" : [ "TUNNEL_ALL", "TUNNEL_SPECIFIED", "EXCLUDE_SPECIFIED_OVER_TUNNEL" ]
        }
      },
      "description" : "Model representing the Split Tunnel Policy Settings"
    },
    "ProtocolPortObject" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata properties of response object.",
          "$ref" : "#/definitions/PortMetadata"
        },
        "protocol" : {
          "type" : "string",
          "description" : "IANA protocol number or Ethertype. This is handled differently for Transport and Network layer protocols. Transport layer protocols are identified by the IANA protocol number. For example: • 6 — TCP • 17 — UDP Network layer protocols are identified by the decimal form of the IEEE Registration Authority Ethertype. For example: • 2048 — IP."
        },
        "port" : {
          "type" : "string",
          "description" : "Port number for the object."
        },
        "overridable" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether object values can be override."
        },
        "name" : {
          "type" : "string",
          "description" : "User chosen resource name."
        },
        "description" : {
          "type" : "string",
          "description" : "User provided description."
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/Links"
        },
        "overrides" : {
          "description" : "An object override allows you to define an alternate value for an object on a device or domain.",
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier representing resource."
        },
        "type" : {
          "type" : "string",
          "description" : "Type associated with resource."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        },
        "overrideTargetId" : {
          "type" : "string",
          "description" : "Unique identifier of domain or device when override assigned to child domain. Used as path parameter to GET override details for a specific object on a specific target (device or domain)."
        }
      },
      "description" : "A model representing protocol port object definition."
    },
    "ICMPV4ObjectOverride" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/Metadata"
        },
        "overridable" : {
          "type" : "boolean"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/Links"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "FTDRAVpnCertificateMapSettingsListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FTDRAVpnCertificateMapSettings"
          }
        }
      }
    },
    "IStandardACL" : {
      "type" : "object",
      "required" : [ "entries", "name" ],
      "properties" : {
        "entries" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IStandardACLEntry"
          }
        },
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "name" : {
          "type" : "string"
        },
        "overridable" : {
          "type" : "boolean"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "IBGPAddressFamilyModel" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "distance" : {
          "$ref" : "#/definitions/IDistance"
        },
        "injectMaps" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IRouteInjection"
          }
        },
        "description" : {
          "type" : "string"
        },
        "autoSummary" : {
          "type" : "boolean"
        },
        "aftableMap" : {
          "$ref" : "#/definitions/IRouteMap"
        },
        "networks" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IBgpNetworks"
          }
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "distributeLists" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IDistributeLists"
          }
        },
        "aggregateAddressesIPv6s" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IAggregateAddresses"
          }
        },
        "defaultInformationOrginate" : {
          "type" : "boolean"
        },
        "maximumPaths" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IMaximumPaths"
          }
        },
        "neighbors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/INeighbors"
          }
        },
        "bgpRedistributeInternal" : {
          "type" : "boolean"
        },
        "aggregateAddressesIPv4s" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IAggregateAddresses"
          }
        },
        "bgpSupressInactive" : {
          "type" : "boolean"
        },
        "name" : {
          "type" : "string"
        },
        "synchronization" : {
          "type" : "boolean"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "redistributeProtocols" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IRedistributeProtocolBase"
          }
        },
        "id" : {
          "type" : "string"
        }
      }
    },
    "UpgradePackageListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/UpgradePackage"
          }
        }
      }
    },
    "VlanTagGroupListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/VlanTagGroup"
          }
        }
      }
    },
    "PortObjectGroupOverride" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata properties of response object.",
          "$ref" : "#/definitions/Metadata"
        },
        "overridable" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether object values can be overridden."
        },
        "name" : {
          "type" : "string",
          "description" : "User chosen resource name."
        },
        "description" : {
          "type" : "string",
          "description" : "User provided description."
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/Links"
        },
        "overrides" : {
          "description" : "An object override allows you to define an alternate value for an object on device or domain.",
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier representing resource."
        },
        "type" : {
          "type" : "string",
          "description" : "Type associated with resource."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        }
      },
      "description" : "A model representing port object group override definition."
    },
    "VariableSet" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "name" : {
          "type" : "string"
        },
        "overridable" : {
          "type" : "boolean"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/Links"
        },
        "id" : {
          "type" : "string"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "IHealthPolicy" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "DNSServerGroupOverride" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/Metadata"
        },
        "overridable" : {
          "type" : "boolean"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/Links"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "ObjectUsage" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/Metadata"
        },
        "name" : {
          "type" : "string",
          "description" : "User chosen resource name."
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "description" : "Object containing related links.",
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of resource."
        },
        "type" : {
          "type" : "string",
          "description" : "Type of resource."
        },
        "version" : {
          "type" : "string"
        }
      },
      "description" : "A model representing object usage response."
    },
    "LLAdditionalProperties" : {
      "type" : "object",
      "additionalProperties" : {
        "type" : "string"
      }
    },
    "FPLogicalInterface" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "securityZone" : {
          "$ref" : "#/definitions/ISecurityZoneObjectModel"
        },
        "vlanTag" : {
          "type" : "integer",
          "format" : "int32"
        },
        "virtualSwitch" : {
          "$ref" : "#/definitions/IVirtualSwitch"
        },
        "icmpEnabled" : {
          "type" : "integer",
          "format" : "int32"
        },
        "physicalInterface" : {
          "$ref" : "#/definitions/IFPPhysicalInterface"
        },
        "description" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "enabled" : {
          "type" : "integer",
          "format" : "int32"
        },
        "mtu" : {
          "type" : "integer",
          "format" : "int32"
        },
        "mode" : {
          "type" : "string"
        },
        "interfaceType" : {
          "type" : "string",
          "enum" : [ "SWITCHED", "ROUTED", "VLAN" ]
        },
        "mdi" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "staticArpEntries" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IStaticArpEntry"
          }
        },
        "links" : {
          "$ref" : "#/definitions/Links"
        },
        "ipAddresses" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "id" : {
          "type" : "string"
        }
      }
    },
    "RESTObservable" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "description" : {
          "type" : "string"
        },
        "observableType" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "indicatorCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "effectiveProperty" : {
          "$ref" : "#/definitions/RESTFeedProperty"
        },
        "observable" : {
          "$ref" : "#/definitions/LLObservable"
        },
        "name" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "inheritedProperty" : {
          "$ref" : "#/definitions/RESTFeedProperty"
        },
        "customProperty" : {
          "$ref" : "#/definitions/RESTFeedProperty"
        },
        "updatedAt" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "MetadataUser" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "Name of the user."
        },
        "links" : {
          "description" : "Contains the self referencing links to this resource",
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string",
          "description" : "The unique UUID of the user"
        },
        "type" : {
          "type" : "string",
          "description" : "The user type (fixed)."
        }
      },
      "description" : "This object defines details about the user."
    },
    "FQDNOverride" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata properties of response object.",
          "$ref" : "#/definitions/Metadata"
        },
        "overridable" : {
          "type" : "boolean",
          "description" : "Always return false for overrides."
        },
        "name" : {
          "type" : "string",
          "description" : "User chosen resource name."
        },
        "description" : {
          "type" : "string",
          "description" : "User provided description."
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/Links"
        },
        "overrides" : {
          "description" : "An object override allows you to define an alternate value for an object on a device or domain.",
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier representing resource."
        },
        "type" : {
          "type" : "string",
          "description" : "Type associated with resource."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        }
      },
      "description" : "A model representing FQDN Network object override definition."
    },
    "ICertificateMapRules" : {
      "type" : "object",
      "required" : [ "component", "field", "operator", "value" ],
      "properties" : {
        "component" : {
          "type" : "string",
          "description" : "Component of the client certificate to use for the matching rule.",
          "enum" : [ "WHOLE_FIELD", "COUNTRY", "COMMON_NAME", "DN_QUALIFIER", "EMAIL_ADDRESS", "GENERATIONAL_QUALIFIER", "GIVEN_NAME", "INITIALS", "LOCALITY", "NAME", "ORGANISATION", "ORGANISATIONAL_UNIT", "SERIAL_NUMBER", "SURNAME", "STATE_PROVINCE", "TITLE", "USER_ID", "UNSTRUCTURED_NAME", "IP_ADDRESS", "DOMAIN_COMPONENT" ]
        },
        "field" : {
          "type" : "string",
          "description" : "Field for the matching rule according to the Subject or the Issuer of the client certificate.",
          "enum" : [ "SUBJECT", "ALTERNATIVE_SUBJECT", "ISSUER", "EXTENDED_KEY_USAGE" ]
        },
        "value" : {
          "type" : "string",
          "description" : "The value of the matching rule. The value is associated with the selected component and operator."
        },
        "operator" : {
          "type" : "string",
          "description" : "Operator for the matching rule as Equals, Contains, Does Not Equal or Does Not Contain.",
          "enum" : [ "EQUALS", "CONTAINS", "DOES_NOT_EQUAL", "DOES_NOT_CONTAIN" ]
        }
      },
      "description" : "Specify the contents of the certificate to evaluate."
    },
    "VpnIkeSettings" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/Metadata"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "ikeV1Settings" : {
          "$ref" : "#/definitions/IVpnIkev1Settings"
        },
        "type" : {
          "type" : "string"
        },
        "ikeV2Settings" : {
          "$ref" : "#/definitions/IVpnIkev2Settings"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "IGroupPolicyAddressAssignmentModel" : {
      "type" : "object",
      "properties" : {
        "ipv4LocalAddressPool" : {
          "type" : "array",
          "description" : "Optional. Represents IPv4 address assignment that is applied based on address pools that are specific to user-groups in Remote Access VPN",
          "items" : {
            "$ref" : "#/definitions/IReference"
          }
        },
        "defaultDomainName" : {
          "type" : "string",
          "description" : "Optional. Specifies the name of the default domain"
        },
        "dhcpScope" : {
          "description" : "Optional. Represents DHCP Network for this group.Choose or create a Network Object containing the IPv4 address of the DHCP Network for this group.",
          "$ref" : "#/definitions/IReference"
        }
      },
      "description" : "Model representiing the Address Assignment details that will be assigned to the endhost."
    },
    "TunnelTags" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata properties of tunnel tag object.",
          "$ref" : "#/definitions/Metadata"
        },
        "overridable" : {
          "type" : "boolean"
        },
        "name" : {
          "type" : "string",
          "description" : "User-specified name of tunnel tag."
        },
        "description" : {
          "type" : "string",
          "description" : "User provided description for tunnel tag object."
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/Links"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier representing resource."
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "type" : {
          "type" : "string",
          "description" : "Type must be TunnelTag."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        }
      },
      "description" : "A model representing tunnel tag definition."
    },
    "IOspfFilterRule" : {
      "type" : "object",
      "required" : [ "type" ],
      "properties" : {
        "protocol" : {
          "type" : "string",
          "enum" : [ "CONNECTED", "STATIC", "RIP", "OSPF", "BGP" ]
        },
        "processId" : {
          "type" : "string"
        },
        "inInterface" : {
          "$ref" : "#/definitions/IFTDInterface"
        },
        "accessList" : {
          "$ref" : "#/definitions/IStandardACL"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "IConnectionProfileGroupAlias" : {
      "type" : "object",
      "properties" : {
        "aliasName" : {
          "type" : "string",
          "description" : "User assigned resource alias name."
        },
        "enabled" : {
          "type" : "boolean",
          "description" : "If set to True, then the group name appears in the login screen dropdown. Default is False."
        }
      },
      "description" : "Specifies alternate names by which the server can refer to a connection profile."
    },
    "CloudEvents" : {
      "type" : "object",
      "properties" : {
        "sendIntrusionEvents" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether to send intrusion events to cloud"
        },
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "sendConnectionEvents" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether to send connection events to cloud"
        },
        "name" : {
          "type" : "string"
        },
        "sendFileEvents" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether to send file/malware events to cloud"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "description" : "Links to the configuration object",
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique UUID of the configuration object"
        },
        "type" : {
          "type" : "string",
          "description" : "Type of the configuration object: CloudEventsConfigs"
        },
        "version" : {
          "type" : "string"
        }
      },
      "description" : "details of the configuration object for sending events to cloud"
    },
    "IntrusionPolicy" : {
      "type" : "object",
      "properties" : {
        "inlineDrop" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Indicates the inspection mode. Applicable for Snort 2 engine only. Value can be 0 or 1."
        },
        "metadata" : {
          "description" : "Object representing metadata properties of Intrusion Policy.",
          "$ref" : "#/definitions/IIntrusionPolicyMetadata"
        },
        "snortEngine" : {
          "type" : "string",
          "description" : "Indicates the Snort engine version.",
          "enum" : [ "SNORT2", "SNORT3" ]
        },
        "inspectionMode" : {
          "type" : "string",
          "description" : "Indicates the inspection mode. Can be either DETECTION or PREVENTION. Only applicable for Snort 3 engine.",
          "enum" : [ "PREVENTION", "DETECTION" ]
        },
        "isSystemDefined" : {
          "type" : "boolean"
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the Intrusion Policy."
        },
        "basePolicy" : {
          "description" : "Object representing the base policy of the Intrusion Policy.",
          "$ref" : "#/definitions/IReference"
        },
        "description" : {
          "type" : "string",
          "description" : "Description of the Intrusion Policy."
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of the Intrusion Policy."
        },
        "type" : {
          "type" : "string",
          "description" : "Type of the object. This value is always 'intrusionpolicy'."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        }
      },
      "description" : "An object that represents the details for Intrusion Policy."
    },
    "RangeOverrideListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RangeOverride"
          }
        }
      }
    },
    "FTDRedundantInterfaceListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FTDRedundantInterface"
          }
        }
      }
    },
    "INetworkBase" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "name" : {
          "type" : "string"
        },
        "overridable" : {
          "type" : "boolean"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "AnyConnectCustomAttributeModelListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AnyConnectCustomAttributeModel"
          }
        }
      }
    },
    "OspfPolicyModel" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/Metadata"
        },
        "filterRules" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IOspfFilterRule"
          }
        },
        "logAdjacencyChanges" : {
          "$ref" : "#/definitions/IOspfLogAdjChanges"
        },
        "description" : {
          "type" : "string"
        },
        "enableProcess" : {
          "type" : "string",
          "enum" : [ "PROCESS_1", "PROCESS_2" ]
        },
        "areas" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IOspfArea"
          }
        },
        "summaryAddresses" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IOspfSummaryAddresses"
          }
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "processId" : {
          "type" : "string"
        },
        "neighbors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IOspfNeighbors"
          }
        },
        "processConfiguration" : {
          "$ref" : "#/definitions/IOspfProcessModel"
        },
        "name" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "redistributeProtocols" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IRedistributeProtocolBase"
          }
        }
      }
    },
    "InspectorOverrideConfig" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "description" : "Type of the object. This value is always 'InspectorOverrideConfig'."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        },
        "inspectorOverrideConfig" : {
          "$ref" : "#/definitions/LLInspectorOverrideConfig"
        }
      },
      "description" : "Object representing modified inspector settings for network analysis policy."
    },
    "IVpnProtectedNetwork" : {
      "type" : "object",
      "properties" : {
        "acl" : {
          "description" : "Access control list of the network.",
          "$ref" : "#/definitions/IReference"
        },
        "networks" : {
          "type" : "array",
          "description" : "Represents networks in the VPN.",
          "items" : {
            "$ref" : "#/definitions/IReference"
          }
        }
      },
      "description" : "Contains information about VPN networks."
    },
    "VirtualRouterModel" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/Metadata"
        },
        "interfaces" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IFTDInterface"
          }
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "vrfPolicyEntry" : {
          "$ref" : "#/definitions/VRFPolicyEntry"
        }
      }
    },
    "KeyChainObject" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/Metadata"
        },
        "keys" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IKeyObject"
          }
        },
        "name" : {
          "type" : "string"
        },
        "overridable" : {
          "type" : "boolean"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/Links"
        },
        "id" : {
          "type" : "string"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "overrideTargetId" : {
          "type" : "string"
        }
      }
    },
    "IIntrusionPolicyMetadata" : {
      "type" : "object",
      "properties" : {
        "mappedPolicy" : {
          "$ref" : "#/definitions/IIntrusionMappedPolicy"
        },
        "ruleCount" : {
          "$ref" : "#/definitions/ISnort3PolicyRuleCount"
        },
        "lastUser" : {
          "$ref" : "#/definitions/IMetadataUser"
        },
        "snortEngine" : {
          "type" : "string",
          "enum" : [ "SNORT2", "SNORT3" ]
        },
        "usage" : {
          "$ref" : "#/definitions/IIntrusionUsage"
        },
        "domain" : {
          "$ref" : "#/definitions/IDomain"
        },
        "readOnly" : {
          "$ref" : "#/definitions/IReadonly"
        },
        "timestamp" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "ExtendedAccessListModel" : {
      "type" : "object",
      "required" : [ "entries" ],
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/Metadata"
        },
        "entries" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IExtendedACLEntry"
          }
        },
        "overridable" : {
          "type" : "boolean"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/Links"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "IOspfPasswdAuth" : {
      "type" : "object",
      "properties" : {
        "authKey" : {
          "type" : "string"
        },
        "authType" : {
          "type" : "string"
        }
      }
    },
    "KeyChainObjectListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/KeyChainObject"
          }
        }
      }
    },
    "IReferenceUpdate" : {
      "type" : "object",
      "properties" : {
        "fieldName" : {
          "type" : "string"
        },
        "entityType" : {
          "type" : "string"
        },
        "entityName" : {
          "type" : "string"
        }
      }
    },
    "FTDRAVpnAddressAssignmentSettingListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FTDRAVpnAddressAssignmentSetting"
          }
        }
      }
    },
    "IStandardACLEntry" : {
      "type" : "object",
      "required" : [ "action", "networks" ],
      "properties" : {
        "action" : {
          "type" : "string",
          "description" : "Indicate the redistribution access: PERMIT or DENY",
          "enum" : [ "PERMIT", "DENY" ]
        },
        "networks" : {
          "description" : "The network objects/groups assoicated with this object",
          "$ref" : "#/definitions/INetworkObjectsContainer"
        }
      },
      "description" : "Standard Access List entry"
    },
    "CloudRegion" : {
      "type" : "object",
      "properties" : {
        "current" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether this is the region used by the system"
        },
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "domain" : {
          "type" : "string",
          "description" : "The domain used to connect to the region"
        },
        "name" : {
          "type" : "string",
          "description" : "Region name"
        },
        "description" : {
          "type" : "string",
          "description" : "Region description"
        },
        "links" : {
          "description" : "Related links",
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of the object"
        },
        "type" : {
          "type" : "string",
          "description" : "Type of the object: CloudRegion"
        },
        "version" : {
          "type" : "string"
        }
      },
      "description" : "A model representing a cloud region"
    },
    "UrlOverrideListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/UrlOverride"
          }
        }
      }
    },
    "ICMPV4ObjectListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ICMPV4Object"
          }
        }
      }
    },
    "IApplicationModel" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata attributes for the application model.",
          "$ref" : "#/definitions/IMetadata"
        },
        "deprecated" : {
          "type" : "boolean",
          "description" : "Boolean representing if the application has been deprecated."
        },
        "description" : {
          "type" : "string",
          "description" : "Application resource description."
        },
        "overrides" : {
          "description" : "An object override allows you to define an alternate value for an object on a device or domain.",
          "$ref" : "#/definitions/IOverride"
        },
        "type" : {
          "type" : "string",
          "description" : "Type of the response object. This value is always Application."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        },
        "tags" : {
          "type" : "array",
          "description" : "List of objects representing application tags.",
          "items" : {
            "$ref" : "#/definitions/IApplicationTag"
          }
        },
        "productivity" : {
          "description" : "The application productivity associated with this application.",
          "$ref" : "#/definitions/IApplicationProductivity"
        },
        "appId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Application Identifier stored in internal database (VDB)."
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the application."
        },
        "overridable" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether object values can be overridden."
        },
        "risk" : {
          "description" : "The application risk associated with this application.",
          "$ref" : "#/definitions/IApplicationRisk"
        },
        "applicationTypes" : {
          "type" : "array",
          "description" : "List of objects representing application types.",
          "items" : {
            "$ref" : "#/definitions/IApplicationType"
          }
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/ILinks"
        },
        "categories" : {
          "type" : "array",
          "description" : "List of objects representing application categories.",
          "items" : {
            "$ref" : "#/definitions/IApplicationCategory"
          }
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier (UUID) for the application."
        }
      },
      "description" : "Represents an ApplicationModel containing Application Types, Tags, Productivity, Risk, and Categories."
    },
    "SinkholeListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Sinkhole"
          }
        }
      }
    },
    "URLObjectListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/URLObject"
          }
        }
      }
    },
    "BGPGeneralSettingModel" : {
      "type" : "object",
      "required" : [ "routerId" ],
      "properties" : {
        "bgpGracefulRestart" : {
          "$ref" : "#/definitions/IBGPGSGracefulRestart"
        },
        "metadata" : {
          "$ref" : "#/definitions/Metadata"
        },
        "aggregateTimer" : {
          "type" : "integer",
          "format" : "int32"
        },
        "transportPathMtuDiscovery" : {
          "type" : "boolean"
        },
        "scanTime" : {
          "type" : "integer",
          "format" : "int32"
        },
        "bestPath" : {
          "$ref" : "#/definitions/IBGPGSBestPath"
        },
        "asNumber" : {
          "type" : "string"
        },
        "asnotationDot" : {
          "type" : "boolean"
        },
        "description" : {
          "type" : "string"
        },
        "bgpNextHopTriggerDelay" : {
          "type" : "integer",
          "format" : "int32"
        },
        "bgptimers" : {
          "$ref" : "#/definitions/IBGPGSTimers"
        },
        "type" : {
          "type" : "string"
        },
        "bgpNextHopTriggerEnable" : {
          "type" : "boolean"
        },
        "version" : {
          "type" : "string"
        },
        "routerId" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "fastExternalFallOver" : {
          "type" : "boolean"
        },
        "id" : {
          "type" : "string"
        },
        "logNeighborChanges" : {
          "type" : "boolean"
        },
        "enforceFirstAs" : {
          "type" : "boolean"
        },
        "maxasLimit" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "SINetworkListListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SINetworkList"
          }
        }
      }
    },
    "IPv6StaticRouteModel" : {
      "type" : "object",
      "required" : [ "gateway", "interfaceName", "metricValue", "selectedNetworks" ],
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/Metadata"
        },
        "selectedNetworks" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/INetworkAddress"
          }
        },
        "metricValue" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "isTunneled" : {
          "type" : "boolean"
        },
        "interfaceName" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "gateway" : {
          "$ref" : "#/definitions/IHostObjectContainer"
        }
      }
    },
    "SIDNSFeed" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/SIFeedMetadata"
        },
        "feedURL" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the Security Intelligence DNS Feed object."
        },
        "overridable" : {
          "type" : "boolean"
        },
        "description" : {
          "type" : "string"
        },
        "checksumURL" : {
          "type" : "string"
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier representing the Security Intelligence DNS feed."
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "type" : {
          "type" : "string",
          "description" : "Type must be SIDNSFeed."
        },
        "updateFrequency" : {
          "type" : "integer",
          "format" : "int32"
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        }
      },
      "description" : "Object representing a user-specified third-party feed."
    },
    "IOspfv3DefaultInfoOriginate" : {
      "type" : "object",
      "properties" : {
        "always" : {
          "type" : "boolean"
        },
        "routeMap" : {
          "$ref" : "#/definitions/IRouteMap"
        },
        "routeMetric" : {
          "$ref" : "#/definitions/IOspfRouteMetric"
        }
      }
    },
    "INetworkAddress" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "overridable" : {
          "type" : "boolean"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "ICMPV6ObjectListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ICMPV6Object"
          }
        }
      }
    },
    "INeighborTransportConnectionMode" : {
      "type" : "object",
      "properties" : {
        "establishTCPSession" : {
          "type" : "boolean"
        },
        "name" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "IVlanModel" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "data" : {
          "$ref" : "#/definitions/IVlanTagLiteral"
        },
        "overridable" : {
          "type" : "boolean"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "RESTObservableListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RESTObservable"
          }
        }
      }
    },
    "PolicyAssignment" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/Metadata"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/Links"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "targets" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ITarget"
          }
        },
        "version" : {
          "type" : "string"
        },
        "policy" : {
          "$ref" : "#/definitions/IPolicyModel"
        }
      }
    },
    "ICMPV4Object" : {
      "type" : "object",
      "properties" : {
        "icmpType" : {
          "type" : "string",
          "description" : "ICMP type number."
        },
        "metadata" : {
          "description" : "Object representing metadata properties of response object.",
          "$ref" : "#/definitions/PortMetadata"
        },
        "code" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "ICMP code number."
        },
        "overridable" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether object values can be overridden."
        },
        "name" : {
          "type" : "string",
          "description" : "User assigned resource name."
        },
        "description" : {
          "type" : "string",
          "description" : "User provided resource description."
        },
        "links" : {
          "description" : "Object containing related links.",
          "$ref" : "#/definitions/Links"
        },
        "overrides" : {
          "description" : "An object override allows you to define an alternate value for an object.",
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier representing response object."
        },
        "type" : {
          "type" : "string",
          "description" : "Type associated with resource: ICMPV4Object."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        },
        "overrideTargetId" : {
          "type" : "string",
          "description" : "Unique identifier of domain or device when override assigned to child domain. Used as path parameter to GET override details for a specific object on a specific target (device or domain)."
        }
      },
      "description" : "An object defining a ICMPv4 Port object definition."
    },
    "AccessPolicySecurityIntelligencePolicy" : {
      "type" : "object",
      "properties" : {
        "dnsPolicy" : {
          "description" : "The DNS Policy associated with the security intelligence policy",
          "$ref" : "#/definitions/ISIDNSPolicy"
        },
        "urls" : {
          "description" : "List of url type objects that make up the urls allow and block lists",
          "$ref" : "#/definitions/ISISettings"
        },
        "metadata" : {
          "description" : "Object representing metadata properties of response object.",
          "$ref" : "#/definitions/Metadata"
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the associated security intelligence policy."
        },
        "description" : {
          "type" : "string",
          "description" : "User provided description."
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier representing security intelligence policy."
        },
        "type" : {
          "type" : "string",
          "description" : "Type must be SecurityIntelligencePolicy."
        },
        "networks" : {
          "description" : "List of network type objects that make up the networks allow and block lists",
          "$ref" : "#/definitions/ISISettings"
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        }
      },
      "description" : "Object representing the association of security intelligence policy to specified access policy."
    },
    "LLCollectionTopic" : {
      "type" : "object",
      "properties" : {
        "address" : {
          "type" : "string"
        },
        "pollIntervalInMinutes" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        },
        "contentBindings" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "subType" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "protocolBinding" : {
          "type" : "string"
        },
        "messageBinding" : {
          "type" : "string"
        },
        "hashMap" : {
          "$ref" : "#/definitions/LLHashMap"
        }
      }
    },
    "DeviceCopyConfigRequest" : {
      "type" : "object",
      "properties" : {
        "copySharedPolicies" : {
          "type" : "boolean",
          "description" : "Boolean value. Copies shared policies from source standalone device or HA to target standalone device based on True or False input"
        },
        "targetDeviceList" : {
          "type" : "array",
          "description" : "Target device list is a standalone device UUID",
          "items" : {
            "$ref" : "#/definitions/ITarget"
          }
        },
        "sourceDevice" : {
          "description" : "Source device is either a standalone device UUID or HA container UUID",
          "$ref" : "#/definitions/ITarget"
        }
      },
      "description" : "Copy configuration operation on device"
    },
    "VpnEndpoint" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata attributes for the VpnEndpoint.",
          "$ref" : "#/definitions/Metadata"
        },
        "extranet" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether the endpoint is a managed FTD device or extranet."
        },
        "description" : {
          "type" : "string",
          "description" : "Description of VpnEndpoint."
        },
        "type" : {
          "type" : "string",
          "description" : "The unique type of the VpnEndpoint."
        },
        "interface" : {
          "$ref" : "#/definitions/IReference"
        },
        "connectionType" : {
          "type" : "string",
          "description" : "Specifies the connection type of the peer. Allowed values are ORIGINATE_ONLY, ANSWER_ONLY, BIDIRECTIONAL."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        },
        "extranetInfo" : {
          "$ref" : "#/definitions/IVpnExtranetInfo"
        },
        "dynamicRRIEnabled" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether the endpoint is enabled with Dynamic Reverse Route Injection or not."
        },
        "protectedNetworks" : {
          "$ref" : "#/definitions/IVpnProtectedNetwork"
        },
        "nattedInterfaceAddress" : {
          "type" : "string",
          "description" : "The public or the natted IP address of the endpoint if the vpn interface is a private IP"
        },
        "backupInterfaces" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IVpnBackupInterface"
          }
        },
        "name" : {
          "type" : "string",
          "description" : "User-specified name of the VpnEndpoint."
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier (UUID) representing the VpnEndpoint."
        },
        "peerType" : {
          "type" : "string",
          "description" : "Specifies the peer type. Allowed values are PEER, HUB, SPOKE."
        },
        "device" : {
          "$ref" : "#/definitions/IReference"
        },
        "ipv6InterfaceAddress" : {
          "type" : "string"
        }
      },
      "description" : "Description of VpnEndpoint."
    },
    "INeighborFilterList" : {
      "type" : "object",
      "properties" : {
        "filterUpdateAction" : {
          "type" : "string",
          "enum" : [ "IN", "OUT" ]
        },
        "name" : {
          "type" : "string"
        },
        "asPathList" : {
          "$ref" : "#/definitions/IReference"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "IPv6AddressPoolOverrideListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IPv6AddressPoolOverride"
          }
        }
      }
    },
    "IConsoleUser" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "IModifiedUserInfo" : {
      "type" : "object",
      "properties" : {
        "lastModifiedTime" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Timestamp indicating the time when user has last modified the policy."
        },
        "userName" : {
          "type" : "string",
          "description" : "Name of the user."
        }
      },
      "description" : "Modified User Information"
    },
    "RESTIncidentListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RESTIncident"
          }
        }
      }
    },
    "IExtendedACLEntry" : {
      "type" : "object",
      "required" : [ "action", "logLevel", "logging" ],
      "properties" : {
        "logLevel" : {
          "type" : "string",
          "enum" : [ "EMERGENCY", "ALERT", "CRITICAL", "WARNING", "ERROR", "NOTIFICATION", "INFORMATIONAL", "DEBUGGING" ]
        },
        "sourceNetworks" : {
          "$ref" : "#/definitions/INetworkObjectsContainer"
        },
        "destinationPorts" : {
          "$ref" : "#/definitions/IPortObjectsContainer"
        },
        "destinationNetworks" : {
          "$ref" : "#/definitions/INetworkObjectsContainer"
        },
        "action" : {
          "type" : "string",
          "enum" : [ "PERMIT", "DENY" ]
        },
        "logging" : {
          "type" : "string",
          "enum" : [ "PER_ACCESS_LIST_ENTRY", "DEFAULT", "DISABLED" ]
        },
        "sourcePorts" : {
          "$ref" : "#/definitions/IPortObjectsContainer"
        },
        "logInterval" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "IOspfInterval" : {
      "type" : "object",
      "properties" : {
        "helloInterval" : {
          "$ref" : "#/definitions/IOspfDeadIntervalMechanism"
        },
        "helloMultiplier" : {
          "$ref" : "#/definitions/IOspfHelloMultiplierMechanism"
        }
      }
    },
    "VrfBGPIPvAddressFamilyModelListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/VrfBGPIPvAddressFamilyModel"
          }
        }
      }
    },
    "SINetworkFeedListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SINetworkFeed"
          }
        }
      }
    },
    "DeviceGroup" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata properties of DeviceGroup.",
          "$ref" : "#/definitions/IMetadata"
        },
        "members" : {
          "type" : "array",
          "description" : "Represents devices included in group.",
          "items" : {
            "$ref" : "#/definitions/IBaseDevice"
          }
        },
        "name" : {
          "type" : "string",
          "description" : "User assigned resource name."
        },
        "description" : {
          "type" : "string",
          "description" : "User provided resource description. "
        },
        "links" : {
          "description" : "Object containing related links.",
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of response object."
        },
        "type" : {
          "type" : "string",
          "description" : "Response object associated with resource: DeviceGroup."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        }
      },
      "description" : "A model representing a DeviceGroup.",
      "example": {
        "id": "606561fa-98e3-11ec-a4b3-fdb2ff99b3e9",
        "type": "DeviceGroup",
        "name": "DeviceGroup1"
      }
    },
    "IValueAdd" : {
      "type" : "object",
      "properties" : {
        "newValue" : {
          "type" : "string"
        },
        "fieldName" : {
          "type" : "string"
        }
      }
    },
    "ApplicationCategory" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "name" : {
          "type" : "string"
        },
        "overridable" : {
          "type" : "boolean"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "ICommentHistory" : {
      "type" : "object",
      "properties" : {
        "date" : {
          "type" : "integer",
          "format" : "int32"
        },
        "comment" : {
          "type" : "string"
        },
        "user" : {
          "$ref" : "#/definitions/IConsoleUser"
        }
      }
    },
    "AccessPolicy" : {
      "type" : "object",
      "required" : [ "defaultAction" ],
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata attributes for the access control policy.",
          "$ref" : "#/definitions/Metadata"
        },
        "defaultAction" : {
          "description" : "Object representing the default action (AccessPolicyDefaultAction). The default action determines how the system handles and logs traffic not handled by any other access control rules. For more information, see the defaultactions service.",
          "$ref" : "#/definitions/IAccessPolicyDefaultAction"
        },
        "name" : {
          "type" : "string",
          "description" : "User-specified name of the access control policy."
        },
        "identityPolicySetting" : {
          "$ref" : "#/definitions/IACPolicyIdentityPolicySettings"
        },
        "description" : {
          "type" : "string",
          "description" : "Description of Access Policy"
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/Links"
        },
        "rules" : {
          "type" : "object",
          "description" : "Object containing a list of rules in the access control policy."
        },
        "securityIntelligence" : {
          "description" : "Object containing the security intelligence policy related data associated with the Access Policy.",
          "$ref" : "#/definitions/IReference"
        },
        "prefilterPolicySetting" : {
          "$ref" : "#/definitions/IAccessPolicyPrefilterPolicySettingModel"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier (UUID) representing the access control policy."
        },
        "type" : {
          "type" : "string",
          "description" : "Type of the access control policy; this value is always AccessPolicy."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        }
      }
    },
    "IKEv2IPsecProposalListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IKEv2IPsecProposal"
          }
        }
      }
    },
    "HealthMonitorModelListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/HealthMonitorModel"
          }
        }
      }
    },
    "RESTObservationData" : {
      "type" : "object",
      "properties" : {
        "actionTaken" : {
          "type" : "string"
        },
        "llobservationData" : {
          "$ref" : "#/definitions/LLObservationData"
        },
        "miscData" : {
          "$ref" : "#/definitions/LLMiscData"
        },
        "type" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "ApplicationListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Application"
          }
        }
      }
    },
    "VirtualRouterModelListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/VirtualRouterModel"
          }
        }
      }
    },
    "DynamicAccessPolicy" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata properties of response object.",
          "$ref" : "#/definitions/Metadata"
        },
        "hostscanXmlConfig" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string",
          "description" : "User chosen resource name."
        },
        "hostscanPackage" : {
          "$ref" : "#/definitions/IPolicyObjectModel"
        },
        "authorizationAttributes" : {
          "type" : "array",
          "description" : "Actions to be taken when a DAP record is matched",
          "items" : {
            "$ref" : "#/definitions/DapAuthorizationAttributes"
          }
        },
        "description" : {
          "type" : "string",
          "description" : "User provided description."
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/Links"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier representing resource."
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "dapXmlConfig" : {
          "type" : "string",
          "description" : "Base 64 encoded dap xml string"
        }
      },
      "description" : "Contains information about the Dynamic Access Policies used by the Firepower Threat Defense device."
    },
    "PortObjectGroup" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata properties of response object.",
          "$ref" : "#/definitions/PortMetadata"
        },
        "objects" : {
          "type" : "array",
          "description" : "Represents port objects in group.",
          "items" : {
            "$ref" : "#/definitions/IPortObject"
          }
        },
        "overridable" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether object values can be overridden."
        },
        "name" : {
          "type" : "string",
          "description" : "User-specified name of the policy assignment."
        },
        "description" : {
          "type" : "string",
          "description" : "User provided description."
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/Links"
        },
        "overrides" : {
          "description" : "An object override allows you to define an alternate value for an object.",
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier representing resource."
        },
        "type" : {
          "type" : "string",
          "description" : "Type associated with resource."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        },
        "overrideTargetId" : {
          "type" : "string",
          "description" : "Unique identifier of domain or device when override assigned to child domain. Used as path parameter to GET override details for a specific object on a specific target (device or domain)."
        }
      },
      "description" : "A model representing port group definition."
    },
    "IOspfv3NeighborConfiguration" : {
      "type" : "object",
      "required" : [ "linkLocalAddress", "properties" ],
      "properties" : {
        "linkLocalAddress" : {
          "type" : "string"
        },
        "properties" : {
          "$ref" : "#/definitions/IOspfv3NeighborProperties"
        }
      }
    },
    "IDirectoryConfiguration" : {
      "type" : "object",
      "properties" : {
        "hostname" : {
          "type" : "string",
          "description" : "Field to specify the hostname or IP address of the directory server. This is a required field."
        },
        "useRoutingToSelectInterface" : {
          "type" : "boolean",
          "description" : "Field used by RA-VPN configurations when using a realm for authentication, and it specifies whether the device will use predefined routing to connect to the directory server."
        },
        "port" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Field of the port used to connect to the directory server. Allowed value are from 1 to 65535. "
        },
        "encryptionProtocol" : {
          "type" : "string",
          "description" : "Field of the encryption protocol used when connecting to this directory server. Allowed values are 'NONE', 'LDAPS', or 'STARTTLS'.",
          "enum" : [ "NONE", "STARTTLS", "LDAPS" ]
        },
        "encryptionCert" : {
          "description" : "An object reference to a `ExternalCACertificate` certificate object on FMC used to connect to a server when using encryption.  Must be specified if `LDAPS` or `STARTTLS` is used in `encryptionProtocol`.",
          "$ref" : "#/definitions/IExternalCACertificate"
        },
        "id" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Field indicating the order this directoryConfiguration should be used."
        },
        "interface" : {
          "description" : "An object reference to the SecurityZone used by RA-VPN configurations when using a realm for authentication, and it specifies which interface the device will use to contact the directory server.",
          "$ref" : "#/definitions/IInterfaceGroupObjectModel"
        }
      },
      "description" : "Represents directory server connection"
    },
    "FQDNObjectListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FQDNObject"
          }
        }
      }
    },
    "IEndPointDeviceType" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "name" : {
          "type" : "string"
        },
        "overridable" : {
          "type" : "boolean"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "iseId" : {
          "type" : "string"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "fqName" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "Ospfv3InterfacePolicyModelListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Ospfv3InterfacePolicyModel"
          }
        }
      }
    },
    "IPv4PrefixListListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IPv4PrefixList"
          }
        }
      }
    },
    "JobHistory" : {
      "type" : "object",
      "properties" : {
        "jobName" : {
          "type" : "string",
          "description" : "Name of the deployed job"
        },
        "jobStatus" : {
          "type" : "string",
          "description" : "Represents the status of the job",
          "enum" : [ "DEPLOYING", "DEPLOYED", "FAILED", "ABORTED", "EDIT_INUSE" ]
        },
        "deviceList" : {
          "type" : "array",
          "description" : "List of devices which have been part of the job.",
          "items" : {
            "$ref" : "#/definitions/IDeviceListEntry"
          }
        },
        "startTime" : {
          "type" : "string",
          "description" : "Indicates the start time (in ISO 8601 format) of the deployment job."
        },
        "id" : {
          "type" : "string",
          "description" : "UUID of the deployment job."
        },
        "endTime" : {
          "type" : "string",
          "description" : "Indicates the end time (in ISO 8601 format) of the deployment job."
        },
        "jobType" : {
          "type" : "string",
          "enum" : [ "DEPLOYMENT", "ROLLBACK", "UNKNOWN" ]
        },
        "type" : {
          "type" : "string",
          "description" : "Type must be JobHistory."
        },
        "user" : {
          "type" : "string",
          "description" : "Creator of the deployment task."
        },
        "deploymentNote" : {
          "type" : "string",
          "description" : "User provided job note"
        }
      }
    },
    "Device" : {
      "type" : "object",
      "required" : [ "hostName", "license_caps", "regKey" ],
      "properties" : {
        "hostName" : {
          "type" : "string",
          "description" : "Hostname or IP address of the device. If the device is behind NAT, you can leave the host name as blank, and enter the NAT_ID string in the 'Unique NAT ID' text box. Use the same NAT_ID string that you used while configuring FMC on the device."
        },
        "metadata" : {
          "description" : "Object representing metadata attributes of the Device.",
          "$ref" : "#/definitions/DeviceMetadata"
        },
        "modelId" : {
          "type" : "string",
          "description" : "Model ID of the registered device."
        },
        "advanced" : {
          "description" : "Object representing Device Advanced Configuration.",
          "$ref" : "#/definitions/IAdvanced"
        },
        "natID" : {
          "type" : "string",
          "description" : "Unique ID for a Network address translation (NAT) device (optional; used for device registration). If the device to be registered and the Firepower Management Center are separated by a NAT device, enter a unique NAT ID."
        },
        "description" : {
          "type" : "string",
          "description" : "User-specified description of the registered device."
        },
        "license_caps" : {
          "type" : "array",
          "description" : "Array of strings representing the license capabilities on the managed device. For registering FTD, the allowed values are: BASE (mandatory), THREAT, URLFilter, MALWARE, APEX, PLUS, VPNOnly. For Firepower ASA or NGIPSv devices, allowed values are: BASE, THREAT, PROTECT, CONTROL, URLFilter, MALWARE, VPN, SSL. ",
          "items" : {
            "type" : "string"
          }
        },
        "ftdMode" : {
          "type" : "string",
          "description" : "FTD mode (Example: ROUTED or TRANSPARENT)",
          "enum" : [ "ROUTED", "TRANSPARENT" ]
        },
        "type" : {
          "type" : "string",
          "description" : "Type of the device; this value is always Device."
        },
        "snortEngine" : {
          "type" : "string",
          "enum" : [ "SNORT2", "SNORT3" ]
        },
        "healthPolicy" : {
          "description" : "Object representing the system health policy applied to the registered device.",
          "$ref" : "#/definitions/IHealthPolicy"
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/ILinks"
        },
        "model" : {
          "type" : "string",
          "description" : "Model name of the registered device."
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier (UUID) representing the registered device."
        },
        "prohibitPacketTransfer" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether to prohibit the registered device from sending packet data with events to the Firepower Management Center (true) or to allow transfer (false). If this field is set to false (the default), the device transfers packets when a certain event is triggered. Not all traffic data is sent; connection events do not include a payload, only connection metadata."
        },
        "modelType" : {
          "type" : "string",
          "description" : "Model type of the registered device."
        },
        "regKey" : {
          "type" : "string",
          "description" : "Registration Key that you entered while configuring FMC on the device."
        },
        "keepLocalEvents" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether local events are recorded and kept on the device."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        },
        "sw_version" : {
          "type" : "string",
          "description" : "Device version"
        },
        "healthStatus" : {
          "type" : "string",
          "description" : "Current health status of the device."
        },
        "performanceTier" : {
          "type" : "string",
          "description" : "Performance tier for the managed device ( applicable only for vFTD's from 6.8.0 with possible values FTDv5 | FTDv10 | FTDv20 | FTDv30 | FTDv50 | Legacy )."
        },
        "name" : {
          "type" : "string",
          "description" : "User-specified name of the registered device. (Example: Device 01 - 192.168.0.152.)"
        },
        "modelNumber" : {
          "type" : "string",
          "description" : "Model number of the registered device."
        },
        "accessPolicy" : {
          "description" : "Object representing the currently assigned access control policy. You need to specify an existing access control policy when registering a device.",
          "$ref" : "#/definitions/IPolicyModel"
        },
        "deviceGroup" : {
          "description" : "Object representing the device group.",
          "$ref" : "#/definitions/IDeviceGroup"
        }
      },
      "description" : "A model representing a Device."
    },
    "IOspfSummaryAddresses" : {
      "type" : "object",
      "properties" : {
        "tagNumber" : {
          "type" : "integer",
          "format" : "int32"
        },
        "summaryNetwork" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/INetworkAddress"
          }
        },
        "advertise" : {
          "type" : "boolean"
        }
      }
    },
    "IPv6PrefixList" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/Metadata"
        },
        "entries" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IIPvPrefixListEntry"
          }
        },
        "name" : {
          "type" : "string"
        },
        "overridable" : {
          "type" : "boolean"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/Links"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "SIFeedMetadata" : {
      "type" : "object",
      "properties" : {
        "lastUser" : {
          "$ref" : "#/definitions/MetadataUser"
        },
        "entryCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "domain" : {
          "$ref" : "#/definitions/Domain"
        },
        "readOnly" : {
          "$ref" : "#/definitions/ReadOnly"
        },
        "timestamp" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "INeighborRoutes" : {
      "type" : "object",
      "properties" : {
        "advertisementInterval" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        },
        "neighborAdvertiseMaps" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/INeighborAdvertiseMaps"
          }
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "removePrivateAs" : {
          "type" : "boolean"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "IAuthTypeAndString" : {
      "type" : "object",
      "properties" : {
        "cryptoKeyString" : {
          "type" : "string"
        },
        "cryptoEncryptionType" : {
          "type" : "string",
          "enum" : [ "PLAINTEXT" ]
        }
      }
    },
    "INeighborAdvanced" : {
      "type" : "object",
      "properties" : {
        "neighborTransportConnectionMode" : {
          "$ref" : "#/definitions/INeighborTransportConnectionMode"
        },
        "neighborSecret" : {
          "type" : "string"
        },
        "neighborVersion" : {
          "type" : "integer",
          "format" : "int32"
        },
        "neighborTransportPathMTUDiscovery" : {
          "$ref" : "#/definitions/INeighborTransportPathMTUDiscovery"
        },
        "nextHopSelf" : {
          "type" : "boolean"
        },
        "name" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "neighborHops" : {
          "$ref" : "#/definitions/INeighborHops"
        },
        "id" : {
          "type" : "string"
        },
        "neighborWeight" : {
          "type" : "integer",
          "format" : "int32"
        },
        "type" : {
          "type" : "string"
        },
        "sendCommunity" : {
          "type" : "boolean"
        }
      }
    },
    "ITFCPackets" : {
      "type" : "object",
      "properties" : {
        "burstBytes" : {
          "type" : "integer",
          "format" : "int32"
        },
        "timeoutSeconds" : {
          "type" : "integer",
          "format" : "int32"
        },
        "enabled" : {
          "type" : "boolean"
        },
        "payloadBytes" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "GeoLocationObjectListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/GeoLocationObject"
          }
        }
      }
    },
    "DynamicObjectMappingsBulk" : {
      "type" : "object",
      "properties" : {
        "add" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DynamicObjectWithMappingsBulk"
          }
        },
        "metadata" : {
          "$ref" : "#/definitions/Metadata"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "remove" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DynamicObjectWithMappingsBulk"
          }
        }
      }
    },
    "AnyProtocolPortObjectListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AnyProtocolPortObject"
          }
        }
      }
    },
    "FTDS2SVpnModel" : {
      "type" : "object",
      "properties" : {
        "endpoints" : {
          "type" : "object",
          "description" : "Contains information for VPN endpoints."
        },
        "metadata" : {
          "description" : "Object representing metadata properties of response object.",
          "$ref" : "#/definitions/IMetadata"
        },
        "description" : {
          "type" : "string",
          "description" : "User provided description."
        },
        "type" : {
          "type" : "string",
          "description" : "Response object associated with resource."
        },
        "routeBased" : {
          "type" : "boolean"
        },
        "ipsecSettings" : {
          "description" : "Object representing IPSEC settings for the VPN.",
          "$ref" : "#/definitions/IReference"
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        },
        "ikeV1Enabled" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether the VPN connection is using INternet Key Exchange v1."
        },
        "ikeV2Enabled" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether the VPN connection is using INternet Key Exchange v2."
        },
        "topologyType" : {
          "type" : "string",
          "description" : "Indicates the type of topolgy used by the VPN."
        },
        "advancedSettings" : {
          "description" : "Contains advanced settings for the VPN.",
          "$ref" : "#/definitions/IReference"
        },
        "name" : {
          "type" : "string",
          "description" : "User chosen resource name."
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/ILinks"
        },
        "ikeSettings" : {
          "description" : "Object representing Internet Key Exchange settings for the VPN.",
          "$ref" : "#/definitions/IReference"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier representing resource."
        }
      },
      "description" : "Contains information about the site-to-site VPN settings used by the Firepower Threat Defense device."
    },
    "FTDAutoNatRule" : {
      "type" : "object",
      "required" : [ "natType", "originalNetwork", "translatedNetwork" ],
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/Metadata"
        },
        "fallThrough" : {
          "type" : "boolean"
        },
        "natType" : {
          "type" : "string",
          "enum" : [ "STATIC", "DYNAMIC" ]
        },
        "serviceProtocol" : {
          "type" : "string",
          "enum" : [ "TCP", "UDP" ]
        },
        "dns" : {
          "type" : "boolean"
        },
        "description" : {
          "type" : "string"
        },
        "section" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "patOptions" : {
          "$ref" : "#/definitions/IPatOptionsContainer"
        },
        "version" : {
          "type" : "string"
        },
        "noProxyArp" : {
          "type" : "boolean"
        },
        "translatedNetwork" : {
          "$ref" : "#/definitions/INetworkAddress"
        },
        "sourceInterface" : {
          "$ref" : "#/definitions/IInterfaceObjectModel"
        },
        "interfaceInTranslatedNetwork" : {
          "type" : "boolean"
        },
        "routeLookup" : {
          "type" : "boolean"
        },
        "name" : {
          "type" : "string"
        },
        "translatedPort" : {
          "type" : "integer",
          "format" : "int32"
        },
        "netToNet" : {
          "type" : "boolean"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "destinationInterface" : {
          "$ref" : "#/definitions/IInterfaceObjectModel"
        },
        "id" : {
          "type" : "string"
        },
        "originalNetwork" : {
          "$ref" : "#/definitions/INetworkObjectsOnly"
        },
        "interfaceIpv6" : {
          "type" : "boolean"
        },
        "originalPort" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "IOspfArea" : {
      "type" : "object",
      "properties" : {
        "areaNetworks" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/INetworkAddress"
          }
        },
        "defaultCost" : {
          "type" : "integer",
          "format" : "int32"
        },
        "areaId" : {
          "type" : "string"
        },
        "areaType" : {
          "$ref" : "#/definitions/IOspfAreaType"
        },
        "virtualLinks" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IOspfVirtualLinks"
          }
        },
        "areaRanges" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IOspfAreaRanges"
          }
        },
        "filterList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IOspfFilterList"
          }
        },
        "authentication" : {
          "type" : "string",
          "enum" : [ "PASSWORD", "MESSAGE_DIGEST" ]
        }
      }
    },
    "FTDVTIInterfaceListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FTDVTIInterface"
          }
        }
      }
    },
    "ApplicationTagListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ApplicationTag"
          }
        }
      }
    },
    "PolicyAssignmentListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PolicyAssignment"
          }
        }
      }
    },
    "NetworkObjectListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/NetworkObject"
          }
        }
      }
    },
    "LLTags" : {
      "type" : "object",
      "additionalProperties" : {
        "type" : "string"
      }
    },
    "IVlanBase" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "overridable" : {
          "type" : "boolean"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "HostObjectListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/HostObject"
          }
        }
      }
    },
    "Ospfv3InterfacePolicyModel" : {
      "type" : "object",
      "required" : [ "deviceInterface" ],
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/Metadata"
        },
        "name" : {
          "type" : "string"
        },
        "deviceInterface" : {
          "$ref" : "#/definitions/IFTDInterface"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "properties" : {
          "$ref" : "#/definitions/IOspfv3InterfaceConfiguration"
        },
        "authentication" : {
          "$ref" : "#/definitions/IOspfv3InterfaceAuthenticationBase"
        }
      }
    },
    "ILifeTime" : {
      "type" : "object",
      "properties" : {
        "endLifeTimeValue" : {
          "type" : "string"
        },
        "startLifeTimeValue" : {
          "type" : "string"
        },
        "timeZone" : {
          "type" : "string"
        },
        "endLifetimeType" : {
          "type" : "string",
          "enum" : [ "INFINITE", "DURATION", "DATETIME" ]
        }
      }
    },
    "ApplicationTag" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "name" : {
          "type" : "string"
        },
        "overridable" : {
          "type" : "boolean"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "IOspfProtocolConfiguration" : {
      "type" : "object",
      "properties" : {
        "retransmitInterval" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ignoreMtuMismatch" : {
          "type" : "boolean"
        },
        "ospfAuthentication" : {
          "$ref" : "#/definitions/IOspfAuthentication"
        },
        "filterOutgoingLSA" : {
          "type" : "boolean"
        },
        "priority" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ospfInterval" : {
          "$ref" : "#/definitions/IOspfInterval"
        },
        "ptpNonBroadcast" : {
          "type" : "boolean"
        },
        "transmitDelay" : {
          "type" : "integer",
          "format" : "int32"
        },
        "packetCost" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "ExpandedCommunityListListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ExpandedCommunityList"
          }
        }
      }
    },
    "IPv6AddressPool" : {
      "type" : "object",
      "required" : [ "ipv6StartAddress", "numberOfAddresses" ],
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata properties of response object.",
          "$ref" : "#/definitions/Metadata"
        },
        "numberOfAddresses" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "IPv6 address available in the configured pool and the prefix length in bits."
        },
        "overridable" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether object values can be overridden."
        },
        "name" : {
          "type" : "string",
          "description" : "User chosen resource name."
        },
        "ipv6StartAddress" : {
          "type" : "string",
          "description" : "Specifies the number of IPv6 addresses to use in the pool starting at ipv6StartAddress, Format: ipv6_address/prefix_length."
        },
        "description" : {
          "type" : "string",
          "description" : "User provided resource description."
        },
        "links" : {
          "$ref" : "#/definitions/Links"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier of response object."
        },
        "type" : {
          "type" : "string",
          "description" : "Type associated with resource: IPv6AddressPool."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        },
        "overrideTargetId" : {
          "type" : "string"
        }
      },
      "description" : "A model representing Ipv6AddressPool Object definition."
    },
    "INeighborDistributeLists" : {
      "type" : "object",
      "properties" : {
        "filterUpdateAction" : {
          "type" : "string",
          "enum" : [ "IN", "OUT" ]
        },
        "accessList" : {
          "$ref" : "#/definitions/IStandardACL"
        },
        "name" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "IGroupPolicyAnyConnectSettingsModel" : {
      "type" : "object",
      "properties" : {
        "sslSettings" : {
          "description" : "Optional. Configures SSL Settings parameters to be used when connecting to the Client.",
          "$ref" : "#/definitions/IGroupPolicySSLSettingsModel"
        },
        "connectionSettings" : {
          "description" : "Optional. Configures the connection parameters to be applied on the VPN connectivity.",
          "$ref" : "#/definitions/IGroupPolicyConnectionSettingsModel"
        },
        "clientModules" : {
          "type" : "array",
          "description" : "Optional. Represents specified Anyconnect modules to be downloaded when VPN user downloads Anyconnect Client",
          "items" : {
            "$ref" : "#/definitions/IGroupPolicyClientModulesModel"
          }
        },
        "vpnClientProfile" : {
          "description" : "Optional. Represents VPN Client Profile Object whose filetype is ANYCONNECT_VPN_PROFILE",
          "$ref" : "#/definitions/IReference"
        },
        "managementProfile" : {
          "description" : "Optional. Represents VPN Management Profile Object whose filetype is ANYCONNECT_VPN_PROFILE",
          "$ref" : "#/definitions/IReference"
        },
        "customAttributes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IGroupPolicyCustomAttributesModel"
          }
        }
      },
      "description" : "Model representing the Configurations for AnyConnect Client."
    },
    "ISESecurityGroupTag" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "name" : {
          "type" : "string"
        },
        "overridable" : {
          "type" : "boolean"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "tag" : {
          "type" : "integer",
          "format" : "int32"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "Sinkhole" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata attributes for the Sinkhole.",
          "$ref" : "#/definitions/Metadata"
        },
        "description" : {
          "type" : "string"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "type" : {
          "type" : "string",
          "description" : "Type of the object; this value is always Sinkhole."
        },
        "version" : {
          "type" : "string"
        },
        "ipv4" : {
          "type" : "string",
          "description" : "User-specified ipv4 of the Sinkhole."
        },
        "ipv6" : {
          "type" : "string",
          "description" : "User-specified ipv6 of the Sinkhole."
        },
        "name" : {
          "type" : "string",
          "description" : "User-specified name of the Sinkhole."
        },
        "overridable" : {
          "type" : "boolean"
        },
        "action" : {
          "type" : "string",
          "description" : "User-specified action of the Sinkhole.",
          "enum" : [ "MONITOR", "BLOCK" ]
        },
        "sinkholeType" : {
          "type" : "string",
          "enum" : [ "SINKHOLE_CN_C", "SINKHOLE_MALWARE", "SINKHOLE_PHISHING", "NONE" ]
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier (UUID) representing the Sinkhole."
        }
      },
      "description" : "Description of Sinkhole."
    },
    "IValueDelete" : {
      "type" : "object",
      "properties" : {
        "fieldName" : {
          "type" : "string"
        },
        "oldValue" : {
          "type" : "string"
        }
      }
    },
    "FTDRAVpnAddressAssignmentSetting" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata properties of Address Assignment Setting.",
          "$ref" : "#/definitions/Metadata"
        },
        "useInternalAddressPoolForIPv4" : {
          "type" : "boolean",
          "description" : "Assign IPv4 address to the remote client from Address Pools configured in Connection Profile or Group Policy. Default value is True."
        },
        "useInternalAddressPoolForIPv6" : {
          "type" : "boolean",
          "description" : "Assign IPv6 address to the remote client from Address Pools configured in Connection Profile or Group Policy. Default value is True"
        },
        "description" : {
          "type" : "string",
          "description" : "User provided resource description. "
        },
        "type" : {
          "type" : "string",
          "description" : "Type associated with resource: RaVpnAddressAssignmentSetting."
        },
        "IPAddressReuseInterval" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Delays the reuse of an IP address after it return to the address pool. Default value is 0 mins, Allowed range is 0-480 mins."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        },
        "name" : {
          "type" : "string",
          "description" : "User assigned resource name."
        },
        "useAuthorizationServerForIPv4" : {
          "type" : "boolean",
          "description" : "Assign IPv4 address to the remote client from Realm or Radius Servers. Default value is True."
        },
        "links" : {
          "description" : "Object containing related links.",
          "$ref" : "#/definitions/ILinks"
        },
        "useAuthorizationServerForIPv6" : {
          "type" : "boolean",
          "description" : "Assign IPv6 address to the remote client from Realm or Radius Servers. Default value is True."
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier representing response object."
        },
        "useDHCP" : {
          "type" : "boolean",
          "description" : "Obtains IP addresses from a DHCP server configured in a connection profile. Default value is True."
        }
      },
      "description" : "A model representing Address Assignment Setting definition."
    },
    "IAccessPolicyPrefilterPolicySettingModel" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the associated prefilter policy."
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier representing prefilter policy."
        },
        "type" : {
          "type" : "string",
          "description" : "Type must be PrefilterPolicy."
        },
        "version" : {
          "type" : "string"
        }
      },
      "description" : "Object representing the association of prefilter policy to specified access policy. When access policy is created, the attribute will refer to Default Prefilter Policy. This attribute can be updated only using the PUT operation. If the attribute is missing from PUT call, the attribute will not be changed."
    },
    "SIDNSFeedListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SIDNSFeed"
          }
        }
      }
    },
    "IApplicationTag" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata attributes for the application tag.",
          "$ref" : "#/definitions/IMetadata"
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the application tag."
        },
        "overridable" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether object values can be overridden."
        },
        "description" : {
          "type" : "string",
          "description" : "Application tag resource description."
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/ILinks"
        },
        "overrides" : {
          "description" : "An object override allows you to define an alternate value for an object on a device or domain.",
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier for the application tag."
        },
        "type" : {
          "type" : "string",
          "description" : "Type of the response object. This value is always ApplicationTag."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        }
      },
      "description" : "Represents an ApplicationTag."
    },
    "NetworkOverride" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata properties of response object.",
          "$ref" : "#/definitions/Metadata"
        },
        "overridable" : {
          "type" : "boolean",
          "description" : "Always returns false for overrides."
        },
        "name" : {
          "type" : "string",
          "description" : "User chosen resource name."
        },
        "description" : {
          "type" : "string",
          "description" : "User provided description."
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/Links"
        },
        "overrides" : {
          "description" : "An object override allows you to define an alternate value for an object on a device or domain.",
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique UUID representing resource."
        },
        "type" : {
          "type" : "string",
          "description" : "Type associated with resource."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        }
      },
      "description" : "A model representing Network Override object definition."
    },
    "IURLCategory" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "name" : {
          "type" : "string"
        },
        "overridable" : {
          "type" : "boolean"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "overrides" : {
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "InterfaceEventListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/InterfaceEvent"
          }
        }
      }
    },
    "IDistance" : {
      "type" : "object",
      "properties" : {
        "externalDistance" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        },
        "internalDistance" : {
          "type" : "integer",
          "format" : "int32"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "localDistance" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "IPendingDeviceRegInfo" : {
      "type" : "object",
      "properties" : {
        "deviceUuid" : {
          "type" : "string"
        },
        "regStatus" : {
          "type" : "string",
          "enum" : [ "PENDING", "FAILED" ]
        },
        "ipAddress" : {
          "type" : "string"
        },
        "deviceName" : {
          "type" : "string"
        }
      }
    },
    "VlanOverrideListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/VlanOverride"
          }
        }
      }
    },
    "NetworkAddressListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/NetworkAddress"
          }
        }
      }
    },
    "IIntrusionPolicyModel" : {
      "type" : "object",
      "properties" : {
        "inlineDrop" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Indicates the inspection mode <0 or 1>"
        },
        "snortEngine" : {
          "type" : "string",
          "description" : "Possible values could be SNORT2 or SNORT3",
          "enum" : [ "SNORT2", "SNORT3" ]
        },
        "inspectionMode" : {
          "type" : "string",
          "description" : "Only applicable for SNORT3. Possible values could be DETECTION or PREVENTION",
          "enum" : [ "PREVENTION", "DETECTION" ]
        },
        "isSystemDefined" : {
          "type" : "boolean"
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the intrusion policy"
        },
        "basePolicy" : {
          "description" : "Representing policy details which is used as base for current policy. This field is not present for preprovisioned intrusioned policies.",
          "$ref" : "#/definitions/IReference"
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string",
          "description" : "Intrusion Policy UUID"
        },
        "type" : {
          "type" : "string",
          "description" : "Type must be intrusionpolicy"
        }
      }
    },
    "PrefilterPolicyListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PrefilterPolicy"
          }
        }
      }
    },
    "InlineSetListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/InlineSet"
          }
        }
      }
    },
    "IBgpNetworks" : {
      "type" : "object",
      "properties" : {
        "routeMap" : {
          "$ref" : "#/definitions/IRouteMap"
        },
        "ipv6Address" : {
          "$ref" : "#/definitions/INetworkAddress"
        },
        "ipv4Address" : {
          "$ref" : "#/definitions/INetworkAddress"
        },
        "name" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "FPLogicalInterfaceListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FPLogicalInterface"
          }
        }
      }
    },
    "VlanTagGroupOverride" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata properties of response object.",
          "$ref" : "#/definitions/Metadata"
        },
        "overridable" : {
          "type" : "boolean",
          "description" : "Always returns flase for overrides."
        },
        "name" : {
          "type" : "string",
          "description" : "User chosen resource name."
        },
        "description" : {
          "type" : "string",
          "description" : "User provided description."
        },
        "links" : {
          "description" : "Object containing links to this resource.",
          "$ref" : "#/definitions/Links"
        },
        "overrides" : {
          "description" : "An object override allows you to define an alternate value for an object.",
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier representing resource."
        },
        "type" : {
          "type" : "string",
          "description" : "Type associated with resource."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        }
      },
      "description" : "A model representing tag group override definition."
    },
    "IInterfaceDeviceModel" : {
      "type" : "object",
      "properties" : {
        "interfaces" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IFTDInterface"
          }
        },
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "IBasePortLiteral" : {
      "type" : "object",
      "properties" : {
        "protocol" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "RollbackRequestMetadata" : {
      "type" : "object",
      "properties" : {
        "lastUser" : {
          "$ref" : "#/definitions/MetadataUser"
        },
        "task" : {
          "$ref" : "#/definitions/TaskStatus"
        },
        "domain" : {
          "$ref" : "#/definitions/Domain"
        },
        "readOnly" : {
          "$ref" : "#/definitions/ReadOnly"
        },
        "timestamp" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "HealthAlertModelListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/HealthAlertModel"
          }
        }
      }
    },
    "CertificateMapModel" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata attributes for the CertificateMap.",
          "$ref" : "#/definitions/Metadata"
        },
        "name" : {
          "type" : "string",
          "description" : "User-specified name of the Certificate Map"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "description" : "Object containing related links.",
          "$ref" : "#/definitions/Links"
        },
        "rules" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ICertificateMapRules"
          }
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier representing the CertificateMap object."
        },
        "type" : {
          "type" : "string",
          "description" : "Type associated with resource: CertificateMap."
        },
        "version" : {
          "type" : "string"
        }
      },
      "description" : "Certificate Map objects are a named set of certificate matching rules. These objects are used to provide an association between a received certificate and a Remote Access VPN connection profile."
    },
    "IOspfDefaultInfoOriginate" : {
      "type" : "object",
      "properties" : {
        "always" : {
          "type" : "boolean"
        },
        "routeMap" : {
          "$ref" : "#/definitions/IRouteMap"
        },
        "routeMetric" : {
          "$ref" : "#/definitions/IOspfRouteMetric"
        }
      }
    },
    "LLInspectorConfig" : {
      "type" : "object",
      "description" : "The schema of this payload is dynamic and based on the OpenAPI schema received from the latest installed Lightweight Security Package.",
      "additionalProperties" : {
        "type" : "object"
      }
    },
    "RangeObject" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata properties of response object.",
          "$ref" : "#/definitions/Metadata"
        },
        "overridable" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether object values can be overridden."
        },
        "name" : {
          "type" : "string",
          "description" : "User chosen resource name."
        },
        "description" : {
          "type" : "string",
          "description" : "User provided description."
        },
        "links" : {
          "description" : "Contains the full URL to the current object and its parent (if any)",
          "$ref" : "#/definitions/Links"
        },
        "overrides" : {
          "description" : "This is populated only if this object is an override and contains the parent (global) object id and whether this is an override on device or domain.",
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier representing resource."
        },
        "type" : {
          "type" : "string",
          "description" : "The unique type of this object."
        },
        "value" : {
          "type" : "string",
          "description" : "Actual value of range."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        },
        "overrideTargetId" : {
          "type" : "string",
          "description" : "Unique identifier of domain or device when override assigned to child domain. Used as path query parameter to GET override details for a specific object on a specific target (device or domain)."
        }
      },
      "description" : "A model representing Range Network object definition."
    },
    "VpnIkeSettingsListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/VpnIkeSettings"
          }
        }
      }
    },
    "AuthRolesListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AuthRoles"
          }
        }
      }
    },
    "SyslogConfig" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/IMetadata"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/Links"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "ISIObject" : {
      "type" : "object",
      "properties" : {
        "sourceZone" : {
          "$ref" : "#/definitions/IReference"
        }
      }
    },
    "Ikev2PolicyObjectListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Ikev2PolicyObject"
          }
        }
      }
    },
    "SIURLListListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SIURLList"
          }
        }
      }
    },
    "RealmUserGroupMetadata" : {
      "type" : "object",
      "properties" : {
        "lastSynced" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Field represents timestamp of the last sync for the RealmUserGroup."
        },
        "lastUser" : {
          "$ref" : "#/definitions/MetadataUser"
        },
        "hasUnresolvedReferences" : {
          "type" : "boolean",
          "description" : "Field represents whether this `Realm` has unresolved references."
        },
        "domain" : {
          "$ref" : "#/definitions/Domain"
        },
        "readOnly" : {
          "$ref" : "#/definitions/ReadOnly"
        },
        "timestamp" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "description" : "An object representing the metadata of the RealmUserGroup."
    },
    "ISILogging" : {
      "type" : "object",
      "properties" : {
        "overrideSeverity" : {
          "type" : "string",
          "enum" : [ "ALERT", "CRIT", "DEBUG", "EMERG", "ERR", "INFO", "NOTICE", "WARNING" ]
        },
        "sendLogsToSyslogServer" : {
          "type" : "boolean"
        },
        "enableLogging" : {
          "type" : "boolean"
        },
        "snmpTrap" : {
          "$ref" : "#/definitions/IReference"
        },
        "sendLogsToEventViewer" : {
          "type" : "boolean"
        },
        "overrideSyslogServer" : {
          "$ref" : "#/definitions/IReference"
        }
      }
    },
    "Links" : {
      "type" : "object",
      "properties" : {
        "parent" : {
          "type" : "string"
        },
        "self" : {
          "type" : "string"
        }
      }
    },
    "FMCHAStatusListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FMCHAStatus"
          }
        }
      }
    },
    "PrefilterRuleListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PrefilterRule"
          }
        }
      }
    },
    "OspfInterfacePolicyModelListContainer" : {
      "properties" : {
        "links" : {
          "$ref" : "#/definitions/ILinks"
        },
        "paging" : {
          "$ref" : "#/definitions/PagingContainer"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OspfInterfacePolicyModel"
          }
        }
      }
    },
    "URLGroupObject" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Object representing metadata properties of response object.",
          "$ref" : "#/definitions/Metadata"
        },
        "objects" : {
          "type" : "array",
          "description" : "Represents URL objects in group.",
          "items" : {
            "$ref" : "#/definitions/IUrlModel"
          }
        },
        "literals" : {
          "type" : "array",
          "description" : "Represents target URL associated with URL object.",
          "items" : {
            "$ref" : "#/definitions/IUrlLiteral"
          }
        },
        "overridable" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether object values can be overridden."
        },
        "name" : {
          "type" : "string",
          "description" : "User assigned resource name."
        },
        "description" : {
          "type" : "string",
          "description" : "User provided resource description."
        },
        "links" : {
          "description" : "Object containing related links.",
          "$ref" : "#/definitions/Links"
        },
        "overrides" : {
          "description" : "An object override allows you to define an alternate value for an object.",
          "$ref" : "#/definitions/IOverride"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique identifier representing resource."
        },
        "type" : {
          "type" : "string",
          "description" : "Type associated with resource."
        },
        "version" : {
          "type" : "string",
          "description" : "Version number of the response object."
        },
        "overrideTargetId" : {
          "type" : "string",
          "description" : "Unique identifier of domain or device when override assigned to child domain. Used as path parameter to GET override details for a specific object on a specific target (device or domain)."
        }
      },
      "description" : "A model representing URL group definition."
    }
  },
  "parameters" : {
    "expanded" : {
      "name" : "expanded",
      "in" : "query",
      "description" : "If set to true, the GET response displays a list of objects with additional attributes.",
      "required" : false,
      "type" : "boolean"
    },
    "offset" : {
      "name" : "offset",
      "in" : "query",
      "description" : "Index of first item to return.",
      "required" : false,
      "type" : "integer"
    },
    "domainUUID" : {
      "name" : "domainUUID",
      "in" : "path",
      "description" : "Domain UUID",
      "required" : true,
      "type" : "string"
    },
    "limit" : {
      "name" : "limit",
      "in" : "query",
      "description" : "Number of items to return.",
      "required" : false,
      "type" : "integer"
    }
  },
  "responses" : {
    "Internal Server Error" : {
      "description" : "Internal Server Error",
      "schema" : {
        "$ref" : "#/definitions/ErrorResponse"
      }
    },
    "Not Acceptable" : {
      "description" : "Not Acceptable",
      "schema" : {
        "$ref" : "#/definitions/ErrorResponse"
      }
    },
    "Unprocessable Entity" : {
      "description" : "Unprocessable Entity",
      "schema" : {
        "$ref" : "#/definitions/ErrorResponse"
      }
    },
    "Service Unavailable" : {
      "description" : "Service Unavailable",
      "schema" : {
        "$ref" : "#/definitions/ErrorResponse"
      }
    },
    "Bad Request" : {
      "description" : "Bad Request",
      "schema" : {
        "$ref" : "#/definitions/ErrorResponse"
      }
    },
    "Unauthorized" : {
      "description" : "Unauthorized",
      "schema" : {
        "$ref" : "#/definitions/ErrorResponse"
      }
    },
    "Forbidden" : {
      "description" : "Forbidden",
      "schema" : {
        "$ref" : "#/definitions/ErrorResponse"
      }
    },
    "Not Implemented" : {
      "description" : "Not Implemented",
      "schema" : {
        "$ref" : "#/definitions/ErrorResponse"
      }
    },
    "Too Many Requests" : {
      "description" : "Too Many Requests",
      "schema" : {
        "$ref" : "#/definitions/ErrorResponse"
      }
    },
    "Not Found" : {
      "description" : "Not Found",
      "schema" : {
        "$ref" : "#/definitions/ErrorResponse"
      }
    }
  }
}